function pgName(){var modulename=window.location.hash.substr(2),filename="app/help/"+modulename+".html";$("#hlpFile").load(filename)}angular.module("app.common",["treeGrid"]),angular.module("app.login",[]),angular.module("app.directive",[]),angular.module("app.registration",[]),angular.module("app.applicant",["app.common"]),angular.module("app.master",[]),angular.module("app.singpass",[]),angular.module("app.lmab",["ngSanitize","ngCsv"]),angular.module("app.camb",[]),angular.module("app.lme",[]),angular.module("app.profile",[]),angular.module("app.filters",[]),angular.module("angucomplete-alt",[]),angular.module("app.landing",[]),angular.module("app",["ui.router","app.common","app.login","app.directive","app.registration","app.applicant","app.master","app.profile","ui.bootstrap","app.singpass","app.lmab","app.camb","app.lme","angularUtils.directives.dirPagination","app.filters","angucomplete-alt","ngSanitize","app.landing","ngCookies"]).constant("_",window._).run(function($rootScope,$location,$state,$window){$rootScope._=window._;var urlParams=$location.absUrl().split("?")[1];if(urlParams){var paramsArr=urlParams.split("&");"singpass"==paramsArr[0].split("=")[1]?(console.log($location.absUrl()),$window.location.href="/#/singpass?"+paramsArr[1]+"&"+paramsArr[2]):$state.go("app")}else $state.go("app")}).config(["$urlRouterProvider","$stateProvider",function($urlRouterProvider,$stateProvider){$stateProvider.state("app",{url:"/home",templateUrl:"app/common/partials/layout/landing.html"})}]).controller("MainController",["$scope","$http","DataManager","ResourceManager","CAASConfig","utilityService","$rootScope","$window","$state",function($scope,$http,DataManager,ResourceManager,CAASConfig,utilityService,$rootScope,$window,$state){function loadAppConfig(){$http.get("resources/appConfig.json").then(function(response){var locale=response.data.LOCALE;ResourceManager.getLocalizationData(locale)},function(response){throw new Error("App Config load failed")})}loadAppConfig()}]).run(function($rootScope,ModalService,$state,AutoSaveManager,$http,$cookies){$rootScope.visitDetails=null,$rootScope.passSlotId=null,$rootScope.settingDMEdetails=null,$rootScope.cambvisitDetails=null,$rootScope.showMask=function(flg){$rootScope.showMaskDiv=!!flg&&flg},$http.defaults.transformResponse.unshift(function(data,headers){var csrfToken=$cookies["XSRF-TOKEN"];return csrfToken&&($http.defaults.headers.common["X-CSRF-TOKEN"]=csrfToken),data})}),angular.module("app.applicant").config(function($stateProvider){$stateProvider.state("dashboard",{url:"/dashboard",controller:"DashboardCtrl",templateUrl:"app/applicant/partials/dashboard.html"}).state("profile",{url:"/profile",controller:"ProfileCtrl",templateUrl:"app/applicant/partials/profile.html"}).state("notify_med_fitness",{url:"/notify_med_fitness",controller:"NotifyMedicalFitnessCtrl",templateUrl:"app/applicant/partials/notify_med_fitness.html"}).state("feedback_to_CAMB",{url:"/feedback_to_CAMB",controller:"FeedbackToCAMBCtrl",templateUrl:"app/applicant/partials/feedback_to_CAMB.html"}).state("feedback_thanks",{url:"/feedback_thanks",controller:"FeedbackToCAMBCtrl",templateUrl:"app/applicant/partials/feedback_thanks.html"}).state("health_appraisal",{url:"/health_appraisal",controller:"DashboardCtrl",templateUrl:"app/applicant/partials/health_appraisal.html"}).state("assess_history",{url:"/assess_history",controller:"AssessHistoryCtrl",templateUrl:"app/applicant/partials/assess_history.html"}).state("faq",{url:"/faq",controller:"FaqCtrl",templateUrl:"app/applicant/partials/faq.html"}).state("amahed",{url:"/amahed",controller:"AmaCtrl",templateUrl:"app/applicant/partials/hed/amahed.html"}).state("hedpreview",{url:"/hedpreview",templateUrl:"app/applicant/partials/hed/hed_preview.html"}).state("hed",{url:"/hed",templateUrl:"app/applicant/partials/hed/hed.html"}).state("referencedocs",{url:"/referencedocs",controller:"ReferenceDocsCtrl",templateUrl:"app/applicant/partials/referencedocs.html"}).state("appointment",{url:"/appointment",controller:"AppointmentCtrl",templateUrl:"app/applicant/partials/hed/instructions.html"}).state("hedprintpreview",{url:"/hedprintpreview?preview",controller:"HedCtrl",templateUrl:"app/applicant/partials/hed/hedprintpreview.html"}).state("viewhed",{url:"/viewhed?preview",controller:"HedCtrl",templateUrl:"app/applicant/partials/hed/hedprintpreview_measurement.html"})}),angular.module("app.applicant").controller("AmaCtrl",["$scope","$state","APIS","DataManager","$timeout","$window","$rootScope","ModalService","$log","$uibModal","$location","convertpdf","AutoSaveManager","$sce","ResourceManager","$filter",function($scope,$state,APIS,DataManager,$timeout,$window,$rootScope,ModalService,$log,$uibModal,$location,convertpdf,AutoSaveManager,$sce,amhd,$filter){function validateClass(){for(var currentCount=0,i=0;i<$scope.licenceDetails.length;i++)$scope.licenceDetails[i].status&&currentCount++;return currentCount>=$scope.requiredClasses}function validPreviousLicences(){console.log("previousLicenceDetails",$scope.previousLicenceDetails);for(var i=0;i<$scope.previousLicenceDetails.length;i++)if($scope.previousLicenceDetails[i].classId)return!0;return!1}function havingValidPrevLicences(data){for(var i=0;i<data.length;i++)if(data[i].classId)return!0;return!1}function getPageDataFromHead(pageName){for(var i=0;i<$scope.hedData.length;i++)if($scope.hedData[i].pageName==pageName)return $scope.hedData[i]}function checkSmokerQuestionEnabled(data){for(var lifeStyleObject=data.find(findLifeStyle),somkerQuestion=null,i=0;i<lifeStyleObject.sectionList.length;i++)somkerQuestion||(somkerQuestion=lifeStyleObject.sectionList[i].elements.find(isSomkerQuestion));return"Yes"==somkerQuestion.selectedValue}function findLifeStyle(page){return"Since Last ME and LS Practices"==page.pageName}function isSomkerQuestion(question){return"00052"==question.healthEventCode}function getRowDataObject(){return Object.create($scope.baseRowObject)}function setOtherCombosData(mac){for(var selectedLicence,licenceLength=mac.licenseList.length,i=0;i<licenceLength;i++)mac.licenseType==mac.licenseList[i].lookUpItemId&&(selectedLicence=mac.licenseList[i]);selectedLicence&&(mac.aircraftList=selectedLicence.aircraftType,mac.operationList=selectedLicence.operationType,!$scope.applicationNum&&mac.aircraftList.length>0&&(mac.aircraftType=mac.aircraftList[0].lookUpItemId),!$scope.applicationNum&&mac.operationList.length>0&&(mac.operationType=mac.operationList[0].lookUpItemId))}function validateMedicalHistory(data){for(var i=0;i<$scope.amaSaveData.familyMedicalHistory.medicalHistory.length;i++)if(familyModifyIdx!==i){var record=$scope.amaSaveData.familyMedicalHistory.medicalHistory[i];if(record.disease.code==data.disease.code&&record.relation.code==data.relation.code)return!1}return!0}function getLookupDesease(disease){for(var i=0;i<$scope.combos.problem.length;i++)if(disease.code==$scope.combos.problem[i].code)return $scope.combos.problem[i]}function getLookupRelation(disease){for(var i=0;i<$scope.combos.relation.length;i++)if(disease.code==$scope.combos.relation[i].code)return $scope.combos.relation[i]}function getPreviousPaidUnselectedValues(){var count=0;return angular.forEach($scope.licenceDetails,function(licence){"Y"==licence.feepaid_yn&&licence.previousStatus&&!licence.status&&count++}),count}function getPreviousPaidTotal(){var total=0;return angular.forEach($scope.currentLicDetails,function(curLicDetails){"Y"==curLicDetails.feepaid_yn&&(total+=$scope.applicationFee)}),total}function getAddress(){var str="";return $scope.userInfo.address.length>0&&(str=$scope.userInfo.address[0].floor?$scope.userInfo.address[0].floor+"/":"",str+=$scope.userInfo.address[0].unit?$scope.userInfo.address[0].unit+", ":"",str+=$scope.userInfo.address[0].line1?$scope.userInfo.address[0].line1+", ":"",str+=$scope.userInfo.address[0].line2?$scope.userInfo.address[0].line2+", ":"",str+=$scope.userInfo.address[0].country?$scope.userInfo.address[0].country.countryName+", ":"",str+=void 0!=$scope.userInfo.address[0].postalCode||null!=$scope.userInfo.address[0].postalCode?5==$scope.userInfo.address[0].postalCode.toString().length?"0"+$scope.userInfo.address[0].postalCode:$scope.userInfo.address[0].postalCode:$scope.userInfo.address[0].postalCode=""),str}function getUserLicence(){for(var licArr=[],i=0;i<$scope.userInfo.professionalDetailsList.length;i++)licArr.push($scope.userInfo.professionalDetailsList[i].licenseNo);return licArr.join(",")}function today(){var date=new Date,months=["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"],mnth=months[date.getMonth()],day=("0"+date.getDate()).slice(-2);return[day,mnth,date.getFullYear()].join("-")}function convertToDate(str){var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],res=str.split("-"),mnth=("0"+(months.indexOf(res[1])+1)).slice(-2),day=("0"+res[0]).slice(-2);return[res[2],mnth,day].join("-")}function getFeeWeiverDetails(){var currentLicences=getMacDTOListforCurrentLicences(),obj={applicantId:$window.sessionStorage.getItem("AMA_personId"),macDTOsList:currentLicences};APIS.APPLICANT_FEE_REFUND_CHECK.data=obj,DataManager.sendRestRequest(null,APIS.APPLICANT_FEE_REFUND_CHECK,function(response){if(response.success){var trueCount=0,classArr=[];$scope.feeWaiverMACIds=[];for(var i=0;i<response.dataBean.macDTOsList.length;i++)response.dataBean.macDTOsList[i].checked&&(classArr.push("Class "+response.dataBean.macDTOsList[i].macId),$scope.feeWaiverMACIds.push(response.dataBean.macDTOsList[i].macId),$scope.checkCentralList=response.dataBean.macDTOsList[i].checked,trueCount++);$scope.feeWaiverClasses="Central Billing for "+classArr.join(","),$scope.feeWaiverEligibility=trueCount*$scope.applicationFee,$scope.cbobj={lclass:$scope.feeWaiverClasses,amount:$scope.feeWaiverEligibility}}else $log.error("UNABLE TO GET FEE Waiver details: "+response.errorMessage)},$scope.userConfig.token)}function getMacDTOListforCurrentLicences(){var arr=[];$scope.AMAlicenceDetails=JSON.parse($window.sessionStorage.getItem("AMAlicenceDetails")),console.log($scope.AMAlicenceDetails);for(var i=0;i<$scope.AMAlicenceDetails.length;i++)if("N"==$scope.AMAlicenceDetails[i].feepaid_yn||void 0==$scope.AMAlicenceDetails[i].feepaid_yn){var obj={macId:$scope.AMAlicenceDetails[i].classId,checked:!1};arr.push(obj)}return arr}if($scope.isPaymentGateway=DataManager.isPaymentOn(),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),!$scope.userConfig&&!$scope.userConfig.userSeqId)return $state.go("login"),!1;$scope.amhd=amhd,$scope.pageOrder=[],$scope.steps=[],$scope.applicationFee=40,$scope.feeWaiverClasses="",$scope.feeWaiverMACIds=[],$scope.feeWaiverEligibility=0,$scope.requiredClasses=1,$scope.paymentCompleted=!1,$scope.applicationNum=null,$scope.allLoaded=!0,$scope.auto_grow=function(data,$event){$scope.maxlength=data,$scope.maxlength.length>=1e3?($($event.target).css("border","1px solid #B13D31"),ModalService.openAlert("alert","AMA Declaration","Remarks can not be more than 1000 characters",$scope,"alert")):$($event.target).css("border","1px solid #229173")},$scope.init=function(){$scope.savedData=null,$scope.paymentString="",$scope.userId=$scope.userConfig.userSeqId,$scope.personId=$scope.userInfo.personId,$scope.roleid=$scope.userConfig.userFacilities[0].roles[0].roleId,$scope.rolename=$scope.userConfig.userFacilities[0].roles[0].roleName,$scope.showTab="declaration",$scope.hedData=[],$scope.updatedHedData=null,$scope.instruction={isReadIns:!1,isConfirmPersionalDetails:!1,isPresonalDetailsConfirmed:!1,isApplicationDeclaration:!1,isConsentDeclared:!1},$rootScope.updateRequestDetails?$rootScope.updateRequestDetails.isNewPage?($rootScope.updateRequestDetails.isNewPage=!1,$scope.allLoaded=!1,$scope.applicationUserId=$rootScope.updateRequestDetails.applicantId,$scope.applicationNum=$rootScope.updateRequestDetails.applicantuserId,$scope.currentStepIndex=1,$scope.instruction.isReadIns=!0):$rootScope.updateRequestDetails.returnFlag?($scope.currentStepIndex=1,$scope.instruction.isReadIns=!0):$scope.currentStepIndex=0:$scope.currentStepIndex=0,$scope.pageIndex=$scope.currentStepIndex,$scope.step=$scope.steps[$scope.currentStepIndex],$scope.userInfo.nric?$scope.dispalyNricFlag=!0:$scope.dispalyNricFlag=!1,$scope.currentDate=today(),$scope.inProgressClassList=[],$scope.licenceDetails=[],$scope.currentLicDetails=[],$scope.macDTOList=[],$scope.preVisionCorrection={},$scope.isAllFieldsReadonly=!1,$scope.getApplicant(),$scope.isSmokerIn4=!1,$scope.isSmokerIn4Fn=function(question,index,section){if("00052"==question.healthEventCode&&($scope.isSmokerIn4="Yes"==question.selectedValue,"Yes"!=question.selectedValue)){var textIndex=index+1,radioIndex=index+2;section.elements[textIndex].enteredRemarks="",section.elements[radioIndex].selectedValue=""}},$scope.isdrugsDetails=!1,$scope.isIllnessFrmSubmitted=null,$scope.isLifeStyleFrmSubmitted=null,$scope.isVisionCorrectionSubmitted=null,$scope.ispreviousLicenceDetails=!1,$scope.havingPreviousAma="",$scope.selectedDrug=null,$scope.takingMedications="",$scope.countryList=null,$scope.everSuspendedList=null,$scope.getOutComeList=null,$scope.getAllClass=null,$scope.previousAma=null,$scope.instuction=null,$scope.vision={slectedVison:null},$scope.isVisionNear=!1,$scope.isVisionDistant=!1,$scope.isBothVision=!1,$scope.isSmoker=!1,$scope.previewButton=!1,$scope.countryId=null,$scope.preview=!0,$scope.showfields=!0,$scope.activitiesArray=[],$scope.formats=["yyyy-MM-dd","yyyy/MM/dd","dd-MM-yyyy","shortDate"],$scope.format=$scope.formats[2],$scope.previousLicenceDetails=[],$scope.activities={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,sleepinessSurveyId:null,dailyActivitiesId:null,activityScore:null},$scope.combos={applicationType:null,vission:null,drugs:null,problem:null,relation:null,drugDosageList:null,drugFrequencyList:null},$scope.dailyActivity=null,$scope.sleepinessData=[];for(var i=1;i<9;i++)$scope.sleepinessData.push({status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,sleepinessSurveyId:null,dailyActivitiesId:i,activityScore:null});$scope.classappTypeList=[],$scope.licenseList=[],$scope.aircraftList=[],$scope.operationList=[],$scope.rankRatingList=[],$scope.page={illnesPageList:{},lifeStylePractices:{}},$scope.famillyHistory={addNew:{familyMedicalHistoryId:null,disease:null,relation:null,age:null,remark:null}},$scope.amaSaveData={pageNames:null,userId:$scope.userId,personId:$scope.personId,application_id:null,applicationStatusId:1,currentLicenceDetails:[],pagesList:[],visionCorrection:{visionId:null,visionRequired:"",visionTypeID:"",eyes:[{hedEyeId:null,eyeType:"Left",metrics:{sphere:null,cylinder:null,axis:null,intermediate:null,near:null}},{hedEyeId:null,eyeType:"Right",metrics:{sphere:null,cylinder:null,axis:null,intermediate:null,near:null}}]},sleepinessSurvey:[],medication:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,medicationType:{medicationId:null,type:null,answer:null,remark:null},takingMadications:{type:null,answer:null,drugsDetails:[]}},familyMedicalHistory:{medicalHistory:[]},previousLicenceDetails:null},$scope.dataBind()},$scope.macChangeHandler=function(event){event.row.status?event.row.applicationType=1:event.row.applicationType=""},$scope.dataBind=function(){$scope.getInProgressClassesForApplicant(),$scope.getHEDDataForApplicant(),$scope.loadData(),$scope.getHedRecordsReadOnlyFlag(),$scope.getAmaInstruction(),AutoSaveManager.fetchSaveData("AMA",function(response){response.success&&($scope.savedData=response.dataBean,$scope.applicationNum?$scope.getAmaForUpdate():$scope.getApplicationTypeCombo())},$scope.applicationNum),$scope.getVisionCorrectionCombo(),$scope.getDailyActivityCombo(),$scope.getDrugSearchCombo(),$scope.getDrugDosageCombo(),$scope.getDrugFrequencyCombo(),$scope.getProblemCombo(),$scope.getRelationCombo(),$scope.loadCountryCombo(),$scope.getAllClassList(),$scope.loadOutComeCombo(),$scope.loadFeeDetails(),$scope.$watch("amaSaveData.visionCorrection.visionRequired",function(newNames,oldNames){"N"==newNames&&($scope.amaSaveData.visionCorrection.visionTypeID=null,$scope.vision.slectedVison=null,angular.forEach($scope.amaSaveData.visionCorrection.eyes,function(value,key){$scope.amaSaveData.visionCorrection.eyes[key].metrics.sphere=null,$scope.amaSaveData.visionCorrection.eyes[key].metrics.cylinder=null,$scope.amaSaveData.visionCorrection.eyes[key].metrics.axis=null,$scope.amaSaveData.visionCorrection.eyes[key].metrics.intermediate=null,$scope.amaSaveData.visionCorrection.eyes[key].metrics.near=null}))})},$scope.loadFeeDetails=function(){APIS.GET_FEE_DETAILS.data={},DataManager.sendRestRequest(null,APIS.GET_FEE_DETAILS,function(response){response.success?$scope.applicationFee=Number(response.dataBean):$log.error("GET FEE DETAILS: "+response.errorMessage)},$scope.userConfig.token)},$scope.loadData=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_AMA_PAGES.URL,url=tempUrl+"/"+$scope.userConfig.userSeqId,APIS.GET_AMA_PAGES.URL=url,DataManager.sendRestRequest(null,APIS.GET_AMA_PAGES,function(response){response.success?($scope.hedData=response.dataBean,$scope.isSmokerIn4=checkSmokerQuestionEnabled($scope.hedData)):$log.error("GET AMA PAGES: "+response.errorMessage)},$scope.userConfig.token),APIS.GET_AMA_PAGES.URL=tempUrl},$scope.getInProgressClassesForApplicant=function(){APIS.GET_CLASS_INPROGRESS.URL=String.prototype.format.apply(APIS.GET_CLASS_INPROGRESS.tempURL,[$scope.personId]),DataManager.sendRestRequest(null,APIS.GET_CLASS_INPROGRESS,function(response){response.success?angular.forEach(response.dataBean,function(kval,kkey){$scope.inProgressClassList.push(kval.code)}):$log.error("GET_CLASS_INPROGRESS "+response.errorMessage)},$scope.userConfig.token)},$scope.getHEDDataForApplicant=function(){APIS.GET_HEDDATA_FORAPPLICANT.URL=String.prototype.format.apply(APIS.GET_HEDDATA_FORAPPLICANT.tempURL,[$scope.personId]),DataManager.sendRestRequest(null,APIS.GET_HEDDATA_FORAPPLICANT,function(response){response.success?($scope.amaSaveData.visionCorrection=response.dataBean.visionCorrection,$scope.vision.slectedVison=response.dataBean.visionCorrection.visionTypeID,$scope.amaSaveData.medication=response.dataBean.medication,$scope.amaSaveData.familyMedicalHistory.medicalHistory=response.dataBean.familyMedicalHistory.medicalHistory):$log.error("GET_CLASS_INPROGRESS:"+response.errorMessage)},$scope.userConfig.token)},$scope.getHedRecordsReadOnlyFlag=function(){$scope.applicationNum&&(APIS.GET_UPDATE_HED_RECORDS.URL=String.prototype.format.apply(APIS.GET_UPDATE_HED_RECORDS.tempURL,[$scope.applicationNum]),DataManager.sendRestRequest(null,APIS.GET_UPDATE_HED_RECORDS,function(response){response.success?$scope.isAllFieldsReadonly=response.dataBean:$log.error(response.errorMessage)},$scope.userConfig.token))},$scope.setCurrentStep=function(step){$scope.step=step},$scope.swichTap=function(param){$scope.showTab=param},$scope.isFirstStep=function(){return $scope.step===$scope.steps[0]},$scope.isLastStep=function(){return $scope.step===$scope.steps.length+1-1&&($scope.previewButton=!0),$scope.step===$scope.steps.length+1-1},$scope.isCurrentStep=function(step){return $scope.step===step},$scope.getCurrentStep=function(){return $scope.steps[$scope.step]},$scope.getNextLabel=function(){return $scope.isLastStep()?"Confirm":"Next"},$scope.handlePrevious=function(){$scope.medicationTypeCheck(),$scope.isFirstStep()?$scope.currentStepIndex=0:$scope.currentStepIndex=$scope.currentStepIndex-1,$scope.pageIndex=$scope.currentStepIndex,$scope.step=$scope.steps[$scope.currentStepIndex],void 0==$scope.amaSaveData.medication.takingMadications&&null==$scope.amaSaveData.medication.takingMadications||(""==$scope.amaSaveData.medication.takingMadications.answer||null==$scope.amaSaveData.medication.takingMadications.answer?$scope.takingMedications="":$scope.takingMedications=$scope.amaSaveData.medication.takingMadications.answer)},$scope.medicationTypeCheck=function(){void 0==$scope.amaSaveData.medication&&null==$scope.amaSaveData.medication||"N"==$scope.amaSaveData.medication.medicationType.answer&&($scope.amaSaveData.medication.medicationType.remark=null)},$scope.illnessTest=function(){for(var i=0;i<=$scope.page.illnesPageList.sectionList.length;i++){for(var j=0;j<$scope.page.illnesPageList.sectionList[i].elements.length;j++)$scope.ex=$scope.page.illnesPageList.sectionList[i].elements;break}angular.forEach($scope.ex,function(key1,val1){"No"==key1.selectedValue&&(key1.enteredRemarks=null)});for(var k=0;k<$scope.page.lifeStylePractices.sectionList.length;k++)for(var l=0;l<$scope.page.lifeStylePractices.sectionList[k].elements.length;l++)"No"==$scope.page.lifeStylePractices.sectionList[k].elements[l].selectedValue&&($scope.page.lifeStylePractices.sectionList[k].elements[l].enteredRemarks=null)},$scope.handleNext=function(){if($scope.autoSaveAMAData(),$scope.applicationNum||$scope.inProgressClassList.length==$scope.licenceDetails.length&&(console.log("blick"),$scope.instruction.isReadIns=!1),"LICENCE"==$scope.pageOrder[$scope.pageIndex]){if(!$scope.instruction.isConfirmPersionalDetails)return ModalService.openAlert("alert","AMA Declaration","Please confirm your personal particulars",$scope,"alert"),$scope.instruction.isPresonalDetailsConfirmed=!1,!1;var isClassValid=validateClass();if(!isClassValid)return ModalService.openAlert("alert","Required","Please select atleast "+$scope.requiredClasses+" class(es)",$scope,"alert"),!1;if($scope.amaSaveData.application_id||$scope.submitAma("initial"),$scope.instruction.isPresonalDetailsConfirmed=!0,$scope.form.frmaircraft.$invalid)return ModalService.openAlert("alert","AMA Declaration","Please select all mandatory options",$scope,"alert"),$scope.isaircraftSubmitted=!0,!1}if("ILLNESS"==$scope.pageOrder[$scope.pageIndex]&&$scope.form.frmIllness.$invalid)return ModalService.openAlert("alert","AMA Declaration","Please answer all the mandatory questions",$scope,"alert"),$scope.isIllnessFrmSubmitted=!0,!1;if("SLEEPINESS"==$scope.pageOrder[$scope.pageIndex]){if($scope.form.visionCorrection.$invalid){var requiredFieldNames=null;return $scope.form.visionCorrection.$error.required.length>0&&angular.forEach($scope.form.visionCorrection.$error.required,function(value,key){console.log(value.$name),requiredFieldNames=null!=requiredFieldNames?requiredFieldNames+","+value.$name:value.$name}),$scope.illnessTest(),ModalService.openAlert("alert","AMA Declaration","Please answer all the mandatory questions",$scope,"alert"),$scope.isEyeFrmSubmitted=!0,$scope.isVisionCorrectionSubmitted=!0,!1}if($scope.form.sleepnessDataForm.$invalid)return ModalService.openAlert("alert","AMA Declaration","Please answer fill activities details",$scope,"alert"),$scope.isEyeFrmSubmitted=!0,$scope.isVisionCorrectionSubmitted=!0,!1}if("FAMILYHISTORY"==$scope.pageOrder[$scope.pageIndex]){if($scope.form.familyMedicalHistory.$invalid)return ModalService.openAlert("alert","AMA Declaration","Please answer all the mandatory questions",$scope,"alert"),$scope.isFamilyMedicalHistorySubmitted=!0,!1;if((void 0!=$scope.amaSaveData.medication.takingMadications||null!=$scope.amaSaveData.medication.takingMadications)&&!$scope.amaSaveData.medication.takingMadications.drugsDetails.length&&"Y"==$scope.amaSaveData.medication.takingMadications.answer)return ModalService.openAlert("alert","AMA Declaration","Please answer all the mandatory questions",$scope,"alert"),$("#medication_0002_remarks").css("border","1px solid #B13D31"),$scope.isFamilyMedicalHistorySubmitted=!0,!1}if("ME_LS_PRACTICES"==$scope.pageOrder[$scope.pageIndex]&&$scope.form.frmLifeStyle.$invalid)return ModalService.openAlert("alert","AMA Declaration","Please answer all the mandatory questions",$scope,"alert"),$scope.isLifeStyleFrmSubmitted=!0,!1;if($scope.isLastStep()){if($scope.form.declarationForm.$invalid){if($scope.form.declarationForm.$error.required.length>0){var count=0;angular.forEach($scope.form.declarationForm.$error.required,function(value,key){console.log(value.$name),count++,requiredFieldNames=null!=requiredFieldNames?requiredFieldNames+", "+value.$name:value.$name}),count>2?ModalService.openAlert("alert","AMA Declaration","Please confirm the declarations",$scope,"alert"):ModalService.openAlert("alert","AMA Declaration","Please confirm the declarations",$scope,"alert")}return $scope.isDeclarationSubmitted=!0,!1}if("Yes"==$scope.havingPreviousAma&&!validPreviousLicences())return ModalService.openAlert("alert","AMA Declaration","Please provide previous Medical Assessment details",$scope,"alert"),!1;$scope.submitAma(),getFeeWeiverDetails()}else $scope.currentStepIndex=$scope.currentStepIndex+1,$scope.pageIndex=$scope.currentStepIndex,$scope.step=$scope.steps[$scope.currentStepIndex]},$scope.submitAma=function(mode){$scope.prevLicDetails={},$scope.prevLicDetails=angular.copy($scope.previousLicenceDetails),$scope.amaSaveData.currentLicenceDetails=[],angular.forEach($scope.licenceDetails,function(value,key){(null!=value.classId||value.previousStatus)&&$scope.amaSaveData.currentLicenceDetails.push({status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,applicationClassesId:value.applicationClassesId,classId:value.classId,applicationType:value.applicationType,licenseType:value.licenseType,aircraftType:value.aircraftType,operationType:value.operationType,feepaid_yn:value.feepaid_yn,deSelect:value.previousStatus&&!value.status?"Y":""})}),console.log("Afterpush",$scope.amaSaveData.currentLicenceDetails),$scope.amaSaveData.pagesList=[],"initial"!=mode?($scope.amaSaveData.applicationStatusId=2,$scope.amaSaveData.pagesList.push($scope.page.illnesPageList),$scope.amaSaveData.pagesList.push($scope.page.lifeStylePractices)):($scope.amaSaveData.pagesList.push(getPageDataFromHead("Illness Condition")),$scope.amaSaveData.pagesList.push(getPageDataFromHead("Since Last ME and LS Practices"))),$scope.sleepCloneData=angular.copy($scope.sleepinessData),$scope.removeActivity(),$scope.amaSaveData.sleepinessSurvey=$scope.sleepCloneData,$scope.amaSaveData.previousLicenceDetails=$scope.prevLicDetails,angular.forEach($scope.amaSaveData.previousLicenceDetails,function(value,key){$scope.amaSaveData.previousLicenceDetails[key].expiryDate=$filter("date")(new Date(value.expiryDate),$scope.formats[0])}),console.log("Ama--",$scope.amaSaveData),$window.sessionStorage.setItem("AMAlicenceDetails",JSON.stringify($scope.amaSaveData.currentLicenceDetails)),$window.sessionStorage.setItem("AMA_personId",$scope.amaSaveData.personId),APIS.SAVE_AMA.data=$scope.amaSaveData,DataManager.sendRestRequest(null,APIS.SAVE_AMA,function(response){response.success?($scope.amaSaveData.application_id=response.dataBean.application_id,"initial"!=mode&&($scope.feeCalculation(),$scope.swichTap("payment"),AutoSaveManager.clearData("AMA",$scope.amaSaveData.application_id))):$log.error("AMA Declaration: "+response.errorMessage)},$scope.userConfig.token)},$scope.getAmaForUpdate=function(){console.log("1111"),APIS.GET_AMA_UPDATE.data={personId:$scope.applicationUserId,application_id:$scope.applicationNum},DataManager.sendRestRequest(null,APIS.GET_AMA_UPDATE,function(response){if(response.success){$scope.updatedHedData=response.dataBean,console.log("updatedHedData",$scope.updatedHedData),"3"==$scope.updatedHedData.applicationStatusId&&$("#appointmentTab").removeAttr("disabled"),$scope.currentLicDetails=$scope.updatedHedData.currentLicenceDetails;var hedData=$scope.updatedHedData.pagesList;if($scope.amaSaveData.application_id=$scope.updatedHedData.application_id,$scope.amaSaveData.applicationStatusId=$scope.updatedHedData.applicationStatusId,$scope.savedData){for(var i=0;i<hedData.length;i++)for(var j=0;j<$scope.savedData.pagesList.length;j++)$scope.savedData.pagesList[j].pageName==hedData[i].pageName&&(hedData[i]=$scope.savedData.pagesList[j]);$scope.hedData=hedData,$scope.amaSaveData.visionCorrection=$scope.savedData.visionCorrection,$scope.vision.slectedVison=$scope.savedData.visionCorrection.visionTypeID,$scope.tranfermationUpdate($scope.savedData.sleepinessSurvey),$scope.amaSaveData.medication=$scope.savedData.medication,$scope.amaSaveData.familyMedicalHistory.medicalHistory=$scope.savedData.familyMedicalHistory.medicalHistory,$scope.havingPreviousAma=$scope.savedData.havingPreviousAma,$scope.amaSaveData.visionCorrection.visionRequired=$scope.savedData.visionRequired,$scope.takingMedications=$scope.savedData.takingMedications,$scope.savedData.previousLicenceDetails&&$scope.savedData.previousLicenceDetails.length&&havingValidPrevLicences($scope.savedData.previousLicenceDetails)&&($scope.ispreviousLicenceDetails=!0,$scope.previousLicenceDetails=$scope.savedData.previousLicenceDetails,angular.forEach($scope.previousLicenceDetails,function(pldvalue,pldkey){pldvalue.expiryDate&&(pldvalue.expiryDate=new Date(Date.parse(pldvalue.expiryDate)))}))}else if($scope.hedData=$scope.updatedHedData.pagesList,$scope.amaSaveData.visionCorrection=$scope.updatedHedData.visionCorrection,$scope.vision.slectedVison=$scope.amaSaveData.visionCorrection.visionTypeID,$scope.tranfermationUpdate($scope.updatedHedData.sleepinessSurvey),$scope.amaSaveData.medication=$scope.updatedHedData.medication,$scope.amaSaveData.familyMedicalHistory.medicalHistory=$scope.updatedHedData.familyMedicalHistory.medicalHistory,console.log($scope.amaSaveData.familyMedicalHistory.medicalHistory),angular.forEach($scope.amaSaveData.familyMedicalHistory.medicalHistory,function(value,key){0==value.age&&(value.age="")}),$scope.amaSaveData.visionCorrection.visionRequired=$scope.vision.slectedVison?"Y":"N",void 0==$scope.amaSaveData.medication.takingMadications&&null==$scope.amaSaveData.medication.takingMadications||(""==$scope.amaSaveData.medication.takingMadications.answer||null==$scope.amaSaveData.medication.takingMadications.answer?$scope.takingMedications="":$scope.takingMedications=$scope.amaSaveData.medication.takingMadications.answer),$scope.updatedHedData.previousLicenceDetails.length){$scope.ispreviousLicenceDetails=!0,$scope.havingPreviousAma="Yes";var PLDs=$scope.previousLicenceDetails.length;$scope.previousLicenceDetails=$scope.updatedHedData.previousLicenceDetails,angular.forEach($scope.previousLicenceDetails,function(pldvalue,pldkey){pldvalue.expiryDate&&(pldvalue.expiryDate=new Date(convertToDate(pldvalue.expiryDate)))});var prevDs=$scope.previousLicenceDetails.length;if(PLDs>prevDs)for(var i=prevDs;i<PLDs;i++)$scope.previousLicenceDetails.push({status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,classId:null,country:null,expiryDate:null,outCome:null,everSuspended:null,previousmaId:null,applicationId:null,macId:null,outcome_Id:null});angular.forEach($scope.previousLicenceDetails,function(plVal,plKey){if(1==plVal.classId||2==plVal.classId||3==plVal.classId){$scope.previousLicenceDetails[plVal.classId-1]=plVal;var currentkey=$scope.previousLicenceDetails[plVal.classId-1];plKey===currentkey.classId-1||($scope.previousLicenceDetails[plKey]={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,classId:null,country:null,expiryDate:null,outCome:null,everSuspended:null,previousmaId:null,applicationId:null,macId:null,outcome_Id:null})}else $scope.previousLicenceDetails[plKey]={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,classId:null,country:null,expiryDate:null,outCome:null,everSuspended:null,previousmaId:null,applicationId:null,macId:null,outcome_Id:null}}),console.log($scope.previousLicenceDetails)}else $scope.havingPreviousAma="No",$scope.loadPreviousAma();$scope.changeVision($scope.vision.slectedVison),
$scope.isSmokerIn4=checkSmokerQuestionEnabled($scope.hedData),$scope.getApplicationTypeCombo()}else $log.error("Get Updated AMA: "+response.errorMessage)},$scope.userConfig.token)},$scope.$on("confirm1Ok",function(){DataManager.isPaymentOn()?document.forms.paymentForm.submit():ModalService.openAlert("alert","Alert","Payment completed successfully",$scope,"alert",function(){$scope.updatePaymentStatus(),$scope.paymentCompleted=!0})}),$scope.proceedPayment=function(){ModalService.openAlert("confirm","Confirmation","You will be redirected to payment gateway to complete the payment. Do you want to continue?",$scope,"confirm1")},$scope.backToAmaDec=function(isFirstPage){window.location.hash.split("refNo=")[1]&&($scope.applicationNum=$window.sessionStorage.getItem("application_id"),$scope.applicationUserId=$scope.userInfo.personId,$scope.steps=[],DataManager.sendRestRequest(null,APIS.GET_PAGE_ORDER,function(response){response.success?($scope.pageOrder=response.dataBean,angular.forEach($scope.pageOrder,function(value,key){"INSRUCTIONS"==value?$scope.steps.push(1):"LICENCE"==value?$scope.steps.push(2):"ILLNESS"==value?$scope.steps.push(3):"ME_LS_PRACTICES"==value?$scope.steps.push(4):"SLEEPINESS"==value?$scope.steps.push(5):"FAMILYHISTORY"==value?$scope.steps.push(6):"PREVIOUSAMA"==value&&$scope.steps.push(7)}),$scope.init(),$scope.instruction.isReadIns=!0,void 0==$scope.amaSaveData.medication.takingMadications&&null==$scope.amaSaveData.medication.takingMadications||($scope.takingMedications=$scope.amaSaveData.medication.takingMadications.drugsDetails.length>0?"Y":"N"),$scope.havingPreviousAma=havingValidPrevLicences($scope.previousLicenceDetails)>0?"Yes":"No",$scope.currentStepIndex=isFirstPage?0:6,$scope.pageIndex=$scope.currentStepIndex,$scope.step=$scope.steps[$scope.currentStepIndex],$scope.swichTap("declaration")):$log.error("UNABLE TO GET PAGE ORDER: "+response.errorMessage)},$scope.userConfig.token)),$scope.amaSaveData.medication&&($scope.currentStepIndex=6,$scope.pageIndex=$scope.currentStepIndex,$scope.step=$scope.steps[$scope.currentStepIndex],$scope.swichTap("declaration"),void 0==$scope.amaSaveData.medication.takingMadications&&null==$scope.amaSaveData.medication.takingMadications||($scope.takingMedications=$scope.amaSaveData.medication.takingMadications.drugsDetails.length>0?"Y":"N"),$scope.havingPreviousAma=havingValidPrevLicences($scope.previousLicenceDetails)>0?"Yes":"No")},$scope.focusInput=function(code,page){angular.element("#"+page+"_"+code+"_remarks").val(""),angular.element("#"+page+"_"+code+"_remarks").focus()},$scope.onDeclarationClick=function(){window.location.hash.split("refNo=")[1]?$scope.backToAmaDec(!0):($scope.currentStepIndex=0,$scope.pageIndex=$scope.currentStepIndex,$scope.step=$scope.steps[$scope.currentStepIndex],$scope.swichTap("declaration"))},$scope.onAppointmentClick=function(){$scope.swichTap("appoinment")},$scope.getVisionCorrectionCombo=function(){DataManager.sendRestRequest(null,APIS.GET_VISSION_COMBO,function(response){response.success?$scope.combos.vission=response.dataBean:$log.error(response.errorMessage)},$scope.userConfig.token)},$scope.getDailyActivityCombo=function(){DataManager.sendRestRequest(null,APIS.GET_DAILIY_ACTIVITY_COMBO,function(response){response.success?($scope.dailyActivity=response.dataBean,$scope.tranfermation()):$log.error(response.errorMessage)},$scope.userConfig.token)},$scope.getDrugSearchCombo=function(){DataManager.sendRestRequest(null,APIS.GET_DRUGS_COMBO,function(response){response.success?$scope.combos.drugs=response.dataBean:$log.error("Drug Search: "+response.errorMessage)},$scope.userConfig.token)},$scope.getDrugDosageCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGDOSAGE"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?$scope.combos.drugDosageList=response.dataBean:$log.error("Drug Dosage: "+response.errorMessage)},$scope.userConfig.token)},$scope.getDrugFrequencyCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGFREQ"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?$scope.combos.drugFrequencyList=response.dataBean:$log.error("Drug Dosage: "+response.errorMessage)},$scope.userConfig.token)},$scope.getProblemCombo=function(){DataManager.sendRestRequest(null,APIS.GET_PROBLEM_COMBO,function(response){response.success?$scope.combos.problem=response.dataBean:$log.error(response.errorMessage)},$scope.userConfig.token)},$scope.getRelationCombo=function(){DataManager.sendRestRequest(null,APIS.GET_RELATION_COMBO,function(response){response.success?$scope.combos.relation=response.dataBean:$log.error(response.errorMessage)},$scope.userConfig.token)},$scope.baseRowObject={aircraftList:$scope.aircraftList,operationList:$scope.operationList,rankRatingList:$scope.rankRatingList,macDTO:$scope.macDTO,applicationTypeList:$scope.applicationTypeList,licenseType:null,aircraftType:null,operationType:null,classId:null,status:!1,applicationType:0,rankOrRating:1},$scope.getApplicationTypeCombo=function(rowObj){APIS.GET_CLASS_APPLICATION_TYPE.data=$scope.userInfo.personId,DataManager.sendRestRequest(null,APIS.GET_CLASS_APPLICATION_TYPE,function(response){response.success?(angular.forEach(response.dataBean,function(value,key){$scope.macDTOList.push(value.macDTO),$scope.inProgressClassList.indexOf(value.macDTO.code)>=0?value.macDTO.inProgressFlag=!0:value.macDTO.inProgressFlag=!1,$scope.licenceDetails.push(getRowDataObject()),$scope.licenceDetails[key].macDTO=value.macDTO,$scope.licenceDetails[key].applicationTypeList=value.applicationTypeList,$scope.licenceDetails[key].licenseList=value.purposeList,value.purposeList.length>0&&($scope.licenceDetails[key].licenseType=value.purposeList.lookUpItemId),$scope.currentLicDetails.length>0?(angular.forEach($scope.currentLicDetails,function(currentLicvalue,currkey){currentLicvalue.classId===value.macDTO.macId&&($scope.licenceDetails[key].licenseType=currentLicvalue.licenseType,$scope.licenceDetails[key].aircraftType=currentLicvalue.aircraftType,$scope.licenceDetails[key].operationType=currentLicvalue.operationType,$scope.licenceDetails[key].classId=currentLicvalue.classId,$scope.licenceDetails[key].status=!0,$scope.licenceDetails[key].macDTO.inProgressFlag=!1,$scope.licenceDetails[key].applicationType=currentLicvalue.applicationType,$scope.licenceDetails[key].applicationClassesId=currentLicvalue.applicationClassesId,$scope.licenceDetails[key].feepaid_yn=currentLicvalue.feepaid_yn,$scope.licenceDetails[key].previousStatus=!0)}),$scope.requiredClasses=$scope.currentLicDetails.length):$scope.savedData&&angular.forEach($scope.savedData.currentLicenceDetails,function(savedClass){savedClass.classId==value.macDTO.macId&&($scope.licenceDetails[key].licenseType=savedClass.licenseType,$scope.licenceDetails[key].aircraftType=savedClass.aircraftType,$scope.licenceDetails[key].operationType=savedClass.operationType,$scope.licenceDetails[key].classId=savedClass.classId,$scope.licenceDetails[key].status=savedClass.status,$scope.licenceDetails[key].macDTO.inProgressFlag=!1,$scope.licenceDetails[key].applicationType=savedClass.applicationType,$scope.licenceDetails[key].applicationClassesId=savedClass.applicationClassesId,$scope.licenceDetails[key].feepaid_yn=savedClass.feepaid_yn,$scope.licenceDetails[key].previousStatus=savedClass.status)}),setOtherCombosData($scope.licenceDetails[key]),$scope.allLoaded=!0}),1==$scope.amaSaveData.applicationStatusId&&AutoSaveManager.startTimer()):$log.error("getApplicationTypeCombo "+response.errorMessage)},$scope.userConfig.token)},$scope.licenseChangeFn=function(cmb){setOtherCombosData(cmb.row),cmb.row.aircraftList.length>0&&(cmb.row.aircraftType=cmb.row.aircraftList[0].lookUpItemId),cmb.row.operationList.length>0&&(cmb.row.operationType=cmb.row.operationList[0].lookUpItemId)},$scope.checkDuplicateLicence=function(profRowList){$scope.dupLicenseCheckList=[];for(var i=0;i<profRowList.length;i++)$scope.dupLicenseCheckList.push(profRowList[i].licenseType);$scope.duplicateArray($scope.dupLicenseCheckList).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1},$scope.duplicateArray=function(arr){for(var sorted_arr=arr.sort(),results=[],i=0;i<arr.length-1;i++)sorted_arr[i+1]==sorted_arr[i]&&results.push(sorted_arr[i]);return results},$scope.resetFamilyHistory=function(){$scope.famillyHistory.addNew.familyMedicalHistoryId=null,$scope.famillyHistory.addNew.disease=null,$scope.famillyHistory.addNew.relation=null,$scope.famillyHistory.addNew.age=null,$scope.famillyHistory.addNew.remark=null},$scope.isAdd=!0,$scope.addFamily=function(data){if(null!=$scope.famillyHistory.addNew.disease&&null!=$scope.famillyHistory.addNew.relation){console.log("add",$scope.famillyHistory.addNew.disease);var isValid=validateMedicalHistory($scope.famillyHistory.addNew);isValid?(0==$scope.famillyHistory.addNew.age&&($scope.famillyHistory.addNew.age=""),$scope.amaSaveData.familyMedicalHistory.medicalHistory.push({familyMedicalHistoryId:null,disease:$scope.famillyHistory.addNew.disease,relation:$scope.famillyHistory.addNew.relation,age:$scope.famillyHistory.addNew.age,remark:$scope.famillyHistory.addNew.remark}),$scope.resetFamilyHistory()):ModalService.openAlert("alert","AMA Declaration","Application not allows duplicate values with combination of disease and relation",$scope,"alert")}else alert("Please select a valid disease and relation")};var familyModifyIdx=null;$scope.modifyFamily=function(data){var isValid=validateMedicalHistory(data);isValid?(null!=familyModifyIdx&&(console.log("data",data.disease),$scope.amaSaveData.familyMedicalHistory.medicalHistory[familyModifyIdx].disease=data.disease,$scope.amaSaveData.familyMedicalHistory.medicalHistory[familyModifyIdx].relation=data.relation,$scope.amaSaveData.familyMedicalHistory.medicalHistory[familyModifyIdx].age=data.age,$scope.amaSaveData.familyMedicalHistory.medicalHistory[familyModifyIdx].remark=data.remark,$scope.resetFamilyHistory(),familyModifyIdx=null),$scope.isAdd=!0):ModalService.openAlert("alert","AMA Declaration","Application not allows duplicate values with combination of diseas and relation",$scope,"alert")},$scope.mapFamilyDtls=function(index){familyModifyIdx=index,$scope.modifyDtlsObj=$scope.amaSaveData.familyMedicalHistory.medicalHistory[index],$scope.famillyHistory.addNew.disease=getLookupDesease($scope.modifyDtlsObj.disease),$scope.famillyHistory.addNew.relation=getLookupRelation($scope.modifyDtlsObj.relation),$scope.famillyHistory.addNew.age=$scope.modifyDtlsObj.age,$scope.famillyHistory.addNew.remark=$scope.modifyDtlsObj.remark,$scope.isAdd=!1},$scope.cancelFamilyDtls=function(){$scope.isAdd=!0,$scope.resetFamilyHistory()},$scope.removeFamily=function(index){$scope.amaSaveData.familyMedicalHistory.medicalHistory.splice(index,1)},$scope.addDrugs=function(data){var temp={drugDosageId:null,dosage:"",drugName:"",frequency:"",drugId:"new"};data&&(temp.drugName=data.drugName,temp.drugId=data.drugId),void 0!=$scope.amaSaveData.medication.takingMadications&&null!=$scope.amaSaveData.medication.takingMadications||($scope.amaSaveData.medication={takingMadications:{drugsDetails:[]}}),$scope.amaSaveData.medication.takingMadications.drugsDetails.push(temp),$scope.amaSaveData.medication.takingMadications.drugsDetails.length>0&&($scope.isdrugsDetails=!1)},$scope.removeDrugs=function(index){$scope.amaSaveData.medication.takingMadications.drugsDetails.splice(index,1)},$scope.popup=[{opened:!1},{opened:!1},{opened:!1}],$scope.open=function(value){$scope.popup[value].opened=!0},$scope.tranfermation=function(){angular.forEach($scope.dailyActivity,function(value,key){angular.forEach($scope.sleepinessData,function(val,index){$scope.dailyActivity[key].dailyActivitiesId==$scope.sleepinessData[index].dailyActivitiesId&&($scope.sleepinessData[index].activities=$scope.dailyActivity[key].activities,$scope.sleepinessData[index].activityScore=$scope.dailyActivity[key].score)})})},$scope.tranfermationUpdate=function(updatedArray){angular.forEach(updatedArray,function(value,key){angular.forEach($scope.sleepinessData,function(val,index){updatedArray[key].dailyActivitiesId==$scope.sleepinessData[index].dailyActivitiesId&&($scope.sleepinessData[index].activityScore=updatedArray[key].activityScore,$scope.sleepinessData[index].sleepinessSurveyId=updatedArray[key].sleepinessSurveyId)})})},$scope.print=function(){var mywindow=$window.open("","ama-decleration","height=400,width=600");return mywindow.document.write("<html><head><title>my div</title>"),mywindow.document.write("</head><body >"),mywindow.document.write(data),mywindow.document.write("</body></html>"),mywindow.document.close(),mywindow.focus(),mywindow.print(),mywindow.close(),!0},$scope.PrintElem1=function(elem){print($(elem).html())},$scope.PrintElem=function(divName){var printContents=document.getElementById(divName).innerHTML,popupWin=window.open("","_blank","width=300,height=300");popupWin.document.open(),popupWin.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">'+printContents+"</body></html>"),popupWin.document.close()},$scope.removeActivity=function(){angular.forEach($scope.sleepCloneData,function(val,index){delete $scope.sleepCloneData[index].activities})},$scope.loadCountryCombo=function(){var url=null,tempUrl1=null;tempUrl1=APIS.GET_LOOKUPS.URL,url=tempUrl1+"country,Y_N",APIS.GET_LOOKUPS.URL=url,DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){response.success?($scope.countryList=response.dataBean.country,$scope.everSuspendedList=response.dataBean.Y_N,angular.forEach($scope.everSuspendedList,function(val,key){"Y"==val.lookUpItemCode&&(val.lookUpItemValue="Yes"),"N"==val.lookUpItemCode&&(val.lookUpItemValue="No")})):$log.error("loadCountryCombo: "+response.errorMessage)}),APIS.GET_LOOKUPS.URL=tempUrl1},$scope.getAllClassList=function(){DataManager.sendRestRequest(null,APIS.GET_CLASSESMACCONFIG,function(response){if(response.success){if($scope.getAllClass=response.dataBean,!$scope.ispreviousLicenceDetails)for(var i=0;i<$scope.getAllClass.length;i++)$scope.previousLicenceDetails.push({status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,classId:null,country:null,expiryDate:null,outCome:null,everSuspended:null,previousmaId:null,applicationId:null,macId:null,outcome_Id:null})}else $log.error("loadOutComeCombo: "+response.errorMessage)},$scope.userConfig.token)},$scope.loadOutComeCombo=function(){DataManager.sendRestRequest(null,APIS.GET_AMA_OUTCOME_COMBO,function(response){response.success?$scope.getOutComeList=response.dataBean:$log.error("loadOutComeCombo: "+response.errorMessage)},$scope.userConfig.token)},$scope.loadPreviousAma=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PREVIOUS_AMA.URL,url=tempUrl+"/"+$scope.userConfig.userSeqId,APIS.GET_PREVIOUS_AMA.URL=url,DataManager.sendRestRequest(null,APIS.GET_PREVIOUS_AMA,function(response){response.success?$scope.previousAma=response.dataBean:$log.error("loadPreviousAma: "+response.errorMessage)},$scope.userConfig.token),APIS.GET_PREVIOUS_AMA.URL=tempUrl},$scope.getAmaInstruction=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I006",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.AMAInstructionList=response.dataBean;var ins=$scope.AMAInstructionList.instruction;$scope.AMAInstruction=$sce.trustAsHtml(ins)}},$scope.userConfig.token)},$scope.changeVision=function(param){$scope.amaSaveData.visionCorrection.visionTypeID=param,651==param?($scope.isVisionNear=!1,$scope.isVisionDistant=!0,$scope.isBothVision=!1,$scope.amaSaveData.visionCorrection.eyes[0].metrics.intermediate=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.intermediate=null,$scope.amaSaveData.visionCorrection.eyes[0].metrics.near=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.near=null):650==param?($scope.isVisionNear=!0,$scope.isVisionDistant=!1,$scope.isBothVision=!1,$scope.amaSaveData.visionCorrection.eyes[0].metrics.sphere=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.sphere=null,$scope.amaSaveData.visionCorrection.eyes[0].metrics.cylinder=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.cylinder=null,$scope.amaSaveData.visionCorrection.eyes[0].metrics.axis=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.axis=null):652==param&&($scope.isBothVision=!0,$scope.isVisionNear=!1,$scope.isVisionDistant=!1)},$scope.feeCalculation=function(){$scope.paymentInfo={fee:40,feeData:[],total:0},0==$scope.paymentInfo.total?void 0!=$scope.checkCentralList?$scope.checkCentral=!1:$scope.checkCentral=!0:$scope.checkCentral=!1;var paymentStr="";paymentStr=$scope.userInfo.nric?$scope.userInfo.nric.substr($scope.userInfo.nric.length-4):$scope.userInfo.passportNo.substr($scope.userInfo.passportNo.length-4),$scope.SelectedlicenceDetails=[],angular.forEach($scope.licenceDetails,function(val,key){val.status&&$scope.SelectedlicenceDetails.push(val)}),angular.forEach($scope.licenceDetails,function(value,key){var temp={lclass:null,amount:null};"0"!=temp.amount&&(temp.lclass="Application for Class "+value.classId+" medical assessment",temp.amount="Y"==value.feepaid_yn?0:$scope.applicationFee),value.status&&"0"!=temp.amount&&($scope.paymentInfo.feeData.push(temp),paymentStr+=value.macDTO.code)});var previousPaidTotal=getPreviousPaidTotal(),previousPaidUnselectValues=getPreviousPaidUnselectedValues();if(previousPaidTotal&&previousPaidUnselectValues)for(var i=0;i<$scope.paymentInfo.feeData.length;i++)$scope.paymentInfo.feeData[i].amount&&previousPaidUnselectValues&&($scope.paymentInfo.feeData[i].amount=0,previousPaidUnselectValues--);$scope.paymentInfo.feeData.length>0&&(angular.forEach($scope.paymentInfo.feeData,function(val,index){$scope.paymentInfo.total=$scope.paymentInfo.total+val.amount}),$scope.paymentInfo.total=$scope.paymentInfo.total-$scope.feeWaiverEligibility,$scope.paymentInfo.total=parseFloat($scope.paymentInfo.total).toFixed(2),received_total&&($scope.paymentInfo.total=received_total),$scope.paymentString=paymentStr,$scope.paymentUrl=$sce.trustAsResourceUrl(DataManager.getPaymentUrl()+$scope.userConfig.token),$scope.amaSaveData.application_id&&$window.sessionStorage.setItem("application_id",$scope.amaSaveData.application_id),DataManager.isPaymentOn()&&$window.sessionStorage.setItem("licenceDetails",JSON.stringify($scope.licenceDetails))),0==$scope.paymentInfo.total&&($scope.updatePaymentStatus(),$scope.paymentCompleted=!0)},$scope.navigateToInstructions=function(){$state.go("appointment")},$scope.invoice=function(){$scope.invoive_pdfgererate()},$scope.invoive_pdfgererate=function(){var invoicePaymentDTO,centralBill=$scope.cbobj;invoicePaymentDTO={classes:$scope.paymentInfo.feeData,applicationId:$window.sessionStorage.getItem("application_id"),centralBill:centralBill},APIS.INVOICE_PDF_NEW.data=invoicePaymentDTO,DataManager.sendRestRequest(null,APIS.INVOICE_PDF_NEW,function(response){if(response.success){$scope.newPDF=response.dataBean,$scope.newPDFAddress=$scope.newPDF.mailingAddress.replace(/<br\/\>/g,"\n"),$scope.classLen=$scope.newPDF.classes.length,console.log($scope.classLen),$scope.grTotal=0;var value=$scope.newPDF.nric,btype="code128";$("#barcodeTarget").html("").barcode(value,btype),$timeout.cancel($scope.barCodeTimeout);for(var i=0;i<$scope.classLen;i++)$scope.grTotal+=parseInt($scope.newPDF.classes[i].amount);$scope.grTotal=parseInt($scope.grTotal)-parseInt($scope.newPDF.centralBill.amount),console.log($scope.newPDF.nric),console.log($scope.newPDF.nric)}else $log.error(response.errorMessage)}),setTimeout(function(){$scope.savpdfData($scope.newPDF.fileName)},5e3)},$scope.savpdfData=function(fname){$("#testcontent").html($("#printInv").html());var strbt=btoa(unescape(encodeURIComponent($("#testcontent").html())));console.log(strbt);var savePdf;savePdf={fileName:fname,personId:$window.sessionStorage.getItem("AMA_personId"),invoicePdf:strbt},APIS.POST_STORE_PDF.data=savePdf,DataManager.sendRestRequest(null,APIS.POST_STORE_PDF,function(response){response.success?console.log("PDF SAVED"):console.log("PDF NOT SAVED")})},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.getApplicant=function(){$scope.userAddress=getAddress(),$scope.userInfo.organization.lookUpId||($scope.userInfo.organization.lookUpValue=$scope.userInfo.otherOrgDesc),$scope.userLicence=getUserLicence(),$scope.UserLicforAMA=angular.copy($scope.userLicence);var LicforAma=$scope.UserLicforAMA.split(","),LicforAma_arr=[];for(var m in LicforAma)LicforAma_arr.indexOf(LicforAma[m])===-1&&LicforAma_arr.push(LicforAma[m]);$scope.UserLicenceforAMA=LicforAma_arr},$scope.updateUserProfile=function(){$location.url("/profile")},window.location.hash.split("refNo=")[1]||$window.sessionStorage.setItem("licenceDetails",null),JSON.parse($window.sessionStorage.getItem("licenceDetails"))||DataManager.sendRestRequest(null,APIS.GET_PAGE_ORDER,function(response){response.success?($scope.pageOrder=response.dataBean,$scope.steps=[],angular.forEach($scope.pageOrder,function(value,key){"INSRUCTIONS"==value?$scope.steps.push(1):"LICENCE"==value?$scope.steps.push(2):"ILLNESS"==value?$scope.steps.push(3):"ME_LS_PRACTICES"==value?$scope.steps.push(4):"SLEEPINESS"==value?$scope.steps.push(5):"FAMILYHISTORY"==value?$scope.steps.push(6):"PREVIOUSAMA"==value&&$scope.steps.push(7)}),$scope.init()):$log.error("UNABLE TO GET PAGE ORDER: "+response.errorMessage)},$scope.userConfig.token),$scope.cbobj={lclass:null,amount:null},$scope.genPDF=function(param){convertpdf.htmltoPdf(param)},$scope.resetVisionValues=function(){$scope.isVisionDistant=!1,$scope.isBothVision=!1,$scope.isVisionNear=!1,$scope.vision.slectedVison=null,$scope.amaSaveData.visionCorrection.eyes[0].metrics.sphere=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.sphere=null,$scope.amaSaveData.visionCorrection.eyes[0].metrics.cylinder=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.cylinder=null,$scope.amaSaveData.visionCorrection.eyes[0].metrics.axis=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.axis=null,$scope.amaSaveData.visionCorrection.eyes[0].metrics.intermediate=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.intermediate=null,$scope.amaSaveData.visionCorrection.eyes[0].metrics.near=null,$scope.amaSaveData.visionCorrection.eyes[1].metrics.near=null},$scope.showPreview=function(){for(var i=0;i<=$scope.page.illnesPageList.sectionList.length;i++){for(var j=0;j<$scope.page.illnesPageList.sectionList[i].elements.length;j++)$scope.ex=$scope.page.illnesPageList.sectionList[i].elements;break}angular.forEach($scope.ex,function(key1,val1){"No"==key1.selectedValue&&(key1.enteredRemarks=null)});for(var k=0;k<$scope.page.lifeStylePractices.sectionList.length;k++)for(var l=0;l<$scope.page.lifeStylePractices.sectionList[k].elements.length;l++)"No"==$scope.page.lifeStylePractices.sectionList[k].elements[l].selectedValue&&($scope.page.lifeStylePractices.sectionList[k].elements[l].enteredRemarks=null);if("Yes"==$scope.havingPreviousAma&&!validPreviousLicences())return ModalService.openAlert("alert","AMA Declaration","Please provide previous Medical Assessment details",$scope,"alert"),!1;if("PREVIOUSAMA"==$scope.pageOrder[$scope.pageIndex]&&$scope.form.declarationForm.$invalid){var requiredFieldNames=null;if($scope.form.declarationForm.$error.required.length>0){var count=0;if(angular.forEach($scope.form.declarationForm.$error.required,function(value,key){count++,""!=value.$name&&(requiredFieldNames=null!=requiredFieldNames?requiredFieldNames+", "+value.$name:value.$name)}),count>2)return ModalService.openAlert("alert","AMA Declaration","Please provide "+requiredFieldNames+" details",$scope,"alert"),!1}}var previewData=angular.copy($scope.amaSaveData);if(0==previewData.pagesList.length){for(var i=0;i<=$scope.page.illnesPageList.sectionList.length;i++){for(var j=0;j<$scope.page.illnesPageList.sectionList[i].elements.length;j++)$scope.ex=$scope.page.illnesPageList.sectionList[i].elements;break}angular.forEach($scope.ex,function(key1,val1){"No"==key1.selectedValue&&(key1.enteredRemarks=null)});for(var k=0;k<$scope.page.lifeStylePractices.sectionList.length;k++)for(var l=0;l<$scope.page.lifeStylePractices.sectionList[k].elements.length;l++)"No"==$scope.page.lifeStylePractices.sectionList[k].elements[l].selectedValue&&($scope.page.lifeStylePractices.sectionList[k].elements[l].enteredRemarks=null);previewData.pagesList.push($scope.page.illnesPageList),previewData.pagesList.push($scope.page.lifeStylePractices)}previewData.pagesList.push({pageName:"Eye and Sleepiness Survey"}),previewData.pagesList.push({pageName:"Medical Records and Family Medical History"}),previewData.pagesList.push({pageName:"Previous AMA and declaration"}),previewData.sleepinessSurvey=$scope.sleepinessData,previewData.previousLicenceDetails=$scope.previousLicenceDetails;var popupObj={modalTitle:"Applicant Preview",data:{parentScope:$scope,applicantData:previewData,combos:$scope.combos,countryList:$scope.countryList,getOutComeList:$scope.getOutComeList,everSuspendedList:$scope.everSuspendedList,getAllClass:$scope.getAllClass,userInfo:$scope.userInfo,licenceDetails:$scope.licenceDetails,macDTOList:$scope.macDTOList},size:"lg"};ModalService.openModal("app/applicant/partials/hed/applicantPreview.html","ApplicantPreviewCtrl",popupObj)},$scope.updatePaymentStatus=function(reason){APIS.CONFIRM_ABORT_ACTIVITY.data={application_id:$window.sessionStorage.getItem("application_id"),applicationStatusId:3,feeWaiverYN:$scope.feeWaiverMACIds.join(",")},DataManager.isPaymentOn()&&(APIS.CONFIRM_ABORT_ACTIVITY.data.paymentRefNo=refNo),DataManager.sendRestRequest(null,APIS.CONFIRM_ABORT_ACTIVITY,function(response){response.success||console.log("UNABLE TO ABORT ACTIVITIY","Error Code:",response.errorCode)},$scope.userConfig.token)};var refNo,paymentStatus,errorCode,errorDesc,received_total;window.location.hash.split("refNo=")[1]&&(DataManager.sendRestRequest(null,APIS.GET_FEE_DETAILS,function(response){response.success?($scope.applicationFee=Number(response.dataBean),$scope.swichTap("payment"),$scope.licenceDetails=JSON.parse($window.sessionStorage.getItem("licenceDetails")),$scope.feeCalculation(),$scope.steps.push(7)):$log.error("GET FEE DETAILS: "+response.errorMessage)},$scope.userConfig.token),refNo=window.location.hash.split("refNo=")[1].split("&")[0],paymentStatus=window.location.hash.split("status=")[1].split("&")[0],received_total=window.location.hash.split("amount=")[1].split("&")[0],$scope.amaSaveData={applicationStatusId:2},$scope.userId=window.location.hash.split("patientId=")[1].split("&")[0],getFeeWeiverDetails(),"N"==paymentStatus?(console.log(paymentStatus),errorCode=window.location.hash.split("errorCode=")[1].split("&")[0],errorDesc=window.location.hash.split("errorDesc=")[1].split("&")[0],"null"==errorCode&&"null"==errorDesc?ModalService.openAlert("alert","Error","Error in payment please contact admin",$scope,"alert"):(getFeeWeiverDetails(),$("#appointmentTab").attr("disabled","disabled"),ModalService.openAlert("alert","Error - "+errorCode,unescape(errorDesc),$scope,"alert"))):"Y"==paymentStatus?(getFeeWeiverDetails(),ModalService.openAlert("alert","Alert","Payment completed successfully",$scope,"alert",function(){$("#appointmentTab").removeAttr("disabled"),$scope.updatePaymentStatus(),$scope.paymentCompleted=!0,$scope.checkCentral=!1,$window.sessionStorage.setItem("licenceDetails",null)})):(getFeeWeiverDetails(),$("#appointmentTab").attr("disabled","disabled"),ModalService.openAlert("alert","Error","Status not received from payment gateway.  Please check in Lobby.",$scope,"alert"))),$scope.$on("autoSaveRequested",function(){$scope.autoSaveAMAData()}),$scope.autoSaveAMAData=function(){if(1==$scope.amaSaveData.applicationStatusId){var autoSaveData=angular.copy($scope.amaSaveData);angular.forEach($scope.licenceDetails,function(value,key){autoSaveData.currentLicenceDetails.push({status:value.status,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,applicationClassesId:value.applicationClassesId,classId:value.classId,applicationType:value.applicationType,licenseType:value.licenseType,aircraftType:value.aircraftType,operationType:value.operationType,feepaid_yn:value.feepaid_yn})}),autoSaveData.pagesList=[],autoSaveData.application_id?(autoSaveData.pagesList.push($scope.page.illnesPageList),autoSaveData.pagesList.push($scope.page.lifeStylePractices)):(autoSaveData.pagesList.push(getPageDataFromHead("Illness Condition")),autoSaveData.pagesList.push(getPageDataFromHead("Since Last ME and LS Practices")),console.log(autoSaveData.pagesList)),console.log(autoSaveData.pagesList),autoSaveData.sleepinessSurvey=$scope.sleepinessData,autoSaveData.previousLicenceDetails=$scope.previousLicenceDetails,autoSaveData.havingPreviousAma=$scope.havingPreviousAma,autoSaveData.visionRequired=$scope.amaSaveData.visionCorrection.visionRequired,autoSaveData.takingMedications=$scope.takingMedications;var transactionStatus=$scope.amaSaveData.application_id?2:1;AutoSaveManager.autoSaveData("AMA",autoSaveData,$scope.amaSaveData.application_id,transactionStatus)}},$scope.resetPreviousLicenceValues=function(pClass){""==pClass.classId&&(pClass.country="",pClass.expiryDate="",pClass.outcome_Id="",pClass.everSuspended="")},$scope.havingAMAYesClick=function(){$scope.havingPreviousAma="Yes"},$scope.resetPreviousClasses=function(){$scope.havingPreviousAma="No",angular.forEach($scope.previousLicenceDetails,function(pClass){pClass.classId="",$scope.resetPreviousLicenceValues(pClass)})},APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I007",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.AMADeclInstructionList=response.dataBean;var AmaDecins=$scope.AMADeclInstructionList.instruction;$scope.AMADeclarationInstruction=$sce.trustAsHtml(AmaDecins)}}),APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I016",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.AMAConsentDeclaredList=response.dataBean;var AmaConsDec=$scope.AMAConsentDeclaredList.instruction;$scope.AMAConsentDeclared=$sce.trustAsHtml(AmaConsDec)}}),$scope.medicationRadioClick=function(Val){void 0==$scope.amaSaveData.medication.takingMadications&&null==$scope.amaSaveData.medication.takingMadications||($scope.amaSaveData.medication.takingMadications.answer=Val,"N"==Val&&($scope.amaSaveData.medication.takingMadications.drugsDetails=[]),"Y"==$scope.amaSaveData.medication.takingMadications.answer&&0==$scope.amaSaveData.medication.takingMadications.drugsDetails.length?$scope.isdrugsDetails=!0:$scope.isdrugsDetails=!1)}}]),angular.module("app").controller("AppMedAssess3Ctrl",["$scope","$location","$uibModalInstance","ResourceManager",function($scope,$location,$uibModalInstance,hd){$scope.hd=hd,$(".header").show(),$scope.names1=[{name:"Hypertension"},{name:"Diabetes"},{name:"HyperCholesterolemia"},{name:"Thyroid Disease"},{name:"Coronary Artery Disease"},{name:"Arrhythmia"},{name:"Structural Heart Anomalies"},{name:"Urinary Stones"},{name:"GallBladder/Liver Disease"},{name:"Gastric Intestinal Disease"}],$scope.names2=[{name:"Cancers/Tumers"},{name:"Asthma/Lung Disease"},{name:"Depp Vein Thrombosis"},{name:"Bleeding Blood Disorders"},{name:"Strokes/TIA/Seizures"},{name:"Head Injury"},{name:"Psychiatric Conditions"},{name:"Tuberculosis"},{name:"HIV Positive"},{name:"Any other Illness/Debility"}],$scope.names3=[{name:"Recurrent or Persistent Insomnia"},{name:"Intrusive low mood or feeling depressed"},{name:"Suicide ideation or Attempt"},{name:"Anxiety or Panic Attacks"},{name:"Amnesia"},{name:"Frequent lethargy or somnolence in day time"},{name:"Weekness, numbness or paralysis"},{name:"Vertigi/Giddiness/Lightheadedness"},{name:"Fainting or Loss consiousness"}],$scope.names4=[{name:"Recurrent severe or frequent headaches"
},{name:"Pain in the chest/Palpatations"},{name:"Wheezing and/or shortness of breathe"},{name:"Blood in sputum/vomitus/urine/stools"},{name:"Rejected or premium loading for life insurance for medical reasons"},{name:"Rejected or terminated for employment on medical grounds"}],$scope.names5=[{name:"Ear/Nose/Throat"},{name:"Eye or corneal"},{name:"Abdomen"},{name:"Heart"},{name:"Bones/Joints/Muscles"},{name:"Craniotomy"},{name:"Chest"},{name:"Genito Urinary System"}],$scope.names6=[{name:"Use of recreational drugs or substances"},{name:"Previous convication of an alcohol or drug related offence, or pending such issues"},{name:"Sigarette smoker within the past 20 years"},{name:"Still smoking?"}],$scope.names7=[{name:"Are you pregnant?"},{name:"Mensus delayed/missed"},{name:"Severe menstrual symptoms"},{name:"Other menstrual problems"},{name:"Regulr Breast Examination done"},{name:"Regular PAP smear done"}],$scope.moveNext=function(){$location.path("page3")},$scope.moveBack=function(){$location.path("page7")},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("AppMedAssess4Ctrl",function($scope,$location){$(".header").hide(),$scope.names1=[{name:"Visited emergency room or admitted to hospital"},{name:"Issued medical leave for 10 or more days"},{name:"Change in corrective lense power"},{name:"Eye discomfort and/or visual disturbances"},{name:"Hearing difficulties"},{name:"Pain and/or discomfort in ears/sinuses"},{name:"Deterioration of effort tolerance"},{name:"Recurrent or persistent abdominal pain"},{name:"Painful joints, bones or muscles"},{name:"Involuntory/unexplained weight loss"}]}),angular.module("app").controller("ApplicantPreviewCtrl",["$scope","APIS","DataManager","$uibModalInstance","ResourceManager","data","$timeout","convertpdf","ResourceManager",function($scope,APIS,DataManager,uibModalInstance,rm,formData,$timeout,convertpdf,amhd){function getAddress(){var str="";return $scope.userInfo.address.length>0&&(str=$scope.userInfo.address[0].floor?$scope.userInfo.address[0].floor+"-":"",str+=$scope.userInfo.address[0].unit?$scope.userInfo.address[0].unit+", ":"",str+=$scope.userInfo.address[0].line1?$scope.userInfo.address[0].line1+", ":"",str+=$scope.userInfo.address[0].line2?$scope.userInfo.address[0].line2+", ":"",str+=$scope.userInfo.address[0].country?$scope.userInfo.address[0].country.countryName+", ":"",str+=$scope.userInfo.address[0].postalCode?$scope.userInfo.address[0].postalCode:""),str}function checkPrevLicences(){for(var i=0;i<$scope.applicantData.previousLicenceDetails.length;i++)if($scope.applicantData.previousLicenceDetails[i].classId)return"Yes";return"No"}function getSleepNessTotal(){for(var tot=0,i=0;i<$scope.applicantData.sleepinessSurvey.length;i++)tot+=Number($scope.applicantData.sleepinessSurvey[i].activityScore);return tot}function getVisionType(vision){return 650==vision?"Near Only":651==vision?"Distant Only":652==vision?"Both":""}function printElement(elem){var domClone=elem.cloneNode(!0),$printSection=document.getElementById("printSection");if(!$printSection){var $printSection=document.createElement("div");$printSection.id="printSection",document.body.appendChild($printSection)}$printSection.innerHTML="",$printSection.appendChild(domClone)}$scope.applicantData=formData.applicantData,$scope.amhd=amhd,$scope.licenceDetails=formData.licenceDetails,$scope.macDTOList=formData.macDTOList,$scope.combos=formData.combos,$scope.sleepinessTotal=getSleepNessTotal(),$scope.selectedVision=getVisionType($scope.applicantData.visionCorrection.visionTypeID),$scope.countryList=formData.countryList,$scope.getOutComeList=formData.getOutComeList,$scope.everSuspendedList=formData.everSuspendedList,$scope.getAllClass=formData.getAllClass,$scope.userInfo=formData.userInfo,$scope.havingPreviousAma=checkPrevLicences(),$scope.userAddress=getAddress(),$scope.illnessNumber=1,$scope.sleepnessArray=["Never fall asleep","Slight chance of falling asleep","Medium chance of falling asleep","High chance of falling asleep"],$timeout(function(){$("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.userInfo.photo)},2e3),$scope.cancel=function(){uibModalInstance.dismiss("cancel")},$scope.print=function(){printElement(document.getElementById("ama-decleration")),window.print()}}]),angular.module("app.applicant").controller("AppointmentCtrl",["$scope","DataManager","APIS","ResourceManager",function($scope,DataManager,APIS,amhd){function loadInstructionsData(){DataManager.sendRestRequest(null,APIS.GET_INSTRUCTIONS,function(response){response.success&&$("#instructionsDiv").html(response.dataBean.instruction)},$scope.userConfig.token),APIS.GET_DUE_LIST_LME.data=$scope.userRegDetails.personId,DataManager.sendRestRequest(null,APIS.GET_DUE_LIST_LME,function(response){response.success?$scope.nextLmeType=response.dataBean:console.log("ErrorMessage",response.errorMessages)},$scope.userConfig.token),APIS.GET_DUE_LIST_LME_ROUTINES.data=$scope.userRegDetails.personId,DataManager.sendRestRequest(null,APIS.GET_DUE_LIST_LME_ROUTINES,function(response){response.success?$scope.routinesNextLme=response.dataBean:console.log("ErrorMessage",response.errorMessages)},$scope.userConfig.token)}$scope.amhd=amhd,$scope.userConfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse(sessionStorage.getItem("userconfig")),loadInstructionsData()}]),angular.module("app").controller("AssessHistoryCtrl",["$scope","$state","APIS","$location","$window","DataManager","ResourceManager",function($scope,$state,APIS,$location,$window,DataManager,ah){$scope.ah=ah,$scope.init=function(){$scope.dataBind()},$scope.dataBind=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantId=$scope.userRegDetails.personId,console.log("uconfig",$scope.uconfig),APIS.GET_ASSESSMENT_HISTORY.data=$scope.applicantId,DataManager.sendRestRequest(null,APIS.GET_ASSESSMENT_HISTORY,function(response){response.success?$scope.assessHistoryData=response.dataBean:console.log("ErrorMessage",response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("DashboardCtrl",["$scope","$rootScope","$state","$filter","APIS","$location","$window","DataManager","$uibModal","ModalService","PermissionManager","AutoSaveManager","ResourceManager",function($scope,$rootScope,$state,$filter,APIS,$location,$window,DataManager,$uibModal,ModalService,PermissionManager,AutoSaveManager,dashbrd){$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.dashbrd=dashbrd,$scope.showRoles=!1;var rr=PermissionManager.getMultiRoleResponse();rr&&rr.dataBean&&($scope.roles=rr.dataBean.userFacilities[0].roles,$scope.selectedRole=PermissionManager.getMultiRoleResponse().selectedRole,$scope.roles.length>1&&($scope.showRoles=!0)),$scope.roleChanged=function(){var selectedRoleName="";for(var i in $scope.roles)if($scope.roles[i].roleId==$scope.selectedRole){selectedRoleName=$scope.roles[i].roleDisplayName;break}PermissionManager.roleChanged($scope.selectedRole,selectedRoleName)},$scope.init=function(){$rootScope.updateRequestDetails={},$scope.abortData=null,$scope.AbortApplicationStatusId=4,$scope.animationsEnabled=!0,$scope.notificationsData={},null!=$scope.userRegDetails.photo&&$("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.userRegDetails.photo),$scope.dataBind()},$scope.isLoggedin=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.uconfig&&$scope.userRegDetails||$state.go("login"),$scope.init()},$scope.checkDMF=function(){APIS.CHECK_DMF_ISEXIST.data=$scope.userRegDetails.personId,DataManager.sendRestRequest(null,APIS.CHECK_DMF_ISEXIST,function(response){response.success?$location.url("/amahed"):ModalService.openAlert("alert","warning",response.errorMessage,$scope)},$scope.uconfig.token)},$scope.checkDMFNoti=function(){console.log($scope.userRegDetails.personId),APIS.POST_DMF_NOTI.data={applicantId:$scope.userRegDetails.personId},DataManager.sendRestRequest(null,APIS.POST_DMF_NOTI,function(response){response.success?$location.url("/notify_med_fitness"):(ModalService.openAlert("confirm","warning",response.errorMessage,$scope,"notify",function(){}),$scope.$on("notifyOk",function(){$location.url("/notify_med_fitness")}))},$scope.uconfig.token)},$scope.dataBind=function(){$scope.notificationObject={},$scope.notificationObject.receiver_role_Id=$scope.currentRole.roleId,$scope.notificationObject.receiver_Id=$scope.uconfig.userFacilities[0].userId,$scope.getNotifications($scope.notificationObject),$scope.getActivityProgress()},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:null,visitType:null,applicantId:$scope.userRegDetails.personId,applicantuserId:null,applicantDetails:$scope.userRegDetails},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile","_self")},$scope.getNotifications=function(notificationObject){APIS.GET_NOTIFICATION.data=notificationObject,DataManager.sendRestRequest(null,APIS.GET_NOTIFICATION,function(response){response.success?($scope.notificationsData=response.dataBean,$rootScope.notification1Count=$filter("filter")(response.dataBean,{notifications_type_Id:635}).length,$rootScope.notification2Count=$filter("filter")(response.dataBean,{notifications_type_Id:!1}).length,$scope.notification1Count=$rootScope.notification1Count,$scope.notification2Count=$rootScope.notification2Count):console.log("UNABLE TO GET NOTIFICATION","Error Code:",response.errorCode)},$scope.uconfig.token)},$scope.getActivityProgress=function(){APIS.GET_ACTIVITY_PROGRESS.data=$scope.userRegDetails.personId,DataManager.sendRestRequest(null,APIS.GET_ACTIVITY_PROGRESS,function(response){response.success?(angular.forEach(response.dataBean,function(activity){activity.action?(activity.isUpdateEnabled=activity.action.indexOf("Update")!=-1,activity.isAbortEnabeld=activity.action.indexOf("Abort")!=-1):(activity.isUpdateEnabled=!1,activity.isAbortEnabeld=!1)}),$scope.activityData=response.dataBean):console.log("UNABLE TO GET ACTIVITIES","Error Code:",response)},$scope.uconfig.token)},$scope.updateActivity=function(data){APIS.GET_UPDATE_HED_CLASSES.URL=String.prototype.format.apply(APIS.GET_UPDATE_HED_CLASSES.tempURL,[data.applicationId]),DataManager.sendRestRequest(null,APIS.GET_UPDATE_HED_CLASSES,function(response){response.success?response.dataBean||($rootScope.updateRequestDetails={isNewPage:!0,applicantId:$scope.userRegDetails.personId,applicantuserId:data.applicationId,returnFlag:""},$location.url("/amahed")):console.log("UNABLE GET UPDATE HED CLASSES:",response)},$scope.uconfig.token)},$scope.setAbortData=function(data){$scope.abortData=data,$scope.abortData.reason=""},$scope.isFrmSubmitted=!1,$scope.popdismiss=!1,$scope.abortConfirm=function(reason){if(""==reason){if($scope.popdismiss=!1,$scope.isFrmSubmitted=!0,$scope.abortForm.$invalid)return}else APIS.CONFIRM_ABORT_ACTIVITY.data={application_id:$scope.abortData.applicationId,applicationStatusId:$scope.AbortApplicationStatusId,activityType:$scope.abortData.activityType},DataManager.sendRestRequest(null,APIS.CONFIRM_ABORT_ACTIVITY,function(response){response.success?$scope.getActivityProgress():console.log("UNABLE TO ABORT ACTIVITIY","Error Code:",response.errorCode)},$scope.uconfig.token),AutoSaveManager.clearData("AMA",$scope.abortData.applicationId),$scope.popdismiss=!0},$scope.viewNotification=function(notification){$scope.viewnote=notification;var viewNotModalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/applicant/partials/notification_model.html",controller:"ViewNotificationCtrl",size:"md",resolve:{viewnote:function(){return $scope.viewnote}}});viewNotModalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date),$scope.init()})},$scope.logout=function(){return 6!=JSON.parse(sessionStorage.getItem("currentRole")).roleId||sessionStorage.getItem("isFeedBackSubmitted")?(APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage},$scope.uconfig.token),$window.sessionStorage.clear(),void $state.go("app")):void ModalService.openAlert("confirm","Confirmation",dashbrd.resources.DASHBOARD_CNTRL.FEEDBACK,$scope,"isFeedBackSubmitted")},$scope.$on("isFeedBackSubmittedOk",function(){$state.go("feedback_to_CAMB")}),$scope.$on("isFeedBackSubmittedCancel",function(){APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage},$scope.uconfig.token),$window.sessionStorage.clear(),$state.go("app")}),$scope.isLoggedin()}]),angular.module("app").controller("ViewNotificationCtrl",["$scope","APIS","DataManager","ResourceManager","$uibModalInstance","viewnote","ModalService",function($scope,APIS,DataManager,ResourceManager,$uibModalInstance,viewnote,ModalService){$scope.ResourceManager=ResourceManager,$scope.notifydata=viewnote,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.deleteNotification=function(){APIS.DELETE_NOTIFICATION.data={notifications_Id:$scope.notifydata.notifications_Id},DataManager.sendRestRequest(null,APIS.DELETE_NOTIFICATION,function(response){response.success?ModalService.openAlert("alert","success",ResourceManager.resources.DASHBOARD_CNTRL.NOTIFICATION,$scope,"deleteNot",function(){$uibModalInstance.close("reject")}):$uibModalInstance.close("reject")},$scope.uconfig.token)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("FaqCtrl",["$scope","$state","APIS","$location","$window","DataManager",function($scope,$state,APIS,$location,$window,DataManager){$scope.init=function(){$scope.message="Dear Applicant, Faq page is in Progress.",$scope.wish="Thanks for visiting"},$scope.dataBind=function(){},$scope.init()}]),angular.module("app").controller("FeedbackToCAMBCtrl",["$scope","$state","APIS","$location","$window","DataManager","ResourceManager","ModalService",function($scope,$state,APIS,$location,$window,DataManager,fbcamb,ModalService){return $scope.fbcamb=fbcamb,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){$scope.selected={feadBack:""},$scope.dataBind()},$scope.feedBackDatList={rating:""},$scope.dataBind=function(){$scope.dmeUsersCombo(),$scope.clinicUsersCombo(),$scope.contact_data(),$scope.feedback_mail()},$scope.currentFeedBack=function(att){console.log("data",$scope.selected.feadBack),console.log("att",att)},$scope.dmeUsersCombo=function(){APIS.GET_DMEUSERS.data={},DataManager.sendRestRequest(null,APIS.GET_DMEUSERS,function(response){response.success&&($scope.dropdownData=response.dataBean)})},$scope.clinicUsersCombo=function(){APIS.GET_ALLCLINICS.data={},DataManager.sendRestRequest(null,APIS.GET_ALLCLINICS,function(response){response.success&&($scope.dropdownuser=response.dataBean)})},$scope.contact_data=function(){APIS.CAMB_COMMENT.data={},DataManager.sendRestRequest(null,APIS.CAMB_COMMENT,function(response){response.success&&($scope.CAMB_contact=response.dataBean)})},$scope.feedback_mail=function(){APIS.CAMB_FEEDBACK_MAIL.data={},DataManager.sendRestRequest(null,APIS.CAMB_FEEDBACK_MAIL,function(response){response.success&&($scope.CAMBMAIL=response.dataBean)})},$scope.remarks=null,$scope.otherRemarks=null,$scope.feedbackQuestionArr=[],$scope.feedBackDatList=[{feedbackId:null,feedbackTypeId:1,feedbackDesc:"dme",userId:$scope.uconfig.userSeqId,dmeUserId:$scope.dmeUserId,clinicId:null,cambOrCaas:null,feedbackQuestionArr:[],feedbackQuestion:null,feedbackAnswer:null,rating:null,otherRemarks:null},{feedbackId:null,feedbackTypeId:1,feedbackDesc:"clinic",userId:$scope.uconfig.userSeqId,dmeUserId:null,clinicId:$scope.clinicId,cambOrCaas:null,feedbackQuestionArr:[],feedbackQuestion:null,feedbackAnswer:null,rating:null,otherRemarks:null},{feedbackId:null,feedbackTypeId:1,feedbackDesc:"camb",userId:$scope.uconfig.userSeqId,dmeUserId:null,clinicId:null,cambOrCaas:-1,feedbackQuestionArr:[],feedbackQuestion:null,feedbackAnswer:null,rating:null,otherRemarks:null},{feedbackId:null,feedbackTypeId:2,feedbackDesc:"dme",userId:$scope.uconfig.userSeqId,dmeUserId:$scope.dmeUserId,clinicId:null,cambOrCaas:null,feedbackQuestionArr:[],feedbackQuestion:null,feedbackAnswer:null,rating:null,otherRemarks:null},{feedbackId:null,feedbackTypeId:2,feedbackDesc:"clinic",userId:$scope.uconfig.userSeqId,dmeUserId:null,clinicId:$scope.clinicId,cambOrCaas:null,feedbackQuestionArr:[],feedbackQuestion:null,feedbackAnswer:null,rating:null,otherRemarks:null},{feedbackId:null,feedbackTypeId:2,feedbackDesc:"camb",userId:$scope.uconfig.userSeqId,dmeUserId:null,clinicId:null,cambOrCaas:-1,feedbackQuestionArr:[],feedbackQuestion:null,feedbackAnswer:null,rating:null,otherRemarks:null}],$scope.savedata=function(){if(""==$scope.selected.feadBack)return void ModalService.openAlert("alert","info",fbcamb.resources.FEEDBACKCNTRL.FEEDBACKTYPE,$scope);if(null==$scope.feedBackDatList[2].feedbackQuestionArr[2]&&null==$scope.feedBackDatList[2].feedbackQuestionArr[1]&&null==$scope.feedBackDatList[2].feedbackQuestionArr[0]&&null==$scope.feedBackDatList[1].feedbackQuestionArr[2]&&null==$scope.feedBackDatList[1].feedbackQuestionArr[1]&&null==$scope.feedBackDatList[1].feedbackQuestionArr[0]&&null==$scope.feedBackDatList[0].feedbackQuestionArr[2]&&null==$scope.feedBackDatList[0].feedbackQuestionArr[1]&&null==$scope.feedBackDatList[0].feedbackQuestionArr[0]&&null==$scope.feedBackDatList[0].feedbackAnswer&&null==$scope.feedBackDatList[1].feedbackAnswer&&null==$scope.feedBackDatList[2].feedbackAnswer&&null==$scope.feedBackDatList[3].feedbackAnswer&&null==$scope.feedBackDatList[3].otherRemarks&&null==$scope.feedBackDatList[0].dmeUserId&&null==$scope.feedBackDatList[1].clinicId&&null==$scope.feedBackDatList[3].dmeUserId&&null==$scope.feedBackDatList[3].rating&&null==$scope.feedBackDatList[4].clinicId&&null==$scope.feedBackDatList[4].rating&&null==$scope.feedBackDatList[5].rating&&null==$scope.feedBackDatList[0].otherRemarks)return void ModalService.openAlert("alert","info",fbcamb.resources.FEEDBACKCNTRL.OPTION,$scope);var questionsStr=null,index=0;return angular.forEach($scope.feedBackDatList,function(value,key){questionsStr=null,angular.forEach(value.feedbackQuestionArr,function(qstValue,qstKey){qstValue.checked&&(questionsStr=null!=questionsStr?questionsStr+","+qstValue.checked:qstValue.checked)}),value.feedbackQuestion=questionsStr,index>2?$scope.otherRemarks&&(value.otherRemarks=$scope.otherRemarks):$scope.remarks&&(value.otherRemarks=$scope.remarks),index++}),void 0==$scope.feedBackDatList[3].feedbackQuestion&&$scope.feedBackDatList[3].rating>3?void ModalService.openAlert("alert","error",fbcamb.resources.FEEDBACKCNTRL.RATINGS,$scope,"success",function(){}):void 0==$scope.feedBackDatList[4].feedbackQuestion&&$scope.feedBackDatList[4].rating>3?void ModalService.openAlert("alert","error",fbcamb.resources.FEEDBACKCNTRL.RATINGS,$scope,"success",function(){}):void 0==$scope.feedBackDatList[5].feedbackQuestion&&$scope.feedBackDatList[5].rating>3?void ModalService.openAlert("alert","error",fbcamb.resources.FEEDBACKCNTRL.RATINGS,$scope,"success",function(){}):(angular.forEach($scope.feedBackDatList,function(value,key){delete value.feedbackQuestionArr}),APIS.SAVE_FEEDBACK.data=$scope.feedBackDatList,void DataManager.sendRestRequest(null,APIS.SAVE_FEEDBACK,function(response){response.success&&($state.go("feedback_thanks"),sessionStorage.setItem("isFeedBackSubmitted",!0)),$scope.feedBackDatList=""},$scope.uconfig.token))},$scope.isDMEPoorOrVeryPoor=!1,$scope.isClincPoorOrVeryPoor=!1,$scope.isCAMBPoorOrVeryPoor=!1,$scope.changeClass=function(val){1==val&&($scope.class1="iconcolor",$scope.class2="camb-icon",$scope.class3="camb-icon",$scope.class4="camb-icon",$scope.class5="camb-icon",$scope.isDMEPoorOrVeryPoor=!1),2==val&&($scope.class2="iconcolor",$scope.class1="camb-icon",$scope.class3="camb-icon",$scope.class4="camb-icon",$scope.class5="camb-icon",$scope.isDMEPoorOrVeryPoor=!1),3==val&&($scope.class3="iconcolor",$scope.class1="camb-icon",$scope.class2="camb-icon",$scope.class4="camb-icon",$scope.class5="camb-icon",$scope.isDMEPoorOrVeryPoor=!1),4==val&&($scope.class4="iconcolor",$scope.class1="camb-icon",$scope.class2="camb-icon",$scope.class3="camb-icon",$scope.class5="camb-icon",$scope.isDMEPoorOrVeryPoor=!0),5==val&&($scope.class5="iconcolor",$scope.class1="camb-icon",$scope.class2="camb-icon",$scope.class3="camb-icon",$scope.class4="camb-icon",$scope.isDMEPoorOrVeryPoor=!0),6==val&&($scope.class6="iconcolor",$scope.class7="camb-icon",$scope.class8="camb-icon",$scope.class9="camb-icon",$scope.class10="camb-icon",$scope.isClincPoorOrVeryPoor=!1),7==val&&($scope.class7="iconcolor",$scope.class6="camb-icon",$scope.class8="camb-icon",$scope.class9="camb-icon",$scope.class10="camb-icon",$scope.isClincPoorOrVeryPoor=!1),8==val&&($scope.class8="iconcolor",$scope.class6="camb-icon",$scope.class7="camb-icon",$scope.class9="camb-icon",$scope.class10="camb-icon",$scope.isClincPoorOrVeryPoor=!1),9==val&&($scope.class9="iconcolor",$scope.class6="camb-icon",$scope.class7="camb-icon",$scope.class8="camb-icon",$scope.class10="camb-icon",$scope.isClincPoorOrVeryPoor=!0),10==val&&($scope.class10="iconcolor",$scope.class6="camb-icon",$scope.class7="camb-icon",$scope.class8="camb-icon",$scope.class9="camb-icon",$scope.isClincPoorOrVeryPoor=!0),11==val&&($scope.class11="iconcolor",$scope.class12="camb-icon",$scope.class13="camb-icon",$scope.class14="camb-icon",$scope.class15="camb-icon",$scope.isCAMBPoorOrVeryPoor=!1),12==val&&($scope.class12="iconcolor",$scope.class11="camb-icon",$scope.class13="camb-icon",$scope.class14="camb-icon",$scope.class15="camb-icon",$scope.isCAMBPoorOrVeryPoor=!1),13==val&&($scope.class13="iconcolor",$scope.class11="camb-icon",$scope.class12="camb-icon",$scope.class14="camb-icon",$scope.class15="camb-icon",$scope.isCAMBPoorOrVeryPoor=!1),14==val&&($scope.class14="iconcolor",$scope.class11="camb-icon",$scope.class12="camb-icon",$scope.class13="camb-icon",$scope.class15="camb-icon",$scope.isCAMBPoorOrVeryPoor=!0),15==val&&($scope.class15="iconcolor",$scope.class11="camb-icon",$scope.class12="camb-icon",$scope.class13="camb-icon",$scope.class14="camb-icon",$scope.isCAMBPoorOrVeryPoor=!0)},$scope.cities=[{city:"Singapore",desc:"Civil Aviation Authority Of Singapore",lat:1.3617485,"long":103.990322}],$scope.googleMap=function(){var mapOptions={zoom:12,center:new google.maps.LatLng(1.361748,103.990322),mapTypeId:google.maps.MapTypeId.TERRAIN};console.log("mapOptions",mapOptions),$scope.map=new google.maps.Map(document.getElementById("map1"),mapOptions);var infoWindow=new google.maps.InfoWindow;$scope.marker=new google.maps.Marker({map:$scope.map,position:new google.maps.LatLng(1.3617485,103.990322),title:"CAAS"}),$scope.marker.content='<div class="infoWindowContent">Civil Aviation Authority Of Singapore</div>',google.maps.event.addListener($scope.marker,"click",function(){infoWindow.setContent("<p>"+$scope.marker.title+"</p>"+$scope.marker.content),infoWindow.open($scope.map,$scope.marker)}),$scope.openInfoWindow=function(e,selectedMarker){e.preventDefault(),google.maps.event.trigger(selectedMarker,"click")}}(),void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("FeedbackToCommentsCtrl",["$scope","$state","APIS","$location","$window","DataManager",function($scope,$state,APIS,$location,$window,DataManager){$scope.init=function(){$scope.message="Dear Applicant, Feedback page is in Progress.",$scope.wish="Thanks for visiting"},$scope.dataBind=function(){},$scope.init()}]),angular.module("app").controller("HeaderCtrl",["$scope","$rootScope","$state","APIS","$location","$window","$timeout","DataManager","PermissionManager","ModalService",function($scope,$rootScope,$state,APIS,$location,$window,$timeout,DataManager,PermissionManager,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.showRoles=!1,$scope.notification1Count=$rootScope.notification1Count,$scope.notification2Count=$rootScope.notification2Count;var rr=PermissionManager.getMultiRoleResponse();rr&&rr.dataBean&&rr.dataBean.userFacilities&&rr.dataBean.userFacilities[0]&&($scope.roles=rr.dataBean.userFacilities[0].roles,$scope.selectedRole=PermissionManager.getMultiRoleResponse().selectedRole,$scope.roles.length>1&&($scope.showRoles=!0)),$scope.roleChanged=function(){var selectedRoleName="";for(var i in $scope.roles)if($scope.roles[i].roleId==$scope.selectedRole){selectedRoleName=$scope.roles[i].roleDisplayName;break}PermissionManager.roleChanged($scope.selectedRole,selectedRoleName)},null!=$scope.uconfig&&($scope.rolename=$scope.uconfig.userFacilities[0].roles[0].roleName),null!=$scope.userInfo&&null!=$scope.userInfo.photo&&$timeout(function(){$("#headerProfileDiv").attr("src","data:image/jpeg;base64,"+$scope.userInfo.photo)},10),$scope.menuClass=function(path){return $location.path().substr(0,path.length)===path?"top-nav-active":""},$rootScope.$on("proficePicChanged",function(event,data){$scope.userInfo.photo=data,$("#headerProfileDiv").attr("src","data:image/jpeg;base64,"+$scope.userInfo.photo)}),$scope.checkDMF=function(){APIS.CHECK_DMF_ISEXIST.data=$scope.userInfo.personId,DataManager.sendRestRequest(null,APIS.CHECK_DMF_ISEXIST,function(response){response.success?$location.url("/amahed"):ModalService.openAlert("alert","warning",response.errorMessage,$scope)},$scope.uconfig.token)},$scope.logout=function(){return 6!=$scope.roleid||sessionStorage.getItem("isFeedBackSubmitted")?(sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage},$scope.uconfig.token)),$window.sessionStorage.clear(),void $state.go("app")):void ModalService.openAlert("confirm","Confirmation","Do you wish to submit any feedback?",$scope,"isFeedBackSubmitted")},$scope.$on("isFeedBackSubmittedOk",function(){$state.go("feedback_to_CAMB")}),$scope.$on("isFeedBackSubmittedCancel",function(){sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage},$scope.uconfig.token)),$window.sessionStorage.clear(),$state.go("app")})}]),angular.module("app.applicant").controller("HedCtrl",["$scope","$state","APIS","DataManager","$timeout","$window","$rootScope","ModalService","$log","$uibModal","$location","convertpdf","$stateParams","$filter","$sce","ResourceManager",function($scope,$state,APIS,DataManager,$timeout,$window,$rootScope,ModalService,$log,$uibModal,$location,convertpdf,$stateParams,$filter,$sce,amhd){function getRowDataObject(){return Object.create($scope.baseRowObject)}function getLookupDesease(disease){for(var i=0;i<$scope.combos.problem.length;i++)if(disease.code==$scope.combos.problem[i].code)return $scope.combos.problem[i].code}function getLookupRelation(disease){for(var i=0;i<$scope.combos.relation.length;i++)if(disease.code==$scope.combos.relation[i].code)return $scope.combos.relation[i].code}function validateMedicalHistory(data){for(var i=0;i<$scope.amaSaveData.familyMedicalHistory.medicalHistory.length;i++)if(familyModifyIdx!==i){var record=$scope.amaSaveData.familyMedicalHistory.medicalHistory[i];if(record.disease.code==data.disease.code&&record.relation.code==data.relation.code)return!1}return!0}$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.userId=$scope.visitDetails.applicantuserId,$scope.personId=$scope.visitDetails.applicantId,$scope.applicationId=$scope.visitDetails.applicantDetails.applicationId,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.HedDatafrompreview=JSON.parse($window.sessionStorage.getItem("hed")),$scope.hedpageback=$window.sessionStorage.getItem("hedpage"),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.pageOrder=[],$scope.PreviewPageList=[],$scope.isFamilyMedicalHistorySubmitted=!1,$scope.isIllnessFrmSubmitted=!1,$scope.isLifeStyleFrmSubmitted=!1,$scope.hideConfirmBtns=!1,$scope.amhd=amhd,$scope.auto_grow=function(data,$event){$scope.maxlength=data,$scope.maxlength.length>=999?($($event.target).css("border","1px solid #B13D31"),ModalService.openAlert("alert","HED","Remarks can not be more than 1000 characters",$scope,"alert")):$($event.target).css("border","1px solid #229173")},$scope.init=function(){$scope.currentDate=new Date,$scope.decleration={applicant:!1,dme:!1},$scope.updatedHedData=null,$scope.sleepinessTotal=0,$scope.ispreviousLicenceDetails=!1,$scope.havingPreviousAma="",$scope.selectedDrug=null,$scope.takingMedications="N",$scope.countryList=null,$scope.everSuspendedList=null,$scope.getOutComeList=null,$scope.getAllClass=null,$scope.previousAma=null,$scope.slectedVison=null,$scope.isVisionNear=!1,$scope.isVisionDistant=!1,$scope.isSmoker=!1,$scope.previewButton=!1,$scope.countryId=null,$scope.preview=!0,$scope.dailyActivity=null,$scope.hedData=[],$scope.activitiesArray=[],$scope.previousLicenceDetails=[],$scope.inProgressClassList=[],$scope.licenceDetails=[],$scope.currentLicDetails=[],$scope.macDTOList=[],$scope.sleepinessData=[],$scope.classappTypeList=[],$scope.licenseList=[],$scope.aircraftList=[],$scope.operationList=[],$scope.rankRatingList=[],$scope.famillyHistoryEnable=!1,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.expirtydateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.formats=["yyyy-MM-dd","yyyy/MM/dd","dd-MM-yyyy","shortDate"],$scope.format=$scope.formats[2],$scope.combos={applicationType:null,vission:null,drugs:null,problem:null,relation:null};for(var i=1;i<9;i++)$scope.sleepinessData.push({status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,sleepinessSurveyId:null,dailyActivitiesId:i,activityScore:null});$scope.page={illnesPageList:{},lifeStylePractices:{}},$scope.famillyHistory={addNew:{familyMedicalHistoryId:null,disease:null,relation:null,age:null,remark:null}},$scope.amaSaveData={pageNames:null,userId:$scope.userId,personId:$scope.personId,application_id:$scope.applicationId,currentLicenceDetails:[],pagesList:[],visionCorrection:{visionId:null,visionRequired:"",visionTypeID:"",eyes:[{hedEyeId:null,eyeType:"Left",metrics:{sphere:null,cylinder:null,axis:null,intermediate:null,near:null}},{hedEyeId:null,eyeType:"Right",metrics:{sphere:null,cylinder:null,axis:null,intermediate:null,near:null}}]},sleepinessSurvey:[],medication:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,medicationType:{medicationId:null,type:"Herbal",answer:"Y",remark:""},takingMadications:{type:null,answer:null,drugsDetails:[{drugDosageId:null,dosage:{},drugName:"",frequency:{}}]}},familyMedicalHistory:{medicalHistory:[]},previousLicenceDetails:null,dmeRemarks:{visitId:$scope.visitDetails.visitId,hedEyeRemarks:null,sleepinessRemarks:null,herbMedRemarks:null,otcRemarks:null,fhmRemarks:null,previousMARemarks:null}},$scope.dataBind()},$scope.closeTab=function(){window.close()},$scope.dataBind=function(){$scope.getApplicant(),
$scope.getApplicationTypeCombo(),$scope.getInProgressClassesForApplicant(),$scope.getHedRecordsReadOnlyFlag(),$scope.getDrugSearchCombo(),$scope.getProblemCombo(),$scope.getRelationCombo(),$scope.loadCountryCombo(),$scope.loadOutComeCombo(),$scope.getDrugDosageCombo(),$scope.getDrugFrequencyCombo(),$scope.HedDatafrompreview?($scope.existpreviewdetail=!0,$scope.preloadPreviewPageData(),$scope.getAllClassList()):$scope.HedDatafrompreview||($scope.getDailyActivityCombo(),$scope.getAmaForUpdate(),$scope.getAllClassList()),"2"==$stateParams.preview&&($scope.hideConfirmBtn=!0),"clickhed"==$scope.hedpageback&&($scope.hideConfirmBtns=!0),("1"==$stateParams.preview||$scope.existpreviewdetail)&&($scope.hideConfirmBtn=!1,$scope.ispreviousLicenceDetails=!0),$scope.$watch("amaSaveData.visionCorrection.visionRequired",function(newNames,oldNames){"N"==newNames&&($scope.amaSaveData.visionCorrection.visionTypeID=null,$scope.slectedVison=null,document.getElementById("selected").value=null,angular.forEach($scope.amaSaveData.visionCorrection.eyes,function(value,key){$scope.amaSaveData.visionCorrection.eyes[key].metrics.sphere=null,$scope.amaSaveData.visionCorrection.eyes[key].metrics.cylinder=null,$scope.amaSaveData.visionCorrection.eyes[key].metrics.axis=null,$scope.amaSaveData.visionCorrection.eyes[key].metrics.intermediate=null,$scope.amaSaveData.visionCorrection.eyes[key].metrics.near=null}))}),$scope.popover={isOpen:!1,open:function(){$scope.popover.isOpen=!0},close:function(){$scope.popover.isOpen=!1}},APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I006",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.AMAInstructionList=response.dataBean;var ins=$scope.AMAInstructionList.instruction;$scope.AMAInstruction=$sce.trustAsHtml(ins)}}),APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I007",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.AMADeclInstructionListold=response.dataBean;var AmaDecins=$scope.AMADeclInstructionListold.instruction;$scope.AMADeclInstructionold=$sce.trustAsHtml(AmaDecins)}}),APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I012",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.AMADeclInstructionListnew=response.dataBean;var AmaDecinsdme=$scope.AMADeclInstructionListnew.instruction;$scope.AMADeclInstructionnew=$sce.trustAsHtml(AmaDecinsdme)}})},$scope.examination_targeted=function(){$scope.targetedparam={applicationid:$scope.visitDetails.applicantDetails.applicationId},APIS.LME_PHYSICALEXAMINATION_TARGETED.data=$scope.targetedparam,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_TARGETED,function(response){response.success?($scope.targeted_bean=response.dataBean.listLME_SendToUI_DTO,$scope.targeted_beanData=sessionStorage.setItem("targeted_beanData",JSON.stringify($scope.targeted_bean))):console.log(response.errorMessage)},$scope.userConfig.token)},$scope.getInProgressClassesForApplicant=function(){APIS.GET_CLASS_INPROGRESS.URL=String.prototype.format.apply(APIS.GET_CLASS_INPROGRESS.tempURL,[$scope.personId]),DataManager.sendRestRequest(null,APIS.GET_CLASS_INPROGRESS,function(response){response.success?angular.forEach(response.dataBean,function(kval,kkey){$scope.inProgressClassList.push(kval.code)}):$log.error("GET_CLASS_INPROGRESS "+response.errorMessage)},$scope.userConfig.token)},$scope.getHEDDataForApplicant=function(){APIS.GET_HEDDATA_FORAPPLICANT.URL=String.prototype.format.apply(APIS.GET_HEDDATA_FORAPPLICANT.tempURL,[$scope.personId]),DataManager.sendRestRequest(null,APIS.GET_HEDDATA_FORAPPLICANT,function(response){response.success?($scope.amaSaveData.visionCorrection=response.dataBean.visionCorrection,$scope.amaSaveData.medication=response.dataBean.medication,$scope.amaSaveData.familyMedicalHistory.medicalHistory=response.dataBean.familyMedicalHistory.medicalHistory):$log.error("GET_CLASS_INPROGRESS:"+response.errorMessage)},$scope.userConfig.token)},$scope.getHedRecordsReadOnlyFlag=function(){$scope.applicationNum&&(APIS.GET_UPDATE_HED_RECORDS.URL=String.prototype.format.apply(APIS.GET_UPDATE_HED_RECORDS.tempURL,[$scope.applicationNum]),DataManager.sendRestRequest(null,APIS.GET_UPDATE_HED_RECORDS,function(response){response.success?$scope.isAllFieldsReadonly=response.dataBean:$log.error(response.errorMessage)},$scope.userConfig.token))},$scope.getAmaForUpdate=function(){APIS.GET_AMA_UPDATE.data={personId:$scope.visitDetails.applicantId,application_id:$scope.visitDetails.applicantDetails.applicationId,dmeRemarks:{visitId:$scope.visitDetails.visitId}},DataManager.sendRestRequest(null,APIS.GET_AMA_UPDATE,function(response){response.success?($scope.updatedHedData=response.dataBean,$log.info("update ama"),$log.log(response.dataBean),$scope.currentLicDetails=$scope.updatedHedData.currentLicenceDetails,$scope.currLicDetails=$scope.updatedHedData.currentLicenceDetails,$scope.hedData=$scope.updatedHedData.pagesList,$scope.PreviewPageList=$scope.updatedHedData.pagesList,angular.forEach($scope.PreviewPageList,function(Previewvalue,Previewkey){"Since Last ME and LS Practices"==Previewvalue.pageName&&angular.forEach(Previewvalue.sectionList[1].elements,function(sectionListvalue,sectionListkey){$scope.isSmokerIn4Fn(sectionListvalue,sectionListkey,Previewvalue.sectionList[1])})}),$scope.amaSaveData.dmeRemarks=$scope.updatedHedData.dmeRemarks,$scope.amaSaveData.visionCorrection=$scope.updatedHedData.visionCorrection,$scope.getVisionCorrectionCombo(),$scope.amaSaveData.medication=$scope.updatedHedData.medication,$scope.amaSaveData.medication&&$scope.tranfermationMedication(),$scope.amaSaveData.application_id=$scope.updatedHedData.application_id,$scope.amaSaveData.familyMedicalHistory.medicalHistory=$scope.updatedHedData.familyMedicalHistory.medicalHistory,$scope.tranfermationUpdate($scope.updatedHedData.sleepinessSurvey),$scope.updatedHedData.previousLicenceDetails.length?($scope.ispreviousLicenceDetails=!0,$scope.havingPreviousAma="Yes",$scope.previousLicenceDetails=$scope.updatedHedData.previousLicenceDetails,angular.forEach($scope.previousLicenceDetails,function(pldvalue,pldkey){null!=pldvalue.expiryDate&&(pldvalue.expiryDate=new Date(pldvalue.expiryDate)),pldvalue.macId=pldvalue.classId,null!=pldvalue.classId?pldvalue.classId=!0:pldvalue.classId=!1})):($scope.havingPreviousAma="No",$scope.ispreviousLicenceDetails=!0)):$log.error("Get Updated AMA: "+response.errorMessage)},$scope.userConfig.token)},$scope.getVisionCorrectionCombo=function(){DataManager.sendRestRequest(null,APIS.GET_VISSION_COMBO,function(response){response.success?($scope.combos.vission=response.dataBean,0==$scope.amaSaveData.visionCorrection.visionTypeID&&($scope.slectedVison=null,$scope.isVisionNear=!1,$scope.isVisionDistant=!1),0!=$scope.amaSaveData.visionCorrection.visionTypeID&&($scope.slectedVison=$filter("filter")($scope.combos.vission.visionList,{lookUpItemId:$scope.amaSaveData.visionCorrection.visionTypeID})[0],651==$scope.slectedVison.lookUpItemId?($scope.isVisionNear=!1,$scope.isVisionDistant=!0):650==$scope.slectedVison.lookUpItemId?($scope.isVisionNear=!0,$scope.isVisionDistant=!1):($scope.isVisionNear=!1,$scope.isVisionDistant=!1))):$log.error(response.errorMessage)},$scope.userConfig.token)},$scope.getDailyActivityCombo=function(){DataManager.sendRestRequest(null,APIS.GET_DAILIY_ACTIVITY_COMBO,function(response){response.success?($scope.dailyActivity=response.dataBean,$scope.tranfermation()):$log.error(response.errorMessage)},$scope.userConfig.token)},$scope.getDrugSearchCombo=function(){DataManager.sendRestRequest(null,APIS.GET_DRUGS_COMBO,function(response){response.success?$scope.combos.drugs=response.dataBean:$log.error("Drug Search: "+response.errorMessage)},$scope.userConfig.token)},$scope.getProblemCombo=function(){DataManager.sendRestRequest(null,APIS.GET_PROBLEM_COMBO,function(response){response.success?$scope.combos.problem=response.dataBean:$log.error(response.errorMessage)},$scope.userConfig.token)},$scope.getRelationCombo=function(){DataManager.sendRestRequest(null,APIS.GET_RELATION_COMBO,function(response){response.success?$scope.combos.relation=response.dataBean:$log.error(response.errorMessage)},$scope.userConfig.token)},$scope.baseRowObject={aircraftList:$scope.aircraftList,operationList:$scope.operationList,rankRatingList:$scope.rankRatingList,macDTO:$scope.macDTO,applicationTypeList:$scope.applicationTypeList,licenseType:1,aircraftType:1,operationType:1,classId:null,status:!1,applicationType:1,rankOrRating:1},$scope.getApplicationTypeCombo=function(rowObj){APIS.GET_CLASS_APPLICATION_TYPE.data=$scope.visitDetails.applicantId,DataManager.sendRestRequest(null,APIS.GET_CLASS_APPLICATION_TYPE,function(response){response.success?angular.forEach(response.dataBean,function(value,key){$scope.macDTOList.push(value.macDTO),$scope.inProgressClassList.indexOf(value.macDTO.code)>=0?value.macDTO.inProgressFlag=!0:value.macDTO.inProgressFlag=!1,$scope.licenceDetails.push(getRowDataObject()),$scope.licenceDetails[key].macDTO=value.macDTO,$scope.licenceDetails[key].applicationTypeList=value.applicationTypeList,angular.forEach(value.applicationTypeList,function(appTypeValue,appTypekey){0==appTypekey&&($scope.licenceDetails[key].applicationType=appTypeValue.lmeTypeId)}),$scope.currentLicDetails.length>0&&angular.forEach($scope.currentLicDetails,function(currentLicvalue,currkey){currentLicvalue.classId===value.macDTO.macId&&($scope.licenceDetails[key].licenseType=currentLicvalue.licenseType,$scope.licenceDetails[key].aircraftType=currentLicvalue.aircraftType,$scope.licenceDetails[key].operationType=currentLicvalue.operationType,$scope.licenceDetails[key].classId=currentLicvalue.classId,$scope.licenceDetails[key].status=!0,$scope.licenceDetails[key].macDTO.inProgressFlag=!1,$scope.licenceDetails[key].applicationType=currentLicvalue.applicationType)})}):$log.error("getApplicationTypeCombo "+response.errorMessage)},$scope.userConfig.token)},$scope.loadProfessionalCombos=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){void 0!=rowObj?rowObj[comboName]=response.dataBean:($scope[comboName]=response.dataBean,$scope.baseRowObject[comboName]=response.dataBean)})},$scope.loadOtherCombos=function(argId,rowObj){$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"aircraftList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"rank/rating",lookUpItemCode:null},"rankRatingList",rowObj)},$scope.loadProfessionalCombos({lookUpItemId:1,lookUpItemValue:"",lookUpItemCode:null},"licenseList"),$scope.loadOtherCombos(1),$scope.resetFamilyHistory=function(){$scope.famillyHistory.addNew.familyMedicalHistoryId=null,$scope.famillyHistory.addNew.disease=null,$scope.famillyHistory.addNew.relation=null,$scope.famillyHistory.addNew.age=null,$scope.famillyHistory.addNew.remark=null},$scope.isAdd=!0,$scope.addFamily=function(data){if(null!=$scope.famillyHistory.addNew.disease&&null!=$scope.famillyHistory.addNew.relation){var tempDisease=$filter("filter")($scope.combos.problem,{code:$scope.famillyHistory.addNew.disease}),tempRelation=$filter("filter")($scope.combos.relation,{code:$scope.famillyHistory.addNew.relation});$scope.amaSaveData.familyMedicalHistory.medicalHistory.push({familyMedicalHistoryId:null,disease:tempDisease[0],relation:tempRelation[0],age:$scope.famillyHistory.addNew.age,remark:$scope.famillyHistory.addNew.remark}),$scope.resetFamilyHistory()}else alert("Please select a valid disease and relation")},$scope.removeFamily=function(index){$scope.amaSaveData.familyMedicalHistory.medicalHistory.splice(index,1)},$scope.addDrugs=function(data){var temp={drugDosageId:null,dosage:"",drugName:data.drugName,frequency:"",isDurgEditable:!0};$scope.amaSaveData.medication.takingMadications.drugsDetails.push(temp),$scope.submit=!0,$timeout(function(){if($scope.form.familyMedicalHistory.$invalid)return $scope.isFamilyMedicalHistorySubmitted=!0,$scope.isLifeStyleFrmSubmitted=!0,$scope.isIllnessFrmSubmitted=!0,!1},100)},$scope.addDrugs1=function(){var temp1={drugDosageId:null,dosage:"",drugName:"",frequency:"",drugId:"",isDurgEditable:!0};$scope.amaSaveData.medication.takingMadications.drugsDetails.push(temp1),$scope.submit=!0,$timeout(function(){if($scope.form.familyMedicalHistory.$invalid)return $scope.isFamilyMedicalHistorySubmitted=!0,$scope.isLifeStyleFrmSubmitted=!0,$scope.isIllnessFrmSubmitted=!0,!1},100)},$scope.removeDrugs=function(index){$scope.amaSaveData.medication.takingMadications.drugsDetails.splice(index,1)},$scope.tranfermation=function(){angular.forEach($scope.dailyActivity,function(value,key){angular.forEach($scope.sleepinessData,function(val,index){$scope.dailyActivity[key].dailyActivitiesId==$scope.sleepinessData[index].dailyActivitiesId&&($scope.sleepinessData[index].activities=$scope.dailyActivity[key].activities,$scope.sleepinessData[index].activityScore=$scope.dailyActivity[key].score)})})},$scope.tranfermationUpdate=function(updatedArray){angular.forEach(updatedArray,function(value,key){angular.forEach($scope.sleepinessData,function(val,index){updatedArray[key].dailyActivitiesId==$scope.sleepinessData[index].dailyActivitiesId&&($scope.sleepinessData[index].activityScore=updatedArray[key].activityScore,$scope.sleepinessData[index].sleepinessSurveyId=updatedArray[key].sleepinessSurveyId)})}),$scope.sleepinessCount($scope.sleepinessData)},$scope.removeActivity=function(){angular.forEach($scope.HedDatafrompreview.amaSaveData.sleepinessSurvey,function(val,index){delete $scope.HedDatafrompreview.amaSaveData.sleepinessSurvey[index].activities})},$scope.loadCountryCombo=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.URL+"country,Y_N",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){response.success?($scope.countryList=response.dataBean.country,$scope.everSuspendedList=response.dataBean.Y_N,angular.forEach($scope.everSuspendedList,function(val,key){"Y"==val.lookUpItemCode&&(val.lookUpItemValue="Yes"),"N"==val.lookUpItemCode&&(val.lookUpItemValue="No")})):$log.error("loadCountryCombo: "+response.errorMessage)})},$scope.getAllClassList=function(){DataManager.sendRestRequest(null,APIS.GET_CLASSESMACCONFIG,function(response){if(response.success){if($scope.getAllClass=response.dataBean,!$scope.ispreviousLicenceDetails)for(var i=0;i<$scope.getAllClass.length;i++)$scope.previousLicenceDetails.push({status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,classId:null,country:null,expiryDate:null,outCome:null,everSuspended:null,previousmaId:null,applicationId:null,macId:null,outcome_Id:null})}else $log.error("loadOutComeCombo: "+response.errorMessage)},$scope.userConfig.token)},$scope.loadOutComeCombo=function(){DataManager.sendRestRequest(null,APIS.GET_AMA_OUTCOME_COMBO,function(response){response.success?$scope.getOutComeList=response.dataBean:$log.error("loadOutComeCombo: "+response.errorMessage)},$scope.userConfig.token)},$scope.loadPreviousAma=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PREVIOUS_AMA.URL,url=tempUrl+"/"+$scope.userId,APIS.GET_PREVIOUS_AMA.URL=url,DataManager.sendRestRequest(null,APIS.GET_PREVIOUS_AMA,function(response){response.success?$scope.previousLicenceDetails=response.dataBean:$log.error("loadPreviousAma: "+response.errorMessage)},$scope.userConfig.token),APIS.GET_PREVIOUS_AMA.URL=tempUrl},$scope.changeVision=function(param){$scope.amaSaveData.visionCorrection.visionTypeID=param.lookUpItemId,"DISTANT"==param.lookUpItemCode?($scope.isVisionNear=!1,$scope.isVisionDistant=!0):"NEAR"==param.lookUpItemCode?($scope.isVisionNear=!0,$scope.isVisionDistant=!1):($scope.isVisionNear=!1,$scope.isVisionDistant=!1,$scope.slectedVison=null)},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.userId,APIS.GET_PROFILE.URL=url,APIS.GET_PROFILE.data={},DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean)},$scope.userConfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.confirm=function(param){var app_name=$("#miniName").html(),NRIC_FIC=$("#nric").html();$("#applicant_name").html(app_name),$("#applicant_nric").html(NRIC_FIC);var d=new Date;document.getElementById("print_date").innerHTML=d;var innerContents=document.getElementById("hedprint").innerHTML,popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close(),angular.forEach($scope.HedDatafrompreview.pageList,function(value,key){"Illness Condition"==value.pageName&&$scope.HedDatafrompreview.amaSaveData.pagesList.push($scope.HedDatafrompreview.pageList[key]),"Since Last ME and LS Practices"==value.pageName&&$scope.HedDatafrompreview.amaSaveData.pagesList.push($scope.HedDatafrompreview.pageList[key])}),$scope.removeActivity(),$scope.savex=$scope.HedDatafrompreview.amaSaveData,angular.forEach($scope.HedDatafrompreview.amaSaveData.medication.takingMadications.drugsDetails,function(value,index){value.dosage=value.dosage.code,value.frequency=value.frequency.code,delete $scope.HedDatafrompreview.amaSaveData.medication.takingMadications.drugsDetails[index].isDurgEditable}),angular.forEach($scope.HedDatafrompreview.amaSaveData.familyMedicalHistory.medicalHistory,function(value,index){delete $scope.HedDatafrompreview.amaSaveData.familyMedicalHistory.medicalHistory[index].familyHistoryDisease,delete $scope.HedDatafrompreview.amaSaveData.familyMedicalHistory.medicalHistory[index].familyHistoryRelation}),angular.forEach($scope.HedDatafrompreview.amaSaveData.previousLicenceDetails,function(pldvalue,pldkey){null!=pldvalue.expiryDate&&($scope.HedDatafrompreview.amaSaveData.previousLicenceDetails[pldkey].expiryDate=$filter("date")(new Date(pldvalue.expiryDate),$scope.formats[0])),1==pldvalue.classId&&($scope.HedDatafrompreview.amaSaveData.previousLicenceDetails[pldkey].classId=$.grep($scope.getAllClass,function(e){return e.macId==pldvalue.macId})[0].macId),0==pldvalue.classId&&($scope.HedDatafrompreview.amaSaveData.previousLicenceDetails[pldkey].classId=null)}),APIS.SAVE_AMA.data=$scope.HedDatafrompreview.amaSaveData,DataManager.sendRestRequest(null,APIS.SAVE_AMA,function(response){response.success?(ModalService.openAlert("alert","HED",amhd.resources.HED.HEDUPDATE),APIS.COMMON_SUBMISSION_UPLOAD_FILE.data={visitId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId,pdfFile:window.btoa(unescape(encodeURIComponent("<html><head> <link href='lib/bootstrap/css/bootstrap.min.css' media='all' rel='stylesheet'/><link href='css/styles.css' rel='stylesheet' media='all'/><link href='css/global.css' rel='stylesheet' media='all' /><link href='lib/bootstrap/css/bootstrap.min.css' media='all' rel='stylesheet'/><link href='css/print.css' rel='stylesheet' media='print' /></head><body onload='window.print()'>"+innerContents+"</html>"))),referenceType:"HED",clinicId:$scope.visitDetails.applicantDetails.clinicId},DataManager.sendRestRequest(null,APIS.COMMON_SUBMISSION_UPLOAD_FILE,function(){},$scope.userConfig.token),$scope.examination_targeted(),$state.go("measurement"),sessionStorage.removeItem("hed")):$log.error("HED Update: "+response.errorMessage)},$scope.userConfig.token)},$scope.genPDF=function(param){convertpdf.htmltoPdf(param)},$scope.hedback=function(){$state.go("hed")},$scope.medicalassessmentCheck=function(havingValue){"Yes"==havingValue&&($scope.HedDatafrompreview?$scope.HedDatafrompreview&&($scope.previousLicenceDetails=$scope.HedDatafrompreview.amaSaveData.previousLicenceDetails):(APIS.GET_AMA_UPDATE.data={personId:$scope.visitDetails.applicantId,application_id:$scope.visitDetails.applicantDetails.applicationId,dmeRemarks:{visitId:$scope.visitDetails.visitId}},DataManager.sendRestRequest(null,APIS.GET_AMA_UPDATE,function(response){if(response.success){if($scope.updatedHedData=response.dataBean,$scope.updatedHedData.previousLicenceDetails.length?($scope.ispreviousLicenceDetails=!0,$scope.havingPreviousAma="Yes",$scope.previousLicenceDetails=$scope.updatedHedData.previousLicenceDetails,angular.forEach($scope.previousLicenceDetails,function(pldvalue,pldkey){null!=pldvalue.expiryDate&&(pldvalue.expiryDate=new Date(pldvalue.expiryDate)),pldvalue.macId=pldvalue.classId,null!=pldvalue.classId?pldvalue.classId=!0:pldvalue.classId=!1})):($scope.previousLicenceDetails=[],$scope.ispreviousLicenceDetails=!1),!$scope.ispreviousLicenceDetails)for(var i=0;i<$scope.getAllClass.length;i++)$scope.previousLicenceDetails.push({status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,classId:null,country:null,expiryDate:null,outCome:null,everSuspended:null,previousmaId:null,applicationId:null,macId:$scope.getAllClass[i].macId,outcome_Id:null})}else $log.error("Get Updated AMA: "+response.errorMessage)},$scope.userConfig.token))),"No"==havingValue&&($scope.previousLicenceDetails=[],$scope.ispreviousLicenceDetails=!1)},$scope.classCheck=function(){angular.forEach($scope.previousLicenceDetails,function(pldvalue,pldkey){0==pldvalue.classId&&($scope.previousLicenceDetails[pldkey]={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,classId:null,country:null,expiryDate:null,outCome:null,everSuspended:null,previousmaId:null,applicationId:null,macId:$scope.previousLicenceDetails[pldkey].macId,outcome_Id:null})})},$scope.previousLicenceDetails_emptyOrNull=function(previousLicenceDetailsValue){return!(previousLicenceDetailsValue.classId===!1&&null===previousLicenceDetailsValue.country&&null===previousLicenceDetailsValue.expiryDate&&null===previousLicenceDetailsValue.outcome_Id&&null===previousLicenceDetailsValue.everSuspended)},$scope.goPreview=function(){if(sessionStorage.removeItem("hedpage"),sessionStorage.removeItem("hed"),$scope.submit=!0,$scope.form.frmIllness.$invalid||$scope.form.familyMedicalHistory.$invalid||$scope.form.frmLifeStyle.$invalid)return ModalService.openAlert("alert","HED Preview",amhd.resources.HED.HEDQUESTION,$scope,"alert"),$scope.isFamilyMedicalHistorySubmitted=!0,$scope.isLifeStyleFrmSubmitted=!0,$scope.isIllnessFrmSubmitted=!0,!1;$scope.HedDatafrompreview&&($scope.PreviewPageList=$scope.HedDatafrompreview.pageList);var data={pageList:$scope.PreviewPageList,amaSaveData:{}};angular.forEach($scope.currentLicDetails,function(value,key){null!=value.classId&&$scope.amaSaveData.currentLicenceDetails.push({status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,applicationClassesId:null,classId:value.classId,applicationType:value.applicationType,licenseType:value.licenseType,aircraftType:value.aircraftType,operationType:value.operationType})}),angular.forEach($scope.PreviewPageList,function(value,key){"Illness Condition"==value.pageName&&($scope.PreviewPageList[key]=$scope.page.illnesPageList),"Since Last ME and LS Practices"==value.pageName&&($scope.PreviewPageList[key]=$scope.page.lifeStylePractices)}),angular.forEach($scope.amaSaveData.medication.takingMadications.drugsDetails,function(value,key){$scope.amaSaveData.medication.takingMadications.drugsDetails[key].isDurgEditable=!1}),$scope.amaSaveData.currentLicenceDetails=$scope.amaSaveData.currentLicenceDetails,$scope.amaSaveData.sleepinessSurvey=$scope.sleepinessData,angular.forEach($scope.previousLicenceDetails,function(pldvalue,pldkey){null!=pldvalue.expiryDate&&($scope.previousLicenceDetails[pldkey].expiryDate=$filter("date")(new Date(pldvalue.expiryDate),$scope.formats[0])),1==pldvalue.classId?$scope.previousLicenceDetails[pldkey].classId=$scope.getAllClass[pldkey].macId:$scope.previousLicenceDetails[pldkey].classId=null}),$scope.amaSaveData.previousLicenceDetails=$scope.previousLicenceDetails,data.amaSaveData=$scope.amaSaveData,sessionStorage.setItem("hed",JSON.stringify(data)),$state.go("hedprintpreview",{preview:1})},$scope.preloadPreviewPageData=function(){$scope.currentLicDetails=$scope.HedDatafrompreview.amaSaveData.currentLicenceDetails,$scope.hedData=$scope.HedDatafrompreview.pageList,$scope.PreviewPageList=$scope.HedDatafrompreview.pageList,angular.forEach($scope.PreviewPageList,function(Previewvalue,Previewkey){"Since Last ME and LS Practices"==Previewvalue.pageName&&angular.forEach(Previewvalue.sectionList[1].elements,function(sectionListvalue,sectionListkey){$scope.isSmokerIn4Fn(sectionListvalue,sectionListkey,Previewvalue.sectionList[1])})}),$scope.sleepinessData=$scope.HedDatafrompreview.amaSaveData.sleepinessSurvey,$scope.sleepinessCount($scope.sleepinessData),$scope.amaSaveData.visionCorrection=$scope.HedDatafrompreview.amaSaveData.visionCorrection,$scope.getVisionCorrectionCombo(),$scope.amaSaveData.dmeRemarks=$scope.HedDatafrompreview.amaSaveData.dmeRemarks,$scope.amaSaveData.medication=$scope.HedDatafrompreview.amaSaveData.medication,$scope.amaSaveData.application_id=$scope.HedDatafrompreview.amaSaveData.application_id,$scope.amaSaveData.familyMedicalHistory.medicalHistory=$scope.HedDatafrompreview.amaSaveData.familyMedicalHistory.medicalHistory,$scope.previousLicenceDetails=$scope.HedDatafrompreview.amaSaveData.previousLicenceDetails,angular.forEach($scope.previousLicenceDetails,function(pldvalue,pldkey){null!=pldvalue.expiryDate&&(pldvalue.expiryDate=new Date(pldvalue.expiryDate)),null!=pldvalue.classId?pldvalue.classId=!0:pldvalue.classId=!1}),$scope.previousLicenceDetails.length?$scope.havingPreviousAma="Yes":$scope.havingPreviousAma="No"},$scope.isSmokerIn4Fn=function(question,index,section){if("00052"==question.healthEventCode&&($scope.isSmokerIn4="Yes"==question.selectedValue,"Yes"!=question.selectedValue)){var textIndex=index+1,radioIndex=index+2;section.elements[textIndex].enteredRemarks="",section.elements[radioIndex].selectedValue=""}},$scope.sleepinessCount=function(paramArray){angular.forEach(paramArray,function(value,key){$scope.sleepinessTotal=$scope.sleepinessTotal+value.activityScore})},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.popup=[{opened:!1},{opened:!1},{opened:!1}],$scope.previousclassdatepickerOpen=function(value){$scope.popup[value].opened=!0},$scope.datepickerPopup={opened:!1},$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"hedDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitDetails.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"hedDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})})}else $scope.dmfhedAction()},$scope.userConfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.dmfhedAction=function(){$uibModal.open({animation:!0,templateUrl:"hedDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.aborthedAction=function(){$uibModal.open({animation:!0,templateUrl:"hedAbort",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.getDrugDosageCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGDOSAGE"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?$scope.combos.drugDosageList=response.dataBean:$log.error("Drug Dosage: "+response.errorMessage)},$scope.userConfig.token)},$scope.getDrugFrequencyCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGFREQ"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?$scope.combos.drugFrequencyList=response.dataBean:$log.error("Drug Dosage: "+response.errorMessage)},$scope.userConfig.token)},$scope.mapFamilyDtls=function(index){familyModifyIdx=index,$scope.modifyDtlsObj=$scope.amaSaveData.familyMedicalHistory.medicalHistory[index],$scope.famillyHistory.addNew.disease=getLookupDesease($scope.modifyDtlsObj.disease),$scope.famillyHistory.addNew.relation=getLookupRelation($scope.modifyDtlsObj.relation),$scope.famillyHistory.addNew.age=$scope.modifyDtlsObj.age,$scope.famillyHistory.addNew.remark=$scope.modifyDtlsObj.remark,$scope.isAdd=!1},$scope.cancelFamilyDtls=function(){$scope.isAdd=!0,$scope.resetFamilyHistory()};var familyModifyIdx=null;$scope.modifyFamily=function(data){var isValid=validateMedicalHistory(data);if(isValid){if(null!=familyModifyIdx){var tempDisease=$filter("filter")($scope.combos.problem,{code:data.disease}),tempRelation=$filter("filter")($scope.combos.relation,{code:data.relation});$scope.amaSaveData.familyMedicalHistory.medicalHistory[familyModifyIdx].disease=tempDisease[0],$scope.amaSaveData.familyMedicalHistory.medicalHistory[familyModifyIdx].relation=tempRelation[0],$scope.amaSaveData.familyMedicalHistory.medicalHistory[familyModifyIdx].age=data.age,$scope.amaSaveData.familyMedicalHistory.medicalHistory[familyModifyIdx].remark=data.remark,$scope.resetFamilyHistory(),familyModifyIdx=null}$scope.isAdd=!0}else ModalService.openAlert("alert","AMA Declaration",amhd.resources.HED.HED_DUPILCATE,$scope,"alert")},$scope.focusInput=function(code,page){angular.element("#"+page+"_"+code+"_remarks").focus()},$scope.tranfermationMedication=function(){angular.forEach($scope.amaSaveData.medication.takingMadications.drugsDetails,function(value,index){var tempDosage=$filter("filter")($scope.combos.drugDosageList,{code:value.dosage});$scope.amaSaveData.medication.takingMadications.drugsDetails[index].dosage=tempDosage[0];var tempFrequency=$filter("filter")($scope.combos.drugFrequencyList,{code:value.frequency});$scope.amaSaveData.medication.takingMadications.drugsDetails[index].frequency=tempFrequency[0]})},$scope.enableForDrugEdit=function(index){$scope.amaSaveData.medication.takingMadications.drugsDetails[index].isDurgEditable=!$scope.amaSaveData.medication.takingMadications.drugsDetails[index].isDurgEditable},$scope.clear=function(){$scope.amaSaveData.medication.takingMadications.drugsDetails=[],$scope.amaSaveData.medication.takingMadications.answer="N"},$scope.formateDate=function(date){return new Date(date)},$scope.init()}]),angular.module("app.applicant").controller("InvoiceCtrl",["$scope","$timeout","$state","APIS","DataManager","$location","$window","$uibModalInstance","modalParam","ResourceManager","$sce",function($scope,$timeout,$state,APIS,DataManager,$location,$window,$uibModalInstance,param,amhd,$sce){function printElement(elem){var domClone=elem.cloneNode(!0),$printSection=document.getElementById("printSection");if(!$printSection){var $printSection=document.createElement("div");
$printSection.id="printSection",document.body.appendChild($printSection)}$printSection.innerHTML="",$printSection.appendChild(domClone)}function generateBarcode(){var value=$scope.applicationId+" - "+$scope.nric,btype="code128";$("#barcodeTarget").html("").barcode(value,btype),$timeout.cancel($scope.barCodeTimeout)}$scope.amhd=amhd,$scope.init=function(){return $scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.userConfig||$scope.userConfig.userSeqId?void($scope.barCodeTimeout=$timeout(generateBarcode,200)):($state.go("login"),!1)},$scope.cenbil=!1,console.log("param",param),$scope.applicationFee=param.appFee,$scope.paymentInfo=param.feeData,$scope.nric=param.nric,$scope.applicationId=param.applicationId,$scope.firstName=param.firstName,$scope.centralbilling=param.centralbilling,param.centralbilling&&param.centralbilling.amount>0&&($scope.cenbil=!0),$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init(),$scope.print=function(){printElement(document.getElementById("invoice-print")),window.print()},APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I014",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.AMADeclInstructionList=response.dataBean;var AmaInvoice=$scope.AMADeclInstructionList.instruction;$scope.AMAInvoiceInstruction=$sce.trustAsHtml(AmaInvoice)}})}]),angular.module("app").controller("NotifyMedicalFitnessCtrl",["$scope","$state","APIS","$location","$window","DataManager","ResourceManager","$sce","$filter",function($scope,$state,APIS,$location,$window,DataManager,nmf,$sce,$filter){function getRowDataObject(){return Object.create($scope.baseRowObject)}function convert(str){var date=new Date(str),mnth=("0"+(date.getMonth()+1)).slice(-2),day=("0"+date.getDate()).slice(-2);return[date.getFullYear(),mnth,day].join("-")}if($scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.nmf=nmf,!$scope.userConfig&&!$scope.userRegDetails)return $state.go("login"),!1;var masterFitNessData={dateOfOccurence:"",clinicName:"",leaveFrom:"",leaveTo:"",treatmentPlan:"",diagnosis:"",declareYN:""};$scope.init=function(){$scope.isFrmSubmited=!1,$scope.dt=null,$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.futureDate=new Date,$scope.futureDate=$scope.futureDate.setMonth($scope.futureDate.getMonth()+1),$scope.futureDateOptions={startingDay:1,showWeeks:!1,minDate:new Date},$scope.medicalFitnessData=angular.copy(masterFitNessData),$scope.medicalFitnessData.doctors=[],$scope.dataBind(),$scope.baseRowObject={name:""},$scope.medicalFitnessData.doctors.push(getRowDataObject()),$scope.loadDMFInstruction(),$scope.loadDMFDeclarationInstruction()},$scope.addNewRow=function(){$scope.medicalFitnessData.doctors.push(getRowDataObject())},$scope.dataBind=function(){$scope.goToInstructionsPage=!0,$scope.showMedicalFitnessForm=!1},$scope.goToMedicalForm=function(){$scope.goToInstructionsPage=!1,$scope.showMedicalFitnessForm=!0},$scope.goToNotificationPage=function(){$scope.goToInstructionsPage=!0,$scope.showMedicalFitnessForm=!1},$scope.submit=function(data,notifyProfile){if($scope.isFrmSubmited=!0,notifyProfile.$invalid)return!1;$scope.sendObj={},$scope.sendObj.dateOfOccurence=convert(data.dateOfOccurence),$scope.sendObj.leaveFrom=convert(data.leaveFrom),$scope.sendObj.leaveTo=convert(data.leaveTo),data.declareYN?$scope.sendObj.declareYN="Y":$scope.sendObj.declareYN="N";var doctor="";$scope.doctordetails="",angular.forEach(data.doctors,function(filterObj,filterIndex){doctor=filterObj.name,$scope.doctordetails=$scope.doctordetails+","+doctor}),$scope.sendObj.doctors=$scope.doctordetails.slice(1),$scope.sendObj.applicantId=$scope.userRegDetails.personId,$scope.sendObj.initiatedBy=$scope.userRegDetails.personId,$scope.sendObj.initiatorRole=$scope.currentRole.roleId,$scope.sendObj.diagnosis=data.diagnosis,$scope.sendObj.treatmentPlan=data.treatmentPlan,$scope.sendObj.clinicName=data.clinicName,APIS.SUBMIT_NOTIFICATION_DMF.data=$scope.sendObj,DataManager.sendRestRequest(null,APIS.SUBMIT_NOTIFICATION_DMF,function(response){response.success?(console.log("Profile update approval success",response.dataBean),$location.path("/dashboard")):console.log("ErrorMessage",response)},$scope.uconfig.token)},$scope.open1=function(){$scope.popup1.opened=!0},$scope.popup1={opened:!1},$scope.open2=function(){$scope.popup2.opened=!0},$scope.popup2={opened:!1},$scope.open3=function(){$scope.popup3.opened=!0},$scope.popup3={opened:!1},$scope.clear=function(){$scope.medicalFitnessData.dateOfOccurence=null},$scope.setMinDate=function(){$scope.futureDateOptions.minDate=$scope.medicalFitnessData.leaveFrom?$scope.medicalFitnessData.leaveFrom:new Date},$scope.resetPage=function(){$scope.medicalFitnessData=angular.copy(masterFitNessData),$scope.medicalFitnessData.doctors=[],$scope.medicalFitnessData.doctors.push(getRowDataObject())},$scope.removeRow=function(index){$scope.medicalFitnessData.doctors.splice(index,1)},$scope.loadDMFInstruction=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I009",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.DmfInstructionList=response.dataBean;var ins=$scope.DmfInstructionList.instruction;$scope.DMFInstruction=$sce.trustAsHtml(ins)}})},$scope.loadDMFDeclarationInstruction=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I010",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.DmfdeclaInstructionList=response.dataBean;var declins=$scope.DmfdeclaInstructionList.instruction;$scope.DeclarationInstruction=$sce.trustAsHtml(declins)}})},$scope.init()}]),angular.module("app.profile").controller("ProfileCtrl",["$scope","$rootScope","$state","APIS","DataManager","$timeout","$window","$filter","$location","ResourceManager","ModalService","CAASConfig","$sce",function($scope,$rootScope,$state,APIS,DataManager,$timeout,$window,$filter,$location,regRM,ModalService,CAASConfig,$sce){function getRowDataObject(){return Object.create($scope.baseRowObject)}function validatePhoto(){var photoType=$("#docBinaryStorageDiv").attr("src").split("base64,")[0].split(":")[1];if("image/jpg;"==photoType||"image/png;"==photoType||"image/jpeg;"==photoType){var errormsg="";return!0}var errormsg="Application accepts only JPG or PNG file formats to upload";return document.getElementById("profile").innerHTML=errormsg,!1}function getDataTypeObject(){return Object.create($scope.scopeTypeObjec)}function getTableRowDataObject(){return $scope.obj={},$scope.typeobj=getDataTypeObject(),$scope.mainObj=Object.create($scope.tableBaseRowObject),$scope.mainObj.documentTypeId=$scope.typeobj,$scope.mainObj}function convert(str){var date=new Date(str),mnth=("0"+(date.getMonth()+1)).slice(-2),day=("0"+date.getDate()).slice(-2);return[date.getFullYear(),mnth,day].join("-")}function validateDocuments(list,showAlert){for(var valid=!0,i=0;i<list.length;i++){if(!list[i].documentTypeId.lookUpId)return valid=!1,showAlert&&ModalService.openAlert("alert","Error","Please select a document type",$scope),valid;if(!list[i].documentName)return valid=!1,showAlert&&ModalService.openAlert("alert","Error","Please provide a document name",$scope),valid;if(!list[i].document)return valid=!1,showAlert&&ModalService.openAlert("alert","Error","Please upload a document to approve the changes",$scope),valid;if("application/pdf;"!=list[i].docType)return valid=!1,showAlert?ModalService.openAlert("alert","Error","Only PDF files are accepted",$scope):$scope.formatInvalid=!0,valid;$scope.atleastOneDocumentValid=!0}return valid}if($scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),console.log("userRegDetails",$scope.userRegDetails),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.visitDetails?$scope.applicantId=$scope.visitDetails.applicantId:$scope.applicantId=$scope.userRegDetails.personId,!$scope.userRegDetails||!$scope.uconfig)return $state.go("login"),!1;$scope.init=function(){$scope.keys={applicantId:$scope.applicantId,recordType:null,documentType:null,documentSubType:null,clinicLocation:null},$scope.getApplicantAttachDocs(),$scope.regRM=regRM,$scope.roleName=null,null!=$scope.currentRole&&($scope.roleName=$scope.currentRole.roleName),null==$scope.roleName||"Applicant"==$scope.roleName?$scope.isClearnce=!0:($scope.showTab="profile",$scope.isClearnce=!1),$scope.formatInvalid=!1,$scope.atleastOneDocumentValid=!1,angular.forEach($scope.userRegDetails.professionalDetailsList,function(value,key){$scope.professionalRowList.push(getRowDataObject()),$scope.professionalRowList[key].licenseType=value.licenseType,$scope.professionalRowList[key].aircraftType=value.aircraftType,$scope.professionalRowList[key].operationType=value.operationType,$scope.professionalRowList[key].licenseNo=value.licenseNo,$scope.professionalRowList[key].rankOrRating=value.rankOrRating}),angular.forEach($scope.professionalRowList,function(value,key){$scope.licenseChangeFn(value)})},$scope.showPassportReq=!1,$scope.isNAChecked=!1,$scope.nricReq=!0,$scope.dt=null,$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.formats=["dd/MM/yyyy","yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup1={opened:!1},$scope.tab=1,$scope.showTab="home",$scope.phoneNo="",$scope.homePhoneNo="",$scope.nextLmeType="",$scope.confirmEmail="",$scope.routinesNextLme="",$scope.getApplicantDues="",$scope.applicantDocuments="",$scope.applicantDocumentsdata="",$scope.hideSaveButton=!1,$scope.opened=!1,$scope.isNAChecked=!1,$scope.onBlurmail=!1,$scope.invalidResPC=!1,$scope.isResAddChanged=!1,$scope.isFrmSubmited=!1,$scope.duplicateLicense=!1,$scope.isSameAddChecked=!1,$scope.invalidMailingPC=!1,$scope.showPassportReq=!1,$scope.isMailingAddChanged=!1,$scope.showProfileUpdateForm=!1,$scope.showProfileUpdate=!0,$scope.nricReq=!0,$scope.isEmailMatched=!0,$scope.otherOrg=!1,$scope.license=1,$scope.aircraft=1,$scope.operation=1,$scope.rankRating=1;var sporeKey=1,sporeTxt="Singapore";$scope.userDataObj={},$scope.duplicateUser={},$scope.profileUpdateDetails={},$scope.licenseList=[],$scope.aircraftList=[],$scope.operationList=[],$scope.rankRatingList=[],$scope.documentTypeComboList=[],$scope.activeMacPath="assets/img/icons/icon_",$scope.inactiveMacPath="assets/img/icons/Grey_C_",$scope.prevEmail=$scope.userRegDetails.email,null!=$scope.userRegDetails.otherOrgDesc&&($scope.otherOrg=!0,$scope.userRegDetails.organization.lookUpId=999),$scope.userRegDetails.personId=$scope.userRegDetails.personId,$scope.userRegDetails.phoneNo=$scope.userRegDetails.phoneNo,$scope.userRegDetails.homePhoneNo=$scope.userRegDetails.homePhoneNo,$scope.onBlurLicNo=!1,$scope.onBlurLicNoFn=function(sel){$scope.onBlurLicNo=!0},void 0!=$scope.userRegDetails.address&&$scope.userRegDetails.address.length>0?angular.forEach($scope.userRegDetails.address,function(value,key){$scope.userRegDetails.address[key].workPhoneNo=parseInt($scope.userRegDetails.address[key].workPhoneNo),console.log($scope.userRegDetails.address[key].postalCode),$scope.userRegDetails.address[key].postalCode&&(5==$scope.userRegDetails.address[key].postalCode.toString().length?$scope.userRegDetails.address[key].postalCode="0"+$scope.userRegDetails.address[key].postalCode:$scope.userRegDetails.address[key].postalCode=$scope.userRegDetails.address[key].postalCode),$scope.userRegDetails.address[key].fax=$scope.userRegDetails.address[key].fax,$scope.userRegDetails.address[key].phoneExt=parseInt($scope.userRegDetails.address[key].phoneExt)}):void 0!=$scope.userRegDetails.person&&angular.forEach($scope.userRegDetails.person.address,function(value,key){$scope.userRegDetails.person.address[key].workPhoneNo=parseInt($scope.userRegDetails.person.address[key].workPhoneNo),$scope.userRegDetails.person.address[key].postalCode=$scope.userRegDetails.person.address[key].postalCode,$scope.userRegDetails.person.address[key].fax=$scope.userRegDetails.person.address[key].fax,$scope.userRegDetails.person.address[key].phoneExt=parseInt($scope.userRegDetails.person.address[key].phoneExt)}),$scope.salList=[],$scope.nationsList=[],$scope.ectyList=[],$scope.genList=[],$scope.countryList=[],$scope.macRowList=[],$scope.scopeTypeObjec={lookUpId:null,lookUpValue:null},$scope.tableBaseRowObject={documentName:null,document:null},$scope.professionalRowList=[],$scope.baseRowObject={aircraftList:$scope.aircraftList,operationList:$scope.operationList,rankRatingList:$scope.rankRatingList,licenseType:null,aircraftType:null,operationType:null,licenseNo:null,rankOrRating:null,licNoMinLength:null,licNoMaxLength:null},$scope.activetab=function(tabinfo){"documents"==tabinfo||"duelist"==tabinfo?$scope.hideSaveButton=!0:$scope.hideSaveButton=!1},$scope.clearPassportDetails=function(param){param||($scope.userRegDetails.passportNo=null,$scope.userRegDetails.passportCountry.lookUpItemId=null)},$scope.isValidNRIC=!0,$scope.onBlurNIRC=!1,$scope.onBlurNIRCFn=function(){$scope.onBlurNIRC=!0,$scope.profileUpdateDetails.nricOrFin&&($scope.isValidNRIC=CAASConfig.isValidateNRIC($scope.profileUpdateDetails.nricOrFin))},$scope.loadCombos=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.tempURL+"SAL,NATIONS,ECTY,GEN,country,ORGANIZATION,DOCUMENT_TYPE",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.nationsList=response.dataBean.NATIONS,$scope.ectyList=response.dataBean.ECTY,$scope.genList=$.grep(response.dataBean.GEN,function(e){return"640"!=e.lookUpItemId}),$scope.countryList=response.dataBean.country,$scope.documentTypeComboList=response.dataBean.DOCUMENT_TYPE,$scope.countryList=response.dataBean.country,angular.forEach($scope.countryList,function(value,key){value.lookUpItemValue==sporeTxt&&(sporeKey=key)}),configurePostalValLen(0),configurePostalValLen(1)}),APIS.ADMIN_FEEWAIVER_ORG_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_ORG_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.orgList=response.dataBean.organizationList,$scope.orgList.push({code:null,description:"OTHERS",organizationId:999}))}),APIS.GET_UPDATE_PROFILE_MAC_DTLS.URL=String.prototype.format.apply(APIS.GET_UPDATE_PROFILE_MAC_DTLS.tempURL,[$scope.userRegDetails.personId]),DataManager.sendRestRequest(null,APIS.GET_UPDATE_PROFILE_MAC_DTLS,function(response){if(response.success&&null!=response.dataBean){$scope.macRowList=response.dataBean;var currentDate=new Date;angular.forEach($scope.macRowList,function(value,key){currentDate>new Date(value.expiryDateAsString)?value.expired=!0:value.expired=!1})}})}(),null!=$scope.userRegDetails.photo&&($timeout(function(){$("#docBinaryStorageDiv").attr("src","data:image/jpeg;base64,"+$scope.userRegDetails.photo)},10),$rootScope.profilePhoto=$scope.userRegDetails.photo),$scope.focusElement=null,$scope.licenseDtlsRequired=!1,$scope.checkPrevLincenseDtlsFilled=function(profRowList){for(var i=0;i<profRowList.length;i++)null==profRowList[i].licenseType?$scope.licenseDtlsRequired=!0:$scope.licenseDtlsRequired=!1},$scope.addNewRow=function(){$scope.checkPrevLincenseDtlsFilled($scope.professionalRowList),$scope.licenseDtlsRequired&&0!=$scope.professionalRowList.length?$scope.professionalRowList.length>0&&ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.REQUIRED_LICENSE_DTLS_ERR,$scope):$scope.professionalRowList.push(getRowDataObject()),$scope.licenseChangeFn(value)},$scope.deleteRow=function(index){$scope.professionalRowList.splice(index,1)},$scope.loadProfessionalCombos=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){void 0!=rowObj?rowObj[comboName]=response.dataBean:($scope[comboName]=response.dataBean,$scope.baseRowObject[comboName]=response.dataBean)})},$scope.loadOtherCombos=function(argId,rowObj){$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"aircraftList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"rank/rating",lookUpItemCode:null},"rankRatingList",rowObj)},$scope.loadOtherCombos(),$scope.loadProfessionalCombos({lookUpItemId:1,lookUpItemValue:"",lookUpItemCode:null},"licenseList"),$scope.organizationChangeFn=function(cmb){$scope.userRegDetails.otherOrgDesc=null,999==$scope.userRegDetails.organization.lookUpId?$scope.otherOrg=!0:$scope.otherOrg=!1},$scope.c1c2LicNumLen=6,$scope.c3LicNumLen=3,$scope.licenseChangeFn=function(cmb){$scope.loadOtherCombos(cmb.licenseType,cmb),$scope.checkDuplicateLicence($scope.professionalRowList),$scope.duplicateLicense&&ModalService.openAlert("alert","info",regRM.resources.VALIDATION.UNIQUE_LICENSE_ERR,$scope,"duplicateLic",function(){cmb.licenseType=null});var atcocheck="ATCO";console.log("licenseList",$scope.licenseList),angular.forEach($scope.licenseList,function(licVal,licKey){cmb.licenseType==licVal.lookUpItemId&&(licVal.lookUpItemValue==atcocheck&&(cmb.licNoMinLength=$scope.c3LicNumLen,cmb.licNoMaxLength=$scope.c3LicNumLen),licVal.lookUpItemValue!==atcocheck&&(cmb.licNoMinLength=$scope.c1c2LicNumLen,cmb.licNoMaxLength=$scope.c1c2LicNumLen))})},$scope.checkDuplicateLicence=function(profRowList){$scope.dupLicenseCheckList=[];for(var i=0;i<profRowList.length;i++)$scope.dupLicenseCheckList.push(profRowList[i].licenseType);$scope.duplicateArray($scope.dupLicenseCheckList).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1},$scope.copyAdd=!1,$scope.copyAddress=function($event){if($event.currentTarget.checked)$scope.userRegDetails.address[1]=$scope.userRegDetails.address[0],$scope.userRegDetails.address[1].addressType=2,$scope.isSameAddChecked=!0,configurePostalValLen(1);else{var newObj={};angular.copy($scope.userRegDetails.address[1],newObj),$scope.userRegDetails.address[1]=newObj,$scope.isSameAddChecked=!1}},$scope.getApplicantDocuments=function(){var url=null,tempUrl=null;tempUrl=APIS.DOCUMENTTAB_POST.URL,url=tempUrl+"/"+$scope.applicantId,APIS.DOCUMENTTAB_POST.URL=url,DataManager.sendRestRequest(null,APIS.DOCUMENTTAB_POST,function(response){response.success?$scope.applicantDocuments=response.dataBean:console.log("ErrorMessage",response.errorMessages)},$scope.uconfig.token)}(),$scope.filternew=function(){APIS.GET_APPLICANT_DOCUMENTS.data=null,APIS.GET_APPLICANT_DOCUMENTS.data=$scope.keys,DataManager.sendRestRequest(null,APIS.GET_APPLICANT_DOCUMENTS,function(response){response.success?($scope.applicantDocumentsdata=response.dataBean,$scope.filteredItems=$scope.applicantDocumentsdata):console.log("ErrorMessage",response.errorMessages)},$scope.uconfig.token)},$scope.getViewDocument=function(ID,recordType){console.log("recordType"+recordType),APIS.REFERENCE_DOCUMENT.data={docId:ID,docType:"profileDoc"},DataManager.sendRestRequest(null,APIS.REFERENCE_DOCUMENT,function(response){if(response.success){if(""===recordType){var content=response.dataBean,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);valid?window.open("data:application/pdf;base64,"+decodeURIComponent(escape(response.dataBean)),"_blank","location=no,enableviewportscale=yes"):console.log("dsfdff")}if("AMA Invoice"===recordType){var innerContents=decodeURIComponent(escape(window.atob(response.dataBean))),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no","location=no,enableviewportscale=yes");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+atob(innerContents)+"</html>"),popupWinindow.document.close()}if("LME HED Submission"==recordType){var innerContents=decodeURIComponent(escape(window.atob(response.dataBean))),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no","location=no,enableviewportscale=yes");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()}if("AMA Invoice"!==recordType&&""!==recordType&&"LME HED Submission"!=recordType){var content=response.dataBean,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);valid?window.open("data:application/pdf;base64,"+decodeURIComponent(escape(response.dataBean)),"_blank","location=no,enableviewportscale=yes"):console.log("dsfdff")}}else console.log(response.errorMessage)},$scope.uconfig.token)},$scope.getLMETypes=function(){APIS.GET_DUE_LIST_LME.data=$scope.userRegDetails.personId,DataManager.sendRestRequest(null,APIS.GET_DUE_LIST_LME,function(response){response.success?$scope.nextLmeType=response.dataBean:console.log("ErrorMessage",response.errorMessages)},$scope.uconfig.token),APIS.GET_DUE_LIST_LME_ROUTINES.data=$scope.userRegDetails.personId,DataManager.sendRestRequest(null,APIS.GET_DUE_LIST_LME_ROUTINES,function(response){response.success?$scope.routinesNextLme=response.dataBean:console.log("ErrorMessage",response.errorMessages)},$scope.uconfig.token),APIS.GET_APPLICANT_DUES.data=$scope.userRegDetails.personId,DataManager.sendRestRequest(null,APIS.GET_APPLICANT_DUES,function(response){response.success?$scope.getApplicantDues=response.dataBean:console.log("ErrorMessage",response)},$scope.uconfig.token)}(),$scope.updateUser=function(){if($scope.duplicateUser.errorMessage)return ModalService.openAlert("alert","Warning","User Already Exist"),!1;if($scope.isFrmSubmited=!0,$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")){var isPhotoValid=validatePhoto();if(!isPhotoValid)return;$scope.userRegDetails.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]}for(var listItemsArr=[],duplicateLicense=[],i=0;i<$scope.professionalRowList.length;i++)duplicateLicense.push($scope.professionalRowList[i].licenseType),listItemsArr.push({licenseType:$scope.professionalRowList[i].licenseType,aircraftType:$scope.professionalRowList[i].aircraftType,operationType:$scope.professionalRowList[i].operationType,licenseNo:$scope.professionalRowList[i].licenseNo,rankOrRating:$scope.professionalRowList[i].rankOrRating});return $scope.duplicateArray(duplicateLicense).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1,this.frmPersonalProfile.$invalid?(ModalService.openAlert("alert","Error","Please enter mandatory fields in Personal Profile Tab",$scope),$scope.showTab="home",!1):this.frmProfessionalDetails.$invalid||$scope.duplicateLicense?($scope.showTab="profile",!1):this.frmContactDetails.$invalid?(ModalService.openAlert("alert","Error","Please enter mandatory fields in Contact Tab",$scope),$scope.showTab="messages",!1):this.frmDocunents.$invalid?($scope.showTab="documents",!1):(null!=$scope.userRegDetails.otherOrgDesc&&($scope.userRegDetails.organization.lookUpId=null),$scope.userRegDetails.professionalDetailsList=listItemsArr,angular.copy($scope.userRegDetails,$scope.userDataObj),$scope.userDataObj.dob=$scope.userDataObj.dob.replace(/-/g," "),$scope.userDataObj.dob=$filter("date")(new Date($scope.userDataObj.dob),"yyyy-MM-dd"),APIS.UPDATE_PROFILE.data=$scope.userDataObj,void DataManager.sendRestRequest(null,APIS.UPDATE_PROFILE,function(response){response.success?($rootScope.$broadcast("proficePicChanged",$scope.userRegDetails.photo),$window.sessionStorage.setItem("userconfig",JSON.stringify($scope.userRegDetails)),ModalService.openAlert("alert","success","Profile details updated successfully",$scope,"",function(){$state.go("dashboard")}),$timeout(function(){$scope.upStatus=""},5e3)):console.log("Profile Data Saved:",response.errorMessage)},$scope.uconfig.token))},$scope.isFormChanged=!1,$scope.sendObject={gender:{lookUpId:null},ethnicity:{lookUpId:null},nationality:{lookUpId:null},passportCountry:{countryId:null}},$scope.$on("$locationChangeStart",function(event){if($scope.showProfileUpdateForm&&!$rootScope.profile180daysInActive){var answer=confirm($scope.regRM.resources.PROFILE.PAGE_LEAVE_CONFIRMATION);answer?$rootScope.updateUserProfile=!1:event.preventDefault()}}),$scope.gotoform=function(){$scope.showProfileUpdate=!1,$scope.showProfileUpdateForm=!0,$scope.userRegDetails.dob=$scope.userRegDetails.dob.replace(/-/g," "),$scope.olddob=new Date($scope.userRegDetails.dob),$scope.profileUpdateDetails={applicantId:$scope.userRegDetails.personId,lastName:$scope.userRegDetails.lastName,firstName:$scope.userRegDetails.firstName,nricOrFin:$scope.userRegDetails.nric,dob:$scope.olddob,passportNo:$scope.userRegDetails.passportNo,gender:{lookUpId:$scope.userRegDetails.gender.lookUpId},ethnicity:{lookUpId:$scope.userRegDetails.ethnicity.lookUpId},nationality:{lookUpId:$scope.userRegDetails.nationality.lookUpId},passportCountry:{countryId:$scope.userRegDetails.passportCountry.countryId}},$scope.profileUpdateDetails.documentsList=[getTableRowDataObject()],$scope.userRegDetails.passportCountry.countryId&&($scope.showPassportReq=!0,$scope.isNAChecked=!0,$scope.nricReq=!1),$rootScope.profile180daysInActive&&($scope.showPassportReq=!1,$scope.isNAChecked=!1,$scope.nricReq=!0),$scope.$watch("profileUpdateDetails.lastName",function(newValue){void 0!=newValue&&newValue!=$scope.userRegDetails.lastName?($scope.sendObject.lastName=newValue,$scope.isFormChanged=!0):($scope.sendObject.lastName="",$scope.isFormChanged=!1)}),$scope.$watch("profileUpdateDetails.dob",function(newValue){void 0!=newValue&&convert(newValue)!=convert($scope.olddob)?($scope.sendObject.dob=newValue,$scope.isFormChanged=!0):($scope.sendObject.dob="",$scope.isFormChanged=!1)}),$scope.userRegDetails.nric&&($scope.showPassportReq=!1),$scope.$watch("profileUpdateDetails.nricOrFin",function(newValue){void 0!=newValue&&newValue!=$scope.userRegDetails.nric?($scope.sendObject.nricOrFin=newValue,$scope.isFormChanged=!0):($scope.sendObject.nricOrFin="",$scope.isFormChanged=!1)}),$scope.$watch("profileUpdateDetails.passportNo",function(newValue){void 0!=newValue&&newValue!=$scope.userRegDetails.passportNo?($scope.sendObject.passportNo=newValue,$scope.isFormChanged=!0):($scope.sendObject.passportNo="",$scope.isFormChanged=!1)}),$scope.$watch("profileUpdateDetails.nationality.lookUpId",function(newValue){void 0!=newValue&&newValue!=$scope.userRegDetails.nationality.lookUpId?($scope.sendObject.nationality.lookUpId=newValue,$scope.isFormChanged=!0):($scope.sendObject.nationality.lookUpId="",$scope.isFormChanged=!1)}),$scope.$watch("profileUpdateDetails.firstName",function(newValue){void 0!=newValue&&newValue!=$scope.userRegDetails.firstName?($scope.sendObject.firstName=newValue,$scope.isFormChanged=!0):($scope.sendObject.firstName="",$scope.isFormChanged=!1)}),$scope.$watch("profileUpdateDetails.gender.lookUpId",function(newValue){void 0!=newValue&&newValue!=$scope.userRegDetails.gender.lookUpId?($scope.sendObject.gender.lookUpId=newValue,$scope.isFormChanged=!0):($scope.sendObject.gender.lookUpId="",$scope.isFormChanged=!1)}),$scope.$watch("profileUpdateDetails.ethnicity.lookUpId",function(newValue){void 0!=newValue&&newValue!=$scope.userRegDetails.ethnicity.lookUpId?($scope.sendObject.ethnicity.lookUpId=newValue,$scope.isFormChanged=!0):($scope.sendObject.ethnicity.lookUpId="",$scope.isFormChanged=!1)}),$scope.$watch("profileUpdateDetails.passportCountry.countryId",function(newValue){void 0!=newValue&&newValue!=$scope.userRegDetails.passportCountry.countryId?($scope.sendObject.passportCountry.countryId=newValue,$scope.isFormChanged=!0):($scope.sendObject.passportCountry.countryId="",$scope.isFormChanged=!1)})},($rootScope.updateUserProfile||$rootScope.profile180daysInActive)&&$scope.gotoform(),$scope.closeForm=function(){$rootScope.updateUserProfile?($scope.profileUpdateDetails={},$rootScope.updateUserProfile=!1,$scope.showProfileUpdateForm=!1,$rootScope.updateRequestDetails={isNewPage:!1,applicantId:"",applicantuserId:"",returnFlag:!0},$location.url("/amahed")):$rootScope.profile180daysInActive?($scope.profileUpdateDetails={},$rootScope.profile180daysInActive=!1,$state.go("login")):($scope.profileUpdateDetails={},$scope.showProfileUpdateForm=!1,$scope.showProfileUpdate=!0)},$scope.addNewTableRow=function(){$scope.profileUpdateDetails.documentsList.push(getTableRowDataObject())},$scope.removeTableRow=function(currentObj){$scope.profileUpdateDetails.documentsList.length>1?$scope.profileUpdateDetails.documentsList.splice(currentObj,1):console.log("documents required for support")},$scope.showContent=function($fileContent,index){var dataParts=$fileContent.split("base64,");$scope.content=dataParts[1],$scope.profileUpdateDetails.documentsList[index].document=$scope.content,$scope.profileUpdateDetails.documentsList[index].docType=dataParts[0].split(":")[1]},$scope.submitForApproval=function(approvalData){if($scope.isFrmSubmited=!0,this.frmPersonalProfileUpdate.$invalid&&!$scope.userRegDetails.nric)return void($scope.isFrmSubmited=!1);if($scope.profileUpdateDetails.nricOrFin&&!$scope.isValidNRIC)return!1;var isDocumentsValid;if($scope.isFormChanged){if($scope.sendObject.applicantId=approvalData.applicantId,""!=$scope.sendObject.dob&&($scope.sendObject.dob=convert(approvalData.dob)),$scope.senddocList=[],isDocumentsValid=validateDocuments(approvalData.documentsList,!0),!isDocumentsValid)return;angular.forEach(approvalData.documentsList,function(value,key){$scope.senddocList.push({documentName:value.documentName,documentTypeId:value.documentTypeId,document:value.document})}),$scope.sendObject.documentsList=$scope.senddocList,$rootScope.profile180daysInActive?$scope.inActiveProfileForApprovalService():$scope.profileForApprovalService()}else{if(isDocumentsValid=validateDocuments(approvalData.documentsList,!1),$scope.formatInvalid)return $scope.formatInvalid=!1,void ModalService.openAlert("alert","Error","Only PDF files are accepted",$scope);if(isDocumentsValid||$scope.atleastOneDocumentValid)return $scope.atleastOneDocumentValid=!1,void ModalService.openAlert("alert","Error","Please change the fields which need to submit for approval",$scope);console.log("No changes found"),$rootScope.updateUserProfile?($rootScope.updateUserProfile=!1,$scope.showProfileUpdateForm=!1,$rootScope.updateRequestDetails={isNewPage:!1,applicantId:"",applicantuserId:"",returnFlag:!0},$location.url("/amahed")):$rootScope.profile180daysInActive?ModalService.openAlert("alert","error","No changes are done in profile update form",$scope,"",function(){}):ModalService.openAlert("alert","error","No changes are done in profile update form",$scope,"",function(){})}},$scope.profileForApprovalService=function(){APIS.SUBMIT_PROFILE_FOR_APPROVAL.data=$scope.sendObject,
console.log("submit",$scope.sendObject),DataManager.sendRestRequest(null,APIS.SUBMIT_PROFILE_FOR_APPROVAL,function(response){response.success?(console.log("Profile update approval success",response.dataBean),$rootScope.updateUserProfile?($rootScope.updateUserProfile=!1,$scope.showProfileUpdateForm=!1,$rootScope.updateRequestDetails={isNewPage:!1,applicantId:"",applicantuserId:"",returnFlag:!0},ModalService.openAlert("alert","success","Profile update request submitted to CAMB successfully",$scope,"",function(){$location.url("/amahed")})):ModalService.openAlert("alert","success","Profile update request submitted to CAMB successfully",$scope,"",function(){$state.go("dashboard")})):ModalService.openAlert("alert","error",response.errorMessage,$scope,"",function(){$rootScope.updateUserProfile?($rootScope.updateUserProfile=!1,$scope.showProfileUpdateForm=!1,$rootScope.updateRequestDetails={isNewPage:!1,applicantId:"",applicantuserId:"",returnFlag:!0},$location.url("/amahed")):($scope.showProfileUpdate=!0,$scope.showProfileUpdateForm=!1)})},$scope.uconfig.token)},$scope.inActiveProfileForApprovalService=function(){APIS.INACTIVE_PROFILE_FOR_APPROVAL.data=$scope.sendObject,console.log("In active profile submit",$scope.sendObject),DataManager.sendRestRequest(null,APIS.INACTIVE_PROFILE_FOR_APPROVAL,function(response){response.success?(console.log("In Active profile update approval success",response.dataBean),$rootScope.profile180daysInActive=!1,ModalService.openAlert("alert","success","Profile update request submitted to CAMB successfully",$scope,"",function(){$state.go("login")})):ModalService.openAlert("alert","error",response.errorMessage,$scope,"",function(){$rootScope.profile180daysInActive=!1,$state.go("login")})})},$(".registerValidationModalBut").click(function(){$("."+$scope.focusElement).focus()});var getPostalAddress=function(postalCode,index,ln1,ln2){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){console.log(response.dataBean),response.success&&null!=response.dataBean.building?($scope.userRegDetails.address[index].line1=response.dataBean.building,$scope.userRegDetails.address[index].line2=response.dataBean.unit,$("#"+ln1).removeAttr("disabled"),$("#"+ln2).removeAttr("disabled")):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null,$("#"+ln1).attr("disabled","disabled"),$("#"+ln2).attr("disabled","disabled"))})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode,ln1,ln2){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index,ln1,ln2):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null,$("#"+ln1).removeAttr("disabled"),$("#"+ln2).removeAttr("disabled"))},$scope.preloadMailingAddress=function(postalCode,ln1,ln2){var index=1;!$scope.isMailingAddChanged&&postalCode?getPostalAddress(postalCode,index,ln1,ln2):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)},$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.invalidResPC=!1,$scope.userRegDetails.address[0].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isResAddChanged=!0),configurePostalValLen(0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.userRegDetails.address[1].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),configurePostalValLen(1))},$scope.removeAttachment=function(documentid){$scope.warningConfirmed=!1,$scope.docId=documentid,ModalService.openAlert("confirm","warning","Do you want to delete?",$scope,"removeattdoc",function(){$scope.$on("removeattdocOk",function(){if(0==$scope.warningConfirmed){var url=null,tempUrl=null;tempUrl=APIS.REMOVE_ATTACHMENT.URL,url=tempUrl+"/"+$scope.docId,APIS.REMOVE_ATTACHMENT.URL=url,DataManager.sendRestRequest(null,APIS.REMOVE_ATTACHMENT,function(response){response.success?(ModalService.openAlert("alert","Success","Deleted successfully","null","null"),$scope.getApplicantAttachDocs()):console.log(response.errorMessage)},$scope.uconfig.token),APIS.REMOVE_ATTACHMENT.URL=tempUrl}$scope.warningConfirmed=!0}),$scope.$on("removeattdoccancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.getApplicantAttachDocs=function(){APIS.GET_APPLICANT_DOCUMENTS.data=$scope.keys,DataManager.sendRestRequest(null,APIS.GET_APPLICANT_DOCUMENTS,function(response){response.success?($scope.applicantDocumentsdata=response.dataBean,$scope.filteredItems=$scope.applicantDocumentsdata,console.log($scope.filteredItems)):console.log("ErrorMessage",response.errorMessages)},$scope.uconfig.token)};var configurePostalValLen=function(index){void 0!=$scope.userRegDetails.person&&($scope.userRegDetails.address=[],angular.copy($scope.userRegDetails.person.address,$scope.userRegDetails.address)),$scope.userRegDetails.address[index].country&&($scope.userRegDetails.address[index].country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope["postalMinLen"+index]=3,$scope["postalMaxLen"+index]=15):($scope["postalMinLen"+index]=6,$scope["postalMaxLen"+index]=6))};$scope.matchEmail=function(fieldname){return $scope.onBlurmail=!0,"email"==fieldname&&$scope.confirmEmail?($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0,!1):void($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0)},$scope.clearPassportDetails=function(param){param||($scope.profileUpdateDetails.passportNo=null,$scope.profileUpdateDetails.passportCountry.countryId=null)},$scope.isEmailExsist=function(){APIS.USER_EXSIST.data={email:$scope.userRegDetails.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response})},$scope.duplicateArray=function(arr){for(var sorted_arr=arr.sort(),results=[],i=0;i<arr.length-1;i++)sorted_arr[i+1]==sorted_arr[i]&&results.push(sorted_arr[i]);return results},$scope.closeModal=function(){$state.go("login")},$scope.order=function(rowName){$scope.row!==rowName&&($scope.row=rowName,$scope.applicantDocumentsdata=$filter("orderBy")($scope.filteredItems,rowName))},APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I008",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.DueListInstruction=response.dataBean;var DueListInst=$scope.DueListInstruction.instruction;$scope.Duelist_Instruction=$sce.trustAsHtml(DueListInst)}}),$scope.init()}]),angular.module("app.profile").directive("onReadFile",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsDataURL((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}),angular.module("app").controller("ReferenceDocsCtrl",["$scope","$state","APIS","$location","$window","DataManager","ModalService","ResourceManager",function($scope,$state,APIS,$location,$window,DataManager,ModalService,redocs){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.redocs=redocs,$scope.init=function(){$scope.loadGetReferenceDocuments()},$scope.loadGetReferenceDocuments=function(){"Applicant"==$scope.uconfig.userFacilities[0].roles[0].roleName?$scope.userTypes="A":$scope.userTypes="B",APIS.GETREFERENCEDOCUMENTS.data={publishId:644,userType:$scope.userTypes},DataManager.sendRestRequest(null,APIS.GETREFERENCEDOCUMENTS,function(response){response.success?$scope.documents=response.dataBean:ModalService.openAlert("alert","info",response.errorMessage,$scope,"","")},$scope.uconfig.token)},$scope.getViewDocument=function(ID){APIS.REFERENCE_DOCUMENT.data={docId:ID,docType:""},DataManager.sendRestRequest(null,APIS.REFERENCE_DOCUMENT,function(response){if(response.success){var content=response.dataBean.document,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.document,"_blank","location=0,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token)},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").directive("radiocheck",function(){var directive={};return directive.restrict="E",directive.template="{{radiocheck.name}} Yes<input xx type='radio' name={{radiocheck.name}} /> No<input type='radio' checked name={{radiocheck.name}} /> &nbsp; <textarea name={{radiocheck.name}}+'msg' rows='10' cols='30'>",directive.scope={radiocheck:"=name"},directive.compile=function(element,attributes){var linkFunction=function($scope,element,attributes){element.html("<div style='margin-bottom:20px;display:inline-block;word-wrap:break-word'><img src='assets/img/right-arrow.png' width='18px' height='18px' style='display:block;float:left;margin-top:3px'/> &nbsp; <span style='width:200px;display:inline-block;word-wrap:break-word'> "+$scope.radiocheck.name+"</span> Yes <input onclick=\"$('#ta_"+$scope.radiocheck.name.split(" ").join("").split("/").join("_")+"').show()\" type='radio' idm="+$scope.radiocheck.name+" name="+$scope.radiocheck.name+" />&nbsp;&nbsp; No <input onclick=\"$('#ta_"+$scope.radiocheck.name.split(" ").join("").split("/").join("_")+"').hide()\" type='radio' idmm="+$scope.radiocheck.name+" checked name="+$scope.radiocheck.name+' /> </div> &nbsp; &nbsp; &nbsp; <textarea id="ta_'+$scope.radiocheck.name.split(" ").join("").split("/").join("_")+"\" style='margin-bottom:-9px;resize: none;display:none' name={{radiocheck.name}}+'msg' hidden=true rows='1' cols='20'>"),element.on("click",function(e){e.target.attributes.idm?e.currentTarget.childNodes[2].hidden=!1:e.target.attributes.idmm&&(e.currentTarget.childNodes[2].hidden=!0)})};return linkFunction},directive}),angular.module("app.camb").config(function($stateProvider){$stateProvider.state("camb-home",{url:"/camb-home",controller:"CambhomeCtrl",templateUrl:"app/camb/partials/home.html"}).state("cambsearchsetup",{url:"/camb-searchsetup",controller:"SearchsetupCtrl",templateUrl:"app/camb/partials/search/searchsetup.html"}).state("cambsearchregister",{url:"/camb-searchregister",controller:"CambRegisterCtrl",templateUrl:"app/camb/partials/search/searchregister.html"}).state("cambsearchconsult",{url:"/camb-searchconsult",controller:"CreateconsultCtrl",templateUrl:"app/camb/partials/search/searchcreateconsult.html"}).state("cambsearchcr",{url:"/camb-searchcr",controller:"CreatecrCtrl",templateUrl:"app/camb/partials/search/searchcreatecr.html"}).state("cambsearchsb",{url:"/camb-searchsb",controller:"CreatesbCtrl",templateUrl:"app/camb/partials/search/searchcreatecr.html"}).state("cambworklistsetup",{url:"/camb-worklistsetup",controller:"WorklistSetupCtrl",templateUrl:"app/camb/partials/worklist/worklistsetup.html"}).state("cambworklist",{url:"/camb-worklist",controller:"WorklistCtrl",templateUrl:"app/camb/partials/worklist/worklist.html"}).state("cambworklistinprogress",{url:"/camb-worklistinprogress",controller:"WorklistInprogressCtrl",templateUrl:"app/camb/partials/worklist/worklistinprogress.html"}).state("cambworklistfollowup",{url:"/camb-worklistfollowup",controller:"WorklistFollowupCtrl",templateUrl:"app/camb/partials/worklist/worklistfollowup.html"}).state("cambworklistvetting",{url:"/camb-worklistvetting",controller:"WorklistVettingCtrl",templateUrl:"app/camb/partials/worklist/worklistvetting.html"}).state("cambworklistcompleted",{url:"/camb-worklistcompleted",controller:"WorklistCompletedCtrl",templateUrl:"app/camb/partials/worklist/worklistcompleted.html"}).state("cambworklistaborted",{url:"/camb-worklistaborted",controller:"WorklistAbortedCtrl",templateUrl:"app/camb/partials/worklist/worklistaborted.html"}).state("cambworklistexpired",{url:"/camb-worklistexpired",controller:"WorklistExpiredCtrl",templateUrl:"app/camb/partials/worklist/worklistexpired.html"}).state("cambheader",{url:"/cambheader",controller:"CambHeaderCtrl",templateUrl:"app/camb/partials/header.html"}).state("cambreview",{url:"/cambreview",controller:"CambreviewCtrl",templateUrl:"app/camb/partials/cambreview/Cambreview.html"}).state("cambcrar",{url:"/cambcrar",controller:"CaarCtrl",templateUrl:"app/camb/partials/cambreview/CR_AR.html"}).state("cambCrAdhoc",{url:"/cambcradhoc",controller:"CradhocCtrl",templateUrl:"app/camb/partials/cambreview/CR_Adhoc.html"}).state("camblamb",{url:"/camblamb",controller:"CambLambCtrl",templateUrl:"app/camb/partials/worklist/camblamb.html"}).state("cambMeasurement",{url:"/cambMeasurement?visitId&personId",controller:"cambCtrl",templateUrl:"app/camb/partials/worklist/cambMeasurement.html"}).state("cambphysicalexamination",{url:"/cambphysicalexamination",controller:"PhysicalexaminationCtrl1",templateUrl:"app/camb/partials/worklist/cambphysicalexamination.html"}).state("camblambpost",{url:"/camb-lambpost",controller:"CambLambPostCtrl",templateUrl:"app/camb/partials/worklist/camblambpost.html"}).state("crlmabfullreport",{url:"/crlmabfullreport",controller:"CrlmabFullReportCtrl",templateUrl:"app/camb/partials/worklist/camblambfullreport.html"}).state("crlmabpostfullreport",{url:"/crlmabpostfullreport",controller:"CrlmabPostFullReportCtrl",templateUrl:"app/camb/partials/worklist/camblambpostfullreport.html"}).state("crarfullreport",{url:"/crarfullreport",controller:"CrarFullReportPdfCtrl",templateUrl:"app/camb/partials/cambreview/caarfullreport.html"}).state("cradhocfullreport",{url:"/cradhocfullreport",controller:"CradhocFullReportCtrl",templateUrl:"app/camb/partials/cambreview/caadhocfullreport.html"}).state("cambtrackdues",{url:"/cambtrackdues",controller:"TrackduesCtrl",templateUrl:"app/camb/partials/worklist/trackdues.html"}).state("cambdiseaseregistry",{url:"/cambdiseaseregistry",controller:"DiseaseRegistryCtrl",templateUrl:"app/camb/partials/dr/diseaseregistry.html"}).state("viewProcessSummary",{url:"/viewProcessSummary",controller:"ViewProcessSummaryCtrl",templateUrl:"app/camb/partials/worklist/viewProcessSummary.html"})}).run(function($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams}),angular.module("app.camb").controller("CambHeaderCtrl",["$scope","$state","APIS","$location","$window","$uibModal","ModalService","$interval","DataManager","switchRoles","$timeout",function($scope,$state,APIS,$location,$window,$uibModal,ModalService,$interval,DataManager,switchRoles,$timeout){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userConfigDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.userProfilePic=$scope.userConfigDetails.photo,$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.roles=$scope.userConfig.userFacilities[0].roles,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.msgcount=JSON.parse(sessionStorage.getItem("msgcount")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,null!=$scope.userConfigDetails&&null!=$scope.userConfigDetails.photo&&$timeout(function(){$("#headerProfileCAMB").attr("src","data:image/jpeg;base64,"+$scope.userProfilePic)},10),$scope.menuClass=function(path){return $location.path().substr(0,path.length)===path?"top-nav-active":""},$scope.swichRole=function(param){sessionStorage.setItem("currentRole",JSON.stringify(param)),switchRoles.go(param.roleName)},$scope.logout=function(){sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage},$scope.uconfig.token)),$window.sessionStorage.clear(),$state.go("app")},$scope.viewProfileTemplate=function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/common/partials/Profile_Model_Form.html",controller:"ProfileModelCtrl",size:"lg",resolve:{}},$scope.userConfig.token)},$interval(function(){$scope.msgcount=JSON.parse(sessionStorage.getItem("msgcount"))},1e3)}]),angular.module("app").controller("CambhomeCtrl",["$scope","$state","APIS","DataManager","$timeout","$window","$rootScope","$uibModal","$log","ModalService","$stateParams",function($scope,$state,APIS,DataManager,$timeout,$window,$rootScope,$uibModal,$log,ModalService,$stateParams){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse($window.sessionStorage.getItem("currentRole")),$scope.personId=$scope.userRegDetails.personId,$scope.dataBind()},$scope.dataBind=function(){$scope.loadActivity(),$scope.worklistData=[],$scope.notificationtData=[],$scope.loadNotification(),$scope.notificationdata()},$scope.loadActivity=function(){APIS.GET_WORKLISTACTIVITY.data={status_page_code:"CAMBHOME",idNo:$scope.personId},DataManager.sendRestRequest(null,APIS.GET_WORKLISTACTIVITY,function(response){response.success?($scope.worklistData=response.dataBean,angular.forEach($scope.worklistData,function(value,key){$scope.startDateObject=value.startDate.split(" "),$scope.worklistData[key].startDate=$scope.startDateObject[0]})):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.casereq=function(notedata){$scope.notificationdatas=notedata},$scope.notificationdata=function(){APIS.CAMB_NOTI_ALERT.URL="worklist/getNotiAndBrodCount/"+$scope.personId+"/"+$scope.currentRole.roleId,DataManager.sendRestRequest(null,APIS.CAMB_NOTI_ALERT,function(response){response.success?($scope.pageData=response.dataBean,sessionStorage.setItem("msgcount",JSON.stringify($scope.pageData))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.tranfercase=function(notifidata,flagval){$scope.notdat=notifidata,$scope.flag=flagval,APIS.CAMB_TRANSFERCASE_HOME.data={visitType:$scope.notdat.listofTransferNotifications[0].visitType,oldCPId:$scope.notdat.listofTransferNotifications[0].oldCPId,cambPhysicianId:$scope.notdat.listofTransferNotifications[0].cambPhysicianId,transferRequestId:$scope.notdat.transferRequestId,acceptFlag:$scope.flag},DataManager.sendRestRequest(null,APIS.CAMB_TRANSFERCASE_HOME,function(response){response.success?($scope.transcasereq=response.dataBean,$scope.loadNotification()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.deleteRow=function(notiId){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"noti",function(){}),$scope.$on("notiOk",function(){$scope.delete_notifications=notiId,APIS.CAMB_HOME_NOTIFI_DELETE.data={notificationsId:$scope.delete_notifications},DataManager.sendRestRequest(null,APIS.CAMB_HOME_NOTIFI_DELETE,function(response){response.success?($scope.homeNotiDel=response.dataBean,$scope.loadNotification()):console.log(response.errorMessage)},$scope.uconfig.token)}),$scope.$on("noticancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.docommence=function(datavalue,action){$scope.visitDetails={},datavalue.currentAction=action,$scope.visitDetails={visitId:datavalue.visit_id,visitType:datavalue.v_type,applicantId:datavalue.applicant_id,applicantuserId:datavalue.applicantuserId,applicantDetails:datavalue},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$scope.vtypeact=datavalue.v_type,$scope.vistType=datavalue.v_type,$scope.visitId=datavalue.visit_id,"Commence"==action?(APIS.GET_CAMB_COMMENCE.data={v_type:$scope.vistType,visit_id:$scope.visitId},DataManager.sendRestRequest(null,APIS.GET_CAMB_COMMENCE,function(response){response.success?("CMB_CONSULT"==$scope.vtypeact&&$state.go("cambMeasurement"),"CR_ADHOC"==$scope.vtypeact&&$state.go("cambCrAdhoc"),"CR_LMAB_POST"==$scope.vtypeact&&$state.go("camblambpost"),"CR_LMAB"==$scope.vtypeact&&$state.go("camblamb"),"CR_AR"==$scope.vtypeact&&$state.go("cambcrar")):$log.error("Commence: "+response.errorMessages)},$scope.uconfig.token)):"Resume"==action?(APIS.CAMB_WORKLIST_RESUME.data={type:$scope.vistType,id:$scope.visitId},DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_RESUME,function(response){response.success?("CMB_CONSULT"==$scope.vtypeact&&$state.go("cambMeasurement"),"CR_ADHOC"==$scope.vtypeact&&$state.go("cambCrAdhoc"),"CR_LMAB_POST"==$scope.vtypeact&&$state.go("camblambpost"),"CR_LMAB"==$scope.vtypeact&&$state.go("camblamb"),"CR_AR"==$scope.vtypeact&&$state.go("cambcrar")):$log.error("Resume: "+response.errorMessages)},$scope.uconfig.token)):"Update"==action?("CMB_CONSULT"==$scope.vtypeact&&$state.go("cambMeasurement"),"CR_ADHOC"==$scope.vtypeact&&$state.go("cambCrAdhoc"),"CR_LMAB_POST"==$scope.vtypeact&&$state.go("camblambpost"),"CR_LMAB"==$scope.vtypeact&&$state.go("camblamb"),"CR_AR"==$scope.vtypeact&&$state.go("cambcrar")):"View PDF"==action&&$scope.viewPDF()},$scope.viewPDF=function(){switch($scope.visitDetails.visitType){case"CR_LMAB_POST":$window.open("#/crlmabpostfullreport?viewPDF=Y");break;case"CR_LMAB":$window.open("#/crlmabfullreport?viewPDF=Y");break;case"CR_ADHOC":$window.open("#/cradhocfullreport?viewPDF=Y");break;case"CR_AR":$window.open("#/crarfullreport?viewPDF=Y");break;case"CMB_CONSULT":$window.open("#/viewProcessSummary");break;default:$window.open("#/crarfullreport?viewPDF=Y")}},$scope.viewMsg=function(notificationsId){$scope.notificationsId=notificationsId,console.log($scope.notificationsId)},$scope.cancel=function(){$uibModalInstance.close("close")},$scope.loadNotification=function(){var url=null,tempUrl=null;tempUrl=APIS.CAMB_HOME_NOTIFI.URL,url=tempUrl+"/"+$scope.personId+"/"+$scope.currentRole.roleId,APIS.CAMB_HOME_NOTIFI.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_HOME_NOTIFI,function(response){response.success?$scope.homeNoti=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token),APIS.CAMB_HOME_NOTIFI.URL=tempUrl},$scope.init()}]),angular.module("app.camb").controller("HomeCtrl",["$scope","$state","APIS","$location","DataManager","$window",function($scope,$state,APIS,$location,DataManager,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.dataBind()},$scope.loadActivity=function(){DataManager.sendRestRequest(null,APIS.GET_WORKLISTACTIVITY,function(response){response.success?$scope.worklistData=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.loadNotification=function(){DataManager.sendRestRequest(null,APIS.GET_WORKLISTNOTIFICATION,function(response){response.success?$scope.notificationtData=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.viewMsg=function(param){$scope.showMsg=param},$scope.dataBind=function(){$scope.loadActivity(),$scope.loadNotification(),$scope.worklistData=[],$scope.notificationtData=[],$scope.viewMsg()},$scope.init()}]),angular.module("app").controller("CaarCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService","$parse","$log",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService,$parse,$log){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.currentAction=$scope.visitDetails.applicantDetails.currentAction,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.macForReport=$scope.visitDetails.applicantDetails.mac,console.log($scope.macForReport),$scope.init=function(){$scope.crarData={},$scope.macForReportList=[],$scope.crarSaveData={crarID:"",applicantID:"",flag:"false",remarksInstructions:"",auditRemarks:"",dmePerformanceAuditId:"",macDetails:[],crarOperationalProviso:[],crarFollowupProviso:[],validity:[]},$scope.followupprovisoList={type_name:"",speciality_investigation_name:"",doneby_name:"",frequency_name:"",otherInvDescription:"",onceDate:""},$scope.outcomesList=[],$scope.restrictionsList=[],$scope.ristrictionDisabled=[],$scope.conclusion=[],$scope.followupprovisoIndex="",$scope.followupAddDisabled=!0,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.changeMedicalAssessment={checked:!1},$scope.currentMedicalAssessment=!1,"-1"==$scope.visitDetails.applicantDetails.v_type_disp.indexOf("DMF")?($scope.savemessage="CR-AR-Proviso Saved Successfully",$scope.submitmessage="CR-AR-Proviso Submitted Successfully"):($scope.savemessage="CR-AR-DMF Clearance Saved Successfully",$scope.submitmessage="CR-AR-DMF Clearance Submitted Successfully"),$scope.databind()},$scope.databind=function(){$scope.outcomesFetch(),$scope.followupProvisoTypeFetch(),$scope.followupProvisoDoneByFetch(),$scope.followupProvisoFrequencyFetch(),$scope.auditdmeFetch(),$scope.restrictionsFetch(),$scope.loadpreloadcrar(),$scope.loadAttachments(),$scope.$watch("crarData.remarksInstructions",function(newVal,oldVal){newVal.length>1e3&&($scope.crarData.remarksInstructions=oldVal,ModalService.openAlert("alert","Warning","Please Enter Maximum 1000 Characters","null","null"))}),$scope.$watch("crarData.auditRemarks",function(newVal,oldVal){newVal.length>500&&($scope.crarData.auditRemarks=oldVal,ModalService.openAlert("alert","Warning","Please Enter Maximum 500 Characters","null","null"))})},$scope.loadpreloadcrar=function(){APIS.GETPRELOADCRAR.data={crarID:$scope.visitDetails.visitId,applicantID:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.GETPRELOADCRAR,function(response){response.success?($scope.crarData=response.dataBean,angular.forEach($scope.crarData.crarPreloadDetails,function(value,key){null!=value.outcomeCode&&$scope.outcomeChange(value.outcomeCode,key)}),angular.forEach($scope.crarData.conclusionDmf,function(value,key){"N"==$scope.visitDetails.applicantDetails.dmf_yn&&"RESDUTY"==$scope.crarData.conclusionDmf[key].code&&$scope.crarData.conclusionDmf.splice(key,1)}),$(".lastsubmittedDME").html($scope.crarData.lastSubbmittedDME.file),$scope.crarData.dmePerformanceAuditId=null!=$scope.crarData.dmePerformanceAuditId&&""!=$scope.crarData.dmePerformanceAuditId?$scope.crarData.dmePerformanceAuditId:2):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.changeMedicalAssessmentClick=function(){$scope.changeMedicalAssessment.checked===!0?($scope.currentMedicalAssessment=!0,$scope.crarSaveData.flag=!0):($scope.currentMedicalAssessment=!1,$scope.crarSaveData.flag=!1)},$scope.outcomesFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_OUTCOMES,function(response){response.success?($scope.outcomesList=response.dataBean,$scope.outcomesList.splice($scope.outcomesList.map(function(e){return e.code}).indexOf("DDME"),1),$scope.outcomesList.splice($scope.outcomesList.map(function(e){return e.code}).indexOf("DCAMB"),1)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.outcomeChange=function(outcomeCode,index){$scope.crarData.crarPreloadDetails[index].outcomeId=$.grep($scope.outcomesList,function(e){return e.code==outcomeCode})[0].outcomeId,"FITWR"===outcomeCode||null===outcomeCode?$scope.ristrictionDisabled[index]=!1:($scope.ristrictionDisabled[index]=!0,$scope.crarData.crarPreloadDetails[index].restrictionsId=0)},$scope.restrictionsFetch=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_CRAR,function(response){response.success?($scope.restrictionsArray=response.dataBean.restrictions,$scope.restrictionsList.push($scope.restrictionsArray)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.addOperationalProvisos=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/AddOperationalProvisos.html",controller:"AddOperationalModalCtrl",resolve:{modalParam:function(){return $scope.preloadOperationalProviso=[],$scope.preloadOperationalProvisoTransfer=[],$scope.preloadOperationalProvisoDelete=[],angular.forEach($scope.crarData.preloadOperationalProviso,function(value,key){"D"!=value.actionStatus?$scope.preloadOperationalProvisoTransfer.push({actionId:value.operationalProvisoId,code:value.operationalProvisoIdCode,actionStatus:value.actionStatus,craroperationalProvisoId:value.craroperationalProvisoId,actionName:value.operationalProvisoIdDesc}):$scope.preloadOperationalProvisoDelete.push({actionId:value.operationalProvisoId,code:value.operationalProvisoIdCode,actionStatus:value.actionStatus,craroperationalProvisoId:value.craroperationalProvisoId,actionName:value.operationalProvisoIdDesc})}),$scope.preloadOperationalProvisoTransfer}}}).result.then(function(selectedItem){"string"!=typeof selectedItem&&($scope.crarData.preloadOperationalProviso=[],angular.forEach(selectedItem,function(value,key){value.hasOwnProperty("actionStatus")?$scope.crarData.preloadOperationalProviso.push({operationalProvisoId:value.actionId,operationalProvisoIdCode:value.code,actionStatus:value.actionStatus,craroperationalProvisoId:value.craroperationalProvisoId,operationalProvisoIdDesc:value.actionName}):$scope.crarData.preloadOperationalProviso.push({operationalProvisoId:value.actionId,operationalProvisoIdCode:value.code,actionStatus:"I",operationalProvisoIdDesc:value.actionName})})),$scope.crarData.preloadOperationalProviso=$scope.crarData.preloadOperationalProviso.concat($scope.preloadOperationalProvisoDelete)},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.removeOperationalProvisos=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperational",function(){$scope.$on("removeoperationalOk",function(){0==$scope.warningConfirmed&&(0==$scope.crarData.preloadOperationalProviso[$scope.removeindex].operationalProvisoId?$scope.crarData.preloadOperationalProviso.splice($scope.removeindex,1):$scope.crarData.preloadOperationalProviso[$scope.removeindex].actionStatus="D"),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalcancel",function(){$uibModalInstance.closed})})},$scope.followupProvisoTypeFetch=function(){$scope.followupProvisoSpeciailityInvestigationList=[],DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_TYPE,function(response){response.success?$scope.followupProvisoTypeList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoChange=function(){$scope.followupProvisoSpeciailityInvestigationList=[],$scope.followupProvisoSpeciailityInvestigationFetch()},$scope.followupProvisoSpeciailityInvestigationChange=function(){$scope.followupprovisoList.otherInvDescription=""},$scope.followupProvisoSpeciailityInvestigationFetch=function(){$scope.type_code=$.grep($scope.followupProvisoTypeList,function(e){return e.description==$scope.followupprovisoList.type_name}),$scope.followupProvisoSpeciailityInvestigationList=[];var url=null,tempUrl=null;tempUrl=APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL,url=tempUrl+"/"+$scope.type_code[0].code,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL=url,DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION,function(response){response.success?($scope.followupProvisoSpeciailityInvestigationList=response.dataBean,
""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex||($scope.followupprovisoList.speciality_investigation_name=$scope.crarData.preloadFollow[$scope.followupprovisoIndex].fprovisoInvDesc,$scope.followupprovisoList.otherInvDescription=$scope.crarData.preloadFollow[$scope.followupprovisoIndex].otherinvestigation)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL=tempUrl},$scope.followupProvisoDoneByFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_FOLLOWUP_PROVISO_DONE_BY,function(response){if(response.success){$scope.followupProvisoDoneByList=response.dataBean;for(var f=0;f<$scope.followupProvisoDoneByList.length;f++){var parsefollowupProvisoDoneByList=$parse($scope.followupProvisoDoneByList[f].personId);$scope.followupProvisoDoneByList[f].personId=parsefollowupProvisoDoneByList($scope)}}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoFrequencyFetch=function(){DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_FREQUENCY,function(response){response.success?$scope.followupProvisoFrequencyList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.followupprovisosAdd=function(){""!=$scope.followupprovisoList.type_name&&""!=$scope.followupprovisoList.speciality_investigation_name&&"Others"!=$scope.followupprovisoList.speciality_investigation_name&&""!=$scope.followupprovisoList.frequency_name&&"Once"!=$scope.followupprovisoList.frequency_name&&($scope.followupAddDisabled=!1),"Others"==$scope.followupprovisoList.speciality_investigation_name&&""!=$scope.followupprovisoList.otherInvDescription&&null!=$scope.followupprovisoList.otherInvDescription&&"Once"!=$scope.followupprovisoList.frequency_name&&""==$scope.followupprovisoList.onceDate&&($scope.followupAddDisabled=!1),"Others"==$scope.followupprovisoList.speciality_investigation_name||""!=$scope.followupprovisoList.otherInvDescription&&null!=$scope.followupprovisoList.otherInvDescription||"Once"!=$scope.followupprovisoList.frequency_name||""==$scope.followupprovisoList.onceDate||($scope.followupAddDisabled=!1),"Others"==$scope.followupprovisoList.speciality_investigation_name&&""!=$scope.followupprovisoList.otherInvDescription&&null!=$scope.followupprovisoList.otherInvDescription&&"Once"==$scope.followupprovisoList.frequency_name&&""!=$scope.followupprovisoList.onceDate&&($scope.followupAddDisabled=!1),0==$scope.followupAddDisabled?($scope.existtype=$.grep($scope.crarData.preloadFollow,function(e){return e.fprovisoTypeDesc==$scope.followupprovisoList.type_name}),$scope.existspeciailityinvestigation=$.grep($scope.crarData.preloadFollow,function(e){return e.fprovisoInvDesc==$scope.followupprovisoList.speciality_investigation_name}),""!=$scope.followupprovisoList.doneby_name?$scope.existdoneby=$.grep($scope.crarData.preloadFollow,function(e){return e.followupprovisodonebyId==$scope.followupprovisoList.doneby_name}):$scope.existdoneby=[],$scope.existfrequency=$.grep($scope.crarData.preloadFollow,function(e){return e.fprovisoFreDesc==$scope.followupprovisoList.frequency_name}),$scope.existfollowupDate=$.grep($scope.crarData.preloadFollow,function(e){return e.onceDate==$scope.followupprovisoList.onceDate}),0!=$scope.existtype.length&&0!=$scope.existspeciailityinvestigation.length&&0!=$scope.existdoneby.length&&0!=$scope.existfrequency&&0!=$scope.existfollowupDate||($scope.type=$.grep($scope.followupProvisoTypeList,function(e){return e.description==$scope.followupprovisoList.type_name}),$scope.speciailityinvestigation=$.grep($scope.followupProvisoSpeciailityInvestigationList,function(e){return e.actionName==$scope.followupprovisoList.speciality_investigation_name}),""!=$scope.followupprovisoList.doneby_name?$scope.doneby=$.grep($scope.followupProvisoDoneByList,function(e){return e.personId==$scope.followupprovisoList.doneby_name}):$scope.doneby=[{personId:"",name:""}],$scope.frequency=$.grep($scope.followupProvisoFrequencyList,function(e){return e.description==$scope.followupprovisoList.frequency_name}),$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.onceDate),$scope.formats[3]),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex?(""==$scope.followupprovisoList.otherInvDescription&&($scope.followupprovisoList.otherInvDescription=null),""==$scope.followupprovisoList.onceDate||"Invalid Date"==$scope.followupprovisoList.onceDate||"Once"!=$scope.followupprovisoList.frequency_name?$scope.followupDate=null:$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.onceDate),$scope.formats[3]),$scope.crarData.preloadFollow.push({followupProvisoTypeId:$scope.type[0].followupProvisoTypeId,fprovisoTypeDesc:$scope.type[0].description,fprovisoTypeCode:$scope.type[0].code,investigationsId:$scope.speciailityinvestigation[0].actionId,fprovisoInvDesc:$scope.speciailityinvestigation[0].actionName,fprovisoInvCode:$scope.speciailityinvestigation[0].code,followupprovisodonebyId:$scope.doneby[0].personId,fprovisoDonebye:$scope.doneby[0].name,otherinvestigation:$scope.followupprovisoList.otherInvDescription,followupProvisoFrequencyId:$scope.frequency[0].followupProvisoFrequencyId,fprovisoFreCode:$scope.frequency[0].code,fprovisoFreDesc:$scope.frequency[0].description,onceDate:$scope.followupDate,actionStatus:"I"}),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvDescription="",$scope.followupprovisoList.onceDate=""):($scope.crarData.preloadFollow[$scope.followupprovisoIndex].followupProvisoTypeId=$scope.type[0].followupProvisoTypeId,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].fprovisoTypeDesc=$scope.type[0].description,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].fprovisoTypeCode=$scope.type[0].code,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].investigationsId=$scope.speciailityinvestigation[0].actionId,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].fprovisoInvDesc=$scope.speciailityinvestigation[0].actionName,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].fprovisoInvCode=$scope.speciailityinvestigation[0].code,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].followupprovisodonebyId=$scope.doneby[0].personId,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].fprovisoDonebye=$scope.doneby[0].name,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].otherinvestigation=$scope.followupprovisoList.otherInvDescription,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].followupProvisoFrequencyId=$scope.frequency[0].followupProvisoFrequencyId,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].fprovisoFreDesc=$scope.frequency[0].description,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].fprovisoFreCode=$scope.frequency[0].code,$scope.crarData.preloadFollow[$scope.followupprovisoIndex].onceDate="Invalid Date"!=$scope.followupDate&&null!=$scope.followupDate&&""!=$scope.followupDate?$scope.followupDate:"",0!=$scope.crarData.preloadFollow[$scope.followupprovisoIndex].crarFollowupProvisoId&&$scope.crarData.preloadFollow[$scope.followupprovisoIndex].hasOwnProperty("crarFollowupProvisoId")?$scope.crarData.preloadFollow[$scope.followupprovisoIndex].actionStatus="E":$scope.crarData.preloadFollow[$scope.followupprovisoIndex].actionStatus="I",$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvDescription="",$scope.followupprovisoList.onceDate="",$scope.followupprovisoIndex="")),$scope.followupAddDisabled=!0):ModalService.openAlert("alert","success","Please fill all Followup Proviso fields.","null","null")},$scope.followupprovisosEdit=function(index){$scope.followupprovisoList.type_name=$scope.crarData.preloadFollow[index].fprovisoTypeDesc,$scope.followupProvisoSpeciailityInvestigationFetch(),$scope.followupprovisoList.doneby_name=$scope.crarData.preloadFollow[index].followupprovisodonebyId,$scope.followupprovisoList.frequency_name=$scope.crarData.preloadFollow[index].fprovisoFreDesc,$scope.followupprovisoList.onceDate=null!=$scope.crarData.preloadFollow[index].onceDate&&""!=$scope.crarData.preloadFollow[index].onceDate?new Date($scope.crarData.preloadFollow[index].onceDate):"",$scope.followupprovisoIndex=index},$scope.followupprovisosRemove=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removefollowupprovisos",function(){$scope.$on("removefollowupprovisosOk",function(){0==$scope.warningConfirmed&&(0==$scope.crarData.preloadFollow[$scope.removeindex].followupProvisoTypeId?$scope.crarData.preloadFollow.splice($scope.removeindex,1):$scope.crarData.preloadFollow[$scope.removeindex].actionStatus="D"),$scope.warningConfirmed=!0}),$scope.$on("removefollowupprovisoscancel",function(){$uibModalInstance.closed})})},$scope.auditdmeFetch=function(){DataManager.sendRestRequest(null,APIS.GET_AUDIT_DME,function(response){response.success?$scope.auditdmeList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.loadAttachments=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_ATTACHMENTS.URL,url=tempUrl+"/"+$scope.visitDetails.visitId+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.applicantId,APIS.GET_ATTACHMENTS.URL=url,DataManager.sendRestRequest(null,APIS.GET_ATTACHMENTS,function(response){response.success?$scope.attachmentList=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token),APIS.GET_ATTACHMENTS.URL=tempUrl},$scope.getViewAttachment=function(ID){var url=null,tempUrl=null;tempUrl=APIS.VIEW_ATTACHMENTS_DOCUMENT.URL,url=tempUrl+"/"+ID,APIS.VIEW_ATTACHMENTS_DOCUMENT.URL=url,DataManager.sendRestRequest(null,APIS.VIEW_ATTACHMENTS_DOCUMENT,function(response){if(response.success){var content=response.dataBean.docContent,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.docContent,"_blank","location=no,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token),APIS.VIEW_ATTACHMENTS_DOCUMENT.URL=tempUrl},$scope.crarSave=function(){return""==$scope.form.conclusions.$modelValue||null==$scope.form.conclusions.$modelValue?(ModalService.openAlert("alert","Warning","Please fill all conclusion fields"),!1):($scope.crarSaveData.crarID=$scope.visitDetails.visitId,$scope.crarSaveData.applicantID=$scope.visitDetails.applicantId,$scope.crarSaveData.remarksInstructions=$scope.crarData.remarksInstructions,$scope.crarSaveData.auditRemarks=$scope.crarData.auditRemarks,$scope.crarSaveData.dmePerformanceAuditId=$scope.crarData.dmePerformanceAuditId,angular.forEach($scope.crarData.crarPreloadDetails,function(value,key){$scope.crarSaveData.macDetails.push({classId:value.classId,outcomeId:value.outcomeId,restrictionsId:value.restrictionsId,conclusionID:value.conclusionID})}),angular.forEach($scope.crarData.preloadOperationalProviso,function(value,key){$scope.crarSaveData.crarOperationalProviso.push({operationalProvisoId:value.operationalProvisoId,crarOperationalProvisoId:value.craroperationalProvisoId,actionStatus:value.actionStatus})}),angular.forEach($scope.crarData.preloadFollow,function(value,key){value.hasOwnProperty("crarFollowupProvisoId")?$scope.crarSaveData.crarFollowupProviso.push({followupProvisoTypeId:value.followupProvisoTypeId,specialityOrInvestigationId:value.investigationsId,followupProvisoFrequencyId:value.followupProvisoFrequencyId,followupprovisodonebyId:value.followupprovisodonebyId,otherinvestigation:value.otherinvestigation,onceDate:null!=value.onceDate&&""!=value.onceDate?$filter("date")(new Date(value.onceDate),$scope.formats[3]):"",actionStatus:value.actionStatus,crarFollowupProvisoId:value.crarFollowupProvisoId}):$scope.crarSaveData.crarFollowupProviso.push({followupProvisoTypeId:value.followupProvisoTypeId,specialityOrInvestigationId:value.investigationsId,followupProvisoFrequencyId:value.followupProvisoFrequencyId,followupprovisodonebyId:value.followupprovisodonebyId,otherinvestigation:value.otherinvestigation,onceDate:null!=value.onceDate&&""!=value.onceDate?$filter("date")(new Date(value.onceDate),$scope.formats[3]):"",actionStatus:value.actionStatus})}),angular.forEach($scope.crarData.validityDTO,function(value,key){$scope.crarSaveData.validity.push({classId:value.classId,validity:value.validity})}),APIS.CRAR_SAVEDATA.data=$scope.crarSaveData,void DataManager.sendRestRequest(null,APIS.CRAR_SAVEDATA,function(response){response.success?ModalService.openAlert("alert","success",$scope.savemessage,"null","null",function(){$window.location.reload()}):console.log(response.errorMessage)},$scope.uconfig.token))},$scope.crarSubmit=function(){return""==$scope.form.conclusions.$modelValue||null==$scope.form.conclusions.$modelValue?(ModalService.openAlert("alert","Warning","Please fill all conclusion fields"),!1):($scope.crarSaveData.crarID=$scope.visitDetails.visitId,$scope.crarSaveData.applicantID=$scope.visitDetails.applicantId,$scope.crarSaveData.remarksInstructions=$scope.crarData.remarksInstructions,$scope.crarSaveData.auditRemarks=$scope.crarData.auditRemarks,$scope.crarSaveData.dmePerformanceAuditId=$scope.crarData.dmePerformanceAuditId,angular.forEach($scope.crarData.crarPreloadDetails,function(value,key){$scope.crarSaveData.macDetails.push({classId:value.classId,outcomeId:value.outcomeId,restrictionsId:value.restrictionsId,conclusionID:value.conclusionID})}),angular.forEach($scope.crarData.preloadOperationalProviso,function(value,key){$scope.crarSaveData.crarOperationalProviso.push({operationalProvisoId:value.operationalProvisoId,crarOperationalProvisoId:value.craroperationalProvisoId,actionStatus:value.actionStatus})}),angular.forEach($scope.crarData.preloadFollow,function(value,key){value.hasOwnProperty("crarFollowupProvisoId")?$scope.crarSaveData.crarFollowupProviso.push({followupProvisoTypeId:value.followupProvisoTypeId,specialityOrInvestigationId:value.investigationsId,followupProvisoFrequencyId:value.followupProvisoFrequencyId,followupprovisodonebyId:value.followupprovisodonebyId,otherinvestigation:value.otherinvestigation,onceDate:null!=value.onceDate&&""!=value.onceDate?$filter("date")(new Date(value.onceDate),$scope.formats[3]):"",actionStatus:value.actionStatus,crarFollowupProvisoId:value.crarFollowupProvisoId}):$scope.crarSaveData.crarFollowupProviso.push({followupProvisoTypeId:value.followupProvisoTypeId,specialityOrInvestigationId:value.investigationsId,followupProvisoFrequencyId:value.followupProvisoFrequencyId,followupprovisodonebyId:value.followupprovisodonebyId,otherinvestigation:value.otherinvestigation,onceDate:null!=value.onceDate&&""!=value.onceDate?$filter("date")(new Date(value.onceDate),$scope.formats[3]):"",actionStatus:value.actionStatus})}),angular.forEach($scope.crarData.validityDTO,function(value,key){$scope.crarSaveData.validity.push({classId:value.classId,validity:value.validity})}),APIS.CRAR_SAVEDATA.data=$scope.crarSaveData,void DataManager.sendRestRequest(null,APIS.CRAR_SAVEDATA,function(response){response.success?$scope.crarSubmitInner():console.log(response.errorMessage)},$scope.uconfig.token))},$scope.crarSubmitInner=function(){return $scope.crarSubmitData={visitId:"",classes:[]},""==$scope.form.conclusions.$modelValue||null==$scope.form.conclusions.$modelValue?(ModalService.openAlert("alert","Warning","Please fill all conclusion fields"),!1):($scope.crarSubmitData.visitId=$scope.visitDetails.visitId,angular.forEach($scope.crarData.crarPreloadDetails,function(value,key){$scope.crarSubmitData.classes.push({classId:value.classId,conclusionID:value.conclusionID})}),APIS.CRAR_SUBMIT.data=$scope.crarSubmitData,void DataManager.sendRestRequest(null,APIS.CRAR_SUBMIT,function(response){response.success?ModalService.openAlert("alert","success",$scope.submitmessage,"null","null",function(){$location.url("/camb-worklistsetup")}):console.log(response.errorMessages)},$scope.uconfig.token))},$scope.viewMsg=function(provisoFull){ModalService.openAlert("alert","Operational Proviso",provisoFull,"null","null")},$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"dmfar",controller:"DMFactionCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitDetails.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){response.success&&($scope.val=response.dataBean,null!=$scope.val?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmfar.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"dmfar",controller:"DMFactionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})}):$scope.dmfDoAction())},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.dmfdetails=function(){sessionStorage.setItem("viewdmfapplicantid",JSON.stringify($scope.visitDetails.applicantId)),$window.open("#/viewdmf")},$scope.openfullreport=function(){angular.forEach($scope.crarData.crarPreloadDetails,function(kval,kkey){$scope.macForReportList.push(kval.classId)}),APIS.CAMB_COMMON_FULLREPORT.data={applicantId:$scope.visitDetails.applicantId,referenceType:"CR_AR",visitId:$scope.visitDetails.visitId,macIds:$scope.macForReportList},DataManager.sendRestRequest(null,APIS.CAMB_COMMON_FULLREPORT,function(response){if(response.success)if(null!=response.dataBean.pdfFile){var at=window.atob(response.dataBean.pdfFile),unes=unescape(at),innerContents=decodeURIComponent(unes),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()}else ModalService.openAlert("alert","Warning","PDF not available.","null","null");else $log.error("full report error: "+response.errorMessages)},$scope.uconfig.token)},$scope.init()}]).controller("AddOperationalModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","modalParam",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.existingOperationalprovisos=modalParam,$scope.operationalprovisosChecked=[],$scope.operationalprovisosListAdd=[],$scope.operationalprovisosDisabled=[],$scope.dataBind()},$scope.dataBind=function(){$scope.operationalprovisosGridPopup()},$scope.operationalprovisosGridPopup=function(){DataManager.sendRestRequest(null,APIS.GET_OPERATIONAL_PROVISO,function(response){if(response.success){$scope.operationalprovisosListFetch=response.dataBean;for(var o=0;o<$scope.operationalprovisosListFetch.length;o++)$scope.operationalprovisosCheck=[],$scope.operationalprovisosCheck=$.grep($scope.existingOperationalprovisos,function(e){return e.code==$scope.operationalprovisosListFetch[o].code}),$scope.operationalprovisosCheck.length>=1?($scope.operationalprovisosChecked[o]=!0,$scope.operationalprovisosDisabled[o]=!0):($scope.operationalprovisosChecked[o]=!1,$scope.operationalprovisosDisabled[o]=!1)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.operationalprovisosSelected=function(operationalprovisosChecked,index){1==operationalprovisosChecked[index]?$scope.operationalprovisosListAdd.push({actionId:$scope.operationalprovisosListFetch[index].actionId,code:$scope.operationalprovisosListFetch[index].code,actionName:$scope.operationalprovisosListFetch[index].actionName}):$scope.operationalprovisosListAdd.splice($scope.operationalprovisosListFetch.map(function(e){return e.actionId}).indexOf($scope.operationalprovisosListFetch.actionId),1)},$scope.operationalprovisosGrid=function(){$uibModalInstance.close($scope.existingOperationalprovisos.concat($scope.operationalprovisosListAdd))},$scope.cancel=function(){for(var c=0;c<$scope.operationalprovisosListAdd.length;c++)$scope.operationalprovisosListAdd.splice(c,1);$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app.camb").controller("CambreviewCtrl",["$scope","$state","APIS",function($scope,$state,APIS){$scope.init=function(){},$scope.init()}]),angular.module("app").controller("CradhocCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModal","$location","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModal,$location,ModalService){return $scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentAction=$scope.visitDetails.applicantDetails.currentAction,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userConfig||$scope.userConfig.userSeqId?($scope.init=function(){$scope.preLoadData={},$scope.operationProvisoListAdd=[],$scope.operationProvisoListDel=[],$scope.followuoProvisoListAdd=[],$scope.followuoProvisoListDel=[],$scope.followupprovisoList={type_name:"",speciality_investigation_name:"",doneby_name:"",frequency_name:"",otherInvDescription:"",followupProvisoDate:""},$scope.followupAddDisabled=!0,$scope.macList=[],$scope.macvalidityList=[],$scope.ristrictionDisabled=[],$scope.SpeciailityInvestigation_code="",$scope.followupprovisoIndex="",$scope.changeMedicalAssessment={checked:!1},$scope.currentMedicalAssessment=!1,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.fromdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","dd/MM/yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[1],$scope.formatdate=$scope.formats[0],$scope.saveCambdata={},$scope.saveCambdata={adhocId:null,applicantId:null,currentMedaicalAssessmentStatus:"N",changedStatus:"N",adhocDetailsList:[],operationalProvisoList:[],remarksInstructions:"",followuoProvisoList:[],macClassList:[]},$scope.frmInvalid=!1,$scope.databind()},$scope.databind=function(){$scope.getPreLoadData(),$scope.loadAttachments(),$scope.$watch("preLoadData.remarksInstructions",function(newVal,oldVal){newVal.length>1e3&&($scope.preLoadData.remarksInstructions=oldVal,ModalService.openAlert("alert","Warning","Please Enter Maximum 1000 Characters","null","null"))})},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.getPreLoadData=function(){APIS.GET_CAMB_CR_ADHOC_PRELOAD.data={applicantId:$scope.visitDetails.applicantId,adhocId:$scope.visitDetails.visitId},DataManager.sendRestRequest(null,APIS.GET_CAMB_CR_ADHOC_PRELOAD,function(response){response.success?($scope.preLoadData=response.dataBean,$scope.macList=$scope.preLoadData.existingadhocDetailsList,$scope.macvalidityList=$scope.preLoadData.existingmacClassList,angular.forEach($scope.macList,function(value,key){0!=value.outcomeId&&($scope.macList[key].outcomeCode=$.grep($scope.preLoadData.outCome,function(e){return e.actionId==value.outcomeId})[0].code)})):$log.error("getPreLoadData"+response.errorMessages)},$scope.userConfig.token)},$scope.changeMedicalAssessmentClick=function(){$scope.changeMedicalAssessment.checked===!0?$scope.currentMedicalAssessment=!0:$scope.currentMedicalAssessment=!1},$scope.outcomeChange=function(outcomeCode,index){$scope.macList[index].outcomeId=$.grep($scope.preLoadData.outCome,function(e){return e.code==outcomeCode})[0].actionId,"FITWR"===outcomeCode||null===outcomeCode?$scope.ristrictionDisabled[index]=!1:($scope.ristrictionDisabled[index]=!0,$scope.macList[index].restrictionsId=0)},$scope.addOperationalProvisos=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/AddOperationalProvisos.html",controller:"CRAdhocOperationalModalCtrl",resolve:{modalParam:function(){return $scope.preloadOperationalProviso=[],angular.forEach($scope.preLoadData.existingoperationalProvisoList,function(value,key){$scope.preloadOperationalProviso.push({actionId:value.selectedoperationalProvisoId,code:value.code,actionName:value.description})}),$scope.preloadOperationalProviso}}}).result.then(function(selectedItem){"string"!=typeof selectedItem&&($scope.newoperationalProvisoList=[],angular.forEach(selectedItem,function(value,key){$scope.newoperationalProvisoList.push({crOperationalprovisoId:"",selectedoperationalProvisoId:value.actionId,code:value.code,actionStatus:"",description:value.actionName}),$scope.operationalProvisoListCheck=$.grep($scope.preLoadData.existingoperationalProvisoList,function(e){return e.code==value.code}),0==$scope.operationalProvisoListCheck.length?($scope.newoperationalProvisoList[key].crOperationalprovisoId=0,$scope.newoperationalProvisoList[key].actionStatus="I"):($scope.newoperationalProvisoList[key].crOperationalprovisoId=$scope.operationalProvisoListCheck[0].crOperationalprovisoId,$scope.newoperationalProvisoList[key].actionStatus=$scope.operationalProvisoListCheck[0].actionStatus)}),$scope.preLoadData.existingoperationalProvisoList=[],$scope.preLoadData.existingoperationalProvisoList=$scope.newoperationalProvisoList,$scope.saveCambdata.changedStatus="Y")},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.viewMsg=function(provisoFull){ModalService.openAlert("alert","Operational Proviso",provisoFull,"null","null")},$scope.removeOperationalProvisos=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"remove",function(){$scope.$on("removeOk",function(){0==$scope.warningConfirmed&&($scope.operationProvisoListDel.push({crOperationalprovisoId:$scope.preLoadData.existingoperationalProvisoList[index].crOperationalprovisoId,operationalProvisoId:$scope.preLoadData.existingoperationalProvisoList[index].selectedoperationalProvisoId,actionStatus:"D"}),$scope.preLoadData.existingoperationalProvisoList.splice($scope.removeindex,1),$scope.saveCambdata.changedStatus="Y"),$scope.warningConfirmed=!0}),$scope.$on("removecancel",function(){$uibModalInstance.closed})})},$scope.followupProvisoChange=function(){$scope.followupProvisoSpeciailityInvestigationList=[],$scope.followupProvisoSpeciailityInvestigationFetch()},$scope.followupProvisoSpeciailityInvestigationChange=function(){$scope.SpeciailityInvestigation_code=$.grep($scope.followupProvisoSpeciailityInvestigationList,function(e){return e.description==$scope.followupprovisoList.speciality_investigation_name})[0].code,"OTH"==$scope.SpeciailityInvestigation_code&&($scope.followupprovisoList.otherInvDescription="")},$scope.followupProvisoSpeciailityInvestigationFetch=function(){$scope.type_code=$.grep($scope.preLoadData.followupProvisoType,function(e){return e.actionName==$scope.followupprovisoList.type_name}),$scope.followupProvisoSpeciailityInvestigationList=[];var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_FOLLOWUP_SUBTYPE.URL,url=tempUrl+"/"+$scope.type_code[0].code,APIS.GET_CAMB_FOLLOWUP_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_FOLLOWUP_SUBTYPE,function(response){response.success?($scope.followupProvisoSpeciailityInvestigationList=response.dataBean,""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex||($scope.followupprovisoList.speciality_investigation_name=$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].speciality_investigation_name,$scope.SpeciailityInvestigation_code=$.grep($scope.followupProvisoSpeciailityInvestigationList,function(e){return e.description==$scope.followupprovisoList.speciality_investigation_name})[0].code,$scope.followupprovisoList.otherInvDescription=$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].otherInvestigation)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token),APIS.GET_CAMB_FOLLOWUP_SUBTYPE.URL=tempUrl},$scope.followupprovisosAdd=function(){""!=$scope.followupprovisoList.type_name&&""!=$scope.followupprovisoList.speciality_investigation_name&&"OTH"!=$scope.SpeciailityInvestigation_code&&""!=$scope.followupprovisoList.frequency_name&&"Once"!=$scope.followupprovisoList.frequency_name&&($scope.followupAddDisabled=!1),"OTH"==$scope.SpeciailityInvestigation_code&&""!=$scope.followupprovisoList.otherInvDescription&&"Once"!=$scope.followupprovisoList.frequency_name&&""==$scope.followupprovisoList.followupProvisoDate&&($scope.followupAddDisabled=!1),"OTH"!=$scope.SpeciailityInvestigation_code&&""==$scope.followupprovisoList.otherInvDescription&&"Once"==$scope.followupprovisoList.frequency_name&&""!=$scope.followupprovisoList.followupProvisoDate&&($scope.followupAddDisabled=!1),"OTH"==$scope.SpeciailityInvestigation_code&&""!=$scope.followupprovisoList.otherInvDescription&&"Once"==$scope.followupprovisoList.frequency_name&&""!=$scope.followupprovisoList.followupProvisoDate&&($scope.followupAddDisabled=!1),0==$scope.followupAddDisabled?($scope.existtype=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.type_name==$scope.followupprovisoList.type_name}),$scope.existspeciailityinvestigation=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.speciality_investigation_name==$scope.followupprovisoList.speciality_investigation_name}),""!=$scope.followupprovisoList.doneby_name?$scope.existdoneby=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.doneby_name==$scope.followupprovisoList.doneby_name}):$scope.existdoneby=[],$scope.existfrequency=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.frequency_name==$scope.followupprovisoList.frequency_name}),$scope.existfollowupDate=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.followupDate==$scope.followupprovisoList.followupProvisoDate}),0!=$scope.existtype.length&&0!=$scope.existspeciailityinvestigation.length&&0!=$scope.existdoneby.length&&0!=$scope.existfrequency&&0!=$scope.existfollowupDate||($scope.type=$.grep($scope.preLoadData.followupProvisoType,function(e){return e.actionName==$scope.followupprovisoList.type_name}),$scope.speciailityinvestigation=$.grep($scope.followupProvisoSpeciailityInvestigationList,function(e){return e.description==$scope.followupprovisoList.speciality_investigation_name;
}),""!=$scope.followupprovisoList.doneby_name?$scope.doneby=$.grep($scope.preLoadData.doneBy,function(e){return e.actionName==$scope.followupprovisoList.doneby_name}):$scope.doneby=[{personId:"",name:""}],$scope.frequency=$.grep($scope.preLoadData.frequency,function(e){return e.code==$scope.followupprovisoList.frequency_name}),$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.followupProvisoDate),$scope.formats[2]),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex?(""==$scope.followupprovisoList.followupProvisoDate||"Invalid Date"==$scope.followupprovisoList.followupProvisoDate||"Once"!=$scope.followupprovisoList.frequency_name?$scope.followupDate=null:$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.followupProvisoDate),$scope.formats[2]),$scope.preLoadData.existingfollowuoProvisoList.push({crfollowupprovisoId:0,type_id:$scope.type[0].actionId,type_name:$scope.type[0].actionName,speciality_investigation_id:$scope.speciailityinvestigation[0].reportsId,speciality_investigation_name:$scope.speciailityinvestigation[0].description,doneby_id:$scope.doneby[0].actionId,doneby_name:$scope.doneby[0].actionName,otherInvestigation:$scope.followupprovisoList.otherInvDescription,frequency_id:$scope.frequency[0].actionId,frequency_name:$scope.frequency[0].code,followupDate:$scope.followupDate,actionStatus:"I"}),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvDescription="",$scope.followupprovisoList.followupProvisoDate=""):($scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].crfollowupprovisoId=$scope.followupprovisoList.crfollowupprovisoId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].type_id=$scope.type[0].actionId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].type_name=$scope.type[0].actionName,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].speciality_investigation_id=$scope.speciailityinvestigation[0].reportsId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].speciality_investigation_name=$scope.speciailityinvestigation[0].description,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].doneby_id=$scope.doneby[0].actionId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].doneby_name=$scope.doneby[0].actionName,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].otherInvestigation=$scope.followupprovisoList.otherInvDescription,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].frequency_id=$scope.frequency[0].actionId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].frequency_name=$scope.frequency[0].code,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].followupDate="Invalid Date"!=$scope.followupDate&&null!=$scope.followupDate&&""!=$scope.followupDate?$scope.followupDate:"",0==$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].crfollowupprovisoId?$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].actionStatus="I":$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].actionStatus="E",$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvDescription="",$scope.followupprovisoList.followupProvisoDate="",$scope.followupprovisoIndex=""),$scope.saveCambdata.changedStatus="Y",$scope.followupAddDisabled=!0)):ModalService.openAlert("alert","success","Please fill all Followup Proviso fields.","null","null")},$scope.followupprovisosEdit=function(index){$scope.followupprovisoList.type_name=$scope.preLoadData.existingfollowuoProvisoList[index].type_name,$scope.followupProvisoSpeciailityInvestigationFetch(),$scope.followupprovisoList.doneby_name=$scope.preLoadData.existingfollowuoProvisoList[index].doneby_name,$scope.followupprovisoList.frequency_name=$scope.preLoadData.existingfollowuoProvisoList[index].frequency_name,$scope.followupprovisoList.followupProvisoDate=null!=$scope.preLoadData.existingfollowuoProvisoList[index].followupDate&&""!=$scope.preLoadData.existingfollowuoProvisoList[index].followupDate?new Date($scope.preLoadData.existingfollowuoProvisoList[index].followupDate):"",$scope.followupprovisoList.crfollowupprovisoId=$scope.preLoadData.existingfollowuoProvisoList[index].crfollowupprovisoId,$scope.followupprovisoIndex=index},$scope.followupprovisosRemove=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removefollowupprovisos",function(){$scope.$on("removefollowupprovisosOk",function(){0==$scope.warningConfirmed&&($scope.followuoProvisoListDel.push({crfollowupprovisoId:$scope.preLoadData.existingfollowuoProvisoList[index].crfollowupprovisoId,followupProvisoTypeId:$scope.preLoadData.existingfollowuoProvisoList[index].type_id,specialorotherInvestigationId:$scope.preLoadData.existingfollowuoProvisoList[index].speciality_investigation_id,otherInvestigation:$scope.preLoadData.existingfollowuoProvisoList[index].otherInvestigation,doneBy:$scope.preLoadData.existingfollowuoProvisoList[index].doneby_id,followupFrequencyId:$scope.preLoadData.existingfollowuoProvisoList[index].frequency_id,followupDate:$filter("date")(new Date($scope.preLoadData.existingfollowuoProvisoList[index].followupDate),$scope.formats[2]),actionStatus:"D"}),$scope.preLoadData.existingfollowuoProvisoList.splice($scope.removeindex,1),$scope.saveCambdata.changedStatus="Y"),$scope.warningConfirmed=!0}),$scope.$on("removefollowupprovisoscancel",function(){$uibModalInstance.closed})})},$scope.loadAttachments=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_ATTACHMENTS.URL,url=tempUrl+"/"+$scope.visitDetails.visitId+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.applicantId,APIS.GET_ATTACHMENTS.URL=url,DataManager.sendRestRequest(null,APIS.GET_ATTACHMENTS,function(response){response.success?$scope.attachmentList=response.dataBean:console.log(response.errorMessage)},$scope.userConfig.token),APIS.GET_ATTACHMENTS.URL=tempUrl},$scope.getViewAttachment=function(documentid){APIS.LME_ATTACH_VIEW_DOC.data={documentId:documentid},DataManager.sendRestRequest(null,APIS.LME_ATTACH_VIEW_DOC,function(response){if(response.success){var content=response.dataBean[0].file,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean[0].file,"_blank","location=no,enableviewportscale=yes")}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token)},$scope.cambSave=function(operationType){if("save"==operationType&&($scope.saveCambdata={},$scope.saveCambdata={adhocId:null,applicantId:null,currentMedaicalAssessmentStatus:"N",changedStatus:"N",adhocDetailsList:[],operationalProvisoList:[],remarksInstructions:"",followuoProvisoList:[],macClassList:[]},$scope.changeMedicalAssessment.checked===!0&&($scope.saveCambdata.currentMedaicalAssessmentStatus="Y"),$scope.saveCambdata.savecloseAction="save",$scope.saveCambdata.adhocId=$scope.preLoadData.adhocId,$scope.saveCambdata.applicantId=$scope.visitDetails.applicantId,$scope.saveCambdata.remarksInstructions=$scope.preLoadData.remarksInstructions,angular.forEach($scope.macList,function(value,key){var macobj={classId:value.classId,adhocDetailId:value.adhocDetailId,outcomeId:value.outcomeId,restrictionsId:value.restrictionsId,conclusionId:value.conclusionId,classchangedStatus:"N"};$scope.preLoadData.existingadhocDetailsList[key].classId==value.classId&&($scope.preLoadData.existingadhocDetailsList[key].conclusionId!=value.conclusionId&&(macobj.classchangedStatus="Y"),$scope.preLoadData.existingadhocDetailsList[key].outcomeId!=value.outComeId&&(macobj.classchangedStatus="Y"),$scope.preLoadData.existingadhocDetailsList[key].restrictionsId!=value.restrictionId&&(macobj.classchangedStatus="Y")),$scope.saveCambdata.adhocDetailsList.push(macobj)}),angular.forEach($scope.preLoadData.existingoperationalProvisoList,function(value,key){$scope.operationProvisoListAdd.push({crOperationalprovisoId:value.crOperationalprovisoId,operationalProvisoId:value.selectedoperationalProvisoId,actionStatus:value.actionStatus})}),""!=$scope.operationProvisoListDel||"0"!=$scope.operationProvisoListDel.length?$scope.saveCambdata.operationalProvisoList=$scope.operationProvisoListAdd.concat($scope.operationProvisoListDel):$scope.saveCambdata.operationalProvisoList=$scope.operationProvisoListAdd,angular.forEach($scope.preLoadData.existingfollowuoProvisoList,function(value,key){$scope.followuoProvisoListAdd.push({crfollowupprovisoId:value.crfollowupprovisoId,followupProvisoTypeId:value.type_id,specialorotherInvestigationId:value.speciality_investigation_id,otherInvestigation:value.otherInvestigation,doneBy:value.doneby_id,followupFrequencyId:value.frequency_id,followupDate:value.followupDate,actionStatus:value.actionStatus})}),""!=$scope.followuoProvisoListDel||"0"!=$scope.followuoProvisoListDel.length?$scope.saveCambdata.followuoProvisoList=$scope.followuoProvisoListAdd.concat($scope.followuoProvisoListDel):$scope.saveCambdata.followuoProvisoList=$scope.followuoProvisoListAdd,angular.forEach($scope.macvalidityList,function(value,key){var validityobj={classId:value.classId,validitymonthValue:value.validitymonthValue};angular.forEach($scope.preLoadData.existingmacClassList,function(oldValue,oldKey){oldValue.classId==value.classId&&oldValue.validitymonthValue!=value.validitymonthValue&&($scope.saveCambdata.changedStatus="Y")}),$scope.saveCambdata.macClassList.push(validityobj)}),APIS.GET_CAMB_CR_ADHOC_SAVE.data=$scope.saveCambdata,DataManager.sendRestRequest(null,APIS.GET_CAMB_CR_ADHOC_SAVE,function(response){response.success?ModalService.openAlert("alert","success","Saved Successfully.","null","null",function(){$window.location.reload()}):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token)),"close"==operationType){if($scope.ristrictionValidation=!1,$scope.saveCambdata={},$scope.saveCambdata={adhocId:null,applicantId:null,currentMedaicalAssessmentStatus:"N",changedStatus:"N",adhocDetailsList:[],operationalProvisoList:[],remarksInstructions:"",followuoProvisoList:[],macClassList:[]},(""==$scope.form.outcomes.$modelValue||null==$scope.form.outcomes.$modelValue)&&1==$scope.changeMedicalAssessment.checked)return ModalService.openAlert("alert","Warning","Please fill all outcome fields"),!1;if(""==$scope.form.conclusions.$modelValue||null==$scope.form.conclusions.$modelValue)return ModalService.openAlert("alert","Warning","Please fill all conclusion fields"),!1;if(angular.forEach($scope.macList,function(value,key){0==$scope.ristrictionDisabled[key]&&0==$scope.macList[key].restrictionsId&&($scope.ristrictionValidation=!0)}),1==$scope.ristrictionValidation&&1==$scope.changeMedicalAssessment.checked)return ModalService.openAlert("alert","Warning","Please fill all restriction fields"),!1;$scope.changeMedicalAssessment.checked===!0&&($scope.saveCambdata.currentMedaicalAssessmentStatus="Y"),$scope.saveCambdata.adhocId=$scope.preLoadData.adhocId,$scope.saveCambdata.applicantId=$scope.visitDetails.applicantId,$scope.saveCambdata.remarksInstructions=$scope.preLoadData.remarksInstructions,angular.forEach($scope.macList,function(value,key){var macobj={classId:value.classId,adhocDetailId:value.adhocDetailId,outcomeId:value.outcomeId,restrictionsId:value.restrictionsId,conclusionId:value.conclusionId,classchangedStatus:"N"};$scope.preLoadData.existingadhocDetailsList[key].classId==value.classId&&($scope.preLoadData.existingadhocDetailsList[key].conclusionId!=value.conclusionId&&(macobj.classchangedStatus="Y"),$scope.preLoadData.existingadhocDetailsList[key].outcomeId!=value.outComeId&&(macobj.classchangedStatus="Y"),$scope.preLoadData.existingadhocDetailsList[key].restrictionsId!=value.restrictionId&&(macobj.classchangedStatus="Y")),$scope.saveCambdata.adhocDetailsList.push(macobj)}),angular.forEach($scope.preLoadData.existingoperationalProvisoList,function(value,key){$scope.operationProvisoListAdd.push({crOperationalprovisoId:value.crOperationalprovisoId,operationalProvisoId:value.selectedoperationalProvisoId,actionStatus:value.actionStatus})}),""!=$scope.operationProvisoListDel||"0"!=$scope.operationProvisoListDel.length?$scope.saveCambdata.operationalProvisoList=$scope.operationProvisoListAdd.concat($scope.operationProvisoListDel):$scope.saveCambdata.operationalProvisoList=$scope.operationProvisoListAdd,angular.forEach($scope.preLoadData.existingfollowuoProvisoList,function(value,key){$scope.followuoProvisoListAdd.push({crfollowupprovisoId:value.crfollowupprovisoId,followupProvisoTypeId:value.type_id,specialorotherInvestigationId:value.speciality_investigation_id,otherInvestigation:value.otherInvestigation,doneBy:value.doneby_id,followupFrequencyId:value.frequency_id,followupDate:value.followupDate,actionStatus:value.actionStatus})}),""!=$scope.followuoProvisoListDel||"0"!=$scope.followuoProvisoListDel.length?$scope.saveCambdata.followuoProvisoList=$scope.followuoProvisoListAdd.concat($scope.followuoProvisoListDel):$scope.saveCambdata.followuoProvisoList=$scope.followuoProvisoListAdd,angular.forEach($scope.macvalidityList,function(value,key){var validityobj={classId:value.classId,validitymonthValue:value.validitymonthValue};angular.forEach($scope.preLoadData.existingmacClassList,function(oldValue,oldKey){oldValue.classId==value.classId&&oldValue.validitymonthValue!=value.validitymonthValue&&($scope.saveCambdata.changedStatus="Y")}),$scope.saveCambdata.macClassList.push(validityobj)}),ModalService.openAlert("confirm","warning","Are you sure you want to close?",$scope,"cradhoc",function(){}),$scope.$on("cradhocOk",function(){$scope.saveCambdata.savecloseAction="close",APIS.GET_CAMB_CR_ADHOC_SAVE.data=$scope.saveCambdata,DataManager.sendRestRequest(null,APIS.GET_CAMB_CR_ADHOC_SAVE,function(response){response.success?$state.go("cambworklistsetup"):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token)}),$scope.$on("cradhoccancel",function(){$uibModalInstance.dismiss("cancel")})}},$scope.fromdateOption={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.dmfadhocbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitDetails.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){response.success&&($scope.val=response.dataBean,null!=$scope.val?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmfar.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"dmfadhoc",controller:"DMFactionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})}):$scope.dmfadhocAction())},$scope.userConfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.dmfadhocAction=function(){$uibModal.open({animation:!0,templateUrl:"dmfadhoc",controller:"DMFactionCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},void $scope.init()):($state.go("login"),!1)}]).controller("CRAdhocOperationalModalCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModalInstance","$rootScope","ModalService","modalParam",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope,ModalService,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.existingOperationalprovisos=modalParam,$scope.operationalprovisosChecked=[],$scope.operationalprovisosListAdd=[],$scope.operationalprovisosDisabled=[],$scope.dataBind()},$scope.dataBind=function(){$scope.operationalprovisosGridPopup()},$scope.operationalprovisosGridPopup=function(){DataManager.sendRestRequest(null,APIS.GET_OPERATIONAL_PROVISO,function(response){if(response.success){$scope.operationalprovisosListFetch=response.dataBean;for(var o=0;o<$scope.operationalprovisosListFetch.length;o++)$scope.operationalprovisosCheck=[],$scope.operationalprovisosCheck=$.grep($scope.existingOperationalprovisos,function(e){return e.code==$scope.operationalprovisosListFetch[o].code}),$scope.operationalprovisosCheck.length>=1?($scope.operationalprovisosChecked[o]=!0,$scope.operationalprovisosDisabled[o]=!0):($scope.operationalprovisosChecked[o]=!1,$scope.operationalprovisosDisabled[o]=!1)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.operationalprovisosSelected=function(operationalprovisosChecked,index){1==operationalprovisosChecked[index]?$scope.operationalprovisosListAdd.push({actionId:$scope.operationalprovisosListFetch[index].actionId,code:$scope.operationalprovisosListFetch[index].code,actionName:$scope.operationalprovisosListFetch[index].actionName}):$scope.operationalprovisosListAdd.splice($scope.operationalprovisosListFetch.map(function(e){return e.actionId}).indexOf($scope.operationalprovisosListFetch.actionId),1)},$scope.operationalprovisosGrid=function(){$uibModalInstance.close($scope.existingOperationalprovisos.concat($scope.operationalprovisosListAdd))},$scope.cancel=function(){for(var c=0;c<$scope.operationalprovisosListAdd.length;c++)$scope.operationalprovisosListAdd.splice(c,1);$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("CradhocFullReportCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window",function($scope,$filter,$state,APIS,$location,DataManager,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.visitDetails.visitId=parseInt($scope.visitDetails.visitId),$scope.applicantuserId=$scope.visitDetails.applicantuserId,$scope.macappliedClass="Class ",$scope.fitnessGrid=[],$scope.physicanData={},$scope.operationalProvisoGrid=[],$scope.followUpProvisoGrid=[],$scope.databind(),$scope.isViewPDF=!1,$location.search().viewPDF&&($scope.isViewPDF=!0),$scope.isViewPDF&&$scope.getProcessSummary()},$scope.databind=function(){$scope.getApplicant(),$scope.getCAMB()},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.applicantuserId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean,$scope.applicantInfo.photo&&angular.element("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.applicantInfo.photo))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.getCAMB=function(){APIS.GET_CAMB_CR_ADHOC_PRELOAD.data={adhocId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.GET_CAMB_CR_ADHOC_PRELOAD,function(response){response.success?($scope.preLoadData=response.dataBean,console.log("preload",JSON.stringify($scope.preLoadData)),$scope.preLoadData.fullReportDTO&&($scope.physicanData=$scope.preLoadData.fullReportDTO[0],$scope.physicanData.changeFit=null==$scope.physicanData.changeFit?"No":$scope.physicanData.changeFit),angular.forEach($scope.preLoadData.existingadhocDetailsList,function(value,key){var desc="Class "+value.classId;$scope.macappliedClass=$scope.macappliedClass+value.classId+"/";var fitnessObject={classId:value.classId,mac_code:value.classCode,macdesc:desc,restrictionId:value.restrictionsId,restrictionsdesc:value.restrictionDescription,conclusionId:value.restrictionsId,conclusionDesc:value.conclusionDescription,outcomeId:value.outComeId,outcomedesc:value.outcomeDescription,validity:null==value.validity||""==value.validity?"":value.validity+" months",effectiveDate:$scope.preLoadData.fullReportDTO[0].cmabstartDate,expiryDate:value.expiryDate};$scope.fitnessGrid.push(fitnessObject)}),$scope.setRestrictionCombo(),$scope.macappliedClass=$scope.macappliedClass.slice(0,-1),$scope.preLoadData.existingoperationalProvisoList&&angular.forEach($scope.preLoadData.existingoperationalProvisoList,function(value,key){var opObject={actionName:value.description,actionId:value.selectedoperationalProvisoId,code:value.code};$scope.operationalProvisoGrid.push(opObject)}),angular.forEach($scope.preLoadData.existingfollowuoProvisoList,function(fvalue,fkey){var FpprovisioObj={doneby_id:fvalue.doneby_id,doneby_name:fvalue.doneby_name,followupDate:fvalue.followupDate,frequency_id:fvalue.frequency_id,frequency_name:fvalue.frequency_name,other_investigation_id:fvalue.otherInvestigation,speciality_investigation_id:fvalue.speciality_investigation_id,speciality_investigation_name:fvalue.speciality_investigation_name,type_id:fvalue.type_id,type_name:fvalue.type_name};$scope.followUpProvisoGrid.push(FpprovisioObj)})):console.log("response.errorMessages",response)},$scope.uconfig.token)},$scope.getProcessSummary=function(){switch($scope.visitDetails.applicantDetails.processStatusPageCode){case"CAMBVETTING":$scope.processFunction="VETTING";break;case"CAMBCOMPLETED":$scope.processFunction="COMPLETED";break;case"CAMBABORTED":$scope.processFunction="ABORT";break;case"CAMBEXPIRED":$scope.processFunction="EXPIRED";break;default:$scope.processFunction="VETTING"}var url=null,tempUrl=null;tempUrl=APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL,url=tempUrl+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.visitId+"/"+$scope.processFunction,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY,function(response){response.success?$scope.processSummary=response.dataBean.processSummary:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=tempUrl},$scope.setRestrictionCombo=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_RESTRICTIONS.URL,angular.forEach($scope.fitnessGrid,function(value,key){var mac_code="C"+value.classId;url=tempUrl+"/"+mac_code,APIS.GET_RESTRICTIONS.URL=url,DataManager.sendRestRequest(null,APIS.GET_RESTRICTIONS,function(response){response.success?angular.forEach(response.dataBean,function(rvalue,rkey){value.restrictionId==rvalue.restrictionsId&&(value.restrictionsdesc=rvalue.restriction)}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),console.log("$scope.fitnessGrid",$scope.fitnessGrid),APIS.GET_RESTRICTIONS.URL=tempUrl})},$scope.init()}]),angular.module("app").controller("CrarFullReportPdfCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","ModalService","modalParam","$uibModalInstance",function($scope,$filter,$state,APIS,$location,DataManager,$window,ModalService,modalParam,$uibModalInstance){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userSeqId=$scope.uconfig.userSeqId,$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.visitDetails.visitId=parseInt($scope.visitDetails.visitId),$scope.applicantuserId=$scope.visitDetails.applicantuserId,$scope.macappliedClass="Class ",$scope.fitnessGrid=[],$scope.physicanData={},$scope.operationalProvisoGrid=[],$scope.followUpProvisoGrid=[],$scope.ViewPopupValues=modalParam.applicantParam,$scope.ViewPopupApplicantId=$scope.ViewPopupValues.applicantId,$scope.ViewPopupVisitType=$scope.ViewPopupValues.visitType,$scope.ViewPopupVisitId=$scope.ViewPopupValues.visitId,$scope.databind(),$scope.isViewPDF=!1,$location.search().viewPDF&&($scope.isViewPDF=!0),$scope.isViewPDF&&$scope.getProcessSummary()},$scope.databind=function(){console.log("funcitoncalled"),$scope.getApplicant(),$scope.getCAMB()},$scope.confirmPublish=function(){var enURI=encodeURIComponent($("#submission").html()),es=escape(enURI);$scope.viewProVal=window.btoa(es),$scope.currentDate=$filter("date")(new Date,"dd-MMM-yyyy"),$scope.fileName="MR_"+$scope.ViewPopupVisitType+"_"+$scope.ViewPopupApplicantId+"_"+$scope.currentDate+".pdf";var params={refId:$scope.ViewPopupVisitId,type:$scope.ViewPopupVisitType,pdffile:$scope.viewProVal,fileName:$scope.fileName,applicantid:$scope.ViewPopupApplicantId,id:$scope.ViewPopupVisitId,personId:$scope.userSeqId};APIS.CAMB_PUBLISH_VETTING.data=params,DataManager.sendRestRequest(null,APIS.CAMB_PUBLISH_VETTING,function(response){response.success?($uibModalInstance.dismiss("cancel"),ModalService.openAlert("alert","success","Vetting Published Successfully","null","null",function(){$window.location.reload()})):console.log("CAMB Publish Vetting Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.applicantuserId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean,$scope.applicantInfo.photo&&angular.element("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.applicantInfo.photo))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.getCAMB=function(){APIS.GETPRELOADCRAR.data={crarID:$scope.visitDetails.visitId,applicantID:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.GETPRELOADCRAR,function(response){response.success?($scope.preLoadData=response.dataBean,$scope.preLoadData.fullreportDTO||($scope.physicanData=$scope.preLoadData.fullreportdto[0]),angular.forEach($scope.preLoadData.crarPreloadDetails,function(value,key){"Class "+value.classId;$scope.macappliedClass=$scope.macappliedClass+value.classId+"/";var fitnessObject={classId:value.classId,mac_code:value.mac_code,macdesc:value.macdesc,conclusion:value.conclusionID,conclusiondesc:value.conclusiondesc,restrictions:value.restrictionsId,restrictionsdesc:value.restrictionsdesc,outcomeId:value.outcomeId,outcomedesc:value.outcomedesc,validity:value.validity,effectiveDate:value.effectiveDate,expiryDate:value.expireDate};angular.forEach($scope.preLoadData.validityDTO,function(vvalue,vkey){vvalue.classId==value.classId&&(fitnessObject.validity=vvalue.validity,fitnessObject.expiryDate=vvalue.expireDate)}),angular.forEach($scope.preLoadData,function(value1,key1){console.log(value1),"Fit"!=value1&&console.log("s")}),$scope.fitnessGrid.push(fitnessObject),console.log($scope.fitnessGrid)}),$scope.macappliedClass=$scope.macappliedClass.slice(0,-1),$scope.preLoadData.preloadOperationalProviso&&angular.forEach($scope.preLoadData.preloadOperationalProviso,function(value,key){var opObject={actionName:value.operationalProvisoIdDesc,actionId:value.operationalProvisoId,code:value.operationalProvisoIdCode};$scope.operationalProvisoGrid.push(opObject)}),angular.forEach($scope.preLoadData.preloadFollow,function(fvalue,fkey){var FpprovisioObj={lmbfollowupProvisoId:fvalue.followupProvisoId,doneby_id:fvalue.followupprovisodonebyId,doneby_name:fvalue.fprovisoDonebye,followupDate:fvalue.followupProvisoDate,frequency_id:fvalue.followupProvisoFrequencyId,frequency_name:fvalue.fprovisoFreDesc,other_investigation_id:fvalue.otherinvestigations,speciality_investigation_id:fvalue.investigationsId,speciality_investigation_name:fvalue.fprovisoInvDesc,type_id:fvalue.followupProvisoTypeId,type_name:fvalue.fprovisoTypeDesc,type_code:fvalue.fprovisoTypeCode};$scope.followUpProvisoGrid.push(FpprovisioObj)})):$log.error("GET_CAMB_CRLAMB_PRELOAD"+response.errorMessages)},$scope.uconfig.token)},$scope.getProcessSummary=function(){switch($scope.visitDetails.applicantDetails.processStatusPageCode){case"CAMBVETTING":$scope.processFunction="VETTING";break;case"CAMBCOMPLETED":$scope.processFunction="COMPLETED";break;case"CAMBABORTED":$scope.processFunction="ABORT";break;case"CAMBEXPIRED":$scope.processFunction="EXPIRED";break;default:$scope.processFunction="VETTING"}var url=null,tempUrl=null;tempUrl=APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL,url=tempUrl+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.visitId+"/"+$scope.processFunction,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY,function(response){response.success?$scope.processSummary=response.dataBean.processSummary:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=tempUrl},$scope.init()}]),angular.module("app.camb").controller("CrlmabCtrl",["$scope","$state","APIS",function($scope,$state,APIS){$scope.init=function(){},$scope.init()}]),angular.module("app.camb").controller("CrlmabpostCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService){$scope.init=function(){console.log("rootscope",$rootScope)},$scope.init()}]),angular.module("app.camb").controller("DiseaseRegistryCtrl",["$scope","$state","APIS","DataManager","ModalService","$filter","$timeout",function($scope,$state,APIS,DataManager,ModalService,$filter,$timeout){function loadTreeData(){APIS.GET_PARENT_NODES.data={},DataManager.sendRestRequest(null,APIS.GET_PARENT_NODES,function(response){response.success&&($scope.treeData=response.dataBean)},$scope.uconfig.token)}function selectValues(branch){angular.forEach(branch.children,function(item){item.hasChecked=branch.hasChecked,item.children&&item.children.length>0&&selectValues(item)})}function getSelectedIds(data){for(var i=0;i<data.length;i++)data[i].hasChecked&&$scope.idsArr.push(data[i].icd_diagnosis_Id,data[i].icd_diagnosis_Id),data[i].children&&data[i].children.length>0&&getSelectedIds(data[i].children)}$scope.init=function(){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.drList=[],$scope.treeData=[],$scope.drdata=[],$scope.presetTree={},$scope.selectdrop=null,$scope.dignosistree={},$scope.databind(),$scope.exceldata=[],void($scope.expandProperty={field:"description",displayName:"",cellTemplate:'<span><input type="checkbox" ng-model="row.branch.hasChecked" ng-click="onCheckClick({branch: row.branch})">{{row.branch[expandingProperty.field]}}</span>'})):($state.go("login"),!1)},$scope.databind=function(){loadTreeData(),$scope.loaddiagnosisdrop()},$scope.search=function(){if($scope.idsArr=[],getSelectedIds($scope.treeData),0==$scope.idsArr.length)return ModalService.openAlert("alert","Search","Please select at least 1 criteria","","",""),!1;var data={icdId:$scope.idsArr.join(",")};APIS.CAMB_DR_GETSEARCH.data=data,DataManager.sendRestRequest(null,APIS.CAMB_DR_GETSEARCH,function(response){if(response.success){if($scope.drList=response.dataBean,0==response.dataBean.length)return ModalService.openAlert("alert","Search Data","No data found for the search criteria","","",""),!1;$scope.loaddrexport(data),console.log($scope.drList)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.loadselectTreeData=function(select){var data={diagnosisPresetId:select};APIS.GET_NODES_FOR_EDIT.data=data,DataManager.sendRestRequest(null,APIS.GET_NODES_FOR_EDIT,function(response){
if(response.success){if(0==response.dataBean.length)return ModalService.openAlert("alert","Diagnosis Tree","No data found for this diagnosis tree","","",""),!1;$scope.treeData=response.dataBean.icd10List}},$scope.uconfig.token)},$scope.loadChilds=function(branch){if(branch.hasChild&&0==branch.children.length){var data={parentId:branch.icd_diagnosis_Id};$scope.selectedBranch=branch,APIS.GET_CHILD_NODES.data=data,DataManager.sendRestRequest(null,APIS.GET_CHILD_NODES,function(response){response.success?($scope.selectedBranch.children=response.dataBean,1==branch.hasChecked&&angular.forEach(branch.children,function(item){item.hasChecked=branch.hasChecked,item.children&&item.children.length>0&&selectValues(item)})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)}},$scope.updateCheckBox=function(branch){selectValues(branch),$scope.loadChilds(branch)},$scope.clear=function(){angular.forEach($scope.treeData,function(item){item.hasChecked=!1,item.children.length>0&&selectValues(item)})},$scope.loaddrexport=function(datas){APIS.CAMB_DR_GETEXCEL.data=datas,DataManager.sendRestRequest(null,APIS.CAMB_DR_GETEXCEL,function(response){response.success?($scope.drdata=response.dataBean,console.log($scope.drdata)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.getHeader=function(){if($scope.excelheader=[],$scope.excelheader=["S/No.","Name","Licence Type","NRIC","Gender","Age","Nationality","Ethnicity","Process Type","Operational Proviso","Follow Up Proviso","Current Medications"],0!=$scope.drdata.licenceNoCount)for(var lnc=1;lnc<$scope.drdata.licenceNoCount+1;lnc++)$scope.excelheader.push("Licence No. "+lnc);if(0!=$scope.drdata.macCount)for(var mc=1;mc<$scope.drdata.macCount+1;mc++)$scope.excelheader.push("MAC"+mc);if(0!=$scope.drdata.macCount)for(var mc=1;mc<$scope.drdata.macCount+1;mc++)$scope.excelheader.push("Fitness"+mc);if(0!=$scope.drdata.macCount)for(var mc=1;mc<$scope.drdata.macCount+1;mc++)$scope.excelheader.push("Restriction"+mc);if(0!=$scope.drdata.icdcodeCount)for(var idc=0;idc<$scope.drdata.icdcodeCount;idc++)$scope.excelheader.push("ICD10 Code"+idc),$scope.excelheader.push("ICD Description"+idc),$scope.excelheader.push("Detected at LME"+idc),$scope.excelheader.push("Date Occurred"+idc);return $scope.excelheader},$scope.drexport=function(){if($scope.exceldata=[],null!=$scope.drdata.applicantsDetails.length)for(var i=0;i<$scope.drdata.applicantsDetails.length;i++){if($scope.exceldata.push({"S/No.":i+1,Name:$scope.drdata.applicantsDetails[i].applicantName,"Licence Type":$scope.drdata.applicantsDetails[i].licenceType,NRIC:$scope.drdata.applicantsDetails[i].nric,Gender:$scope.drdata.applicantsDetails[i].gender,Age:$scope.drdata.applicantsDetails[i].age,Nationality:$scope.drdata.applicantsDetails[i].nationality,Ethnicity:$scope.drdata.applicantsDetails[i].ethnicity,"Process Type":$scope.drdata.applicantsDetails[i].processType,"Operational Proviso":$scope.drdata.applicantsDetails[i].operationalProviso,"Follow Up Proviso":$scope.drdata.applicantsDetails[i].followupProviso,"Current Medications":$scope.drdata.applicantsDetails[i].currentMedicians}),0!=$scope.drdata.licenceNoCount)for(var lnc=1;lnc<$scope.drdata.licenceNoCount+1;lnc++)null!=$scope.drdata.applicantsDetails[i].licenceNo?$scope.exceldata[i]["Licence No. "+lnc]=$scope.drdata.applicantsDetails[i].licenceNo[lnc-1]:$scope.exceldata[i]["Licence No. "+lnc]="";if(0!=$scope.drdata.macCount){for(var mc=1;mc<$scope.drdata.macCount+1;mc++)null!=$scope.drdata.applicantsDetails[i].mac?$scope.exceldata[i]["MAC"+mc]=$scope.drdata.applicantsDetails[i].mac[mc-1]:$scope.exceldata[i]["MAC"+mc]="";for(var mc=1;mc<$scope.drdata.macCount+1;mc++)null!=$scope.drdata.applicantsDetails[i].fitness?$scope.exceldata[i]["Fitness"+mc]=$scope.drdata.applicantsDetails[i].fitness[mc-1]:$scope.exceldata[i]["Fitness"+mc]="";for(var mc=1;mc<$scope.drdata.macCount+1;mc++)null!=$scope.drdata.applicantsDetails[i].restriction?$scope.exceldata[i]["Restriction"+mc]=$scope.drdata.applicantsDetails[i].restriction[mc-1]:$scope.exceldata[i]["Restriction"+mc]=""}if(0!=$scope.drdata.icdcodeCount)for(var idc=0;idc<$scope.drdata.icdcodeCount;idc++)null!=$scope.drdata.applicantsDetails[i].icd10Code?$scope.exceldata[i]["icd10Code"+idc]=$scope.drdata.applicantsDetails[i].icd10Code[idc]:$scope.exceldata[i]["icd10Code"+idc]="",null!=$scope.drdata.applicantsDetails[i].icdDescription?$scope.exceldata[i]["icdDescription"+idc]=$scope.drdata.applicantsDetails[i].icdDescription[idc]:$scope.exceldata[i]["icdDescription"+idc]="",null!=$scope.drdata.applicantsDetails[i].detectedatLME?$scope.exceldata[i]["Detected at LME"+idc]=$scope.drdata.applicantsDetails[i].detectedatLME[idc]:$scope.exceldata[i]["Detected at LME"+idc]="",null!=$scope.drdata.applicantsDetails[i].dateOccured?$scope.exceldata[i]["Date Occurred"+idc]=$scope.drdata.applicantsDetails[i].dateOccured[idc]:$scope.exceldata[i]["Date Occurred"+idc]=""}return $scope.exceldata},$scope.loaddiagnosisdrop=function(){DataManager.sendRestRequest(null,APIS.CAMB_DR_DIAGNOSISTREE,function(response){response.success?$scope.dignosistree=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("AddDiagnosisCtrl",["$scope","$state","APIS","$uibModal","ModalService","$location","DataManager","$window","modalParam","$uibModalInstance","$filter","$interval",function($scope,$state,APIS,$uibModal,ModalService,$location,DataManager,$window,modalParam,$uibModalInstance,$filter,$interval){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),console.log(modalParam),$scope.applicantDetail=modalParam.applicantdeteils,$scope.applicantId=$scope.applicantDetail.personId,$scope.dataBind(),$scope.selectedcombo=[],$scope.selectedDrugcombo=[],$scope.loadcurrentDiagnosisData=[],$scope.showTable=[],$scope.adddiagnosisdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0]},$scope.dataBind=function(){$scope.loadcurrentDiagnosis(),$scope.approvedetails={code:"chol",applicantId:-1},$scope.selectedcomboid=[],$scope.selectedCombolist=[]},$scope.datepickerOpen=function($event,drugView){$event.preventDefault(),$event.stopPropagation(),drugView.opened=!0},$scope.loadcurrentDiagnosis=function(){var url=null,tempUrl=null;tempUrl=APIS.CAMB_MRSEARCH_ADD_DIAGNOSIS_CURRENT_DIAGNOSIS.URL,url=tempUrl+"/"+$scope.applicantId,APIS.CAMB_MRSEARCH_ADD_DIAGNOSIS_CURRENT_DIAGNOSIS.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_MRSEARCH_ADD_DIAGNOSIS_CURRENT_DIAGNOSIS,function(response){response.success?($scope.loadcurrentDiagnosisData=response.dataBean,console.log($scope.loadcurrentDiagnosisData),angular.forEach($scope.loadcurrentDiagnosisData,function(value,key){$scope.startDateObject=value.detected_date.split(" "),$scope.loadcurrentDiagnosisData[key].detected_date=$scope.startDateObject[0]})):console.log(response)},$scope.uconfig.token),APIS.CAMB_MRSEARCH_ADD_DIAGNOSIS_CURRENT_DIAGNOSIS.URL=tempUrl},$scope.removeDrugsrow=function(datadoc,docrecord){ModalService.openAlert("confirm","warning","Do you want to delete",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.loadcurrentDiagnosisData.length>0&&($scope.delRecid=$.grep($scope.loadcurrentDiagnosisData,function(b){return b.description===datadoc.description}),$scope.selectedcomboid.push($scope.delRecid[0].applicant_diagnosis_id)),$scope.loadcurrentDiagnosisData.splice(docrecord,1)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.listDiagnosis=function(param){if(param.length>2)return $scope.approvedetails.code=param,APIS.CAMB_MRSEARCH_ADD_DIAGNOSIS_SEARCH_SERVICE.data=$scope.approvedetails,$scope.icdsearchresult=DataManager.autoSearch(null,APIS.CAMB_MRSEARCH_ADD_DIAGNOSIS_SEARCH_SERVICE,$scope.uconfig.token),$scope.icdsearchresult},$scope.onAddtable=function(tabval){$scope.warningConfirmed=!1,$scope.adddiagcheckpoint="",$scope.adddiagcheckpoint=tabval,0!=$scope.loadcurrentDiagnosisData||0!=$scope.showTable?($scope.existdiagcheckpoint=$.grep($scope.loadcurrentDiagnosisData,function(e){return e.icd_code==$scope.adddiagcheckpoint.code}),$scope.newadddiagcheckpoint=$.grep($scope.showTable,function(e){return e.code==$scope.adddiagcheckpoint.code}),$scope.existdiagcheckpoint.length>0||$scope.newadddiagcheckpoint.length>0?(ModalService.openAlert("confirm","warning","Already Exist.Do you want to add",$scope,"adddup",function(){}),$scope.$on("adddupOk",function(){0==$scope.warningConfirmed&&$scope.selectedDrugcombo.push(tabval),$scope.warningConfirmed=!0}),$scope.$on("adddupcancel",function(){$uibModalInstance.dismiss("cancel")})):$scope.selectedDrugcombo.push(tabval)):$scope.selectedDrugcombo.push(tabval),console.log($scope.selectedDrugcombo),$scope.showTable=$scope.selectedDrugcombo,console.log($scope.showTable)},$scope.clearDrugsrow=function(docrec){ModalService.openAlert("confirm","warning","Do you want to delete",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.showTable.splice(docrec,1)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.saveDiag=function(){if($scope.flagAbortFunc=!1,angular.forEach($scope.showTable,function(value,key){if(value.datedetect){var newDateforSave=new Date(value.datedetect);$scope.startDateObj=$filter("date")(newDateforSave,"yyyy-MM-dd"),$scope.showTable[key].datedetect=$scope.startDateObj}else $scope.flagAbortFunc=!0}),$scope.flagAbortFunc)return ModalService.openAlert("alert","Alert","can not be empty. Please enter ","null","null"),!1;for(var i=0;i<$scope.showTable.length;i++)$scope.selectedCombolist.push({dr_icd_id:$scope.showTable[i].dr_icd_id,description:$scope.showTable[i].description,code:$scope.showTable[i].code,detectedDate:$scope.showTable[i].datedetect,applicantId:$scope.applicantId});$scope.savecombodetails={addDiagnosisList:$scope.selectedCombolist,delDiagnosisList:$scope.selectedcomboid},APIS.CAMB_MRSEARCH_ADD_DIAGNOSIS_SAVE.data=$scope.savecombodetails,DataManager.sendRestRequest(null,APIS.CAMB_MRSEARCH_ADD_DIAGNOSIS_SAVE,function(response){response.success?(ModalService.openAlert("alert","Alert","saved data successfully","null","null"),$scope.cancel()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.cancel=function(){$uibModalInstance.close("close")},$scope.addCancel=function(){ModalService.openAlert("confirm","warning","Close window?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$uibModalInstance.close("close")}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.init()}]),angular.module("app").controller("CambRegisterCtrl",["$scope","$state","APIS","DataManager","$timeout","$rootScope","ValidationManager","CAASConfig","ResourceManager","ModalService","$http","$filter","userRegisterDetails","$uibModalInstance",function($scope,$state,APIS,DataManager,$timeout,$rootScope,ValidationManager,CAASConfig,regRM,ModalService,$http,$filter,userRegisterDetails,$uibModalInstance){function getRowDataObject(){return Object.create($scope.baseRowObject)}$scope.dt=null,$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.formats=["dd-MMM-yyyy","dd/MM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup1={opened:!1},$scope.tab=1,$scope.showTab="home",$scope.showPassportReq=!1,$scope.isNAChecked=!1,$scope.nricReq=!0,$scope.isResAddChanged=!1,$scope.isMailingAddChanged=!1,$scope.isSameAddChecked=!1,$scope.invalidResPC=!1,$scope.invalidMailingPC=!1,$scope.isValidNRIC=!0,$scope.isEmailMatched=!0,$scope.userDataObj={},$scope.isFrmSubmited=!1,$scope.duplicateUser={},$scope.duplicatePassport={},$scope.licenseList=[],$scope.aircraftList=[],$scope.operationList=[],$scope.rankRatingList=[],$scope.license=1,$scope.aircraft=1,$scope.operation=1,$scope.rankRating=1,$scope.confirmEmail="",$scope.duplicateLicense=!1,$scope.regRM=regRM;var sporeKey=1,sporeTxt="Singapore";$scope.open=function($event){$scope.opened=!0},$(".nav-tabs a").click(function(e){e.preventDefault(),$(this).tab("show")}),$scope.salList=[],$scope.nationsList=[],$scope.ectyList=[],$scope.genList=[],$scope.countryList=[],$scope.userRegDetails={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,personId:null,firstName:null,middleName:null,lastName:null,dob:null,gender:{lookUpId:null,lookUpValue:null},personIdentificationNum:null,salutation:{lookUpId:null,lookUpValue:null},ethnicity:{lookUpId:null,lookUpValue:null},religion:null,maritalStatus:null,nationality:{lookUpId:null,lookUpValue:null},education:null,occupation:null,citizenship:null,age:null,race:null,otherRace:null,nric:null,customerId:null,othercitizenship:null,otherReligion:null,otherOccupation:null,otherEducation:null,otherNationality:null,referralAddress:null,dateofIssue:null,passportNo:null,passportCountry:{countryId:null,countryName:null},phoneNo:null,homePhoneNo:null,professionalDetailsList:[],address:[{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,addressId:null,addressType:1,transactionId:null,transactionType:null,country:{countryId:null,countryName:null},postalCode:null,street:null,block:null,unit:null,floor:null,building:null,email:null,workPhoneNo:null,city:null,state:null,fax:"",phoneExt:null,line1:null,line2:null},{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,addressId:null,addressType:2,transactionId:null,transactionType:null,country:{countryId:null,countryName:null},postalCode:null,street:null,block:null,unit:null,floor:null,building:null,email:null,workPhoneNo:null,city:null,state:null,fax:null,phoneExt:null,line1:null,line2:null}],email:null,primaryIdentificationNUmber:null,prospective:null,organization:{lookUpId:null,lookUpValue:null},otherOrgDesc:null,photo:null,e1PersonId:null};var cambUserDetails=userRegisterDetails;cambUserDetails&&null!=cambUserDetails&&($scope.cambUserRegDtls=cambUserDetails,console.log("cambUserRegDtls",$scope.cambUserRegDtls),$scope.cambUserRegDtls.personId=null,null==$scope.cambUserRegDtls.address||0==$scope.cambUserRegDtls.address.length?($scope.cambUserRegDtls.address=[],$scope.cambUserRegDtls.address=$scope.userRegDetails.address):1==$scope.cambUserRegDtls.address.length&&($scope.cambUserRegDtls.address[1]={},$scope.cambUserRegDtls.address[1]=$scope.userRegDetails.address[1]),angular.copy($scope.cambUserRegDtls,$scope.userRegDetails),$scope.dt=new Date($scope.userRegDetails.dob)),$scope.loadCombos=function(){var url=null,tempUrl1=null;tempUrl1=APIS.GET_LOOKUPS.URL,url=tempUrl1+"SAL, NATIONS, ECTY, GEN, country,ORGANIZATION",APIS.GET_LOOKUPS.URL=url,DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.nationsList=response.dataBean.NATIONS,angular.forEach($scope.nationsList,function(value,key){"A"==value.lookUpItemCode&&($scope.userRegDetails.nationality={lookUpId:$scope.nationsList[key].lookUpItemId,lookUpValue:$scope.nationsList[key].lookUpItemValue})}),$scope.ectyList=response.dataBean.ECTY,$scope.genList=$.grep(response.dataBean.GEN,function(e){return"640"!=e.lookUpItemId}),$scope.countryList=response.dataBean.country,angular.forEach($scope.countryList,function(value,key){value.lookUpItemValue==sporeTxt&&(sporeKey=key)}),$scope.countryList&&($scope.userRegDetails.address[0].country.countryId=$scope.countryList[sporeKey].lookUpItemId,$scope.userRegDetails.address[1].country.countryId=$scope.countryList[sporeKey].lookUpItemId),configurePostalValLen(0),configurePostalValLen(1)}),APIS.GET_LOOKUPS.URL=tempUrl1,APIS.ADMIN_FEEWAIVER_ORG_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_ORG_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.orgList=response.dataBean.organizationList,$scope.orgList.push({code:null,description:"OTHER",organizationId:999}))})}(),$scope.c1c2LicNumLen=6,$scope.c3LicNumLen=3,$scope.getlicNoValidationNms=function(){DataManager.sendRestRequest(null,APIS.C1C2_LIC_NUMBER,function(response){response.success&&null!=response.dataBean&&($scope.c1c2LicNumLen=parseInt(response.dataBean))}),DataManager.sendRestRequest(null,APIS.C3_LIC_NUMBER,function(response){response.success&&null!=response.dataBean&&($scope.c3LicNumLen=parseInt(response.dataBean))})}(),$scope.baseRowObject={aircraftList:$scope.aircraftList,operationList:$scope.operationList,rankRatingList:$scope.rankRatingList,licenseType:null,aircraftType:null,operationType:null,licenseNo:null,rankOrRating:null,licNoMinLength:6,licNoMaxLength:6},$scope.loadProfessionalCombos=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){void 0!=rowObj?rowObj[comboName]=response.dataBean:($scope[comboName]=response.dataBean,$scope.baseRowObject[comboName]=response.dataBean)})},$scope.loadOtherCombos=function(argId,rowObj){$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"aircraftList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"rank/rating",lookUpItemCode:null},"rankRatingList",rowObj)},$scope.loadOtherCombos(1),$scope.loadProfessionalCombos({lookUpItemId:1,lookUpItemValue:"",lookUpItemCode:null},"licenseList"),$scope.focusElement=null,$scope.professionalRowList=[getRowDataObject()],$scope.addNewRow=function(){$scope.checkPrevLincenseDtlsFilled($scope.professionalRowList),$scope.licenseDtlsRequired?ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.REQUIRED_LICENSE_DTLS_ERR,$scope):$scope.professionalRowList.push(getRowDataObject())},$scope.licenseDtlsRequired=!1,$scope.checkPrevLincenseDtlsFilled=function(profRowList){for(var i=0;i<profRowList.length;i++)null==profRowList[i].licenseType?$scope.licenseDtlsRequired=!0:$scope.licenseDtlsRequired=!1};var indexVal=null;$scope.deleteRow=function(index){indexVal=index,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"deleteNew",function(){})},$scope.$on("deleteNewOk",function(){$scope.professionalRowList.splice(indexVal,1)}),$scope.otherOrg=!1,$scope.organizationChangeFn=function(cmb){$scope.userRegDetails.otherOrgDesc=null,999==$scope.userRegDetails.organization.lookUpId?$scope.otherOrg=!0:$scope.otherOrg=!1},$scope.professionalRowList=[],$scope.licenseChangeFn=function(cmb){$scope.loadOtherCombos(cmb.row.licenseType,cmb.row),$scope.checkDuplicateLicence($scope.professionalRowList),$scope.duplicateLicense&&ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.UNIQUE_LICENSE_ERR,$scope,"duplicateLic",function(){cmb.row.licenseType=null}),8==cmb.row.licenseType?(cmb.row.licNoMinLength=$scope.c3LicNumLen,cmb.row.licNoMaxLength=$scope.c3LicNumLen):(cmb.row.licNoMinLength=$scope.c1c2LicNumLen,cmb.row.licNoMaxLength=$scope.c1c2LicNumLen)},$scope.checkDuplicateLicence=function(profRowList){$scope.dupLicenseCheckList=[];for(var i=0;i<profRowList.length;i++)$scope.dupLicenseCheckList.push(profRowList[i].licenseType);$scope.duplicateArray($scope.dupLicenseCheckList).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1},$scope.copyAdd=!1,$scope.copyAddress=function($event){if($event.currentTarget.checked)$scope.userRegDetails.address[1]=$scope.userRegDetails.address[0],$scope.userRegDetails.address[1].addressType=2,$scope.isSameAddChecked=!0,configurePostalValLen(1);else{var newObj={};angular.copy($scope.userRegDetails.address[1],newObj),$scope.userRegDetails.address[1]=newObj,$scope.isSameAddChecked=!1}};var upperCaseFirstLetter=function(input){return input.charAt(0).toUpperCase()+input.slice(1)};$scope.register=function(){if($scope.isFrmSubmited=!0,$scope.userRegDetails.nric&&!$scope.isValidNRIC)return $scope.showTab="home",!1;for(var listItemsArr=[],duplicateLicense=[],i=0;i<$scope.professionalRowList.length;i++)duplicateLicense.push($scope.professionalRowList[i].licenseType),listItemsArr.push({licenseType:$scope.professionalRowList[i].licenseType,aircraftType:$scope.professionalRowList[i].aircraftType,operationType:$scope.professionalRowList[i].operationType,licenseNo:$scope.professionalRowList[i].licenseNo,rankOrRating:$scope.professionalRowList[i].rankOrRating});$scope.userRegDetails.professionalDetailsList=listItemsArr,$scope.duplicateArray(duplicateLicense).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1,$scope.isMoreLicensesFlag=!1,$scope.flags=[],$scope.output=[];for(var i=0;i<$scope.professionalRowList.length;i++)$scope.flags[$scope.professionalRowList[i].licenseNo]||($scope.flags[$scope.professionalRowList[i].licenseNo]=!0,$scope.output.push($scope.professionalRowList[i].licenseNo));return console.log("output",$scope.output),$scope.output.length>2&&($scope.isMoreLicensesFlag=!0),$scope.frmPersonalProfile.$invalid||$scope.duplicateUser.errorMessage||$scope.duplicatePassport.errorMessage||!$scope.isEmailMatched?($scope.showTab="home",!1):$scope.frmProfessionalDetails.$invalid||$scope.duplicateLicense?($scope.showTab="profile",!1):$scope.isMoreLicensesFlag?($scope.showTab="profile",ModalService.openAlert("alert","error",regRM.resources.VALIDATION.LICENSE_MAX_2_ERR,$scope,"only2Lic",function(){}),!1):$scope.frmContactDetails.$invalid?($scope.showTab="messages",!1):($("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.userRegDetails.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),$scope.userRegDetails.photo?(APIS.CHECK_DUPLICATE_REG.data={firstName:$scope.userRegDetails.firstName,lastName:$scope.userRegDetails.lastName,gender:$scope.userRegDetails.gender.lookUpId,ethnicity:$scope.userRegDetails.ethnicity.lookUpId},void DataManager.sendRestRequest(null,APIS.CHECK_DUPLICATE_REG,function(response){response.success?registerUser():ModalService.openAlert("confirm","warning",response.errorMessage,$scope,"duplicateReg",function(){$scope.$on("duplicateRegOk",function(){registerUser()}),$scope.$on("duplicateRegCancel",function(){})})})):($scope.showTab="home",ModalService.openAlert("alert","error","Please upload profile picture",$scope,"only2Lic",function(){}),!1))};var registerUser=function(){null!=$scope.userRegDetails.otherOrgDesc&&($scope.userRegDetails.organization.lookUpId=null),$scope.dt&&($scope.userRegDetails.dob=$filter("date")($scope.dt,"yyyy-MM-dd")),$scope.userRegDetails.firstName&&($scope.userRegDetails.firstName=upperCaseFirstLetter($scope.userRegDetails.firstName)),$scope.userRegDetails.lastName&&($scope.userRegDetails.lastName=upperCaseFirstLetter($scope.userRegDetails.lastName)),$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.userRegDetails.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),angular.copy($scope.userRegDetails,$scope.userDataObj),$scope.userDataObj.e1PersonId?registerProfileExists($scope.userDataObj):(APIS.REGISTER.data=$scope.userDataObj,DataManager.sendRestRequest(null,APIS.REGISTER,function(response){return response.success?void(null!=response.e1PersonId?ModalService.openAlert("confirm","warning","E1 profile is already exists.",$scope,"profileExists",function(){$scope.$on("profileExistsOk",function(){$scope.userDataObj.e1PersonId=response.e1PersonId,registerProfileExists($scope.userDataObj)})}):ModalService.openAlert("alert","success","Registration has been succeess",$scope,"regSuccess",function(){$scope.cancel()})):(alert("Registration has been failed,"+response.errorMessage),$scope.cancel(),!1)}))},registerProfileExists=function(userDataObj){APIS.REGISTER.data=userDataObj,DataManager.sendRestRequest(null,APIS.REGISTER,function(response){return response.success?void ModalService.openAlert("alert","success","Registration has been succeed",$scope,"regSuccess",function(){$scope.cancel()}):(alert("Registration has been failed,"+response.errorMessage),$scope.cancel(),!1)})};$(".registerValidationModalBut").click(function(){$("."+$scope.focusElement).focus()}),$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurAltMobNum=!1,$scope.onBlurAltMobNumFn=function(){$scope.onBlurAltMobNum=!0},$scope.onBlurPhoneNo=!1,$scope.onBlurPhoneNoFn=function(){$scope.onBlurPhoneNo=!0},$scope.onBlurFaxNo=!1,$scope.onBlurFaxNoFn=function(){$scope.onBlurFaxNo=!0},$scope.onBlurPhoneNo2=!1,$scope.onBlurPhoneNo2Fn=function(){$scope.onBlurPhoneNo2=!0},$scope.onBlurFaxNo2=!1,$scope.onBlurFaxNo2Fn=function(){$scope.onBlurFaxNo2=!0},$scope.onblurPas=!1,$scope.onblurPasFn=function(){$scope.onblurPas=!0},$scope.onBlurLicNo=!1,$scope.onBlurLicNoFn=function(sel){$scope.onBlurLicNo=!0},$scope.onBlurNIRCFn=function(){if($scope.userRegDetails.nric&&($scope.isValidNRIC=CAASConfig.isValidateNRIC($scope.userRegDetails.nric),!$scope.isValidNRIC))return!1};var getPostalAddress=function(postalCode,index){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean?($scope.userRegDetails.address[index].line1=response.dataBean.building,$scope.userRegDetails.address[index].line2=response.dataBean.unit):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)},$scope.preloadMailingAddress=function(postalCode){var index=1;!$scope.isMailingAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)},$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.invalidResPC=!1,$scope.userRegDetails.address[0].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isResAddChanged=!0),$scope.userRegDetails.address[0].line1=null,$scope.userRegDetails.address[0].line2=null,configurePostalValLen(0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.userRegDetails.address[1].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),$scope.userRegDetails.address[1].line1=null,$scope.userRegDetails.address[1].line2=null,configurePostalValLen(1))};var configurePostalValLen=function(index){$scope.userRegDetails.address[index].country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope["postalMinLen"+index]=3,$scope["postalMaxLen"+index]=15):($scope["postalMinLen"+index]=6,$scope["postalMaxLen"+index]=6)};$scope.onBlurmail=!1,$scope.matchEmail=function(fieldname){return $scope.onBlurmail=!0,"email"==fieldname&&$scope.confirmEmail?($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0,!1):void($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0)},$scope.clearPassportDetails=function(param){param||($scope.userRegDetails.passportNo=null,$scope.userRegDetails.passportCountry.lookUpItemId=null)},$scope.isEmailExsist=function(){APIS.USER_EXSIST.data={email:$scope.userRegDetails.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response})},$scope.isDuplicatePassport=function(){APIS.PASSPORT_EXSIST.data={passportNo:$scope.userRegDetails.passportNo},DataManager.sendRestRequest(null,APIS.PASSPORT_EXSIST,function(response){$scope.duplicatePassport=response})},$scope.duplicateArray=function(arr){for(var sorted_arr=arr.sort(),results=[],i=0;i<arr.length-1;i++)sorted_arr[i+1]==sorted_arr[i]&&results.push(sorted_arr[i]);return results},$scope.closeModal=function(){$state.go("login")},$scope.cancelReg=function(){ModalService.openAlert("confirm","warning","Do you want to cancel registration process.",$scope,"cancelReg",function(){$scope.$on("cancelRegOk",function(){$scope.cancel()}),$scope.$on("cancelRegCancel",function(){})})},$scope.isSingPassReg=!1,$scope.isSingpassUser=function(){sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),void 0!=$scope.uconfig.dataBean&&($scope.userRegDetails.nric=$scope.uconfig.dataBean.nric,$scope.isNAChecked=!0,$scope.isSingPassReg=!0))},$scope.isSingpassUser(),$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("CreateassignCtrl",["$scope","$state","APIS","$uibModal","$uibModalInstance","$location","DataManager","$window","modalParam","ModalService","$filter",function($scope,$state,APIS,$uibModal,$uibModalInstance,$location,DataManager,$window,modalParam,ModalService,$filter){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),console.log($scope.uconfig.userSeqId),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.fname=$scope.userRegDetails.firstName,$scope.lname=$scope.userRegDetails.lastName,$scope.Visitdatas=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.applicantDetail=modalParam.applicantdeteils,$scope.applicantId=$scope.applicantDetail.personId,$scope.finNric=$scope.applicantDetail.idNo,$scope.enabledatepicker=!0,$scope.crdocdropdata=null,$scope.Reasonsdoc=null,$scope.consultdocdrop(),$scope.tdate=new Date,$scope.attachdocumentsData={doctypeId:null,subtypeId:null,primaryidentifier:"null",reportdate:"",clinicId:"null",filename:null,createdby:null},$scope.databind()},$scope.databind=function(){$scope.crmac(),$scope.loadattachdocdetails(),$scope.Assignfunctioncon(),$scope.docdropd={},$scope.getdetails=[]},$scope.close=function(){$uibModalInstance.close("close"),$scope.selected=""},$scope.crmac=function(){$scope.crmacddwn={applicantId:$scope.applicantId},APIS.CAMB_CR_MAC_DD.data=$scope.crmacddwn,DataManager.sendRestRequest(null,APIS.CAMB_CR_MAC_DD,function(response){response.success?($scope.crmacdd=response.dataBean,console.log($scope.crmacdd)):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.loadattachdocdetails=function(){$scope.attchdoctype=[],$scope.attchdocsubtype=[],DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success&&($scope.attchdoctype=response.dataBean,console.log($scope.attchdoctype))},$scope.uconfig.token)},$scope.onAttach=function(changeparam){$scope.onAttachdocvalues=changeparam,$scope.SubTypes(),$scope.dateenable()},$scope.SubTypes=function(){$scope.subtypesearchresult=[];var url=null,tempUrl=null;tempUrl=APIS.CAMB_SUBTYPES_SEARCH.URL,url=tempUrl+"/"+$scope.onAttachdocvalues,APIS.CAMB_SUBTYPES_SEARCH.URL=url,console.log(APIS.CAMB_SUBTYPES_SEARCH.URL),DataManager.sendRestRequest(null,APIS.CAMB_SUBTYPES_SEARCH,function(response){response.success?($scope.subtypesearchresult=response.dataBean,console.log($scope.subtypesearchresult)):console.log(response.errorMessage)},$scope.uconfig.token),APIS.CAMB_SUBTYPES_SEARCH.URL=tempUrl},$scope.Assignfunctioncon=function(){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}$scope.dateOptions={dateDisabled:disabled,formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1
},$scope.fromdate1Options={formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd-MMM-yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd/MM/yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpenCon=function(){$scope.datepickerPopup.opened=!0}},$scope.Content=function($fileContent,index){$scope.content=$fileContent.split("base64,")[1],$scope.profileUpdateDetails.documentsList[index].document="<div>"+$scope.content+"</div>"},$scope.dateenable=function(subtype){$scope.subtype=subtype,$scope.attachdocumentsData.doctypeId&&$scope.subtype?$scope.enabledatepicker=!1:$scope.enabledatepicker=!0},$scope.submitForApproval=function(doctype,subtype,datedata,pdfconvertfile){if($scope.valdoctype=!1,$scope.valsubtype=!1,$scope.subtype=subtype,$scope.datedata=datedata,doctype)if(subtype)if(datedata){$scope.dateconvert=$filter("date")(new Date(datedata),"yyyy-MM-dd"),$scope.filenameformat=$scope.finNric+"_"+$scope.subtype.description+"_"+$scope.dateconvert,$scope.valPdf=[],$scope.valPdf.push(document.getElementById("filename")),console.log($scope.valPdf);var filepath=document.getElementById("filename"),indexoflast=filepath.value.lastIndexOf("\\")-1,filename=filepath.value.slice("-"+indexoflast);filepath.value.slice(filepath.value.lastIndexOf(".")+1);if(!filename)return ModalService.openAlert("alert","Create Assign","Please select Pdf file","null","null"),!1;$scope.getdetails.push({doctypeId:doctype,subtypeId:subtype.document_sub_type_id,type:subtype.description,applicantId:$scope.Visitdatas.applicantId,reportdate:$scope.dateconvert,createdby:$scope.uconfig.userSeqId,filename:$scope.filenameformat,document:pdfconvertfile}),console.log($scope.getdetails);var filepath=document.getElementById("filename").value=""}else $scope.valdatedata=!0;else $scope.valsubtype=!0;else $scope.valdoctype=!0},$scope.consultdocdrop=function(){DataManager.sendRestRequest(null,APIS.CAMB_SEARCHCONSULT_DOCTOR,function(response){response.success?($scope.consultdd=response.dataBean,console.log($scope.consultdd)):console.log(response)},$scope.uconfig.token)},$scope.remove=function(docrem){ModalService.openAlert("confirm","warning","Do you want to delete the remarks",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.getdetails.splice(docrem,1)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.viewdoc=function(griddata){console.log(griddata);var content=griddata.document,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+griddata.document,"_blank","location=no,enableviewportscale=yes")},$scope.assigngetid=function(param){$scope.physicianId=param.person_id},$scope.Assign=function(Dcid,Stype,Ddate){$scope.valsubtype=!1,$scope.valdatedata=!1;var filepath=document.getElementById("filename"),indexoflast=filepath.value.lastIndexOf("\\")-1;filepath.value.slice("-"+indexoflast);if(Dcid){if(!Stype)return $scope.valsubtype=!0,!1;if(!Ddate)return $scope.valdatedata=!0,!1;if(!$scope.valPdf||!$scope.getdetails.length)return ModalService.openAlert("alert","Create Assign","Please upload Pdf file","null","null"),!1;$scope.valPdf=""}var chkSel=$("#selcp").val();"?"!=chkSel?($scope.assigndata={cambphysicianId:$scope.physicianId,referenceId:$scope.Visitdatas.visitId,referencetype:$scope.Visitdatas.visitType,docsList:$scope.getdetails},APIS.CAMB_WORKLISTCR_ASSIGN.data=$scope.assigndata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLISTCR_ASSIGN,function(response){response.success?(ModalService.openAlert("alert","","Assigned successfully","","",""),$uibModalInstance.close(!0),$scope.cancel()):console.log(response.errorMessage)},$scope.uconfig.token)):ModalService.openAlert("alert","","Select CAMB Physician","","","")},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app.camb").directive("onReadUpload",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadUpload);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsDataURL((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}),angular.module("app").controller("CreateassignCtrl",["$scope","$state","APIS","$uibModal","$uibModalInstance","$location","DataManager","$window","modalParam","ModalService","$filter",function($scope,$state,APIS,$uibModal,$uibModalInstance,$location,DataManager,$window,modalParam,ModalService,$filter){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),console.log($scope.uconfig.userSeqId),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.fname=$scope.userRegDetails.firstName,$scope.lname=$scope.userRegDetails.lastName,$scope.Visitdatas=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.applicantDetail=modalParam.applicantdeteils,$scope.applicantId=$scope.applicantDetail.personId,$scope.crdocdropdata=null,$scope.Reasonsdoc=null,$scope.consultdocdrop(),$scope.tdate=new Date,$scope.databind()},$scope.databind=function(){$scope.crmac(),$scope.loadattachdocdetails(),$scope.Datefunctioncon(),$scope.getdetails=[]},$scope.close=function(){$uibModalInstance.close("close"),$scope.selected=""},$scope.crmac=function(){$scope.crmacddwn={applicantId:$scope.applicantId},APIS.CAMB_CR_MAC_DD.data=$scope.crmacddwn,DataManager.sendRestRequest(null,APIS.CAMB_CR_MAC_DD,function(response){response.success?($scope.crmacdd=response.dataBean,console.log($scope.crmacdd)):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.loadattachdocdetails=function(){$scope.attchdoctype=[],$scope.attchdocsubtype=[],DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success&&($scope.attchdoctype=response.dataBean,console.log($scope.attchdoctype))},$scope.uconfig.token),DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success&&($scope.attchdocsubtype=response.dataBean,console.log($scope.attchdocsubtype))},$scope.uconfig.token)},$scope.Datefunctioncon=function(){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}$scope.dateOptions={dateDisabled:disabled,formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpenCon=function(){$scope.datepickerPopup.opened=!0}},$scope.Content=function($fileContent,index){$scope.content=$fileContent.split("base64,")[1],$scope.profileUpdateDetails.documentsList[index].document="<div>"+$scope.content+"</div>"},$scope.submitForApproval=function(doctype,subtype,datedata,pdfconvertfile){$scope.dateconvert=$filter("date")(new Date(datedata),"yyyy-MM-dd");var filepath=document.getElementById("filename"),indexoflast=filepath.value.lastIndexOf("\\")-1,filename=filepath.value.slice("-"+indexoflast);filepath.value.slice(filepath.value.lastIndexOf(".")+1);$scope.getdetails.push({doctypeId:doctype,subtypeId:subtype.document_sub_type_id,reportdate:$scope.dateconvert,createdby:$scope.uconfig.userSeqId,filename:filename,document:pdfconvertfile,referenceId:$scope.Visitdatas.visit_id,referencetype:$scope.Visitdatas.v_type})},$scope.consultdocdrop=function(){DataManager.sendRestRequest(null,APIS.CAMB_SEARCHCONSULT_DOCTOR,function(response){response.success?($scope.consultdd=response.dataBean,console.log($scope.consultdd)):console.log(response)},$scope.uconfig.token)},$scope.remove=function(docrem){$scope.getdetails.splice(docrem,1)},$scope.viewdoc=function(griddata){console.log(griddata),console.log(griddata);var content=griddata.document,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+griddata.document,"_blank","location=no,enableviewportscale=yes")},$scope.assigngetid=function(param){$scope.physicianId=param.person_id},$scope.Assign=function(consultID){$scope.assigndata={cambphysicianId:$scope.physicianId,applicantId:$scope.Visitdatas.applicant_id,docsList:$scope.getdetails},APIS.CAMB_WORKLIST_ASSIGN.data=$scope.assigndata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ASSIGN,function(response){response.success?(ModalService.openAlert("alert","","Assigned successfully","","",""),$uibModalInstance.close(!0),$scope.cancel()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app.camb").directive("onReadUpload",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadUpload);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsDataURL((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}),angular.module("app").controller("CreateconsultCtrl",["$scope","$state","APIS","$uibModal","$uibModalInstance","ModalService","$location","DataManager","$window","modalParam",function($scope,$state,APIS,$uibModal,$uibModalInstance,ModalService,$location,DataManager,$window,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantDetail=modalParam.applicantdeteils,$scope.applicantId=$scope.applicantDetail.personId,$scope.consultdropdown(),$scope.Datefunctioncon(),$scope.appointmentDate=null,$scope.cambPhysician=null,$scope.consultassign={macid:[],consultNo:null,cambPhysicianId:null,appointmentDate:null,applicantId:null},$scope.mrsearchConsult={idNo:null,mac:{macC1:"C1",macc2:"C2",macc3:"C3"},doctorname:null,appointmentdate:null,time:null},$scope.dataBind(),$scope.mac=[{type1:"C1"},{type2:"C2"},{type3:"C3"}]},$scope.dataBind=function(){$scope.applicantDetail.currentMAC?($scope.macvisit=[{classType:"C1",classStatus:"A",checked:!1},{classType:"C2",classStatus:"A",checked:!1},{classType:"C3",classStatus:"A",checked:!1}],angular.forEach($scope.macvisit,function(valuemacvisit,keymacvisit){$scope.macvisitCheck=[],$scope.macvisitCheck=$.grep($scope.applicantDetail.currentMAC,function(e){return e.classType==valuemacvisit.classType}),$scope.macvisitCheck.length>0&&($scope.macvisit[keymacvisit].checked=!0,$scope.consultassign.macid.push({mac_code:valuemacvisit.classType}))}),$scope.applicantDetailMAC=[],$scope.applicantDetailMAC=$scope.macvisit):$scope.applicantDetailMAC.push({classType:"C1",classStatus:"A",checked:!1},{classType:"C2",classStatus:"A",checked:!1},{classType:"C3",classStatus:"A",checked:!1})},$scope.createConsult=function(){APIS.MR_CAMBMRCONSULT.data=$scope.mrsearchConsult,console.log($scope.mrsearchConsult),DataManager.sendRestRequest(null,APIS.MR_CAMBMRCONSULT,function(response){response.success&&console.log(response)},$scope.uconfig.token)},$scope.assignandcreateConsult=function(){APIS.MR_CAMBMRCONSULT.data=$scope.mrsearchConsult,DataManager.sendRestRequest(null,APIS.MR_CAMBMRCONSULT,function(response){$scope.addStatus=response,console.log($scope.addStatus),$timeout(function(){$scope.addStatus=""},5e3)},$scope.uconfig.token)},$scope.close=function(){$uibModalInstance.close("close"),$scope.selected=""},$scope.consultdropdown=function(){DataManager.sendRestRequest(null,APIS.CAMB_SEARCHCONSULT_DOCTOR,function(response){response.success?($scope.searchconsultdd=response.dataBean,console.log($scope.searchconsultdd)):console.log(response)},$scope.uconfig.token)},$scope.checkMac=function(param,index){console.log(param),param.checked?$scope.consultassign.macid.push({mac_code:param.classType}):$scope.consultassign.macid.splice($scope.consultassign.macid.map(function(e){return e.mac_code}).indexOf(param.classType),1)},$scope.createConsultSav=function(){var appDate=new Date($scope.appointmentDate);appDate.setHours(12,appDate.getTimezoneOffset(),0,0);var newAppDate=appDate.toISOString().substring(0,10),appointmentTime=$("#appointmentTime").val();if(appointmentTime.length>2)var appDateAndTime=newAppDate+" "+appointmentTime+":00.000";else var appDateAndTime=newAppDate+" "+appointmentTime+":00.000";var appDate=new Date($scope.appointmentDate);appDate.setHours(12,appDate.getTimezoneOffset(),0,0);var newAppDate=appDate.toISOString().substring(0,10),appointmentTime=$("#appointmentTime").val(),appDateAndTime=newAppDate+" "+appointmentTime+":00.000";return 0==$scope.consultassign.macid.length?(ModalService.openAlert("alert","","Please select MAC class","","",""),!1):null==$scope.cambPhysician?(ModalService.openAlert("alert","","Please select CP","","",""),!1):new Date(appDateAndTime)<new Date?(ModalService.openAlert("alert","","Please select future time","","",""),!1):($scope.consultassign={macid:$scope.consultassign.macid,consultNo:$scope.cambPhysician.consultNo,cambPhysicianId:$scope.cambPhysician.person_id,appointmentDate:appDateAndTime,applicantId:$scope.applicantId},console.log($scope.consultassign),APIS.CAMB_SEARCH_CREATECONSULT_ASSIGN.data=$scope.consultassign,DataManager.sendRestRequest(null,APIS.CAMB_SEARCH_CREATECONSULT_ASSIGN,function(response){if(response.success){ModalService.openAlert("alert","","Assigned successfully","","","");var cmbValue=$("#cmbCreateCr").val();$("#"+cmbValue).find("option[label='Create Consult']").remove(),$scope.cancel()}else console.log(response)},$scope.uconfig.token),void 0)},$scope.Datefunctioncon=function(){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}$scope.dateOptions={dateDisabled:disabled,formatDay:"dd",formatMonth:"MMM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.formats=["dd MMM yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpenCon=function(){$scope.datepickerPopup.opened=!0}},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("CreatecrCtrl",["$scope","$state","APIS","$uibModal","$uibModalInstance","$location","DataManager","$window","modalParam","ModalService","$filter",function($scope,$state,APIS,$uibModal,$uibModalInstance,$location,DataManager,$window,modalParam,ModalService,$filter){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantDetail=modalParam.applicantdeteils,$scope.applicantId=$scope.applicantDetail.personId,$scope.finNric=$scope.applicantDetail.idNo,$scope.crdocdropdata=null,$scope.Reasonsdoc=null,$scope.consultdocdrop(),$scope.tdate=new Date,$scope.CrAssigndatas={macid:[],cambphysicianId:null,reason:null,applicantId:null,docsList:null},$scope.attachdocumentsData={doctypeId:null,subtypeId:null,primaryidentifier:"null",reportdate:"",clinicId:"null",filename:null,createdby:null},$scope.databind(),$scope.crfunctioncon()},$scope.databind=function(){$scope.crmac(),$scope.loadattachdocdetails(),$scope.getdetails=[],$scope.applicantDetail.currentMAC?($scope.macvisit=[{classType:"C1",classStatus:"A",checked:!1},{classType:"C2",classStatus:"A",checked:!1},{classType:"C3",classStatus:"A",checked:!1}],angular.forEach($scope.macvisit,function(valuemacvisit,keymacvisit){$scope.macvisitCheck=[],$scope.macvisitCheck=$.grep($scope.applicantDetail.currentMAC,function(e){return e.classType==valuemacvisit.classType}),$scope.macvisitCheck.length>0&&($scope.macvisit[keymacvisit].checked=!0)}),$scope.applicantDetailMAC=[],$scope.applicantDetailMAC=$scope.macvisit):$scope.applicantDetailMAC.push({classType:"C1",classStatus:"A",checked:!1},{classType:"C2",classStatus:"A",checked:!1},{classType:"C3",classStatus:"A",checked:!1})},$scope.close=function(){$uibModalInstance.close("close"),$scope.selected=""},$scope.crmac=function(){$scope.crmacddwn={applicantId:$scope.applicantId},APIS.CAMB_CR_MAC_DD.data=$scope.crmacddwn,DataManager.sendRestRequest(null,APIS.CAMB_CR_MAC_DD,function(response){response.success?($scope.crmacdd=response.dataBean,console.log($scope.crmacdd)):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.loadattachdocdetails=function(){$scope.attchdoctype=[],$scope.attchdocsubtype=[],DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success&&($scope.attchdoctype=response.dataBean,console.log($scope.attchdoctype))},$scope.uconfig.token)},$scope.crfunctioncon=function(){$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.fromdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpenCon=function(){$scope.datepickerPopup.opened=!0}},$scope.showContent=function($fileContent,index){$scope.content=$fileContent.split("base64,")[1],$scope.profileUpdateDetails.documentsList[index].document="<div>"+$scope.content+"</div>"},$scope.submitForApproval=function(doctype,subtype,datedata,pdfconvertfile,cambPhysicianId){if($scope.subtype=subtype,$scope.datedata=datedata,$scope.frmSubmit=!0,$scope.form.$invalid)return $scope.frmInvalid=!0,!1;$scope.frmInvalid=!1,$scope.frmSubmit=!1,$scope.frmInvalid=!1,$scope.dateconvert=$filter("date")(new Date(datedata),"yyyy-MM-dd"),$scope.filenameformat=$scope.finNric+"_"+$scope.subtype.description+"_"+$scope.dateconvert,$scope.valPdf=[],$scope.valPdf.push(document.getElementById("filename"));var filepath=document.getElementById("filename"),indexoflast=filepath.value.lastIndexOf("\\")-1,filename=filepath.value.slice("-"+indexoflast);filepath.value.slice(filepath.value.lastIndexOf(".")+1);if(!filename)return ModalService.openAlert("alert","Create Assign","Please select Pdf file","null","null"),!1;$scope.getdetails.push({doctypeId:doctype,subtypeId:subtype.document_sub_type_id,reportdate:$scope.dateconvert,type:subtype.description,createdby:$scope.uconfig.userSeqId,filename:$scope.filenameformat,document:pdfconvertfile});var filepath=document.getElementById("filename").value=""},$scope.changetypeval=function(drpd){$scope.attachdocumentty=drpd,$scope.SubTypesval()},$scope.SubTypesval=function(){$scope.subtypesearchresultcr=[];var url=null,tempUrl=null;tempUrl=APIS.CAMB_SUBTYPES_SEARCH.URL,url=tempUrl+"/"+$scope.attachdocumentty,APIS.CAMB_SUBTYPES_SEARCH.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_SUBTYPES_SEARCH,function(response){response.success?($scope.subtypesearchresultcr=response.dataBean,console.log($scope.subtypesearchresultcr)):console.log(response.errorMessage)},$scope.uconfig.token),APIS.CAMB_SUBTYPES_SEARCH.URL=tempUrl},$scope.consultdocdrop=function(){DataManager.sendRestRequest(null,APIS.CAMB_SEARCHCONSULT_DOCTOR,function(response){response.success?($scope.consultdd=response.dataBean,console.log($scope.consultdd)):console.log(response)},$scope.uconfig.token)},$scope.remove=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removecrar",function(){$scope.$on("removecrarOk",function(){$scope.warningConfirmed||($scope.getdetails.splice($scope.removeindex,1),$scope.warningConfirmed=!0)}),$scope.$on("removecrarcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.assignDoctor=function(){},$scope.viewdoc=function(griddata){console.log(griddata);var content=griddata.document,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+griddata.document,"_blank","location=no,enableviewportscale=yes")},console.log($scope.crdocdropdata),$scope.CrAssign=function(param,Dcid,Stype,Ddate){$scope.frmSubmit=!1,$scope.frmSubmit=!1;var filepath=document.getElementById("filename"),indexoflast=filepath.value.lastIndexOf("\\")-1;filepath.value.slice("-"+indexoflast),filepath.value.slice(filepath.value.lastIndexOf(".")+1);if(Dcid){if(!Stype)return $scope.SubtypeVal=!0,!1;if(!Ddate)return $scope.frmSubmit=!0,!1;if(!filepath||!$scope.getdetails.length)return ModalService.openAlert("alert","Create Assign","Please upload Pdf file","null","null"),!1;$scope.valPdf=""}return $scope.name=void 0,$scope.visitimg=param,angular.forEach($scope.visitimg,function(value,key){value.checked?$scope.CrAssigndatas.macid.push({mac_code:value.classType}):delete value[key]}),0==$scope.CrAssigndatas.macid.length?(ModalService.openAlert("alert","","Please select MAC class","","",""),!1):null==$scope.CrAssigndatas.cambPhysicianId?(ModalService.openAlert("alert","","Please select CP","","",""),!1):($scope.CrAssigndatas={macid:$scope.CrAssigndatas.macid,cambphysicianId:$scope.CrAssigndatas.cambPhysicianId.person_id,reason:$scope.CrAssigndatas.Reasonsdoc,applicantId:$scope.applicantId,docsList:$scope.getdetails},APIS.CAMB_WORKLIST_ATTACHMENT.data=$scope.CrAssigndatas,console.log($scope.CrAssigndatas),$uibModalInstance.dismiss("cancel"),DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ATTACHMENT,function(response){if(response.success){ModalService.openAlert("alert","success","Assigned successfully","","","");var cmbValue=$("#cmbCreateCr").val();$("#"+cmbValue).find("option[label='Create CR']").remove(),$scope.cancel()}else console.log(response.errorMessage)},$scope.uconfig.token),void 0)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app.camb").directive("onReadFile",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsDataURL((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}),angular.module("app").controller("CreatesbCtrl",["$scope","$state","APIS","$uibModal","$uibModalInstance","$location","DataManager","$window",function($scope,$state,APIS,$uibModal,$uibModalInstance,$location,DataManager,$window){$scope.init=function(){},$scope.assignandcreateCr=function(){},$scope.close=function(){$uibModalInstance.close("close"),$scope.selected=""},$scope.init()}]),angular.module("app").controller("DmfpopupCtrl",["$scope","$state","APIS","DataManager","ModalService","$filter","$window","$uibModalInstance","$rootScope","$timeout","modalParam","$log",function($scope,$state,APIS,DataManager,ModalService,$filter,$window,$uibModalInstance,$rootScope,$timeout,modalParam,$log){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantDetail=modalParam.visitDetails,console.log($scope.applicantDetail),$scope.applicantId=$scope.applicantDetail.personId,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),console.log($scope.currentRole),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.Datefunction(),$scope.appointmentDate=null,$scope.dmfVisit={intitiatedby:$scope.userRegDetails.personId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.applicantId,initatedRole:$scope.roleid}},$scope.dmfAction=function(){return $scope.frmSubmitted=!0,$scope.form.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,ModalService.openAlert("confirm","DMF","Do you want to confirm the details?",$scope,"dmf",function(){}),$scope.$on("dmfOk",function(){$scope.temp={dateofoccurence:""},$scope.temp.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),$scope.value={intitiatedby:$scope.userRegDetails.personId,treatmentplan:$scope.dmfVisit.treatmentplan,diagnosis:$scope.dmfVisit.diagnosis,dateofoccurence:$scope.temp.dateofoccurence,applicantId:$scope.applicantId,initatedRole:$scope.roleid},APIS.DMF_POPUP.data=$scope.value,DataManager.sendRestRequest(null,APIS.DMF_POPUP,function(response){if(response.success){ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.cancel();var dmfValue=$("#cmbCreateCr").val();$("#"+dmfValue).parent().parent().parent().addClass("dmf_class")}else $log.error("DMF Model: "+response.errorMessages)},$scope.uconfig.token)}),void $scope.$on("dmfcancel",function(){$uibModalInstance.dismiss("cancel")}))},$scope.Datefunction=function(){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}$scope.fromDate=null,$scope.fromdateOptions={dateDisabled:disabled,formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",minDate:null,maxDate:new Date,startingDay:1},$scope.fromdatepickerPopup={opened:!1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0}},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("SearchsetupCtrl",["$scope","$state","APIS","$uibModal",function($scope,$state,APIS,$uibModal){$scope.init=function(){},$scope.init()}]),angular.module("app").controller("SearchcreateconsultCtrl",["$scope","$state","APIS","$uibModal",function($scope,$state,APIS,$uibModal){$scope.init=function(){},$scope.init()}]),angular.module("app").controller("SearchsetupCtrl",["$scope","$filter","ModalService","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope",function($scope,$filter,ModalService,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope){function getDayClass(data){var date=data.date,mode=data.mode;if("day"===mode)for(var dayToCheck=new Date(date).setHours(0,0,0,0),i=0;i<$scope.events.length;i++){var currentDay=new Date($scope.events[i].date).setHours(0,0,0,0);if(dayToCheck===currentDay)return $scope.events[i].status}return""}$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.firstName=$scope.userRegDetails.firstName,$scope.lastName=$scope.userRegDetails.lastName,$window.sessionStorage.setItem("popregister","newregister"),$scope.ClassLists=[{name:"C1"},{name:"C2"},{name:"C3"},{name:"DMF"}],$scope.classtype=[{type:"Class 1",value:"C1"},{type:"Class 2",value:"C2"},{type:"Class 3",value:"C3"}],$scope.selectedclass="Class 1",$scope.currentPage=1,$scope.tabledata={status_page_code:"CAMBWORKLIST",applicantName:""},$scope.value={idNo:"",licNo:"",applicantName:"",classType:"",startDate:"",endDate:""},$scope.dataBind(),$scope.crdocdropdata=null,$scope.reason=null,$scope.attachdocumentsData={doctypeId:null,subtypeId:null,primaryidentifier:"null",reportdate:"",filename:null,createdby:null},$scope.mrselectedAction={selectedObject:{}}},$scope.dataBind=function(){$scope.Datefunction(),$scope.idno=null,$scope.licenseNo=null,$scope.name=null,$scope.classimg=null,$scope.startDate=null,$scope.endDate=null,$scope.crdocdropdata=null,$scope.physreason=null,$scope.formcheck(),$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.$watch("startDate",function(newVal,oldVal){newVal&&($scope.value.startDate=$filter("date")(newVal,"yyyy-MM-dd"))}),$scope.$watch("endDate  ",function(newVal,oldVal){newVal&&($scope.value.endDate=$filter("date")(newVal,"yyyy-MM-dd"))}),$scope.$on("actionCompleted",function(event,args){args.status&&$scope.searchloaddatagrid()})},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.inlineOptions={customClass:getDayClass,minDate:new Date,showWeeks:!0},$scope.dateOption={formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},$scope.toggleMin=function(){$scope.inlineOptions.minDate=$scope.inlineOptions.minDate?null:new Date,$scope.dateOption.minDate=$scope.inlineOptions.minDate},$scope.toggleMin(),$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.setDate=function(year,month,day){$scope.dt=new Date(year,month,day)},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.altInputFormats=["M!/d!/yyyy"],$scope.popup1={opened:!1},$scope.popup2={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+1),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.formcheck=function(param){param?$scope.value.fromE1="yes":$scope.value.fromE1=null},$scope.searchData=function(){$scope.tabledata={status_page_code:"CAMBWORKLIST",applicantName:$scope.applicantname},$scope.getmrData()},$scope.select=function(page,data){data||(data=$scope.searchloaddata);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.searchloaddata=$filter("orderBy")($scope.searchloaddata,rowName),$scope.onOrderChange()},$scope.doAction=function(actionParam,applicantParam){$scope.visitDetails=null,$scope.applicantid=null,$scope.applicantId=tablerecord.applicant_id,console.log(applicantParam);var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success&&($scope.visitDetails={visitId:applicantParam.visitId,applicantId:applicantParam.applicantId,applicantuserId:response.dataBean.id,applicantDetails:applicantParam},$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$scope.triggerAction(actionParam,applicantParam))},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.openLists1=function(mrselectedAction,tablerecord,cmbid){return $scope.mrselectedAction.selectedObject={},sessionStorage.setItem("visitDetails",JSON.stringify(tablerecord)),$("#cmbCreateCr").val(cmbid),"Create Consult"==mrselectedAction&&($scope.selected="createconsult",$scope.size="md",$scope.popupcontroller="CreateconsultCtrl"),"Create CR"==mrselectedAction&&($scope.selected="createcr",$scope.size="lg",$scope.popupcontroller="CreatecrCtrl"),"Assign Doctor"==mrselectedAction&&($scope.selected="createassign",$scope.size="lg",$scope.popupcontroller="CreatecrCtrl"),"Create SB"==mrselectedAction&&($scope.selected="Create SB",$scope.size="md",$scope.popupcontroller="CreatesbCtrl"),"DMF"==mrselectedAction?($scope.cambDMF(tablerecord),
!1):("View Provisio"==mrselectedAction&&($scope.selected="viewprovisio",$scope.size="lg",$scope.popupcontroller="ViewprovisioCtrl"),"Add Diagnosis"==mrselectedAction&&($scope.selected="addDiagnosis",$scope.size="lg",$scope.popupcontroller="AddDiagnosisCtrl"),"Register"==mrselectedAction?(goToRegister(tablerecord),!1):void $uibModal.open({animation:!0,templateUrl:$scope.selected,size:$scope.size,controller:$scope.popupcontroller,backdrop:"static",resolve:{modalParam:function(){var datas={applicantdeteils:tablerecord};return datas}}}))},$scope.cambDMF=function(worklistData){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+worklistData.personId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){response.success&&($scope.val=response.dataBean,null!=$scope.val?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmfsearch",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:worklistData};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"searchdmf",controller:"DmfpopupCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:worklistData};return temp}}})}):$scope.dmfDoAction(worklistData))},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.dmfDoAction=function(worklistData){$uibModal.open({animation:!0,templateUrl:"searchdmf",controller:"DmfpopupCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:worklistData};return temp}}})},$scope.Datefunction=function(){$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpenCon=function(){$scope.datepickerPopup.opened=!0}},$scope.open=function($event,opened){$event.preventDefault(),$event.stopPropagation(),$scope[opened]=!0},$scope.searchloaddatagrid=function(){return APIS.CAMB_MRSEARCH_LOAD_GRID.data=$scope.value,console.log("Value"+$scope.value.idNo),null!=$scope.value.idNo&&""!=$scope.value.idNo||null!=$scope.value.licNo&&""!=$scope.value.licNo||null!=$scope.value.applicantName&&""!=$scope.value.applicantName||null!=$scope.value.classType&&""!=$scope.value.classType||null!=$scope.value.startDate&&""!=$scope.value.startDate||null!=$scope.value.endDate&&""!=$scope.value.endDate?($("#mrSearchDataTbl").show(),void DataManager.sendRestRequest(null,APIS.CAMB_MRSEARCH_LOAD_GRID,function(response){response.success&&(response.dataBean.length>0?($scope.searchloaddata=response.dataBean,console.log($scope.searchloaddata),$scope.select($scope.currentPage,$scope.searchloaddata)):ModalService.openAlert("alert","CAMB Search","No data found for the search/Filter criteria ","null","null"))},$scope.uconfig.token)):(ModalService.openAlert("alert","CAMB Search","No data found for the search/Filter criteria ","null","null"),!1)},$scope.goToPofile=function(tablerecord){if("yes"!=tablerecord.E1status){$scope.visitDetails=null,$scope.personId=null,$scope.personId=tablerecord.personId;var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+$scope.personId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.currentMAC,applicantId:tablerecord.personId,applicantuserId:response.dataBean.id,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl}else{$scope.visitDetails=null,$scope.personId=null,$scope.personId=tablerecord.personId;var url=null,tempUrl=null;tempUrl=APIS.CAMB_GET_E1PROFILE.URL,APIS.CAMB_GET_E1PROFILE.URL=tempUrl,APIS.CAMB_GET_E1PROFILE.data=tablerecord.personId,DataManager.sendRestRequest(null,APIS.CAMB_GET_E1PROFILE,function(response){response.success?($scope.eprof=response.dataBean,console.log($scope.eprof),$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.currentMAC,applicantId:tablerecord.personId,applicantuserId:response.dataBean.id,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_E1PROFILE.URL=tempUrl}};var goToRegister=function(tablerecord){var tempUrl=null;tempUrl=APIS.CAMB_GET_E1PROFILE.URL,APIS.CAMB_GET_E1PROFILE.URL=tempUrl,APIS.CAMB_GET_E1PROFILE.data=tablerecord.personId,DataManager.sendRestRequest(null,APIS.CAMB_GET_E1PROFILE,function(response){response.success?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/camb/partials/search/searchregister.html",controller:"CambRegisterCtrl",size:"lg",resolve:{userRegisterDetails:response.dataBean}}):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_E1PROFILE.URL=tempUrl};$scope.init()}]),angular.module("app").controller("ViewprovisioCtrl",["$scope","$state","APIS","$uibModal","$uibModalInstance","ModalService","$location","DataManager","$window","modalParam",function($scope,$state,APIS,$uibModal,$uibModalInstance,ModalService,$location,DataManager,$window,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantDetail=modalParam.applicantdeteils},$scope.loadProvisioData=function(modalParam){var personId=null;personId=void 0!=modalParam.applicantdeteils.personId?modalParam.applicantdeteils.personId:modalParam.applicantdeteils.applicant_id;var url=null,tempUrl=null;tempUrl=APIS.CAMB_PROVISIOVIEW.URL,url=tempUrl+"/"+personId,APIS.CAMB_PROVISIOVIEW.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_PROVISIOVIEW,function(response){response.success?($scope.provisioData=response.dataBean,console.log(response.dataBean)):console.log(response)},$scope.uconfig.token),APIS.CAMB_PROVISIOVIEW.URL=tempUrl},$scope.close=function(){$uibModalInstance.close("close")},$scope.init(),$scope.loadProvisioData(modalParam)}]),angular.module("app").controller("CambVettingCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$rootScope","ModalService","$uibModalStack","$parse","$timeout","$uibModal",function($scope,$filter,$state,APIS,$location,DataManager,$window,$rootScope,ModalService,$uibModalStack,$parse,$timeout,$uibModal){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantVisitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.showTab="vetting",$scope.visittype=$scope.applicantVisitDetails.applicantDetails.v_type,$scope.applicantDetails=$scope.applicantVisitDetails,$scope.applicantId=$scope.applicantVisitDetails.applicantDetails.applicant_id,$scope.visitId=$scope.applicantVisitDetails.applicantDetails.visit_id,$scope.physicianId=$scope.applicantDetails.camb_physician_id,$scope.macForReport=$scope.applicantVisitDetails.applicantDetails.mac,$scope.macForReportList=[],$scope.tabledata={type:$scope.visittype,id:$scope.visitId,applicantId:$scope.applicantId},$scope.init=function(){$scope.followupProvisoListAdd=[],$scope.followupProvisoList=[],$scope.followupProvisoListDel=[],$scope.showPubBtn=!1,$scope.nextdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date},$scope.expirydateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.visitDetails,$scope.databind(),$scope.$on("publishbuttonONloadletter",function(event,data){$scope.showPubBtn=!0}),$scope.$on("publishbuttonONloadmail",function(event,data){$scope.showPubBtn=!0})},$scope.databind=function(){$scope.followupProvisoTypeFetch(),$scope.followupProvisoFrequencyFetch(),$scope.followupProvisoDonebyFetch(),$scope.vettingPreload()},$scope.vettingPreload=function(){$scope.vettingpreloadData={followupProvisoDTOList:[],latestFitness:[],processSummary:null,attachments:[]},APIS.CAMB_POSTBOARD_VETTING_PRELOAD.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_POSTBOARD_VETTING_PRELOAD,function(response){response.success?($scope.VettingId=response.dataBean.vettingId,$scope.showPublishBtn=response.dataBean.publishEnabled,$scope.consRecomndtnId=response.dataBean.consRecomndtnId,$scope.vettingpreloadData.attachments=response.dataBean.attachments,$scope.vettingpreloadData.followupProvisoDTOList=response.dataBean.followupProvisoDTOList,$scope.followupProvisoDTOListSave=$scope.vettingpreloadData.followupProvisoDTOList,console.log($scope.followupProvisoDTOListSave),$scope.vettingpreloadData.latestFitness=response.dataBean.latestFitness,$scope.vettingpreloadData.processSummary=response.dataBean.processSummary,$scope.showPublishBtn&&($scope.showPubBtn=!0,$scope.$root.$broadcast("publishbuttonONloadvetting",!0)),angular.forEach($scope.vettingpreloadData.followupProvisoDTOList,function(value,key){null==$scope.vettingpreloadData.followupProvisoDTOList[key].nextDueDateVetting||""==$scope.vettingpreloadData.followupProvisoDTOList[key].nextDueDateVetting?$scope.vettingpreloadData.followupProvisoDTOList[key].nextDueDateVetting=null:$scope.vettingpreloadData.followupProvisoDTOList[key].nextDueDateVetting=new Date(value.nextDueDateVetting)})):console.log("Vetting Preload - Error Code: "+response.errorCode+"Error Messages"+response.errorMessages)})},$scope.followupProvisoTypeFetch=function(){DataManager.sendRestRequest(null,APIS.CAMB_GET_FOLLOWUP_PROVISO_DESCRIPTION_TYPE,function(response){response.success?$scope.followupProvisoTypeList=response.dataBean.followupProvsoTypeList:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoFrequencyFetch=function(){DataManager.sendRestRequest(null,APIS.CAMB_GET_FOLLOWUP_PROVISO_FREQUENCY,function(response){response.success?$scope.followupProvisoFrequencyList=response.dataBean.freuencyNames:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoDonebyFetch=function(){DataManager.sendRestRequest(null,APIS.CAMB_GET_LMAB_POSTBOARD_VETTING_FOLLOWUP_PROVISO_DONEBY,function(response){if(response.success){$scope.followupProvisoDoneByList=response.dataBean.doneByNames;for(var f=0;f<$scope.followupProvisoDoneByList.length;f++){var parsefollowupProvisoDoneByList=$parse($scope.followupProvisoDoneByList[f].PersonId);$scope.followupProvisoDoneByList[f].PersonId=parsefollowupProvisoDoneByList($scope)}}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisosAdd=function(){var temp={cmbFollowupProvisoId:0,cmbAssesmentId:$scope.applicantDetails.assesment_id,followupProvisoTypeId:"",specialityOrInvestigationId:"",followupProvisoFrequencyId:$scope.followupProvisoFrequencyList.length>0?$scope.followupProvisoFrequencyList[0].FrequencyId:null,followupProvisoDoneById:$scope.followupProvisoDoneByList.length>0?$scope.followupProvisoDoneByList[0].PersonId:null,nextDueDateVetting:"",recordExist:"Yes"};$scope.followupProvisoListAdd.push(temp)},$scope.followupProvisosRemove=function(index,removeFrom){ModalService.openAlert("confirm","Proviso","want to delete selected record?",$scope,"ProDel",function(){}),$scope.$on("ProDelOk",function(){"existfolloup"==removeFrom&&($scope.followupProvisoListDel.push({cmbFollowupProvisoId:$scope.vettingpreloadData.followupProvisoDTOList[index].cmbFollowupProvisoId,cmbAssesmentId:$scope.vettingpreloadData.followupProvisoDTOList[index].assesment_id,followupProvisoTypeId:$scope.vettingpreloadData.followupProvisoDTOList[index].followupProvisoTypeId,specialityOrInvestigationId:$scope.vettingpreloadData.followupProvisoDTOList[index].specialityOrInvestigationId,followupProvisoFrequencyId:$scope.vettingpreloadData.followupProvisoDTOList[index].followupProvisoFrequencyId,followupProvisoDoneById:$scope.vettingpreloadData.followupProvisoDTOList[index].followupProvisoDoneById,nextDueDateVetting:$scope.vettingpreloadData.followupProvisoDTOList[index].nextDueDateVetting,recordExist:"No"}),$scope.vettingpreloadData.followupProvisoDTOList.splice(index,1)),"newfollowup"==removeFrom&&$scope.followupProvisoListAdd.splice(index,1)}),$scope.$on("ProDelcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.nextdatepickerOpen=function($event,nextdatepickerPopup){$event.preventDefault(),$event.stopPropagation(),nextdatepickerPopup.opened=!0},$scope.followupProvisoSubTypeFetch=function(subtypeSearch,index){$scope.followupProvisoSubTypeList=[];var url=null,tempUrl=null;tempUrl=APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE.URL,url=tempUrl+"/"+$scope.followupProvisoListAdd[index].Type.code+"/"+subtypeSearch,APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE,function(response){response.success?$timeout(function(){$scope.followupProvisoSubTypeList=response.dataBean.spcltyOrInvstgnList},2e3):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE.URL=tempUrl},$scope.viewAttachments=function(documentid){var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_VIEW_ATTACHMENTS.URL,url=tempUrl+"/"+documentid,APIS.GET_CAMB_VIEW_ATTACHMENTS.URL=url,APIS.GET_CAMB_VIEW_ATTACHMENTS.data=$scope.documentId,DataManager.sendRestRequest(null,APIS.GET_CAMB_VIEW_ATTACHMENTS,function(response){if(response.success){console.log(griddata);var content=response.dataBean.attachDocContent,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.attachDocContent,"_blank","location=no,enableviewportscale=yes")}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_CAMB_VIEW_ATTACHMENTS.URL=tempUrl},$scope.expirydatepickerOpen=function($event,expirydatepickerPopup,index){$event.preventDefault(),$event.stopPropagation(),$scope.vettingpreloadData.latestFitness[index].opened=!0},$scope.vettingSave=function(){$scope.vettingsaveData={id:$scope.tabledata.id,type:$scope.tabledata.type,consRecomndtnId:$scope.consRecomndtnId,followupProvisoDTOList:[],latestFitness:[],vettingId:$scope.VettingId},angular.forEach($scope.vettingpreloadData.latestFitness,function(value,key){null==$scope.vettingpreloadData.latestFitness[key].ExpiryDate||""==$scope.vettingpreloadData.latestFitness[key].ExpiryDate?$scope.ExpiryDate=null:$scope.ExpiryDate=$filter("date")(new Date($scope.vettingpreloadData.latestFitness[key].ExpiryDate),$scope.formats[3]);var temp={ExpiryDate:$scope.ExpiryDate,MacId:$scope.vettingpreloadData.latestFitness[key].MacId,AppLatesFitnesstId:$scope.vettingpreloadData.latestFitness[key].AppLatesFitnesstId,MacCode:$scope.vettingpreloadData.latestFitness[key].MacCode,NextLME:$scope.vettingpreloadData.latestFitness[key].NextLME,NextLMETypeId:$scope.vettingpreloadData.latestFitness[key].NextLMETypeId};$scope.vettingsaveData.latestFitness.push(temp)}),angular.forEach($scope.vettingpreloadData.followupProvisoDTOList,function(value,key){null==$scope.vettingpreloadData.followupProvisoDTOList[key].nextDueDateVetting||""==$scope.vettingpreloadData.followupProvisoDTOList[key].nextDueDateVetting?$scope.nextDueDateVetting=null:$scope.nextDueDateVetting=$filter("date")(new Date($scope.vettingpreloadData.followupProvisoDTOList[key].nextDueDateVetting),$scope.formats[3]),$scope.vettingpreloadData.followupProvisoDTOList[key].nextDueDateVetting=$scope.nextDueDateVetting,delete $scope.vettingpreloadData.followupProvisoDTOList[key].otherInvestigation,delete $scope.vettingpreloadData.followupProvisoDTOList[key].addedAtVetting,delete $scope.vettingpreloadData.followupProvisoDTOList[key].donebyDescription,delete $scope.vettingpreloadData.followupProvisoDTOList[key].macId,delete $scope.vettingpreloadData.followupProvisoDTOList[key].flwupProvsDescription,delete $scope.vettingpreloadData.followupProvisoDTOList[key].opened});var FinalProvisoList=$scope.followupProvisoListAdd;$scope.followupProvisoSubTypeList&&FinalProvisoList.length>0&&angular.forEach(FinalProvisoList,function(value,key){FinalProvisoList[key].specialityOrInvestigationId=$.grep($scope.followupProvisoSubTypeList,function(e){return e.description==value.SubType})[0].specialityOrInvestigationId,FinalProvisoList[key].nextDueDateVetting=$filter("date")(new Date(FinalProvisoList[key].nextDueDateVetting),$scope.formats[3]),FinalProvisoList[key].followupProvisoTypeId=value.Type.followupProvisoTypeId,delete FinalProvisoList[key].opened,delete FinalProvisoList[key].Type,delete FinalProvisoList[key].SubType}),$scope.followupProvisoListDel.length>0&&($scope.addedProvisoList=FinalProvisoList.concat($scope.followupProvisoListDel)),$scope.addedProvisoList?$scope.vettingsaveData.followupProvisoDTOList=$scope.vettingpreloadData.followupProvisoDTOList.concat($scope.addedProvisoList):$scope.vettingsaveData.followupProvisoDTOList=$scope.vettingpreloadData.followupProvisoDTOList.concat(FinalProvisoList),APIS.CAMB_CP_VETTING_SAVE.data=$scope.vettingsaveData,DataManager.sendRestRequest(null,APIS.CAMB_CP_VETTING_SAVE,function(response){response.success?($scope.followupProvisoListAdd=[],ModalService.openAlert("alert","success","Vetting Confirmed Successfully","null","null",function(){$scope.vettingPreload()})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.cancel=function(){ModalService.openAlert("confirm","Vetting","close window?",$scope,"closeVett",function(){}),$scope.$on("closeVettOk",function(){$uibModalStack.dismiss("cancel"),$window.location.reload()}),$scope.$on("closeVettcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.SplPrecancel=function(){$uibModalStack.dismiss("cancel"),$window.location.reload()},$scope.publish=function(){switch($scope.applicantVisitDetails.visitType){case"CR_LMAB_POST":$window.open("#/crlmabpostfullreport?viewPDF=Y");break;case"CR_LMAB":$window.open("#/crlmabfullreport?viewPDF=Y");break;case"CR_AR":$uibModal.open({animation:!0,templateUrl:"app/camb/partials/cambreview/caarfullreport.html",controller:"CrarFullReportPdfCtrl",windowClass:"vetting-custom-class",resolve:{modalParam:function(){var temp={applicantParam:$scope.applicantVisitDetails};return temp}}});break;default:$window.open("#/crarfullreport?viewPDF=Y")}$scope.pubcancel()},$scope.getDate=function(date){return console.log(date),date?new Date(date):null},$scope.viewPDF=function(){angular.forEach($scope.vettingpreloadData.latestFitness,function(kval,kkey){$scope.macForReportList.push(kval.MacId)}),APIS.CAMB_COMMON_FULLREPORT.data={applicantId:$scope.applicantVisitDetails.applicantId,referenceType:"CR_AR",visitId:$scope.applicantVisitDetails.visitId,macIds:$scope.macForReportList},DataManager.sendRestRequest(null,APIS.CAMB_COMMON_FULLREPORT,function(response){if(response.success)if(null!=response.dataBean.pdfFile){var at=window.atob(response.dataBean.pdfFile),unes=unescape(at),innerContents=decodeURIComponent(unes),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()}else ModalService.openAlert("alert","Warning","PDF not available.","null","null");else $log.error("full report error: "+response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("VettingLetterCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService","$uibModalStack","$timeout",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService,$uibModalStack,$timeout){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantVisitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.applicantid=$scope.visitDetails.applicantDetails.applicant_id,$scope.visitid=$scope.visitDetails.visitId,$scope.type=$scope.visitDetails.applicantDetails.v_type,$scope.init=function(){$scope.lettertemplatesData=[],$scope.lettertemplatespreloadData={},$scope.letterconfirmDisabled=!1,$scope.letterregenerateDisabled=!0,$scope.showPubBtn=!1,$scope.alertStatus=!1,$scope.lettercondetails=null,$scope.$on("publishbuttonONloadvetting",function(event,data){$scope.showPubBtn=!0}),$scope.$on("publishbuttonONloadmail",function(event,data){$scope.showPubBtn=!0}),$scope.tabledata={type:$scope.applicantVisitDetails.applicantDetails.v_type,id:$scope.applicantVisitDetails.applicantDetails.visit_id,applicantId:$scope.applicantVisitDetails.applicantDetails.applicant_id},$scope.databind()},$scope.databind=function(){$scope.letterTemplatesFetch(),$timeout(function(){$scope.letterTemplatesPreload()},3e3)},$scope.letterTemplatesFetch=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_POSTBOARD_LETTER_TEMPLATES,function(response){response.success?$scope.lettertemplatesData=response.dataBean.templates:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.letterTemplatesPreload=function(){CKEDITOR.replace("vettinglettertemplatecontent"),$scope.lettertemplatespreloadData={};var url=null,tempUrl=null;tempUrl=APIS.CAMB_VETTING_LETTER_TEMPLATES_PRELOAD.URL,url=tempUrl+"/"+$scope.tabledata.type+"/"+$scope.tabledata.id,APIS.CAMB_VETTING_LETTER_TEMPLATES_PRELOAD.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_VETTING_LETTER_TEMPLATES_PRELOAD,function(response){response.success?($scope.lettertemplatespreloadData=response.dataBean,$scope.showPublishBtn=response.dataBean.publishEnabled,CKEDITOR.instances.vettinglettertemplatecontent.setData($scope.lettertemplatespreloadData.letterContent),"Y"==$scope.applicantVisitDetails.applicantDetails.letter_confirmed&&($scope.letterconfirmDisabled=!1,$scope.letterregenerateDisabled=!0),$scope.showPublishBtn&&($scope.showPubBtn=!0,$scope.$root.$broadcast("publishbuttonONloadletter",!0))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_VETTING_LETTER_TEMPLATES_PRELOAD.URL=tempUrl},$scope.letterTemplatesContentFetch=function(type,letterTemplateId){$scope.letterSaveStatus=!1,$scope.letterregenerateStatus=!1,CKEDITOR.instances.vettinglettertemplatecontent.setData(""),$scope.lettertemplatescontentData={};var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT.URL,url=tempUrl+"/"+letterTemplateId+"/"+$scope.applicantid+"/"+$scope.visitid+"/0/0/"+$scope.type,console.log(url),APIS.GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT,function(response){response.success?($scope.lettertemplatescontentData=response.dataBean,$scope.letterconfirmDisabled=!1,$scope.letterregenerateDisabled=!0,"regenerate"==type&&($scope.letterregenerateStatus=!0),""!==$scope.lettertemplatescontentData.letterContent&&CKEDITOR.instances.vettinglettertemplatecontent.insertHtml($scope.lettertemplatescontentData.letterContent)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT.URL=tempUrl},$scope.letterTemplatesSave=function(){$scope.alertStatus=!1;var count=CKEDITOR.instances.vettinglettertemplatecontent.getData(),enURI=encodeURIComponent(count),es=escape(enURI);return $scope.viewProVal=window.btoa(es),count.replace(/(<([^>]+)>)/gi," ").trim().length>=1e4?($scope.alertStatus=!0,$scope.letterregenerateStatus=!1,!1):($scope.lettertemplatesaveData={type:$scope.tabledata.type,id:$scope.tabledata.id,letterContent:CKEDITOR.instances.vettinglettertemplatecontent.getData(),letterTemplateId:$scope.lettertemplatespreloadData.letterTemplateId,letterContentPdf:$scope.viewProVal},APIS.CAMB_VETTING_LETTER_TEMPLATES_SAVE.data=$scope.lettertemplatesaveData,void DataManager.sendRestRequest(null,APIS.CAMB_VETTING_LETTER_TEMPLATES_SAVE,function(response){response.success?($scope.letterSaveStatus=response,console.log($scope.letterSaveStatus),ModalService.openAlert("alert","success","Letter Confirmed Successfully","null","null"),$scope.letterregenerateDisabled=!1,$scope.letterregenerateStatus=!1,$scope.letterTemplatesPreload(),$scope.letterconfirmDisabled=!0):console.log("Letter Templates Save - Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token))},$scope.cancel=function(){ModalService.openAlert("confirm","Vetting","close window?",$scope,"closeVettlet",function(){}),$scope.$on("closeVettletOk",function(){$uibModalStack.dismiss("cancel"),$window.location.reload()}),$scope.$on("closeVettletcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.publish=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/cambreview/caarfullreport.html",controller:"CrarFullReportPdfCtrl",windowClass:"vetting-custom-class",resolve:{modalParam:function(){var temp={applicantParam:$scope.applicantVisitDetails};return temp}}})},$scope.init()}]),angular.module("app").controller("VettingMailCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService","$uibModalStack","$timeout",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService,$uibModalStack,$timeout){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantVisitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.applicantid=$scope.visitDetails.applicantId,$scope.visitid=$scope.visitDetails.visitId,$scope.type=$scope.visitDetails.visitType,$scope.init=function(){$scope.emailconfirmDisabled=!1,$scope.showPubBtn=!1,$scope.alertemailStatus=!1,$scope.emailtemplatespreloadData={},$scope.tabledata={type:$scope.applicantVisitDetails.applicantDetails.v_type,id:$scope.applicantVisitDetails.applicantDetails.visit_id,applicantId:$scope.applicantVisitDetails.applicantDetails.applicant_id},$scope.databind(),$scope.$on("publishbuttonONloadvetting",function(event,data){$scope.showPubBtn=!0,console.log("s")}),$scope.$on("publishbuttonONloadletter",function(event,data){$scope.showPubBtn=!0,console.log("s")})},$scope.databind=function(){$scope.emailTemplatesFetch(),$scope.emailShortcutFetch(),$timeout(function(){CKEDITOR.replace("vettingemailtemplatecontent"),$scope.emailTemplatesPreload()},3e3)},$scope.emailTemplatesPreload=function(){$scope.emailtemplatespreloadData={};var url=null,tempUrl=null;tempUrl=APIS.CAMB_VETTING_EMAIL_TEMPLATES_PRELOAD.URL,url=tempUrl+"/"+$scope.tabledata.type+"/"+$scope.tabledata.id,APIS.CAMB_VETTING_EMAIL_TEMPLATES_PRELOAD.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_VETTING_EMAIL_TEMPLATES_PRELOAD,function(response){response.success?($scope.emailtemplatespreloadData=response.dataBean,$scope.showPublishBtn=response.dataBean.publishEnabled,console.log($scope.showPublishBtn),CKEDITOR.instances.vettingemailtemplatecontent.setData($scope.emailtemplatespreloadData.emailBody),"Y"==$scope.applicantVisitDetails.applicantDetails.email_confirmed&&($scope.emailconfirmDisabled=!0),$scope.showPublishBtn&&($scope.showPubBtn=!0,$scope.$root.$broadcast("publishbuttonONloadmail",!0))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_VETTING_EMAIL_TEMPLATES_PRELOAD.URL=tempUrl},$scope.emailTemplatesFetch=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_VETTING_EMAIL_TEMPLATES,function(response){response.success?$scope.emailtemplatesData=response.dataBean.templates:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.emailTemplatesContentFetch=function(emailTemplateId){var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_VETTING_EMAIL_TEMPLATES_CONTENT.URL,url=tempUrl+"/"+emailTemplateId+"/"+$scope.applicantid+"/"+$scope.visitid+"/0/0/"+$scope.type,APIS.GET_CAMB_VETTING_EMAIL_TEMPLATES_CONTENT.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_VETTING_EMAIL_TEMPLATES_CONTENT,function(response){response.success?($scope.emailtemplatescontentData=response.dataBean,""!==$scope.emailtemplatescontentData.letterContent&&CKEDITOR.instances.vettingemailtemplatecontent.setData($scope.emailtemplatescontentData.emailBody),$scope.emailtemplatespreloadData.emailshortcut=$scope.emailtemplatescontentData.emailSubject):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_CAMB_VETTING_EMAIL_TEMPLATES_CONTENT.URL=tempUrl},$scope.emailShortcutFetch=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_VETTING_EMAIL_TEMPLATES_SHORTCUT,function(response){response.success?$scope.emailshortcutData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.emailShortcutAdd=function(emailshortcut){var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_VETTING_EMAIL_SHORTCUT.URL,url=tempUrl+"/"+emailshortcut+"@"+$scope.type+"/"+$scope.applicantid+"/"+$scope.visitid+"/0/0",APIS.GET_CAMB_VETTING_EMAIL_SHORTCUT.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_VETTING_EMAIL_SHORTCUT,function(response){response.success?($scope.tempShortcutDescrip=response.dataBean,""!=$scope.tempShortcutDescrip&&CKEDITOR.instances.vettingemailtemplatecontent.insertHtml($scope.tempShortcutDescrip)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_CAMB_VETTING_EMAIL_SHORTCUT.URL=tempUrl},$scope.emailTemplatesSave=function(){$scope.alertemailStatus=!1;var count=CKEDITOR.instances.vettingemailtemplatecontent.getData();
return count.replace(/(<([^>]+)>)/gi," ").trim().length>=1e4?($scope.alertemailStatus=!0,!1):($scope.emailtemplatesaveData={type:$scope.tabledata.type,id:$scope.tabledata.id,emailRecipients:$scope.emailtemplatespreloadData.emailRecipients,emailSubject:$scope.emailtemplatespreloadData.emailSubject,emailBody:CKEDITOR.instances.vettingemailtemplatecontent.getData(),emailTemplateId:$scope.emailtemplatespreloadData.emailTemplateId},APIS.CAMB_VETTING_EMAIL_TEMPLATES_SAVE.data=$scope.emailtemplatesaveData,void DataManager.sendRestRequest(null,APIS.CAMB_VETTING_EMAIL_TEMPLATES_SAVE,function(response){response.success?($scope.emailTempStatus=response,$scope.emailTemplatesPreload(),ModalService.openAlert("alert","success","Email Confirmed Successfully","null","null")):console.log("Email Temp Save - Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token))},$scope.cancel=function(){ModalService.openAlert("confirm","Vetting","close window?",$scope,"closeVettemail",function(){}),$scope.$on("closeVettemailOk",function(){$uibModalStack.dismiss("cancel"),$window.location.reload()}),$scope.$on("closeVettemailcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.publish=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/cambreview/caarfullreport.html",controller:"CrarFullReportPdfCtrl",windowClass:"vetting-custom-class",resolve:{modalParam:function(){var temp={applicantParam:$scope.applicantVisitDetails};return temp}}})},$scope.init()}]),angular.module("app").controller("VettingTabCtrl",["$scope","$state","APIS","CAASConfig","ResourceManager","$stateParams","$uibModalInstance",function($scope,$state,APIS,CAASConfig,regRM,$stateParams,$uibModalInstance){$scope.init=function(){$scope.showTab="vetting"},$scope.dataBind=function(){},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.pubcancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("ActionWorklistctrl",["$scope","$state","APIS","DataManager","ModalService","$uibModal","$filter","$window","$uibModalInstance","$rootScope","$timeout","modalParam","$log",function($scope,$state,APIS,DataManager,ModalService,$uibModal,$filter,$window,$uibModalInstance,$rootScope,$timeout,modalParam,$log){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.ApplicantDetails=modalParam.applicantParam,console.log($scope.ApplicantDetails),$scope.type=$scope.ApplicantDetails.v_type,$scope.applicantId=$scope.ApplicantDetails.applicant_id,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.appvisittypes=$scope.ApplicantDetails.mac,$scope.applicantid=$scope.ApplicantDetails.applicant_id,$scope.sendrefStatus=!1,$scope.visitid=$scope.ApplicantDetails.visit_id,setTimeout(function(){CKEDITOR.replace("lettertemplatecontent")},100),setTimeout(function(){CKEDITOR.replace("emailtemplatecontent")},100),$scope.init=function(){$scope.databind(),$scope.CambTransremark=null,$scope.docdrlist=null,$scope.transfersavereason=null,$scope.cambabortsavedatareason="",$scope.isFrmSubmited=!1,$scope.lettertemplatescontentData=null,$scope.lttemplatespreloadData={},$scope.sendrefgriddata={},$scope.dmfVisit={intitiatedby:$scope.userRegDetails.personId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.applicantid,initatedRole:$scope.roleid},$scope.dmfarVisit={intitiatedby:$scope.userRegDetails.personId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.applicantId,initatedRole:$scope.roleid},$scope.attachdocumentsData={doctypeId:null,subtypeId:null,primaryidentifier:"null",reportdate:"",clinicId:"null",filename:null,createdby:null},$scope.getdetails={referenceId:2,referencetype:"LME_VISITS",doctypeId:null,subtypeId:[],clinicId:null,reportdate:null,createdby:null,filename:null,document:null,applicantId:null,roleName:null},$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.databind()},$scope.databind=function(){$scope.transcp(),$scope.getcambdata(),$scope.getRefLtinfo(),$scope.letterTemplatesFetch(),$scope.ShortcutFetch(),$scope.loadattachdocdetails(),$scope.letterTemplatesContentFetch(),$timeout(function(){$scope.letterTemplatesPreload()},3e3),$scope.loadgriddata(),$scope.Datefunction()},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.attachcancel=function(){$uibModalInstance.close($scope.griddata)},$scope.getcambdata=function(){$scope.visittype=$scope.ApplicantDetails.v_type,$scope.visitid=$scope.ApplicantDetails.visit_id;var url=null,tempUrl=null;tempUrl=APIS.CAMB_ABORT_GETVISITDETAILS.URL,url=tempUrl+"/"+$scope.visittype+"/"+$scope.visitid,APIS.CAMB_ABORT_GETVISITDETAILS.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_ABORT_GETVISITDETAILS,function(response){response.success?($scope.abortloaddata=response.dataBean,console.log($scope.abortloaddata)):$log.error("Abort Model: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_ABORT_GETVISITDETAILS.URL=tempUrl},$scope.abortAction=function(){return $scope.isFrmSubmited=!0,$scope.frmAbortDetails.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.isFrmSubmited=!1,$scope.frmInvalid=!1,ModalService.openAlert("confirm","ABORT","Do you want to confirm the details?",$scope,"abortcamb",function(){}),$scope.$on("abortcambOk",function(){$scope.cambabortsavedata={type:$scope.ApplicantDetails.v_type,id:$scope.ApplicantDetails.processStatusPageId,visitId:$scope.ApplicantDetails.visit_id,reason:$scope.cambabortsavedata.reason,applicantId:$scope.ApplicantDetails.applicant_id},APIS.CAMB_ABORT.data=$scope.cambabortsavedata,console.log($scope.cambabortsavedata),DataManager.sendRestRequest(null,APIS.CAMB_ABORT,function(response){response.success?($scope.cambabortsavedata.start_date=$scope.abortloaddata?$filter("date")(new Date($scope.abortloaddata[0].startdate),"yyyy-MM-dd hh:mm:ss"):null,$scope.cambabortsavedata.statusId=$scope.abortloaddata?$scope.abortloaddata[0].status_id:null,ModalService.openAlert("alert","Abort","Aborted Successfully",$scope,"abort",function(){$window.location.reload()})):$log.error("Abort Model: "+response.errorMessages)},$scope.uconfig.token)}),void $scope.$on("abortcambcancel",function(){$uibModalInstance.dismiss("cancel")}))},$scope.transcp=function(){DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_TRANSFER,function(response){response.success?($scope.cpdrop=response.dataBean,console.log($scope.cpdrop)):console.log(response)},$scope.uconfig.token)},$scope.transsubmit=function(){return $scope.isFrmSubmited=!0,$scope.frmtransferDetails.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.transfersave={visitId:$scope.ApplicantDetails.visit_id,applicantName:$scope.ApplicantDetails.applicantname,statusPageCode:$scope.ApplicantDetails.processStatusPageCode,processStatusPageId:$scope.ApplicantDetails.processStatusPageId,visitType:$scope.ApplicantDetails.v_type,roleId:$scope.docdrlist.roleid,oldCPId:$scope.ApplicantDetails.camb_physician_id,oldCPName:$scope.ApplicantDetails.doctor_name,newCPName:$scope.docdrlist.fullName,remarks:$scope.transfersavereason,cambPhysicianId:$scope.docdrlist.personId},$scope.docdrlist.personId==parseInt($scope.ApplicantDetails.camb_physician_id)?(ModalService.openAlert("alert","Warning","Cannot select same physician","null","null"),!1):($scope.frmInvalid=!1,ModalService.openAlert("confirm","TRANSFER","Do you want to confirm the details?",$scope,"transfer",function(){}),$scope.$on("transferOk",function(){APIS.CAMB_WORKLIST_TRANSFERSAVE.data=$scope.transfersave,console.log($scope.transfersave),DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_TRANSFERSAVE,function(response){response.success?(console.log(response.success),ModalService.openAlert("alert","Transfer","saved data successfully","null","null"),$scope.cancel()):$log.error("Transfer: "+response.errorMessages),console.log(response.success)},$scope.uconfig.token)}),void $scope.$on("transfercancel",function(){$uibModalInstance.dismiss("cancel")})))},$scope.dmfarAction=function(){return $scope.frmSubmitted=!0,$scope.form.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,$scope.frmInvalid=!1,ModalService.openAlert("confirm","DMF","Do you want to confirm the details?",$scope,"dmf",function(){}),$scope.$on("dmfOk",function(){$scope.dmfVisit.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),APIS.DMF_POPUP.data=$scope.dmfarVisit,console.log($scope.dmfVisit),DataManager.sendRestRequest(null,APIS.DMF_POPUP,function(response){response.success?(ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.cancel()):$log.error("DMF Model: "+response.errorMessages)},$scope.uconfig.token)}),void $scope.$on("dmfcancel",function(){$uibModalInstance.dismiss("cancel")}))},$scope.getRefLtinfo=function(){var url=null,tempUrl=null;tempUrl=APIS.CAMB_GET_REFERRAL_LTINFO.URL,$scope.visitid=$scope.ApplicantDetails.visit_id,url=tempUrl+"/"+$scope.visitid,APIS.CAMB_GET_REFERRAL_LTINFO.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GET_REFERRAL_LTINFO,function(response){response.success?($scope.lttemplatespreloadData=response.dataBean,console.log($scope.lttemplatespreloadData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_REFERRAL_LTINFO.URL=tempUrl},$scope.letterTemplatesFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_POSTBOARD_LETTER_TEMPLATES,function(response){response.success?($scope.lettertemplatesData=response.dataBean.templates,console.log($scope.lettertemplatesData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.letterTemplatesPreload=function(){$scope.lettertemplatespreloadData={};var url=null,tempUrl=null;tempUrl=APIS.CAMB_VETTING_LETTER_TEMPLATES_PRELOAD.URL,url=tempUrl+"/"+$scope.visitid,APIS.CAMB_VETTING_LETTER_TEMPLATES_PRELOAD.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_VETTING_LETTER_TEMPLATES_PRELOAD,function(response){response.success?($scope.lettertemplatespreloadData=response.dataBean,$scope.showPublishBtn=response.dataBean.publishEnabled,CKEDITOR.instances.lettertemplatecontent.setData($scope.lettertemplatespreloadData.emailBody),"Y"==$scope.applicantDetails.letter_confirmed&&($scope.letterconfirmDisabled=!0,$scope.letterregenerateDisabled=!1)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_VETTING_LETTER_TEMPLATES_PRELOAD.URL=tempUrl},$scope.letterTemplatesContentFetch=function(letterTemplateId){var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT.URL,url=tempUrl+"/"+letterTemplateId+"/"+$scope.visitDetails.applicantId+"/"+$scope.visitid+"/0/0/"+$scope.visittype,APIS.GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT,function(response){response.success?($scope.lettertemplatescontentData=response.dataBean,$scope.lettertemplates=letterTemplateId,console.log($scope.lettertemplatescontentData),""!=$scope.lettertemplatescontentData.letterContent&&CKEDITOR.instances.lettertemplatecontent.insertHtml($scope.lettertemplatescontentData.letterContent)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT.URL=tempUrl},$scope.ShortcutFetch=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_VETTING_EMAIL_TEMPLATES_SHORTCUT,function(response){response.success?($scope.shortcutData=response.dataBean,console.log($scope.shortcutData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.ShortcutAdd=function(shortcut){var url=null,tempUrl=null;tempUrl=APIS.SEND_REFFERAL_SHORTCUT_DESCRIPTION.URL,url=tempUrl+"/"+shortcut+"@"+$scope.type+"/"+$scope.applicantid+"/"+$scope.visitid+"/0/0",APIS.SEND_REFFERAL_SHORTCUT_DESCRIPTION.URL=url,DataManager.sendRestRequest(null,APIS.SEND_REFFERAL_SHORTCUT_DESCRIPTION,function(response){response.success?($scope.tempShortcutDescrip=response.dataBean,console.log($scope.tempShortcutDescrip),""!=$scope.tempShortcutDescrip&&CKEDITOR.instances.lettertemplatecontent.insertHtml($scope.tempShortcutDescrip)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.SEND_REFFERAL_SHORTCUT_DESCRIPTION.URL=tempUrl},$scope.LTTemplatesSave=function(){$scope.frmSubmitted=!0;var count=CKEDITOR.instances.lettertemplatecontent.getData();return count?$scope.form.$invalid||""==count?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,$scope.sendrefStatus=!1,count.replace(/(<([^>]+)>)/gi," ").trim().length>=1e4?($scope.sendrefStatus=!0,!1):($scope.emailtemplatesaveData={sendRefId:$scope.lttemplatespreloadData.sendRefId,emailRecipients:$scope.lttemplatespreloadData.emailRecipients,emailSubject:$scope.lttemplatespreloadData.emailSubject,emailBody:CKEDITOR.instances.lettertemplatecontent.getData(),letterTemplateId:$scope.lettertemplates},APIS.CAMB_REFERRAL_LT_SAVE.data=$scope.emailtemplatesaveData,void DataManager.sendRestRequest(null,APIS.CAMB_REFERRAL_LT_SAVE,function(response){response.success?(console.log($scope.emailtemplatesaveData),ModalService.openAlert("alert","success","Save Referral Confirmed Successfully","null","null"),$scope.cancel()):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token))):(ModalService.openAlert("alert","Error","please Fill Context","null","null"),!1)},$scope.LTTemplatesSend=function(){$scope.frmSubmitted=!0;var count=CKEDITOR.instances.lettertemplatecontent.getData(),count=CKEDITOR.instances.lettertemplatecontent.getData();return count?$scope.form.$invalid||""==count?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,$scope.sendrefStatus=!1,count.replace(/(<([^>]+)>)/gi," ").trim().length>=1e4?($scope.sendrefStatus=!0,!1):($scope.emailtemplatesendData={sendRefId:$scope.lttemplatespreloadData.sendRefId,emailRecipients:$scope.lttemplatespreloadData.emailRecipients,emailSubject:$scope.lttemplatespreloadData.emailSubject,emailBody:CKEDITOR.instances.lettertemplatecontent.getData(),letterTemplateId:$scope.lettertemplates},APIS.CAMB_REFERRAL_LT_SEND.data=$scope.emailtemplatesendData,void DataManager.sendRestRequest(null,APIS.CAMB_REFERRAL_LT_SEND,function(response){response.success?ModalService.openAlert("alert","success","Send Referral Confirmed Successfully","null","null",function(){$window.location.reload()}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token))):(ModalService.openAlert("alert","Error","Please Fill Context","null","null"),!1)},$scope.viewattchment=function(referralid,documentid){var url=null,tempUrl=null;tempUrl=APIS.CAMB_GETREFERRALATTACHMENTCONTENT.URL,url=tempUrl+"/"+referralid+"/"+documentid,APIS.CAMB_GETREFERRALATTACHMENTCONTENT.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GETREFERRALATTACHMENTCONTENT,function(response){if(response.success){var content=response.dataBean.attachDocContent,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.attachDocContent,"_blank","location=no,enableviewportscale=yes")}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GETREFERRALATTACHMENTCONTENT.URL=tempUrl},$scope.close=function(){$uibModalInstance.close("close"),$scope.selected=""},$scope.doattachAction=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/attachdocument.html",controller:"ActionWorklistctrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:$scope.visitDetails,visitDetails:$scope.visitDetails};return temp}}}).result.then(function(selectedItem){"string"!=typeof selectedItem&&($scope.griddata=selectedItem,console.log($scope.sendrefgriddata))})},$scope.showContent=function($fileContent,index){$scope.content=$fileContent.split("base64,")[1],$scope.profileUpdateDetails.documentsList[index].document=$scope.content},$scope.loadattachdocdetails=function(){$scope.attchdoctype=[],DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success&&($scope.attchdoctype=response.dataBean,console.log($scope.attchdoctype))},$scope.uconfig.token)},$scope.attachsubdocChange=function(){$scope.subtype="",$scope.noResults=!1,$scope.loadattachsubdocdetails()},$scope.loadattachsubdocdetails=function(){$scope.loadattachsubdoc=[],$scope.documenttypeid=$scope.attachdocumentsData.doctypeId;var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.documenttypeid,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?($scope.loadattachsubdoc=response.dataBean,console.log($scope.loadattachsubdoc)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.loadgriddata=function(){$scope.griddata=null,$scope.visitid=$scope.visitDetails.visitId;var url=null,tempUrl=null;tempUrl=APIS.CAMB_GETGRIDATTACHMENT.URL,url=tempUrl+"/"+$scope.visitid,APIS.CAMB_GETGRIDATTACHMENT.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GETGRIDATTACHMENT,function(response){response.success?($scope.griddata=response.dataBean,console.log($scope.griddata)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GETGRIDATTACHMENT.URL=tempUrl},$scope.remove=function(documentid){ModalService.openAlert("confirm","warning","Do you want to delete?",$scope,"recall",function(){$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.CAMB_REMOVEREFATTACHMENT.URL,url=tempUrl+"/"+documentid,APIS.CAMB_REMOVEREFATTACHMENT.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_REMOVEREFATTACHMENT,function(response){response.success?$scope.loadgriddata():console.log(response.errorMessage)},$scope.uconfig.token),APIS.CAMB_REMOVEREFATTACHMENT.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.viewdoc=function(documentid){$scope.documentId={documentId:documentid},APIS.LME_ATTACH_VIEW_DOC.data=$scope.documentId,DataManager.sendRestRequest(null,APIS.LME_ATTACH_VIEW_DOC,function(response){if(response.success){var content=response.dataBean[0].file,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean[0].file,"_blank","location=no,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token)},$scope.Datefunction=function(){$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0}},$scope.attachpushsubtype=function(param){$scope.getdetails.subtypeList.push({subtypeId:param})},$scope.submitForApproval=function(subtype,pdfconvertfile){if($scope.subtype=subtype,$scope.frmSubmitted=!0,$scope.form.$invalid)return $scope.frmInvalid=!0,!1;if($scope.frmInvalid=!1,$scope.frmSubmitted=!1,$scope.frmInvalid=!1,null==pdfconvertfile||""==pdfconvertfile||void 0==pdfconvertfile)ModalService.openAlert("alert","Alert","Attach the File","null","null");else{$scope.dateconvert=$filter("date")(new Date($scope.attachdocumentsData.reportdate),"yyyy-MM-dd"),$scope.filenameformat=$scope.ApplicantDetails.applicantDetails.idNo+"_"+$scope.subtype+"_"+$scope.dateconvert;var filepath=document.getElementById("filename").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),console.log($scope.visitDetails),$scope.attachdocumentsData.subtypeId=$.grep($scope.loadattachsubdoc,function(e){return e.description==subtype})[0].document_sub_type_id,console.log($scope.loadattachsubdoc),$scope.getdetails={docTypeId:$scope.attachdocumentsData.doctypeId,docSubtypeId:$scope.attachdocumentsData.subtypeId,reportDate:$scope.dateconvert,docName:$scope.filenameformat,docContent:pdfconvertfile,applicantId:$scope.visitDetails.applicantId,referenceId:$scope.visitDetails.visitId},console.log($scope.getdetails),APIS.CAMB_SENDREF_UPLOAD.data=$scope.getdetails,DataManager.sendRestRequest(null,APIS.CAMB_SENDREF_UPLOAD,function(response){response.success?($scope.attchdoc=response.dataBean,console.log($scope.attchdoc),$scope.attach=$scope.getdetails,ModalService.openAlert("alert","Success","Saved successfully","null","null",function(){$("#filename").val("")}),$scope.loadgriddata()):console.log(response.errorMessage)},$scope.uconfig.token)}},$scope.init()}]),angular.module("app.camb").directive("onReadFile",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsDataURL((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}),angular.module("app.lme").controller("cambAsthmaCtrl",["$scope","$state","APIS","$uibModalInstance","modalParam",function($scope,$state,APIS,$uibModalInstance,modalParam){$scope.init=function(){modalParam.data,$scope.score1=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn1Score:0,$scope.score2=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn2Score:0,$scope.score3=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn3Score:0,$scope.score4=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn4Score:0,$scope.score5=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn5Score:0,$scope.dataBind(),$scope.questions={ques1:null,ques2:null,ques3:null,ques4:null,ques5:null}},$scope.dataBind=function(){$scope.total=null,$scope.$watch("[score1,score2,score3,score4,score5]",function(newValue,oldValue){$scope.total=parseInt(newValue[0])+parseInt(newValue[1])+parseInt(newValue[2])+parseInt(newValue[3])+parseInt(newValue[4])},!0)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.actscore1=function(value){$scope.score1=value},$scope.actscore2=function(value){$scope.score2=value},$scope.actscore3=function(value){$scope.score3=value},$scope.actscore4=function(value){$scope.score4=value},$scope.actscore5=function(value){$scope.score5=value},$scope.asthmacontrolSave=function(){var score={score1:$scope.score1,score2:$scope.score2,score3:$scope.score3,score4:$scope.score4,score5:$scope.score5};$uibModalInstance.close({index:modalParam.index,total:$scope.total,score:score})},$scope.init()}]),angular.module("app").controller("CambCrAdhocCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModal","$location","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModal,$location,ModalService){return $scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentAction=$scope.visitInfo.currentAction,$scope.userConfig||$scope.userConfig.userSeqId?($scope.init=function(){$scope.preLoadData={},$scope.saveCambdata={},$scope.followupprovisoList=[],$scope.macList=[],$scope.macvalidityList=[],$scope.followupprovisoIndex="",$scope.changeMedicalAssessment={checked:!1},$scope.currentMedicalAssessment=!1,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.saveCambdata={adhocId:null,applicantId:null,currentMedaicalAssessmentStatus:"N",changedStatus:"N",adhocDetailsList:[],operationalProvisoList:[],remarksInstructions:"",followuoProvisoList:[],macClassList:[]},$scope.databind()},$scope.databind=function(){$scope.getPreLoadData(),$scope.loadattachementdata()},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.getPreLoadData=function(){APIS.GET_CAMB_CR_ADHOC_PRELOAD.data={adhocId:$scope.visitInfo.visit_id},DataManager.sendRestRequest(null,APIS.GET_CAMB_CR_ADHOC_PRELOAD,function(response){response.success?($scope.preLoadData=response.dataBean,$scope.macList=$scope.preLoadData.existingadhocDetailsList,$scope.macvalidityList=$scope.preLoadData.existingmacClassList):$log.error("getPreLoadData"+response.errorMessages)},$scope.userConfig.token)},$scope.changeMedicalAssessmentClick=function(){$scope.changeMedicalAssessment.checked===!0?($scope.currentMedicalAssessment=!0,$scope.saveCambdata.currentMedaicalAssessmentStatus="Y"):($scope.currentMedicalAssessment=!1,$scope.saveCambdata.currentMedaicalAssessmentStatus="N")},$scope.addOperationalProvisos=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/AddOperationalProvisos.html",controller:"CRAdhocOperationalModalCtrl",resolve:{modalParam:function(){return $scope.preLoadData.existingoperationalProvisoList}}}).result.then(function(selectedItem){"string"!=typeof selectedItem&&($scope.preLoadData.existingoperationalProvisoList=selectedItem,$scope.saveCambdata.changedStatus="Y")},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.removeOperationalProvisos=function(index){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"remove",function(){$scope.$on("removeOk",function(){$scope.preLoadData.existingoperationalProvisoList.splice(index,1),$scope.saveCambdata.changedStatus="Y"}),$scope.$on("removecancel",function(){$uibModalInstance.closed})})},$scope.followupProvisoChange=function(){$scope.followupProvisoSpeciailityInvestigationList=[]},$scope.followupProvisoSpeciailityInvestigationChange=function(){$scope.followupprovisoList.otherInvestigation=""},$scope.followupProvisoSpeciailityInvestigationFetch=function(){$scope.type_code=$.grep($scope.preLoadData.followupProvisoType,function(e){return e.actionName==$scope.followupprovisoList.type_name}),$scope.followupProvisoSpeciailityInvestigationList=[];var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_FOLLOWUP_SUBTYPE.URL,url=tempUrl+"/"+$scope.type_code[0].code,APIS.GET_CAMB_FOLLOWUP_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_FOLLOWUP_SUBTYPE,function(response){response.success?($scope.followupProvisoSpeciailityInvestigationList=response.dataBean,$scope.followupProvisoSpeciailityInvestigationList.push({description:"Others in Investigation"}),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex||($scope.followupprovisoList.speciality_investigation_name=$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].speciality_investigation_name,$scope.followupprovisoList.otherInvestigation=$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].otherInvestigation)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token),APIS.GET_CAMB_FOLLOWUP_SUBTYPE.URL=tempUrl},$scope.followupprovisosAdd=function(){$scope.existtype=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.type_name==$scope.followupprovisoList.type_name}),$scope.existspeciailityinvestigation=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.speciality_investigation_name==$scope.followupprovisoList.speciality_investigation_name}),$scope.existdoneby=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.doneby_name==$scope.followupprovisoList.doneby_name}),$scope.existfrequency=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.frequency_name==$scope.followupprovisoList.frequency_name}),$scope.existfollowupDate=$.grep($scope.preLoadData.existingfollowuoProvisoList,function(e){return e.followupDate==$scope.followupprovisoList.followupDate}),0!=$scope.existtype.length&&0!=$scope.existspeciailityinvestigation.length&&0!=$scope.existdoneby.length&&0!=$scope.existfrequency&&0!=$scope.existfollowupDate||($scope.type=$.grep($scope.preLoadData.followupProvisoType,function(e){return e.actionName==$scope.followupprovisoList.type_name}),$scope.speciailityinvestigation=$.grep($scope.followupProvisoSpeciailityInvestigationList,function(e){return e.description==$scope.followupprovisoList.speciality_investigation_name}),$scope.doneby=$.grep($scope.preLoadData.doneBy,function(e){return e.actionName==$scope.followupprovisoList.doneby_name}),$scope.frequency=$.grep($scope.preLoadData.frequency,function(e){return e.code==$scope.followupprovisoList.frequency_name}),$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.followupDate),$scope.formats[3]),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex?(""==$scope.followupprovisoList.followupDate||"Invalid Date"==$scope.followupprovisoList.followupDate||"Once"!=$scope.followupprovisoList.frequency_name?$scope.followupDate=null:$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.followupDate),$scope.formats[3]),$scope.preLoadData.existingfollowuoProvisoList.push({type_id:$scope.type[0].actionId,type_name:$scope.type[0].actionName,speciality_investigation_id:$scope.speciailityinvestigation[0].reportsId,speciality_investigation_name:$scope.speciailityinvestigation[0].description,doneby_id:$scope.doneby[0].actionId,doneby_name:$scope.doneby[0].actionName,otherInvestigation:$scope.followupprovisoList.otherInvestigation,frequency_id:$scope.frequency[0].actionId,frequency_name:$scope.frequency[0].code,followupDate:$scope.followupDate}),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvestigation="",$scope.followupprovisoList.followupDate=""):($scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].type_id=$scope.type[0].actionId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].type_name=$scope.type[0].actionName,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].speciality_investigation_id=$scope.speciailityinvestigation[0].reportsId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].speciality_investigation_name=$scope.speciailityinvestigation[0].description,
$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].doneby_id=$scope.doneby[0].actionId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].doneby_name=$scope.doneby[0].actionName,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].otherInvestigation=$scope.followupprovisoList.otherInvestigation,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].frequency_id=$scope.frequency[0].actionId,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].frequency_name=$scope.frequency[0].code,$scope.preLoadData.existingfollowuoProvisoList[$scope.followupprovisoIndex].followupDate=new Date($scope.followupDate),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvestigation="",$scope.followupDate="",$scope.followupprovisoIndex=""),$scope.saveCambdata.changedStatus="Y")},$scope.followupprovisosEdit=function(index){$scope.followupprovisoList.type_name=$scope.preLoadData.existingfollowuoProvisoList[index].type_name,$scope.followupProvisoSpeciailityInvestigationFetch(),$scope.followupprovisoList.doneby_name=$scope.preLoadData.existingfollowuoProvisoList[index].doneby_name,$scope.followupprovisoList.frequency_name=$scope.preLoadData.existingfollowuoProvisoList[index].frequency_name,$scope.followupprovisoList.followupDate=new Date($scope.preLoadData.existingfollowuoProvisoList[index].followupDate),$scope.followupprovisoIndex=index},$scope.followupprovisosRemove=function(index){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removefollowupprovisos",function(){$scope.$on("removefollowupprovisosOk",function(){$scope.preLoadData.existingfollowuoProvisoList.splice(index,1),$scope.saveCambdata.changedStatus="Y"}),$scope.$on("removefollowupprovisoscancel",function(){$uibModalInstance.closed})})},$scope.loadattachementdata=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_CRAR_ATTACHMENTS.URL,url=tempUrl+"/"+$scope.visitInfo.visit_id+"/"+$scope.visitInfo.v_type+"/"+$scope.visitInfo.applicant_id,APIS.GET_CRAR_ATTACHMENTS.URL=url,DataManager.sendRestRequest(null,APIS.GET_CRAR_ATTACHMENTS,function(response){response.success?$scope.griddata=response.dataBean:console.log(response.errorMessage)},$scope.userConfig.token),APIS.GET_CRAR_ATTACHMENTS.URL=tempUrl},$scope.viewdoc=function(ID){var url=null,tempUrl=null;tempUrl=APIS.VIEW_CRAR_DOCUMENT.URL,url=tempUrl+"/"+ID,APIS.VIEW_CRAR_DOCUMENT.URL=url,DataManager.sendRestRequest(null,APIS.VIEW_CRAR_DOCUMENT,function(response){if(response.success){var content=response.dataBean.docContent,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.docContent,"_blank","location=no,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.userConfig.token),APIS.VIEW_CRAR_DOCUMENT.URL=tempUrl},$scope.cambSave=function(){$scope.saveCambdata.adhocId=$scope.preLoadData.adhocId,$scope.saveCambdata.applicantId=$scope.visitInfo.applicant_id,$scope.saveCambdata.remarksInstructions=$scope.preLoadData.remarksInstructions,angular.forEach($scope.macList,function(value,key){var macobj={classId:value.classId,adhocDetailId:value.adhocDetailId,outcomeId:value.outcomeId,restrictionsId:value.restrictionsId,conclusionId:value.conclusionId,classchangedStatus:"N"};$scope.preLoadData.existingadhocDetailsList[key].classId==value.classId&&($scope.preLoadData.existingadhocDetailsList[key].conclusionId!=value.conclusionId&&(macobj.classchangedStatus="Y"),$scope.preLoadData.existingadhocDetailsList[key].outcomeId!=value.outComeId&&(macobj.classchangedStatus="Y"),$scope.preLoadData.existingadhocDetailsList[key].restrictionsId!=value.restrictionId&&(macobj.classchangedStatus="Y")),$scope.saveCambdata.adhocDetailsList.push(macobj)}),angular.forEach($scope.preLoadData.existingoperationalProvisoList,function(value,key){$scope.saveCambdata.operationalProvisoList.push({operationalProvisoId:value.actionId})}),angular.forEach($scope.preLoadData.existingfollowuoProvisoList,function(value,key){$scope.saveCambdata.followuoProvisoList.push({followupProvisoTypeId:value.type_id,specialorotherInvestigationId:value.speciality_investigation_id,otherInvestigation:value.otherInvestigation,doneBy:value.doneby_id,followupFrequencyId:value.frequency_id,followupDate:value.followupDate})}),angular.forEach($scope.macvalidityList,function(value,key){var validityobj={classId:value.classId,validitymonthValue:value.validitymonthValue};angular.forEach($scope.preLoadData.existingmacClassList,function(oldValue,oldKey){oldValue.classId==value.classId&&oldValue.validitymonthValue!=value.validitymonthValue&&($scope.saveCambdata.changedStatus="Y")}),$scope.saveCambdata.macClassList.push(validityobj)}),APIS.GET_CAMB_CR_ADHOC_SAVE.data=$scope.saveCambdata,DataManager.sendRestRequest(null,APIS.GET_CAMB_CR_ADHOC_SAVE,function(response){response.success?ModalService.openAlert("alert","Success","CRAdhoc saved successfully ","null","null"):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token)},$scope.returnToLAMB=function(){var url=null,tempUrl=null;tempUrl=APIS.ADHOC_CLOSE.URL,url=tempUrl+"/"+$scope.visitInfo.visit_id,APIS.ADHOC_CLOSE.URL=url,DataManager.sendRestRequest(null,APIS.ADHOC_CLOSE,function(response){response.success?(console.log("SAVED SUCCess",response.dataBean),$location.url("/camb-worklistsetup")):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token),APIS.ADHOC_CLOSE.URL=tempUrl},$scope.deferToDME=function(){$scope.deferToDMEData={lmbAssId:2,lmbAssessmentDtlsId:1,crlmabId:2,dmePerformanceAuditId:$scope.dmePerformanceAuditId,auditRemarks:$scope.auditRemarks},APIS.CAMB_CR_LAMB_RETURNLMAB.data=$scope.deferToDMEData,DataManager.sendRestRequest(null,APIS.CAMB_CR_LAMB_RETURNLMAB,function(response){response.success?console.log("SAVED SUCCess",response.dataBean):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token)},$scope.checking=function(){$scope.check=!0},$scope.fromdateOption={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.dmfadhocAction=function(){$uibModal.open({animation:!0,templateUrl:"dmfadhoc",controller:"DMFactionCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitInfo};return temp}}})},$scope.dmfadhocbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitInfo.applicant_id,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){response.success&&($scope.val=response.dataBean,null!=$scope.val?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmfar.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"dmfadhoc",controller:"DMFactionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})}):$scope.dmfadhocAction())},$scope.userConfig.token),APIS.GET_DMF_DATE.URL=tempUrl},void $scope.init()):($state.go("login"),!1)}]).controller("CRAdhocOperationalModalCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModalInstance","$rootScope","ModalService","modalParam",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope,ModalService,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.existingOperationalprovisos=modalParam,$scope.operationalprovisosChecked=[],$scope.operationalprovisosListAdd=[],$scope.operationalprovisosDisabled=[],$scope.dataBind()},$scope.dataBind=function(){$scope.operationalprovisosGridPopup()},$scope.operationalprovisosGridPopup=function(){DataManager.sendRestRequest(null,APIS.GET_OPERATIONAL_PROVISO,function(response){if(response.success){$scope.operationalprovisosListFetch=response.dataBean;for(var o=0;o<$scope.operationalprovisosListFetch.length;o++)$scope.operationalprovisosCheck=[],$scope.operationalprovisosCheck=$.grep($scope.existingOperationalprovisos,function(e){return e.code==$scope.operationalprovisosListFetch[o].code}),$scope.operationalprovisosCheck.length>=1?($scope.operationalprovisosChecked[o]=!0,$scope.operationalprovisosDisabled[o]=!0):($scope.operationalprovisosChecked[o]=!1,$scope.operationalprovisosDisabled[o]=!1)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.operationalprovisosSelected=function(operationalprovisosChecked,index){1==operationalprovisosChecked[index]?$scope.operationalprovisosListAdd.push({actionId:$scope.operationalprovisosListFetch[index].actionId,code:$scope.operationalprovisosListFetch[index].code,actionName:$scope.operationalprovisosListFetch[index].actionName}):$scope.operationalprovisosListAdd.splice($scope.operationalprovisosListFetch.map(function(e){return e.actionId}).indexOf($scope.operationalprovisosListFetch.actionId),1)},$scope.operationalprovisosGrid=function(){$uibModalInstance.close($scope.existingOperationalprovisos.concat($scope.operationalprovisosListAdd))},$scope.cancel=function(){for(var c=0;c<$scope.operationalprovisosListAdd.length;c++)$scope.operationalprovisosListAdd.splice(c,1);$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("CambLambCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModal","$location","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModal,$location,ModalService){return $scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentAction=$scope.visitDetails.applicantDetails.currentAction,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userConfig||$scope.userConfig.userSeqId?($scope.init=function(){$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup2={opened:!1},$scope.isCpUser=!0,$scope.preLoadData={},$scope.outcomesList=[],$scope.restrictionsList=[],$scope.dropdownObj={},$scope.dropdownObj.followupProvisoFrequencyId="",$scope.followupProvisoList=[],$scope.mac=[],$scope.validity=[],$scope.opeproDesclength=40,$scope.operationalProvisoData=[],$scope.operationProvisoTableData=[],$scope.followupProvisoGrid=[],$scope.followupProvisoCombos={typeCombo:null,subTypeCombo:null,doneByCombo:null,frequency:null},$scope.auditdmeList=[],$scope.dmePerformanceAuditId=null,$scope.auditRemarks="",$scope.databind()},$scope.databind=function(){$scope.setOutcomeCombo(),$scope.getPreLoadData(),$scope.followupProvisoTypeFetch(),$scope.followupProvisoDoneByFetch(),$scope.followupProvisoFrequencyFetch(),$scope.auditdmeFetch(),$scope.loadAttachments(),$scope.$watch("preLoadData.remarksInsatCamb",function(newVal,oldVal){newVal.length>1e3&&($scope.preLoadData.remarksInsatCamb=oldVal,ModalService.openAlert("alert","Warning","Please Enter Maximum 1000 Characters","null","null"))}),$scope.$watch("auditRemarks",function(newVal,oldVal){newVal.length>500&&($scope.auditRemarks=oldVal,ModalService.openAlert("alert","Warning","Please Enter Maximum 500 Characters","null","null"))})},$scope.setOutcomeCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_OUTCOMES,function(response){response.success?$scope.outcomesList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token)},$scope.getPreLoadData=function(){APIS.GET_CAMB_LAMB_PRELOAD.data={crlmabId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.GET_CAMB_LAMB_PRELOAD,function(response){response.success?($scope.preLoadData=response.dataBean,angular.forEach($scope.preLoadData.crlmabMacPreloadedDTO,function(value,key){var macObject={classId:value.classId,lmeCode:value.mac_code,outComeId:value.outComeId,restrictionId:value.restrictionId,macFitLIstCombo:$scope.outcomesList,macRestrictionCombo:null};$scope.mac.push(macObject)}),$scope.setRestrictionCombo(),angular.forEach($scope.preLoadData.crLMABExistingOperationalDTO,function(value,key){var opObject={actionName:value.srdescription,actionId:value.existingOperationalProvisoId,code:value.srCode};$scope.operationalProvisoData.push(opObject)}),angular.forEach($scope.preLoadData.crlmabFollowUpDTO,function(fvalue,fkey){var FpprovisioObj={lmbfollowupProvisoId:fvalue.lmbfollowupProvisoId,doneby_id:null!=fvalue.followupProvisoDoneById?fvalue.followupProvisoDoneById.toString():"",doneby_name:fvalue.doneBy,followupDate:fvalue.getDate,frequency_id:fvalue.followupProvisoFrequencyId,frequency_name:fvalue.freqCode,other_investigation_id:fvalue.otherInvestigation,speciality_investigation_id:fvalue.specialityOrInvestigationId,speciality_investigation_name:fvalue.specInvDescription,type_id:fvalue.followupProvisoTypeId,type_name:fvalue.fprovType,type_code:fvalue.fprovTypeCode};$scope.followupProvisoGrid.push(FpprovisioObj)}),$scope.validity=$scope.preLoadData.validityDTO,$scope.dmePerformanceAuditId=null==$scope.preLoadData.dmePerformanceAuditId?2:$scope.preLoadData.dmePerformanceAuditId,$scope.auditRemarks=$scope.preLoadData.auditRemarks,$(".lastsubmittedDME").html($scope.preLoadData.lastSubbmittedDME.file)):$log.error("GET_CAMB_CRLAMB_PRELOAD"+response.errorMessages)},$scope.userConfig.token)},$scope.setRestrictionCombo=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_RESTRICTIONS.URL,angular.forEach($scope.mac,function(value,key){var mac_code="C"+value.classId;url=tempUrl+"/"+mac_code,APIS.GET_RESTRICTIONS.URL=url,DataManager.sendRestRequest(null,APIS.GET_RESTRICTIONS,function(response){response.success?value.macRestrictionCombo=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token),APIS.GET_RESTRICTIONS.URL=tempUrl})},$scope.removeOperationRecord=function(index){$scope.operationalProvisoData.splice(index,1)},$scope.followupProvisoTypeFetch=function(){DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_TYPE,function(response){response.success?$scope.followupProvisoCombos.typeCombo=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token)},$scope.changePro=function(typeId){APIS.GET_CAMB_LMAB_FOLLOWUP_SUBTYPE.URL=APIS.GET_CAMB_LMAB_FOLLOWUP_SUBTYPE.tempURL+typeId,DataManager.sendRestRequest(null,APIS.GET_CAMB_LMAB_FOLLOWUP_SUBTYPE,function(response){$scope.followupProvisoCombos.subTypeCombo=response.dataBean},$scope.userConfig.token)},$scope.followupProvisoDoneByFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_FOLLOWUP_PROVISO_DONE_BY,function(response){response.success?$scope.followupProvisoCombos.doneByCombo=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token)},$scope.followupProvisoFrequencyFetch=function(){DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_FREQUENCY,function(response){response.success?$scope.followupProvisoCombos.frequency=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token)},$scope.$watch("dropdownObj.followupProvisoFrequencyId",function(newVal,oldVal){1!=newVal&&($scope.dropdownObj.nextDueDateVetting="")}),$scope.$watch("dropdownObj.spcltyOrInvstgtnId",function(newVal,oldVal){newVal!=-1&&($scope.dropdownObj.otherInvDescription="")}),$scope.addFollowUpToGrid=function(fpBaseObject){var provisioObj={},provisoData=$.grep($scope.followupProvisoCombos.typeCombo,function(e){return e.code==fpBaseObject.follupProvisoTypeId}),frequencyData=$.grep($scope.followupProvisoCombos.frequency,function(e){return e.followupProvisoFrequencyId==fpBaseObject.followupProvisoFrequencyId}),donebyData=$.grep($scope.followupProvisoCombos.doneByCombo,function(e){return e.personId==fpBaseObject.followupProvisoDonbyId});if($scope.followupProvisoCombos.subTypeCombo)var subtypeData=$.grep($scope.followupProvisoCombos.subTypeCombo,function(e){return e.reportsId==fpBaseObject.spcltyOrInvstgtnId});if(0!=provisoData.length&&0!=frequencyData.length&&0!=donebyData.length&&0!=subtypeData.length){if($scope.folloupEditData){if(fpBaseObject.nextDueDateVetting){var myDate=fpBaseObject.nextDueDateVetting,day=myDate.getDate()<10?"0"+myDate.getDate():myDate.getDate(),month=myDate.getMonth()+1<10?"0"+(myDate.getMonth()+1):myDate.getMonth()+1;fpBaseObject.nextDueDateVetting=myDate.getFullYear()+"-"+month+"-"+day}$scope.folloupEditData.doneby_id=donebyData[0].personId,$scope.folloupEditData.doneby_name=donebyData[0].name,$scope.folloupEditData.followupDate=fpBaseObject.nextDueDateVetting,$scope.folloupEditData.frequency_id=frequencyData[0].followupProvisoFrequencyId,$scope.folloupEditData.frequency_name=frequencyData[0].description,$scope.folloupEditData.other_investigation_id=fpBaseObject.otherInvDescription,$scope.folloupEditData.speciality_investigation_id=subtypeData[0].reportsId,$scope.folloupEditData.speciality_investigation_name=subtypeData[0].description,$scope.folloupEditData.type_id=provisoData[0].followupProvisoTypeId,$scope.folloupEditData.type_name=provisoData[0].description,$scope.folloupEditData.type_code=provisoData[0].code,provisioObj=$scope.folloupEditData,console.log("edited data",provisioObj)}else{var otherInve="";"OTHERS"==subtypeData[0].code&&(otherInve=fpBaseObject.otherInvDescription),provisioObj={lmbfollowupProvisoId:null,doneby_id:donebyData[0].personId,doneby_name:donebyData[0].name,followupDate:fpBaseObject.nextDueDateVetting,frequency_id:frequencyData[0].followupProvisoFrequencyId,frequency_name:frequencyData[0].description,other_investigation_id:otherInve,speciality_investigation_id:subtypeData[0].reportsId,speciality_investigation_name:subtypeData[0].description,type_id:provisoData[0].followupProvisoTypeId,type_name:provisoData[0].description,type_code:provisoData[0].code}}if($scope.followupProvisoGrid.indexOf(provisioObj)==-1)$scope.followupProvisoGrid.push(provisioObj),$scope.dropdownObj={},$scope.folloupEditData=null,$scope.followupProvisoCombos.subTypeCombo=null;else{var index=$scope.followupProvisoGrid.indexOf(provisioObj);$scope.followupProvisoGrid[index]=provisioObj,$scope.dropdownObj={},$scope.folloupEditData=null,$scope.followupProvisoCombos.subTypeCombo=null}}},$scope.editFollowUpGrid=function(data){$scope.changePro(data.type_code),$scope.folloupEditData=data,$scope.dropdownObj.follupProvisoTypeId=data.type_code,$scope.dropdownObj.spcltyOrInvstgtnId=data.speciality_investigation_id,$scope.dropdownObj.followupProvisoDonbyId=data.doneby_id,$scope.dropdownObj.followupProvisoFrequencyId=data.frequency_id,$scope.dropdownObj.nextDueDateVetting=new Date(data.followupDate),$scope.dropdownObj.otherInvDescription=data.other_investigation_id},$scope.deleteFollowUpFromGrid=function(data){var index=$scope.followupProvisoGrid.indexOf(data);$scope.followupProvisoGrid.splice(index,1)},$scope.auditdmeFetch=function(){DataManager.sendRestRequest(null,APIS.GET_AUDIT_DME,function(response){response.success?$scope.auditdmeList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token)},$scope.operationalprovinso=function(){var operationalProvinsoModal=$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/AddLAMBOperationalProvisos.html",controller:"CRLAMBOperationalModalCtrl",resolve:{modalParam:function(){return $scope.operationalProvisoData}}});operationalProvinsoModal.result.then(function(selectedItem){"string"!=typeof selectedItem&&(console.log("opdata",selectedItem),$scope.operationalProvisoData=selectedItem)},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.cambDMF=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){return null}}})},$scope.cambSave=function(){$scope.saveCambdata={lmbAssId:$scope.preLoadData.lmbAssId,visitId:$scope.preLoadData.visitId,crlmabId:$scope.preLoadData.crlmabId,applicantId:$scope.preLoadData.applicantId,auditRemarks:$scope.auditRemarks,remarksInsatCamb:$scope.preLoadData.remarksInsatCamb,lmbAssessmentDtlsId:$scope.preLoadData.lmbAssessmentDtlsId,dmePerformanceAuditId:$scope.dmePerformanceAuditId,validity:$scope.validity[0].validity},APIS.CAMB_CR_LAMB_SAVE.data=$scope.saveCambdata,DataManager.sendRestRequest(null,APIS.CAMB_CR_LAMB_SAVE,function(response){response.success?ModalService.openAlert("alert","success","Saved Successfully.","null","null",function(){$window.location.reload()}):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token)},$scope.returnToLAMB=function(){$scope.returnToLAMBData={crlmabId:$scope.preLoadData.crlmabId,lmbAssessmentDtlsId:$scope.preLoadData.lmbAssessmentDtlsId,dmePerformanceAuditId:$scope.dmePerformanceAuditId,remarksInsatCamb:$scope.preLoadData.remarksInsatCamb,auditRemarks:$scope.auditRemarks,applicantId:$scope.preLoadData.applicantId,visitId:$scope.preLoadData.visitId,validity:$scope.validity[0].validity},APIS.CAMB_CR_LAMB_RETURNLMAB.data=$scope.returnToLAMBData,DataManager.sendRestRequest(null,APIS.CAMB_CR_LAMB_RETURNLMAB,function(response){response.success?ModalService.openAlert("alert","success","Returned to LMAB Successfully.","null","null",function(){$location.url("/camb-worklistsetup?showTab=cambVetting")}):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token)},$scope.deferToDME=function(){$scope.deferToDMEData={crlmabId:$scope.preLoadData.crlmabId,lmbAssessmentDtlsId:$scope.preLoadData.lmbAssessmentDtlsId,dmePerformanceAuditId:$scope.dmePerformanceAuditId,remarksInsatCamb:$scope.preLoadData.remarksInsatCamb,auditRemarks:$scope.auditRemarks,applicantId:$scope.preLoadData.applicantId,visitdetailId:$scope.preLoadData.visitdetailId,validity:$scope.validity[0].validity,visitId:$scope.preLoadData.visitId},APIS.CAMB_CR_LAMB_DEFFERDME.data=$scope.deferToDMEData,DataManager.sendRestRequest(null,APIS.CAMB_CR_LAMB_DEFFERDME,function(response){response.success?ModalService.openAlert("alert","success","Differed to DME Successfully.","null","null",function(){$location.url("/camb-worklistsetup?showTab=cambVetting")}):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token)},$scope.loadAttachments=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_ATTACHMENTS.URL,url=tempUrl+"/"+$scope.visitDetails.visitId+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.applicantId,APIS.GET_ATTACHMENTS.URL=url,DataManager.sendRestRequest(null,APIS.GET_ATTACHMENTS,function(response){response.success?$scope.attachmentList=response.dataBean:console.log(response.errorMessage)},$scope.userConfig.token),APIS.GET_ATTACHMENTS.URL=tempUrl},$scope.getViewAttachment=function(ID){var url=null,tempUrl=null;tempUrl=APIS.VIEW_ATTACHMENTS_DOCUMENT.URL,url=tempUrl+"/"+ID,APIS.VIEW_ATTACHMENTS_DOCUMENT.URL=url,DataManager.sendRestRequest(null,APIS.VIEW_ATTACHMENTS_DOCUMENT,function(response){if(response.success){var content=response.dataBean.docContent,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.docContent,"_blank","location=no,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.userConfig.token),APIS.VIEW_ATTACHMENTS_DOCUMENT.URL=tempUrl},$scope.open2=function(){$scope.popup2.opened=!0},$scope.viewMsg=function(provisoFull){ModalService.openAlert("alert","Operational Proviso",provisoFull,"null","null")},$scope.openfullreport=function(){APIS.CAMB_COMMON_FULLREPORT.data={crlmabId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId,calledFrom:$scope.visitDetails.applicantDetails.processStatusPageCode,visitType:"CR_LMAB"},DataManager.sendRestRequest(null,APIS.CAMB_COMMON_FULLREPORT,function(response){if(response.success)if(null!=response.dataBean.medicalRecord){var content=response.dataBean.medicalRecord,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.medicalRecord,"_blank","location=no,enableviewportscale=yes")}else ModalService.openAlert("alert","Warning","PDF not available.","null","null");else $log.error("full report error: "+response.errorMessages)},$scope.userConfig.token)},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("CRLAMBOperationalModalCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModalInstance","$rootScope","ModalService","modalParam",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope,ModalService,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.existingOperationalprovisos=modalParam,console.log("modalParam",modalParam),console.log("existingOpertionalProviso",JSON.stringify($scope.existingOperationalprovisos)),$scope.operationalprovisosChecked=[],$scope.operationalprovisosListAdd=[],$scope.operationalprovisosDisabled=[],$scope.dataBind()},$scope.dataBind=function(){$scope.operationalprovisosGridPopup()},$scope.operationalprovisosGridPopup=function(){DataManager.sendRestRequest(null,APIS.GET_OPERATIONAL_PROVISO,function(response){if(response.success){$scope.operationalprovisosListFetch=response.dataBean,console.log("responsedata",JSON.stringify($scope.operationalprovisosListFetch));for(var o=0;o<$scope.operationalprovisosListFetch.length;o++)$scope.operationalprovisosCheck=[],$scope.operationalprovisosCheck=$.grep($scope.existingOperationalprovisos,function(e){return e.code==$scope.operationalprovisosListFetch[o].code}),$scope.operationalprovisosCheck.length>=1?($scope.operationalprovisosChecked[o]=!0,$scope.operationalprovisosDisabled[o]=!0):($scope.operationalprovisosChecked[o]=!1,$scope.operationalprovisosDisabled[o]=!1)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.operationalprovisosSelected=function(operationalprovisosChecked,index){1==operationalprovisosChecked[index]?$scope.operationalprovisosListAdd.push({actionId:$scope.operationalprovisosListFetch[index].actionId,code:$scope.operationalprovisosListFetch[index].code,actionName:$scope.operationalprovisosListFetch[index].actionName}):$scope.operationalprovisosListAdd.splice($scope.operationalprovisosListFetch.map(function(e){return e.actionId}).indexOf($scope.operationalprovisosListFetch.actionId),1)},$scope.operationalprovisosGrid=function(){$scope.operationProvisoTableData=$scope.existingOperationalprovisos.concat($scope.operationalprovisosListAdd),$uibModalInstance.close($scope.operationProvisoTableData)},$scope.cancel=function(){for(var c=0;c<$scope.operationalprovisosListAdd.length;c++)$scope.operationalprovisosListAdd.splice(c,1);$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("AnalysisDMFModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","modalParam","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,modalParam,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.roleid=$scope.userConfig.userFacilities[0].roles[0].roleId,$scope.rolename=$scope.userConfig.userFacilities[0].roles[0].roleName,$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.dmfVisit={intitiatedby:$scope.visitDetails.visitId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.visitDetails.applicantId,initatedRole:$scope.roleid},$scope.fromdatepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0]},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.dmfAction=function(){$scope.isFrmSubmited=!0,""==$scope.dmfVisit.treatmentplan&&""==$scope.dmfVisit.dateofoccurence||($scope.dmfVisit.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),$uibModalInstance.dismiss("cancel"),APIS.CAMB_DMF_POPUP.data=$scope.dmfVisit,DataManager.sendRestRequest(null,APIS.CAMB_DMF_POPUP,function(response){response.success?(ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.close()):$log.error("DMF Model: "+response.errorMessages)},$scope.userConfig.token))},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app").controller("CambLambPostCtrl",["$scope","$rootScope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModal","$location","ModalService","$parse",function($scope,$rootScope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModal,$location,ModalService,$parse){return $scope.uconfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentAction=$scope.visitDetails.applicantDetails.currentAction,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.uconfig?($scope.init=function(){$scope.crlmabpostPreLoadData={},$scope.crlmabpostSaveData={crlmabpostId:"",applicantId:"",lmbAssessmentId:"",flag:"",macdetailsDTO:[],operationalProvisoDTO:[],followupProvisoDTO:[],macclassesList:[],performanceAuditId:"",restrictionDTO:[{restrictionremarks:""}],remarksDTO:[{auditremarks:""}]},$scope.currentMedicalAssessment=!1,$scope.changeMedicalAssessment={checked:!1},$scope.outcomesList=[],$scope.restrictionsList=[],$scope.ristrictionDisabled=[],$scope.followupAddDisabled=!0,$scope.followupprovisoList={type_name:"",speciality_investigation_name:"",doneby_name:"",frequency_name:"",otherInvDescription:"",followupProvisoDate:""},$scope.followupprovisoIndex="",$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.auditdmeList=[],$scope.dmePerformanceAuditId=null,$scope.auditRemarks="",$scope.databind()},$scope.databind=function(){$scope.outcomesFetch(),$scope.followupProvisoTypeFetch(),$scope.followupProvisoFrequencyFetch(),$scope.auditdmeFetch(),$scope.loadAttachments(),$scope.getPreLoadData(),$scope.$watch("crlmabpostPreLoadData.remarksComments",function(newVal,oldVal){newVal.length>1e3&&($scope.crlmabpostPreLoadData.remarksComments=oldVal,ModalService.openAlert("alert","Warning","Please Enter Maximum 1000 Characters","null","null"))}),$scope.$watch("crlmabpostPreLoadData.auditRemarks",function(newVal,oldVal){
newVal.length>500&&($scope.crlmabpostPreLoadData.auditRemarks=oldVal,ModalService.openAlert("alert","Warning","Please Enter Maximum 500 Characters","null","null"))})},$scope.getPreLoadData=function(){APIS.GET_CAMB_CRLAMB_PRELOAD.data={crlmabpostId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.GET_CAMB_CRLAMB_PRELOAD,function(response){if(response.success){$scope.crlmabpostPreLoadData=response.dataBean,$scope.followupProvisoDoneByList=$scope.crlmabpostPreLoadData.donebyDTO;for(var f=0;f<$scope.followupProvisoDoneByList.length;f++){var parsefollowupProvisoDoneByList=$parse($scope.followupProvisoDoneByList[f].personId);$scope.followupProvisoDoneByList[f].personId=parsefollowupProvisoDoneByList($scope)}angular.forEach($scope.crlmabpostPreLoadData.macPreLoadDTO,function(value,key){$scope.restrictionsFetch(value.classType),$scope.outcomeChange(value.outcomeCode,key)}),null!==$scope.crlmabpostPreLoadData.comments&&$scope.lmfcommentsView(),$(".lastsubmittedDME").html($scope.crlmabpostPreLoadData.lastSubbmittedDME.file),$scope.crlmabpostPreLoadData.dmfperformanceid=null==$scope.crlmabpostPreLoadData.dmfperformanceid?2:$scope.crlmabpostPreLoadData.dmfperformanceid}else $log.error(response.errorMessages)},$scope.uconfig.token)},$scope.changeMedicalAssessmentClick=function(){$scope.changeMedicalAssessment.checked===!0?($scope.currentMedicalAssessment=!0,$scope.crlmabpostSaveData.flag=!0):($scope.currentMedicalAssessment=!1,$scope.crlmabpostSaveData.flag=!1)},$scope.outcomesFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_OUTCOMES,function(response){response.success?($scope.outcomesList=response.dataBean,$scope.outcomesList.splice($scope.outcomesList.map(function(e){return e.code}).indexOf("DDME"),1),$scope.outcomesList.splice($scope.outcomesList.map(function(e){return e.code}).indexOf("DCAMB"),1)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.outcomeChange=function(outcomeCode,index){$scope.crlmabpostPreLoadData.macPreLoadDTO[index].outcomeId=$.grep($scope.outcomesList,function(e){return e.code==outcomeCode})[0].outcomeId,"FITWR"===outcomeCode||null===outcomeCode?$scope.ristrictionDisabled[index]=!1:($scope.ristrictionDisabled[index]=!0,$scope.crlmabpostPreLoadData.macPreLoadDTO[index].restrictionId=0)},$scope.restrictionsFetch=function(mac_code){var url=null,tempUrl=null;tempUrl=APIS.GET_RESTRICTIONS.URL,url=tempUrl+"/"+mac_code,APIS.GET_RESTRICTIONS.URL=url,DataManager.sendRestRequest(null,APIS.GET_RESTRICTIONS,function(response){response.success?$scope.restrictionsList.push(response.dataBean):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_RESTRICTIONS.URL=tempUrl},$scope.addOperationalProvisos=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/AddOperationalProvisos.html",controller:"AddOperationalModalCtrl",resolve:{modalParam:function(){return $scope.operationalProvisoDTO=[],angular.forEach($scope.crlmabpostPreLoadData.operationalProvisoDTO,function(value,key){$scope.operationalProvisoDTO.push({actionId:value.opeproId,code:value.opeproCode,opeproprimary:value.opeproprimary,actionstatus:value.actionstatus,actionName:value.opeproDesc})}),$scope.operationalProvisoDTO}}}).result.then(function(selectedItem){"string"!=typeof selectedItem&&($scope.crlmabpostPreLoadData.operationalProvisoDTO=[],angular.forEach(selectedItem,function(value,key){value.hasOwnProperty("actionstatus")?$scope.crlmabpostPreLoadData.operationalProvisoDTO.push({opeproId:value.actionId,opeproCode:value.code,opeproprimary:value.opeproprimary,actionstatus:value.actionstatus,opeproDesc:value.actionName}):$scope.crlmabpostPreLoadData.operationalProvisoDTO.push({opeproId:value.actionId,opeproCode:value.code,actionstatus:"I",opeproDesc:value.actionName})}))},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.viewMsg=function(provisoFull){ModalService.openAlert("alert","Operational Proviso",provisoFull,"null","null")},$scope.removeOperationalProvisos=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperational",function(){$scope.$on("removeoperationalOk",function(){0==$scope.warningConfirmed&&("I"==$scope.crlmabpostPreLoadData.operationalProvisoDTO[$scope.removeindex].actionstatus?$scope.crlmabpostPreLoadData.operationalProvisoDTO.splice($scope.removeindex,1):$scope.crlmabpostPreLoadData.operationalProvisoDTO[$scope.removeindex].actionstatus="D"),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalcancel",function(){$uibModalInstance.closed})})},$scope.followupProvisoTypeFetch=function(){$scope.followupProvisoSpeciailityInvestigationList=[],DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_TYPE,function(response){response.success?$scope.followupProvisoTypeList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoChange=function(){$scope.followupProvisoSpeciailityInvestigationList=[],$scope.followupProvisoSpeciailityInvestigationFetch()},$scope.followupProvisoSpeciailityInvestigationChange=function(){$scope.followupprovisoList.otherInvDescription=""},$scope.followupProvisoSpeciailityInvestigationFetch=function(){$scope.type_code=$.grep($scope.followupProvisoTypeList,function(e){return e.description==$scope.followupprovisoList.type_name}),$scope.followupProvisoSpeciailityInvestigationList=[];var url=null,tempUrl=null;tempUrl=APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL,url=tempUrl+"/"+$scope.type_code[0].code,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL=url,DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION,function(response){response.success?($scope.followupProvisoSpeciailityInvestigationList=response.dataBean,""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex||($scope.followupprovisoList.speciality_investigation_name=$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].specialityName,$scope.followupprovisoList.otherInvDescription=$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].otherInvestigation)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL=tempUrl},$scope.followupProvisoDoneByFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_FOLLOWUP_PROVISO_DONE_BY,function(response){if(response.success){$scope.followupProvisoDoneByList=response.dataBean;for(var f=0;f<$scope.followupProvisoDoneByList.length;f++){var parsefollowupProvisoDoneByList=$parse($scope.followupProvisoDoneByList[f].personId);$scope.followupProvisoDoneByList[f].personId=parsefollowupProvisoDoneByList($scope)}}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoFrequencyFetch=function(){DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_FREQUENCY,function(response){response.success?$scope.followupProvisoFrequencyList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.followupprovisosAdd=function(){""!=$scope.followupprovisoList.type_name&&""!=$scope.followupprovisoList.speciality_investigation_name&&"Others"!=$scope.followupprovisoList.speciality_investigation_name&&""!=$scope.followupprovisoList.frequency_name&&"Once"!=$scope.followupprovisoList.frequency_name&&($scope.followupAddDisabled=!1),"Others"==$scope.followupprovisoList.speciality_investigation_name&&""!=$scope.followupprovisoList.otherInvDescription&&null!=$scope.followupprovisoList.otherInvDescription&&"Once"!=$scope.followupprovisoList.frequency_name&&""==$scope.followupprovisoList.followupProvisoDate&&($scope.followupAddDisabled=!1),"Others"==$scope.followupprovisoList.speciality_investigation_name||""!=$scope.followupprovisoList.otherInvDescription&&null!=$scope.followupprovisoList.otherInvDescription||"Once"!=$scope.followupprovisoList.frequency_name||""==$scope.followupprovisoList.followupProvisoDate||($scope.followupAddDisabled=!1),"Others"==$scope.followupprovisoList.speciality_investigation_name&&""!=$scope.followupprovisoList.otherInvDescription&&null!=$scope.followupprovisoList.otherInvDescription&&"Once"==$scope.followupprovisoList.frequency_name&&""!=$scope.followupprovisoList.followupProvisoDate&&($scope.followupAddDisabled=!1),0==$scope.followupAddDisabled?($scope.existtype=$.grep($scope.crlmabpostPreLoadData.followUpProvisoDTO,function(e){return e.fproType==$scope.followupprovisoList.type_name}),$scope.existspeciailityinvestigation=$.grep($scope.crlmabpostPreLoadData.followUpProvisoDTO,function(e){return e.specialityName==$scope.followupprovisoList.speciality_investigation_name}),""!=$scope.followupprovisoList.doneby_name?$scope.existdoneby=$.grep($scope.crlmabpostPreLoadData.followUpProvisoDTO,function(e){return e.followupdonebyId==$scope.followupprovisoList.doneby_name}):$scope.existdoneby=[],$scope.existfrequency=$.grep($scope.crlmabpostPreLoadData.followUpProvisoDTO,function(e){return e.frequency==$scope.followupprovisoList.frequency_name}),$scope.existfollowupDate=$.grep($scope.crlmabpostPreLoadData.followUpProvisoDTO,function(e){return e.dueDate==$scope.followupprovisoList.followupProvisoDate}),0!=$scope.existtype.length&&0!=$scope.existspeciailityinvestigation.length&&0!=$scope.existdoneby.length&&0!=$scope.existfrequency&&0!=$scope.existfollowupDate||($scope.type=$.grep($scope.followupProvisoTypeList,function(e){return e.description==$scope.followupprovisoList.type_name}),$scope.speciailityinvestigation=$.grep($scope.followupProvisoSpeciailityInvestigationList,function(e){return e.actionName==$scope.followupprovisoList.speciality_investigation_name}),""!=$scope.followupprovisoList.doneby_name?$scope.doneby=$.grep($scope.followupProvisoDoneByList,function(e){return e.donebyId==$scope.followupprovisoList.doneby_name}):$scope.doneby=[{personId:"",name:""}],$scope.frequency=$.grep($scope.followupProvisoFrequencyList,function(e){return e.description==$scope.followupprovisoList.frequency_name}),$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.followupProvisoDate),$scope.formats[3]),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex?(""==$scope.followupprovisoList.otherInvDescription&&($scope.followupprovisoList.otherInvDescription=null),""==$scope.followupprovisoList.followupProvisoDate||"Invalid Date"==$scope.followupprovisoList.followupProvisoDate||"Once"!=$scope.followupprovisoList.frequency_name?$scope.followupDate=null:$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.followupProvisoDate),$scope.formats[3]),$scope.crlmabpostPreLoadData.followUpProvisoDTO.push({followupProvId:0,followupprovisoTypeId:$scope.type[0].followupProvisoTypeId,fproType:$scope.type[0].description,fprotypeCode:$scope.type[0].code,specialityId:$scope.speciailityinvestigation[0].actionId,specialityName:$scope.speciailityinvestigation[0].actionName,specialityCode:$scope.speciailityinvestigation[0].code,followupdonebyId:$scope.doneby[0].donebyId,followupdoneName:$scope.doneby[0].donebydesc,otherInvestigation:$scope.followupprovisoList.otherInvDescription,frequencyId:$scope.frequency[0].followupProvisoFrequencyId,frequencyCode:$scope.frequency[0].code,frequency:$scope.frequency[0].description,dueDate:$scope.followupDate,actionStatus:"I"}),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvDescription="",$scope.followupprovisoList.followupProvisoDate=""):($scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].followupprovisoTypeId=$scope.type[0].followupProvisoTypeId,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].fproType=$scope.type[0].description,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].fprotypeCode=$scope.type[0].code,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].specialityId=$scope.speciailityinvestigation[0].actionId,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].specialityName=$scope.speciailityinvestigation[0].actionName,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].specialityCode=$scope.speciailityinvestigation[0].code,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].followupdonebyId=$scope.doneby[0].donebyId,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].followupdoneName=$scope.doneby[0].donebydesc,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].otherInvestigation=$scope.followupprovisoList.otherInvDescription,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].frequencyId=$scope.frequency[0].followupProvisoFrequencyId,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].frequency=$scope.frequency[0].description,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].frequencyCode=$scope.frequency[0].code,$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].dueDate="Invalid Date"!=$scope.followupDate&&null!=$scope.followupDate&&""!=$scope.followupDate?$scope.followupDate:"",0==$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].followupProvId?$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].actionStatus="I":$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.followupprovisoIndex].actionStatus="E",$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvDescription="",$scope.followupprovisoList.followupProvisoDate="",$scope.followupprovisoIndex="")),$scope.followupAddDisabled=!0):ModalService.openAlert("alert","success","Please fill all Followup Proviso fields.","null","null")},$scope.followupprovisosEdit=function(index){$scope.followupprovisoList.type_name=$scope.crlmabpostPreLoadData.followUpProvisoDTO[index].fproType,$scope.followupProvisoSpeciailityInvestigationFetch(),$scope.followupprovisoList.doneby_name=$scope.crlmabpostPreLoadData.followUpProvisoDTO[index].followupdonebyId,$scope.followupprovisoList.frequency_name=$scope.crlmabpostPreLoadData.followUpProvisoDTO[index].frequency,$scope.followupprovisoList.followupProvisoDate=null!=$scope.crlmabpostPreLoadData.followUpProvisoDTO[index].dueDate&&""!=$scope.crlmabpostPreLoadData.followUpProvisoDTO[index].dueDate?new Date($scope.crlmabpostPreLoadData.followUpProvisoDTO[index].dueDate):"",$scope.followupprovisoIndex=index},$scope.followupprovisosRemove=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you   sure you want to delete the selected record?",$scope,"removefollowupprovisos",function(){$scope.$on("removefollowupprovisosOk",function(){0==$scope.warningConfirmed&&(0==$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.removeindex].followupprovisoTypeId?$scope.crlmabpostPreLoadData.followUpProvisoDTO.splice($scope.removeindex,1):$scope.crlmabpostPreLoadData.followUpProvisoDTO[$scope.removeindex].actionStatus="D"),$scope.warningConfirmed=!0}),$scope.$on("removefollowupprovisoscancel",function(){$uibModalInstance.closed})})},$scope.auditdmeFetch=function(){DataManager.sendRestRequest(null,APIS.GET_AUDIT_DME,function(response){response.success?$scope.auditdmeList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.cambDMF=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){return null}}})},$scope.cambSave=function(){$scope.crlmabpostSaveData.crlmabpostId=$scope.crlmabpostPreLoadData.crlmabpostId,$scope.crlmabpostSaveData.applicantId=$scope.crlmabpostPreLoadData.applicantId,$scope.crlmabpostSaveData.lmbAssessmentId=$scope.crlmabpostPreLoadData.lmbassmentId,angular.forEach($scope.crlmabpostPreLoadData.macPreLoadDTO,function(value,key){$scope.crlmabpostSaveData.macdetailsDTO.push({classId:value.classId,outcomeId:value.outcomeId,restrictionId:value.restrictionId})}),angular.forEach($scope.crlmabpostPreLoadData.operationalProvisoDTO,function(value,key){$scope.crlmabpostPreLoadData.operationalProvisoDTO[key].opeproprimary||($scope.crlmabpostPreLoadData.operationalProvisoDTO[key].opeproprimary=null),$scope.crlmabpostSaveData.operationalProvisoDTO.push({opeproId:value.opeproId,opeproprimary:$scope.crlmabpostPreLoadData.operationalProvisoDTO[key].opeproprimary,actionstatus:value.actionstatus})}),angular.forEach($scope.crlmabpostPreLoadData.followUpProvisoDTO,function(value,key){$scope.crlmabpostSaveData.followupProvisoDTO.push({followupProvId:value.followupProvId,followupprovisoTypeId:value.followupprovisoTypeId,specialityorInvId:value.specialityId,frequencyId:value.frequencyId,followupdonebyId:value.followupdonebyId,otherInvestigation:value.otherInvestigation,getDate:null!=value.dueDate&&""!=value.dueDate?$filter("date")(new Date(value.dueDate),$scope.formats[3]):"",actionStatus:value.actionStatus})}),angular.forEach($scope.crlmabpostPreLoadData.validityDTO,function(value,key){$scope.crlmabpostSaveData.macclassesList.push({classId:value.classId,validityMonths:value.validity})}),$scope.crlmabpostSaveData.restrictionDTO[0].restrictionremarks=$scope.crlmabpostPreLoadData.remarksComments,$scope.crlmabpostSaveData.performanceAuditId=$scope.crlmabpostPreLoadData.dmfperformanceid,$scope.crlmabpostSaveData.remarksDTO[0].auditremarks=$scope.crlmabpostPreLoadData.auditRemarks,APIS.GET_CAMB_LAMB_SAVE.data=$scope.crlmabpostSaveData,DataManager.sendRestRequest(null,APIS.GET_CAMB_LAMB_SAVE,function(response){response.success?ModalService.openAlert("alert","success","Saved Successfully.","null","null",function(){$window.location.reload()}):$log.error(response.errorMessage)},$scope.uconfig.token)},$scope.cambSaveOnClose=function(){ModalService.openAlert("confirm","warning","Are you sure want to close the Window?",$scope,"lmabPost",function(){}),$scope.$on("lmabPostOk",function(){$scope.cambSaveOnCloseConfirmed()}),$scope.$on("lmabPostcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.cambSaveOnCloseConfirmed=function(){$scope.isMacEntered=!0,$scope.crlmabpostSaveData.crlmabpostId=$scope.crlmabpostPreLoadData.crlmabpostId,$scope.crlmabpostSaveData.applicantId=$scope.crlmabpostPreLoadData.applicantId,$scope.crlmabpostSaveData.lmbAssessmentId=$scope.crlmabpostPreLoadData.lmbassmentId,angular.forEach($scope.crlmabpostPreLoadData.macPreLoadDTO,function(value,key){$scope.crlmabpostSaveData.macdetailsDTO.push({classId:value.classId,outcomeId:value.outcomeId,restrictionId:value.restrictionId}),1==$scope.changeMedicalAssessment.checked&&(null!=value.outcomeId&&""!=value.outcomeId||($scope.isMacEntered=!1,$scope.errMsg="Please fill all outcome fields"),2!=value.outcomeId||""!=value.restrictionId&&null!=value.restrictionId||($scope.isMacEntered=!1,$scope.errMsg="Please fill all outcome fields"))}),$scope.isMacEntered||ModalService.openAlert("alert","success",$scope.errMsg,"null","null"),angular.forEach($scope.crlmabpostPreLoadData.operationalProvisoDTO,function(value,key){$scope.crlmabpostPreLoadData.operationalProvisoDTO[key].opeproprimary||($scope.crlmabpostPreLoadData.operationalProvisoDTO[key].opeproprimary=null),$scope.crlmabpostSaveData.operationalProvisoDTO.push({opeproId:value.opeproId,opeproprimary:$scope.crlmabpostPreLoadData.operationalProvisoDTO[key].opeproprimary,actionstatus:value.actionstatus})}),angular.forEach($scope.crlmabpostPreLoadData.followUpProvisoDTO,function(value,key){$scope.crlmabpostSaveData.followupProvisoDTO.push({followupProvId:value.followupProvId,followupprovisoTypeId:value.followupprovisoTypeId,specialityorInvId:value.specialityId,frequencyId:value.frequencyId,followupdonebyId:value.followupdonebyId,otherInvestigation:value.otherInvestigation,getDate:null!=value.dueDate&&""!=value.dueDate?$filter("date")(new Date(value.dueDate),$scope.formats[3]):"",actionStatus:value.actionStatus})}),angular.forEach($scope.crlmabpostPreLoadData.validityDTO,function(value,key){$scope.crlmabpostSaveData.macclassesList.push({classId:value.classId,validityMonths:value.validity})}),$scope.crlmabpostSaveData.restrictionDTO[0].restrictionremarks=$scope.crlmabpostPreLoadData.remarksComments,$scope.crlmabpostSaveData.performanceAuditId=$scope.crlmabpostPreLoadData.dmfperformanceid,$scope.crlmabpostSaveData.remarksDTO[0].auditremarks=$scope.crlmabpostPreLoadData.auditRemarks,APIS.CAMB_CLOSE_CRLMABPOST.data=$scope.crlmabpostSaveData,DataManager.sendRestRequest(null,APIS.CAMB_CLOSE_CRLMABPOST,function(response){response.success?ModalService.openAlert("alert","success","Closed and Saved Successfully.","null","null",function(){$location.url("/camb-worklistsetup?showTab=cambVetting")}):$log.error(response.errorMessage)},$scope.uconfig.token)},$scope.loadAttachments=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_ATTACHMENTS.URL,url=tempUrl+"/"+$scope.visitDetails.visitId+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.applicantId,APIS.GET_ATTACHMENTS.URL=url,DataManager.sendRestRequest(null,APIS.GET_ATTACHMENTS,function(response){response.success?$scope.attachmentList=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token),APIS.GET_ATTACHMENTS.URL=tempUrl},$scope.getViewAttachment=function(ID){var url=null,tempUrl=null;tempUrl=APIS.VIEW_ATTACHMENTS_DOCUMENT.URL,url=tempUrl+"/"+ID,APIS.VIEW_ATTACHMENTS_DOCUMENT.URL=url,DataManager.sendRestRequest(null,APIS.VIEW_ATTACHMENTS_DOCUMENT,function(response){if(response.success){var content=response.dataBean.docContent,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.docContent,"_blank","location=no,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token),APIS.VIEW_ATTACHMENTS_DOCUMENT.URL=tempUrl},$scope.lmfcommentsView=function(){ModalService.openAlert("alert","Alert",$scope.crlmabpostPreLoadData.comments,"null","null")},$scope.open2=function(){$scope.popup2.opened=!0},$scope.openfullreport=function(){APIS.CAMB_COMMON_FULLREPORT.data={crarId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId,calledFrom:$scope.visitDetails.applicantDetails.processStatusPageCode,visitType:"CR_LMAB"},DataManager.sendRestRequest(null,APIS.CAMB_COMMON_FULLREPORT,function(response){if(response.success)if(null!=response.dataBean.medicalRecord){var content=response.dataBean.medicalRecord,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.medicalRecord,"_blank","location=no,enableviewportscale=yes")}else ModalService.openAlert("alert","Warning","PDF not available.","null","null");else $log.error("full report error: "+response.errorMessages)},$scope.uconfig.token)},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("CRLAMBOperationalModalCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModalInstance","$rootScope","ModalService","modalParam",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope,ModalService,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),modalParam?$scope.existingOperationalprovisos=modalParam:$scope.existingOperationalprovisos=[],$scope.operationalprovisosChecked=[],$scope.operationalprovisosListAdd=[],$scope.operationalprovisosDisabled=[],$scope.dataBind()},$scope.dataBind=function(){$scope.operationalprovisosGridPopup()},$scope.operationalprovisosGridPopup=function(){DataManager.sendRestRequest(null,APIS.GET_OPERATIONAL_PROVISO,function(response){if(response.success){$scope.operationalprovisosListFetch=response.dataBean;for(var o=0;o<$scope.operationalprovisosListFetch.length;o++)$scope.operationalprovisosCheck=[],$scope.operationalprovisosCheck=$.grep($scope.existingOperationalprovisos,function(e){return e.code==$scope.operationalprovisosListFetch[o].code}),$scope.operationalprovisosCheck.length>=1?($scope.operationalprovisosChecked[o]=!0,$scope.operationalprovisosDisabled[o]=!0):($scope.operationalprovisosChecked[o]=!1,$scope.operationalprovisosDisabled[o]=!1)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.operationalprovisosSelected=function(operationalprovisosChecked,index){1==operationalprovisosChecked[index]?$scope.operationalprovisosListAdd.push({actionId:$scope.operationalprovisosListFetch[index].actionId,code:$scope.operationalprovisosListFetch[index].code,actionName:$scope.operationalprovisosListFetch[index].actionName,actionStatus:"I"}):$scope.operationalprovisosListAdd.splice($scope.operationalprovisosListFetch.map(function(e){return e.actionId}).indexOf($scope.operationalprovisosListFetch.actionId),1)},$scope.operationalprovisosGrid=function(){$scope.operationProvisoTableData=$scope.existingOperationalprovisos.concat($scope.operationalprovisosListAdd),$uibModalInstance.close($scope.operationProvisoTableData)},$scope.cancel=function(){for(var c=0;c<$scope.operationalprovisosListAdd.length;c++)$scope.operationalprovisosListAdd.splice(c,1);$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("AnalysisDMFModalCtrl",["$scope","$state","APIS","DataManager","ModalService","$filter","$window","$uibModalInstance","$rootScope","$timeout","modalParam","$log",function($scope,$state,APIS,DataManager,ModalService,$filter,$window,$uibModalInstance,$rootScope,$timeout,modalParam,$log){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.roleid=$scope.userConfig.userFacilities[0].roles[0].roleId,$scope.rolename=$scope.userConfig.userFacilities[0].roles[0].roleName,$scope.applicantId=$scope.visitDetails.applicantId,$scope.appointmentDate=null,$scope.dmfVisit={intitiatedby:$scope.userRegDetails.personId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.applicantId,initatedRole:$scope.roleid},$scope.datefunction()},$scope.datefunction=function(){$scope.fromDate=null,$scope.fromdateOptions={dateDisabled:disabled,formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",minDate:null,maxDate:new Date,startingDay:1},$scope.fromdatepickerPopup={opened:!1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0]},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.dmfAction=function(){return $scope.frmSubmitted=!0,$scope.form.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,$scope.frmInvalid=!1,void ModalService.openAlert("confirm","DMF","Do you want to confirm the details?",$scope,"dmfpop",function(){$scope.$on("dmfpopOk",function(){$scope.dmfVisit.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),$uibModalInstance.dismiss("cancel"),APIS.DMF_POPUP.data=$scope.dmfVisit,DataManager.sendRestRequest(null,APIS.DMF_POPUP,function(response){if(response.success){ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.cancel();var dmfValue=$("#cmbCreateCr").val();$("#"+dmfValue).find("option[label='DMF']").remove(),$("#"+dmfValue).parent().parent().parent().addClass("dmf_class")}else $log.error("DMF Model: "+response.errorMessages);return!0},$scope.uconfig.token)}),$scope.$on("dmfpopcancel",function(){$uibModalInstance.dismiss("cancel")})}))},$scope.close=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("CrlmabFullReportCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window",function($scope,$filter,$state,APIS,$location,DataManager,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.visitDetails.visitId=parseInt($scope.visitDetails.visitId),$scope.applicantuserId=$scope.visitDetails.applicantuserId,$scope.macappliedClass="Class ",$scope.fitnessGrid=[],$scope.physicanData={},$scope.operationalProvisoGrid=[],$scope.followUpProvisoGrid=[],$scope.databind(),$scope.isViewPDF=!1,$location.search().viewPDF&&($scope.isViewPDF=!0),$scope.isViewPDF&&$scope.getProcessSummary()},$scope.databind=function(){$scope.getApplicant(),$scope.getCAMB()},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.applicantuserId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean,$scope.applicantInfo.photo&&angular.element("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.applicantInfo.photo))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.getCAMB=function(){APIS.GET_CAMB_LAMB_PRELOAD.data={crlmabId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.GET_CAMB_LAMB_PRELOAD,function(response){response.success?($scope.preLoadData=response.dataBean,$scope.preLoadData.fullReportDTO&&($scope.physicanData=$scope.preLoadData.fullReportDTO[0]),angular.forEach($scope.preLoadData.crlmabMacPreloadedDTO,function(value,key){var desc="Class "+value.classId;$scope.macappliedClass=$scope.macappliedClass+value.classId+"/";var fitnessObject={classId:value.classId,mac_code:value.mac_code,macdesc:desc,restrictionId:value.restrictionId,restrictionsdesc:value.restricionCode,outcomeId:value.outComeId,outcomedesc:value.outcomeDesc,validity:"",effectiveDate:value.effectiveDate,expiryDate:""};angular.forEach($scope.preLoadData.validityDTO,function(vvalue,vkey){vvalue.classId==value.classId&&(fitnessObject.validity=vvalue.validity,fitnessObject.expiryDate=vvalue.expireDate)}),$scope.fitnessGrid.push(fitnessObject)}),$scope.setRestrictionCombo(),$scope.macappliedClass=$scope.macappliedClass.slice(0,-1),$scope.preLoadData.crLMABExistingOperationalDTO&&angular.forEach($scope.preLoadData.crLMABExistingOperationalDTO,function(value,key){var opObject={actionName:value.srdescription,actionId:value.existingOperationalProvisoId,code:value.srCode};$scope.operationalProvisoGrid.push(opObject)}),angular.forEach($scope.preLoadData.crlmabFollowUpDTO,function(fvalue,fkey){var FpprovisioObj={lmbfollowupProvisoId:fvalue.lmbfollowupProvisoId,doneby_id:fvalue.followupProvisoDoneById,doneby_name:fvalue.doneBy,followupDate:fvalue.getDate,frequency_id:fvalue.followupProvisoFrequencyId,
frequency_name:fvalue.frequencyDescription,other_investigation_id:fvalue.otherInvestigation,speciality_investigation_id:fvalue.specialityOrInvestigationId,speciality_investigation_name:fvalue.specInvDescription,type_id:fvalue.followupProvisoTypeId,type_name:fvalue.fprovType,type_code:fvalue.fprovTypeCode};$scope.followUpProvisoGrid.push(FpprovisioObj)})):console.log("response.errorMessages",response)},$scope.uconfig.token)},$scope.getProcessSummary=function(){switch($scope.visitDetails.applicantDetails.processStatusPageCode){case"CAMBVETTING":$scope.processFunction="VETTING";break;case"CAMBCOMPLETED":$scope.processFunction="COMPLETED";break;case"CAMBABORTED":$scope.processFunction="ABORT";break;case"CAMBEXPIRED":$scope.processFunction="EXPIRED";break;default:$scope.processFunction="VETTING"}var url=null,tempUrl=null;tempUrl=APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL,url=tempUrl+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.visitId+"/"+$scope.processFunction,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY,function(response){response.success?$scope.processSummary=response.dataBean.processSummary:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=tempUrl},$scope.setRestrictionCombo=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_RESTRICTIONS.URL,angular.forEach($scope.fitnessGrid,function(value,key){var mac_code="C"+value.classId;url=tempUrl+"/"+mac_code,APIS.GET_RESTRICTIONS.URL=url,DataManager.sendRestRequest(null,APIS.GET_RESTRICTIONS,function(response){response.success?angular.forEach(response.dataBean,function(rvalue,rkey){value.restrictionId==rvalue.restrictionsId&&(value.restrictionsdesc=rvalue.restriction)}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),console.log("$scope.fitnessGrid",$scope.fitnessGrid),APIS.GET_RESTRICTIONS.URL=tempUrl})},$scope.init()}]),angular.module("app").controller("CrlmabPostFullReportCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window",function($scope,$filter,$state,APIS,$location,DataManager,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.visitDetails.visitId=parseInt($scope.visitDetails.visitId),$scope.applicantuserId=$scope.visitDetails.applicantuserId,$scope.fitnessGrid=[],$scope.macappliedClass="Class ",$scope.physicanData={},$scope.operationalProvisoGrid=[],$scope.followUpProvisoGrid=[],$scope.databind(),$scope.isViewPDF=!1,$location.search().viewPDF&&($scope.isViewPDF=!0),$scope.isViewPDF&&$scope.getProcessSummary()},$scope.databind=function(){$scope.getApplicant(),$scope.getCAMB()},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.applicantuserId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean,$scope.applicantInfo.photo&&angular.element("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.applicantInfo.photo))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.getCAMB=function(){APIS.GET_CAMB_CRLAMB_PRELOAD.data={crlmabpostId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.GET_CAMB_CRLAMB_PRELOAD,function(response){response.success?($scope.preLoadData=response.dataBean,$scope.preLoadData.fullReportDTO&&($scope.physicanData=$scope.preLoadData.fullReportDTO[0],$scope.physicanData.changeFit=null==$scope.physicanData.changeFit?"No":$scope.physicanData.changeFit),angular.forEach($scope.preLoadData.macPreLoadDTO,function(value,key){var desc="Class "+value.classId;$scope.macappliedClass=$scope.macappliedClass+value.classId+"/";var fitnessObject={classId:value.classId,macdesc:desc,restrictionId:value.restrictionId,restrictionsdesc:"",outcomeId:value.outComeId,outcomedesc:value.outcomeCode,validity:"",effectiveDate:value.effectiveDate,expiryDate:""};angular.forEach($scope.preLoadData.validityDTO,function(vvalue,vkey){vvalue.classId==value.classId&&(fitnessObject.validity=vvalue.validity,fitnessObject.expiryDate=vvalue.expireDate)}),$scope.fitnessGrid.push(fitnessObject)}),$scope.setRestrictionCombo(),$scope.macappliedClass=$scope.macappliedClass.slice(0,-1),$scope.preLoadData.operationalProvisoDTO&&angular.forEach($scope.preLoadData.operationalProvisoDTO,function(value,key){var opObject={actionName:value.opeproDesc,actionId:value.opeproId,code:value.opeproCode};$scope.operationalProvisoGrid.push(opObject)}),angular.forEach($scope.preLoadData.followUpProvisoDTO,function(fvalue,fkey){var FpprovisioObj={lmbfollowupProvisoId:fvalue.followupProvId,doneby_id:fvalue.followupdonebyId.toString(),doneby_name:fvalue.followupdoneName,followupDate:fvalue.dueDate,frequency_id:fvalue.frequencyId,frequency_name:fvalue.frequency,other_investigation_id:fvalue.otherInvestigation,speciality_investigation_id:fvalue.specialityId,speciality_investigation_name:fvalue.specialityName,type_id:fvalue.followupprovisoTypeId,type_name:fvalue.fproType,type_code:fvalue.fprotypeCode};$scope.followUpProvisoGrid.push(FpprovisioObj)}),$scope.validity=$scope.preLoadData.validityDTO):$log.error("GET_CAMB_CRLAMB_PRELOAD"+response.errorMessages)},$scope.uconfig.token)},$scope.getProcessSummary=function(){switch($scope.visitDetails.applicantDetails.processStatusPageCode){case"CAMBVETTING":$scope.processFunction="VETTING";break;case"CAMBCOMPLETED":$scope.processFunction="COMPLETED";break;case"CAMBABORTED":$scope.processFunction="ABORT";break;case"CAMBEXPIRED":$scope.processFunction="EXPIRED";break;default:$scope.processFunction="VETTING"}var url=null,tempUrl=null;tempUrl=APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL,url=tempUrl+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.visitId+"/"+$scope.processFunction,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY,function(response){response.success?$scope.processSummary=response.dataBean.processSummary:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=tempUrl},$scope.init(),$scope.setRestrictionCombo=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_RESTRICTIONS.URL,angular.forEach($scope.fitnessGrid,function(value,key){var mac_code="C"+value.classId;url=tempUrl+"/"+mac_code,APIS.GET_RESTRICTIONS.URL=url,DataManager.sendRestRequest(null,APIS.GET_RESTRICTIONS,function(response){response.success?angular.forEach(response.dataBean,function(rvalue,rkey){value.restrictionId==rvalue.restrictionsId&&(value.restrictionsdesc=rvalue.restriction)}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),console.log("$scope.fitnessGrid",$scope.fitnessGrid),APIS.GET_RESTRICTIONS.URL=tempUrl})}}]),angular.module("app").controller("TrackduesCtrl",["$scope","$state","APIS","DataManager","ModalService","$filter","$window",function($scope,$state,APIS,DataManager,ModalService,$filter,$window){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse($window.sessionStorage.getItem("currentRole")),$scope.init=function(){$scope.searchKeys={applicantName:null,endDate:null,idNo:null,licNo:null,startDate:null,classType:null},$scope.formats=["yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[1],$scope.fromdatepickerPopup={opened:!1},$scope.todatepickerPopup={opened:!1},$scope.fromdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.todateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.dataSelected=[],$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.datatruecount=0,$scope.lmbFollowupProvisoId=[],$scope.databind()},$scope.databind=function(){$scope.loadtrackdueGriddata(),$scope.startDate=null,$scope.endDate=null},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.todatepickerOpen=function(){$scope.todateOptions.minDate=new Date($scope.fromDate),$scope.todatepickerPopup.opened=!0},$scope.select=function(page,data){data||(data=$scope.TrackData);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.worklistData=$filter("orderBy")($scope.worklistData,rowName),$scope.onOrderChange()},$scope.$watch("startDate",function(newVal,oldVal){newVal&&($scope.searchKeys.startDate=$filter("date")(newVal,"yyyy-MM-dd"))}),$scope.$watch("endDate  ",function(newVal,oldVal){newVal&&($scope.searchKeys.endDate=$filter("date")(newVal,"yyyy-MM-dd"))}),$scope.loadtrackdueGriddata=function(){APIS.CAMB_SEARCH_TRACK_DUES.data=$scope.searchKeys,DataManager.sendRestRequest(null,APIS.CAMB_SEARCH_TRACK_DUES,function(response){response.success?($scope.TrackData=response.dataBean,$scope.select($scope.currentPage,$scope.TrackData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.search=function(){APIS.CAMB_SEARCH_TRACK_DUES.data=$scope.searchKeys,DataManager.sendRestRequest(null,APIS.CAMB_SEARCH_TRACK_DUES,function(response){response.success&&(response.dataBean.length>0?($scope.mrfilteredStores=response.dataBean,$scope.select($scope.currentPage,$scope.mrfilteredStores)):ModalService.openAlert("alert","Search Criteria","No data found for the search/Filter criteria ","null","null"))},$scope.uconfig.token)},$scope.validatecompleteGrid=function(){for(var i=0;i<=$scope.dataSelected.length;i++)1!=$scope.dataSelected[i]&&"true"!=$scope.dataSelected[i]||($scope.datatruecount=$scope.datatruecount+1);$scope.datatruecount>0?$scope.completeGrid():ModalService.openAlert("alert","info","Select the Applicant","","",""),$scope.datatruecount=0},$scope.completeGrid=function(){$scope.lmbFollowupProvisoId=[];for(var i=0;i<$scope.dataSelected.length;i++)1!=$scope.dataSelected[i]&&"true"!=$scope.dataSelected[i]||$scope.lmbFollowupProvisoId.push({lmbFollowupProvisoId:$scope.mrfilteredStores[i].followupProvisoId});console.log($scope.lmbFollowupProvisoId),APIS.CAMB_TRACKDUE_COMPLETE.data=$scope.lmbFollowupProvisoId,DataManager.sendRestRequest(null,APIS.CAMB_TRACKDUE_COMPLETE,function(response){response.success?(ModalService.openAlert("alert","success","Completed Successfully","null","null",function(){$scope.loadtrackdueGriddata()}),$scope.lmbFollowupProvisoId=[]):($scope.lmbFollowupProvisoId=[],console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages))},$scope.uconfig.token)},$scope.makechecktrue=function(param){if(param)for(var i=0;i<$scope.mrcurrentPageStores.length;i++)$scope.dataSelected[i]=!0;else for(var i=0;i<$scope.mrcurrentPageStores.length;i++)$scope.dataSelected[i]=!1},$scope.indextrue=function(select,index){select?$scope.dataSelected[index]=!0:$scope.dataSelected[index]=!1},$scope.printit=function(printdata){var printContents=document.getElementById(printdata).innerHTML,popupWin=window.open("","_blank","width=1300,height=700");popupWin.document.open(),popupWin.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">'+printContents+"</html>"),popupWin.document.close()},$scope.init()}]),angular.module("app").controller("ViewProcessSummaryCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","ModalService","$rootScope",function($scope,$filter,$state,APIS,$location,DataManager,$window,ModalService,$rootScope){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.visitId=$scope.visitDetails.visitId,$scope.visitTypeSess=$scope.visitDetails.visitType,$scope.applicantId=$scope.visitDetails.applicantId,$scope.visitDetails.visitId=parseInt($scope.visitDetails.visitId),$scope.fitnessGrid=[],$scope.macappliedClass="Class ",$scope.physicanData={},$scope.operationalProvisoGrid=[],$scope.followUpProvisoGrid=[],$scope.audioData={visitID:$scope.visitDetails.visitId,audiometry:[{hearingAid:"withoutAid",type:"air",left:[],right:[]}]},$scope.databind()},$scope.databind=function(){$scope.getApplicant(),$scope.visitType="Consult",$scope.getCMBConsult(),$scope.getProcessSummary()},$scope.confirmPublish=function(){var enURI=encodeURIComponent($("#submission").html()),es=escape(enURI);$scope.viewProVal=window.btoa(es),$scope.currentDate=$filter("date")(new Date,"dd-MMM-yyyy"),$scope.fileName="MR_"+$scope.visitTypeSess+"_"+$scope.applicantId+"_"+$scope.currentDate+".pdf";var params={refId:$scope.visitId,type:$scope.visitTypeSess,pdffile:$scope.viewProVal,fileName:$scope.fileName,applicantid:$scope.applicantId,id:$scope.visitId};APIS.CAMB_PUBLISH_VETTING.data=params,DataManager.sendRestRequest(null,APIS.CAMB_PUBLISH_VETTING,function(response){response.success?($scope.loadvetting(),ModalService.openAlert("alert","success","Vetting Published Successfully","null","null",function(){})):console.log("CAMB Publish Vetting Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.visitDetails.applicantuserId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean,console.log($scope.applicantInfo))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.getCMBConsult=function(){$scope.preloadConsultMeasurementData(),$scope.preloadaudio(),$scope.getPrePopulatedAnalysisData(),$scope.getdiagnosisGridData(),$scope.physicalexamination_Examinationonload(),$scope.loadConsultInvestigationData()},$scope.getPrePopulatedAnalysisData=function(){APIS.CAMB_GET_PRE_DATA.data={applicantId:$scope.visitDetails.applicantId,consultId:$scope.visitDetails.visitId},DataManager.sendRestRequest(null,APIS.CAMB_GET_PRE_DATA,function(response){response.success?($scope.consultAnalysis=response.dataBean,$scope.summeryNotesdata=$scope.consultAnalysis.fullReportDetails[0].summeryNotesdata,$scope.followupPlandata=$scope.consultAnalysis.fullReportDetails[0].followupPlandata,$scope.instructionsforDmedata=$scope.consultAnalysis.fullReportDetails[0].instructionsforDmedata,$scope.lmeStartDate=$scope.consultAnalysis.fullReportDetails[0].lmestartDate,$scope.lmeDoneBy=$scope.consultAnalysis.fullReportDetails[0].lmedoneBy,$scope.cmabStartDate=$scope.consultAnalysis.fullReportDetails[0].cmabstartDate,$scope.consultMac=$scope.consultAnalysis.mac,$scope.consultOperationProvisoData=$scope.consultAnalysis.operationalProvisoList,$scope.consultFollowupProvisoGrid=$scope.consultAnalysis.followupProviso,$scope.consultDrugsDetails=$scope.consultAnalysis.drugsList):$log.error("prepopulated data "+response)},$scope.uconfig.token)},$scope.getdiagnosisGridData=function(){$scope.diganosisTableData=[],APIS.CAMB_GET_DIAGNOSIS_GRID_DATA.URL=String.prototype.format.apply(APIS.CAMB_GET_DIAGNOSIS_GRID_DATA.tempURL,[$scope.visitDetails.applicantId]),DataManager.sendRestRequest(null,APIS.CAMB_GET_DIAGNOSIS_GRID_DATA,function(response){response.success?angular.forEach(response.dataBean,function(value,key){value.detected_date&&(value.detected_date=new Date(value.detected_date));var obj={applicationdiagnosisID:value.applicant_diagnosis_id,diagnosisId:value.dr_icd_id,icdCode:value.icd_code,description:value.description,detectedDate:value.detected_date};$scope.diganosisTableData.push(obj)}):$log.error(response.errorMessages)},$scope.uconfig.token)},$scope.preloadConsultMeasurementData=function(){$scope.bmiCharts=[],$scope.bmicreated_ON=[],$scope.MonthDa=[];var url=null,tempUrl=null;tempUrl=APIS.CAMB_PRELOAD_MEASUREMENT.URL,url=tempUrl+"/"+$scope.visitDetails.visitId+"/"+$scope.visitDetails.applicantId,APIS.CAMB_PRELOAD_MEASUREMENT.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_PRELOAD_MEASUREMENT,function(response){if(response.success){if($scope.enableNext=!0,$scope.mesurementData=response.dataBean[0],"Y"==response.dataBean[0].visionCorrection.spectacles&&($scope.isLenseUsed="spectacles"),"Y"==response.dataBean[0].visionCorrection.contactLense&&($scope.isLenseUsed="contactLense"),$scope.colorPlates=response.dataBean[0].colourPerceptionDTO.paletStatusDTO?response.dataBean[0].colourPerceptionDTO.paletStatusDTO:$scope.colorPlates,0==$scope.mesurementData.generalDTO.suspineDataDTO.length||$scope.postalDropTransformation($scope.mesurementData.generalDTO.suspineDataDTO),0==$scope.mesurementData.generalDTO.actScoreDTOList.length||$scope.actscroeTransformation($scope.mesurementData.generalDTO.actScoreDTOList),!$scope.mesurementData.visionCorrection.metricsLeftDTO){var metricsLeft={ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null};$scope.mesurementData.visionCorrection.metricsLeftDTO=metricsLeft}if(!$scope.mesurementData.visionCorrection.metricsRightDTO){var metricsRight={rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null};$scope.mesurementData.visionCorrection.metricsRightDTO=metricsRight}$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight&&$scope.bmiCalculation($scope.mesurementData.generalDTO.height,$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight),$scope.checksup=$scope.mesurementData.generalDTO.suspineDataDTO[0].suspineDTO,$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip),$scope.slectedVison=$scope.mesurementData.visionCorrection.visionType}else console.log("CAMB_PRELOAD_MEASUREMENT: "+response.errorMessage)},$scope.uconfig.token),APIS.CAMB_PRELOAD_MEASUREMENT.URL=tempUrl},$scope.postalDropTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.suspineDataDTO,function(value,index){$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop=parseInt(value.suspineDTO.sys)-parseInt(value.standingDTO.sys)})},$scope.actscroeTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,index){$scope.mesurementData.generalDTO.actScoreDTOList[index].actscore=value.asthmacontrol.actQn1Score+value.asthmacontrol.actQn2Score+value.asthmacontrol.actQn3Score+value.asthmacontrol.actQn4Score+value.asthmacontrol.actQn5Score})},$scope.bmiCalculation=function(height,weight){if(!height||!weight)return!1;var height=height/100,ratio=weight/(height*height);$scope.bmiRatio=ratio.toFixed(2)},$scope.prebmiCalculation=function(height,weight,created_ON){if(!height||!weight)return!1;var height=height/100,ratio=weight/(height*height);$scope.prebmiRatio=ratio.toFixed(2),$scope.bmiCharts.push(parseFloat($scope.prebmiRatio)),$scope.bmicreated_ON.push(created_ON)},$scope.dateFormat=function(bmiReport){$scope.dateParts=[];for(var i=0;i<bmiReport.length;i++)$scope.dateParts=bmiReport[i].split("/"),$scope.dateObject=new Date($scope.dateParts[2]+"-"+$scope.dateParts[1]+"-"+$scope.dateParts[0]),$scope.datavlue=$scope.dateObject.getMonth().toString(),$scope.datavle=$scope.dateObject.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datavlue];$scope.monthr=$scope.monthreport+","+$scope.datavle,$scope.MonthDa.push($scope.monthr)},$scope.waistCalculation=function(waist,hip){if(!waist||!hip)return!1;var ratio=waist/hip;$scope.waistRatio=ratio.toFixed(2)},$scope.preloadaudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.visitDetails.visitId,APIS.GET_CAMB_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_AUDIOMETROY,function(response){response.success?response.dataBean.audiometry.length>0?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.showCanvas=!0):$log.error("Audiograme Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_CAMB_AUDIOMETROY.URL=tempUrl},$scope.preloadTransaction=function(data){var xAxis=[86,142,198,253,280,309,336,365];angular.forEach(data.audiometry,function(val,key){var i=0,leftData=[];angular.forEach(val.left,function(leftValue,leftKey){var temp={freq:xAxis[i],sound:leftValue};leftData.push(temp),i+=1}),data.audiometry[key].left=leftData;var j=0,rightData=[];angular.forEach(val.right,function(rightValue,rightKey){var temp={freq:xAxis[j],sound:rightValue};rightData.push(temp),j+=1}),data.audiometry[key].right=rightData}),$scope.audioData=data,$scope.showCanvas=!0},$scope.physicalexamination_Examinationonload=function(){$scope.physicalexamination_userinfo={visitId:parseInt($scope.visitDetails.visitId),applicationId:$scope.visitDetails.applicantId},APIS.CR_PHYSICALEXAMINATION_EXAMINATION.data=$scope.physicalexamination_userinfo,DataManager.sendRestRequest(null,APIS.CR_PHYSICALEXAMINATION_EXAMINATION,function(response){response.success?($scope.measurement_bp=response.dataBean[0].ar_mea_bp,$scope.measurement_eye=response.dataBean[0].ar_mea_eye_others,$scope.measurement_audiometry=response.dataBean[0].ar_MEA_AUDIOMETRY,$scope.investigation=response.dataBean[0].investigation,$scope.system_parts_remarks=response.dataBean[0].system_parts_remarks,$scope.physicalexamination_examinationdata=$scope.measurement_bp.concat($scope.measurement_eye,$scope.measurement_audiometry,$scope.investigation,$scope.system_parts_remarks)):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.loadConsultInvestigationData=function(){APIS.GET_CR_INVESTIGATION_DATA.data={visitId:$scope.visitDetails.visitId,applicantId:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.GET_CR_INVESTIGATION_DATA,function(response){response.success?($scope.investigation=response.dataBean,angular.forEach($scope.investigation.bloodTests.lipidProfile,function(value,key){angular.forEach(value.data,function(val,index){val.cratio=(val.tci/val.hdl).toFixed(2)})}),angular.forEach($scope.investigation.renalPanel,function(value,key){angular.forEach(value.data,function(val,index){"M"==$scope.visitDetails.applicantDetails.gender?val.egfr=((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*val.cr)).toFixed(2):val.egfr=((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*val.cr)).toFixed(2)})})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.setRestrictionCombo=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_RESTRICTIONS.URL,angular.forEach($scope.fitnessGrid,function(value,key){var mac_code="C"+value.classId;url=tempUrl+"/"+mac_code,APIS.GET_RESTRICTIONS.URL=url,DataManager.sendRestRequest(null,APIS.GET_RESTRICTIONS,function(response){response.success?angular.forEach(response.dataBean,function(rvalue,rkey){value.restrictionId==rvalue.restrictionsId&&(value.restrictionsdesc=rvalue.restriction)}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),console.log("$scope.fitnessGrid",$scope.fitnessGrid),APIS.GET_RESTRICTIONS.URL=tempUrl})},$scope.getProcessSummary=function(){switch($scope.visitDetails.applicantDetails.processStatusPageCode){case"CAMBVETTING":$scope.processFunction="VETTING";break;case"CAMBCOMPLETED":$scope.processFunction="COMPLETED";break;case"CAMBABORTED":$scope.processFunction="ABORT";break;case"CAMBEXPIRED":$scope.processFunction="EXPIRED";break;default:$scope.processFunction="VETTING"}var url=null,tempUrl=null;tempUrl=APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL,url=tempUrl+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.visitId+"/"+$scope.processFunction,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GET_VIEW_PROCESS_SUMMARY,function(response){response.success?$scope.processSummary=response.dataBean.processSummary:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_VIEW_PROCESS_SUMMARY.URL=tempUrl},$scope.init()}]),angular.module("app").controller("WorklistAbortedCtrl",["$scope","$state","APIS","$location","DataManager","$window","$filter","$uibModal","ModalService",function($scope,$state,APIS,$location,DataManager,$window,$filter,$uibModal,ModalService){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.wrktypes=[{type:"CONSULT",type_id:"CONSULT"},{type:"CR(LMAB)",type_id:"CR_LMAB"},{type:"CR(post-LMAB)",type_id:"CR_LMAB_POST"},{type:"CR(AR Proviso)",type_id:"CR_AR_PROVISO"},{type:"CR(Ad-Hoc)",type_id:"CR_ADHOC"},{type:"CR(DMF Clearance)",type_id:"CR_AR_DMF"},{type:"Special Board(SB)",type_id:"SB"}],$scope.tabledata={status_page_code:"CAMBABORTED",nrifinpassport:"",applicantname:"",licence_dtl:"",v_type:""},$scope.keys={idNo:"",applicantname:""},$scope.itemlistabort=null,$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.loadabort(),$scope.camb_filter()},$scope.camb_filter=function(){var pagecode="CAMBABORTED";APIS.CAMB_TYEP_FILTER.URL="camb/loadcrtypes/"+pagecode,DataManager.sendRestRequest(null,APIS.CAMB_TYEP_FILTER,function(response){response.success?($scope.filterData=response.dataBean,console.log($scope.filterData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.loadabort=function(){APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.abortData=response.dataBean,$scope.$emit("abortedCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.abortData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.loadabortSearch=function(){return $scope.tabledata.nrifinpassport||$scope.tabledata.applicantname||$scope.tabledata.licence_dtl||$scope.tabledata.v_type?(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,void DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){if(response.success){if(!(response.dataBean.length>0))return ModalService.openAlert("alert","Aborted ","No data found for the search/Filter criteria ","null","null"),!1;$scope.abortData=response.dataBean,$scope.select($scope.currentPage,$scope.abortData)}else console.log(response.errorMessages)},$scope.uconfig.token)):(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.abortData=response.dataBean,$scope.select($scope.currentPage,$scope.abortData),ModalService.openAlert("alert","Aborted","Please enter any field","null","null")):console.log(response.errorMessages)},$scope.uconfig.token),!1)},$scope.select=function(page,data){data||(data=$scope.abortData);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.abortData=$filter("orderBy")($scope.abortData,rowName),$scope.onOrderChange()},$scope.viewPDF=function(abortedData){switch($scope.doAction(abortedData),$scope.visitDetails.visitType){case"CR_LMAB_POST":$window.open("#/crlmabpostfullreport?viewPDF=Y");break;case"CR_LMAB":$window.open("#/crlmabfullreport?viewPDF=Y");break;case"CR_ADHOC":$window.open("#/cradhocfullreport?viewPDF=Y");break;case"CR_AR":$window.open("#/crarfullreport?viewPDF=Y");break;case"CMB_CONSULT":$window.open("#/viewProcessSummary");break;default:$window.open("#/crarfullreport?viewPDF=Y")}},$scope.doAction=function(abortedData){$scope.visitDetails={},$scope.visitDetails={visitId:abortedData.visit_id,visitType:abortedData.v_type,applicantId:abortedData.applicant_id,applicantuserId:abortedData.applicantuserId,applicantDetails:abortedData},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails))},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visit_id,visitType:tablerecord.v_type,applicantId:tablerecord.applicant_id,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.init()}]),angular.module("app.camb").controller("WorklistActionCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModalInstance","$rootScope","$log","ModalService","modalParam",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope,$log,ModalService,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig"))},$scope.cambdmfVisit={dateofoccurence:"",diagnosis:"",treatmentplan:""},$scope.dataBind=function(){$scope.getcambdata()},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.getcambdata=function(){var url=null,tempUrl=null;tempUrl=APIS.CAMB_ABORT_GETVISITDETAILS.URL,$scope.visitid=2,url=tempUrl+"/CMB_CONSULT/"+$scope.visitid,APIS.CAMB_ABORT_GETVISITDETAILS.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_ABORT_GETVISITDETAILS,function(response){response.success?($scope.abortloaddata=response.dataBean,console.log($scope.abortloaddata)):$log.error("Abort Model: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_ABORT_GETVISITDETAILS.URL=tempUrl},$scope.dmfAction=function(){$scope.cambdmfVisit.intitiatedby=125,$scope.cambdmfVisit.initatedRole=11,$scope.cambdmfVisit.applicantId=360,console.log($scope.cambdmfVisit),$scope.cambdmfVisit.dateofoccurence=$filter("date")(new Date($scope.cambdmfVisit.dateofoccurence),"yyyy-MM-dd"),APIS.CAMB_CAMBDMFPOPUP.data=$scope.cambdmfVisit,DataManager.sendRestRequest(null,APIS.CAMB_CAMBDMFPOPUP,function(response){response.success?ModalService.openAlert("alert","DMF","saved data successfully","null","null"):$log.error("DMF Model: "+response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("WorklistAnalysisCtrl",["$scope","$rootScope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModal","$location","ModalService",function($scope,$rootScope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModal,$location,ModalService){
$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails"));var isFormAlreadyModified=!1;return $scope.userConfig||$scope.userConfig.userSeqId?($scope.init=function(){$scope.roleid=$scope.userConfig.userFacilities[0].roles[0].roleId,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.rolename=$scope.currentRole.roleName,$scope.currentAction=$scope.visitDetails.applicantDetails.currentAction,$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","yyyy-MM-dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup2={opened:!1},$scope.isFrmSubmited=!1,$scope.diganosisTableData=[],$scope.summeryNotesdata="",$scope.followupPlandata="",$scope.instructionsforDmedata="",$scope.selectedDrug=null,$scope.drugsDetails=[],$scope.currentMedicalAssessment=!1,$scope.mac=[],$scope.operationalProvisoData=[],$scope.operationProvisoTableData=[],$scope.dropdownObj={},$scope.followupProvisoList=[],$scope.followupProvisoGrid=[],$scope.followupProvisoCombos={typeCombo:null,subTypeCombo:null,doneByCombo:null,frequency:null},$scope.fpBaseObject={follupProvisoTypeId:null,spcltyOrInvstgtnId:null,followupProvisoFrequencyId:null,followupProvisoDonbyId:null,othrInvstgtnId:null,followupdate:"",status:""},$scope.dataBind()},$scope.dataBind=function(){$scope.getdiagnosisGridData(),$scope.getPrePopulatedData(),$scope.getDrugSearchCombo(),$scope.getDrugDosageCombo(),$scope.getDrugFrequencyCombo(),$scope.getUploadedGridData(),$scope.getUploadedDocument(),$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1}),$scope.toDoSave={measurement:{status:!1,alertShown:!1},investigation:{status:!1,alertShown:!1},examination:{status:!1,alertShown:!1},audiometry:{status:!1,alertShown:!1},analysis:{status:!1,alertShown:!1}},isFormAlreadyModified=!1,$scope.$watch("frmAbortDetails.$dirty",function(newVal,oldVal){newval&&($scope.toDoSave.analysis.status=!0,isFormAlreadyModified||$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),isFormAlreadyModified=!0)})},$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?($scope.fileUploadGridList=response.dataBean,$scope.isDocumentUploaded=response.dataBean.length>0):$log.error("CAMB_GET_DIAGNOSIS_GRID_DATA "+response)},$scope.userConfig.token)},$scope.getPrePopulatedData=function(){"Update"==$scope.visitDetails.applicantDetails.currentAction?$scope.typeCode="CAMBFOLLOWUP":$scope.typeCode="CAMBINPROGRESS",APIS.CAMB_GET_PRE_DATA.data={applicantId:$scope.visitDetails.applicantId,consultId:$scope.visitDetails.visitId,typeCode:$scope.typeCode},DataManager.sendRestRequest(null,APIS.CAMB_GET_PRE_DATA,function(response){response.success?($scope.preloadAnalysis=response.dataBean,$scope.preloadAnalysis.fullReportDetails.length>0&&($scope.summeryNotesdata=$scope.preloadAnalysis.fullReportDetails[0].summeryNotesdata,$scope.followupPlandata=$scope.preloadAnalysis.fullReportDetails[0].followupPlandata,$scope.instructionsforDmedata=$scope.preloadAnalysis.fullReportDetails[0].instructionsforDmedata),console.log($scope.preloadAnalysis),response.dataBean.mac.length>0&&(angular.forEach(response.dataBean.mac,function(value,rkey){var macObject={classId:value.macId,mac_code:value.macCode,outComeId:parseInt(value.outcomeId),conclusionId:parseInt(value.conclusionId),restrictionId:parseInt(value.restrictionId),macFitLIstCombo:null,macRestrictionCombo:null,macConclusionCombo:null};$scope.mac.push(macObject),console.log($scope.mac)}),$scope.setRestrictionCombo()),$scope.spliced=!1,angular.forEach($scope.mac,function(value,key){value.macFitLIstCombo=response.dataBean.fit_list,value.macConclusionCombo=response.dataBean.conclusion,$scope.spliced||(""==$scope.preloadAnalysis.dmfNo&&"RESDUTY"==response.dataBean.conclusion[key].code?(value.macConclusionCombo.splice(key,1),$scope.spliced=!0):$scope.spliced=!0)}),angular.forEach(response.dataBean.operationalProvisoList,function(value,key){$scope.operationProvisoTableData.push({operationalProvisoId:value.opId,code:value.code,description:value.opDescription,consultOperationalProvisoId:value.consultOperationalProvisoId,status:value.status})}),$scope.followupProvisoCombos.typeCombo=response.dataBean.followupType,$scope.followupProvisoCombos.doneByCombo=response.dataBean.followupDoneBy,$scope.followupProvisoCombos.frequency=response.dataBean.followupFrequency,$scope.drugsDetails=response.dataBean.drugsList,$scope.followupProvisoGrid=response.dataBean.followupProviso,$scope.currentMedicalAssessment="No"!=response.dataBean.changedYn,$scope.isModified=$scope.currentMedicalAssessment):$log.error("prepopulated data "+response)},$scope.userConfig.token)},$scope.setFormModifiedflag=function(){$scope.toDoSave.analysis.status=!0,isFormAlreadyModified||$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),isFormAlreadyModified=!0},$scope.getdiagnosisGridData=function(){APIS.CAMB_GET_DIAGNOSIS_GRID_DATA.URL=String.prototype.format.apply(APIS.CAMB_GET_DIAGNOSIS_GRID_DATA.tempURL,[$scope.visitDetails.applicantId]),DataManager.sendRestRequest(null,APIS.CAMB_GET_DIAGNOSIS_GRID_DATA,function(response){response.success?angular.forEach(response.dataBean,function(value,key){value.detected_date&&(value.detected_date=new Date(value.detected_date));var obj={applicationdiagnosisID:value.applicant_diagnosis_id,diagnosisId:value.dr_icd_id,icdCode:value.icd_code,description:value.description,detectedDate:value.detected_date,status:1,tagYN:value.tagYN};$scope.diganosisTableData.push(obj),console.log(response.dataBean)}):$log.error(response.errorMessages)},$scope.userConfig.token)},$scope.addDataToDiagnosisGrid=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDiagnosisModal.html",controller:"AnalysisDiagnosisModalCtrl",resolve:{diagnosisModalParam:function(){return $scope.diganosisTableData}}}).result.then(function(selectedItem){"string"!=typeof selectedItem&&($scope.diganosisTableData!==selectedItem&&$scope.setFormModifiedflag(),$scope.diganosisTableData=selectedItem)},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.setRestrictionCombo=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_RESTRICTIONS.URL,angular.forEach($scope.mac,function(value,key){var mac_code=value.mac_code;url=tempUrl+"/"+mac_code,APIS.GET_RESTRICTIONS.URL=url,DataManager.sendRestRequest(null,APIS.GET_RESTRICTIONS,function(response){response.success?value.macRestrictionCombo=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token),APIS.GET_RESTRICTIONS.URL=tempUrl})},$scope.addFollowUpToGrid=function(fpBaseObject){if($scope.errorMsg="",null==fpBaseObject.follupProvisoTypeId)return void($scope.errorMsg="Please enter Follow up proviso type");if(null==fpBaseObject.spcltyOrInvstgtnId)return void($scope.errorMsg="Please enter Speciality or Investigation");if("Once"==fpBaseObject.spcltyOrInvstgtnId&&(null==fpBaseObject.followupdate||""==fpBaseObject.followupdate))return void($scope.errorMsg="Please enter next due date");if(null==fpBaseObject.followupProvisoFrequencyId)return void($scope.errorMsg="Please enter Frequency");if(null==$scope.editIndex){var provisoObj={doneBy:fpBaseObject.followupProvisoDonbyId.name,doneById:fpBaseObject.followupProvisoDonbyId.personId,followupProvisoFrequencyId:fpBaseObject.followupProvisoFrequencyId.followupProvisoFrequencyId,followupProvisoType:fpBaseObject.follupProvisoTypeId.description,followupProvisoTypeId:fpBaseObject.follupProvisoTypeId.follupProvisoTypeId,frequency:fpBaseObject.followupProvisoFrequencyId.description,subType:fpBaseObject.spcltyOrInvstgtnId.description,subTypeId:parseInt(fpBaseObject.spcltyOrInvstgtnId.reportsId),consultFollowupProvisoId:-1,status:"I",followupdate:null!=fpBaseObject.followupdate&&""!=fpBaseObject.followupdate?$filter("date")(new Date(fpBaseObject.followupdate),$scope.formats[2]):""};$scope.followupProvisoGrid.push(provisoObj),$scope.dropdownObj={},$scope.setFormModifiedflag()}else{var newStatus="E";newStatus="I"==fpBaseObject.status?"I":"E";var provisoObj={doneBy:fpBaseObject.followupProvisoDonbyId.name,doneById:fpBaseObject.followupProvisoDonbyId.personId,followupProvisoFrequencyId:fpBaseObject.followupProvisoFrequencyId.followupProvisoFrequencyId,followupProvisoType:fpBaseObject.follupProvisoTypeId.description,followupProvisoTypeId:fpBaseObject.follupProvisoTypeId.follupProvisoTypeId,frequency:fpBaseObject.followupProvisoFrequencyId.description,subType:fpBaseObject.spcltyOrInvstgtnId.description,subTypeId:parseInt(fpBaseObject.spcltyOrInvstgtnId.reportsId),consultFollowupProvisoId:fpBaseObject.consultFollowupProvisoId,status:newStatus,followupdate:null!=fpBaseObject.followupdate&&""!=fpBaseObject.followupdate?$filter("date")(new Date(fpBaseObject.followupdate),$scope.formats[2]):""};$scope.followupProvisoGrid[$scope.editIndex]=provisoObj,$scope.dropdownObj={},$scope.editIndex=null,$scope.setFormModifiedflag()}},$scope.editFollowUpGrid=function(data){var follDate=null!=data.followupdate&&""!=data.followupdate?new Date(data.followupdate):"";$scope.dropdownObj={followupProvisoDonbyId:{name:data.doneBy,personId:parseInt(data.doneById)},followupProvisoFrequencyId:{followupProvisoFrequencyId:parseInt(data.followupProvisoFrequencyId),description:data.frequency},follupProvisoTypeId:{follupProvisoTypeId:parseInt(data.followupProvisoTypeId),description:data.followupProvisoType},spcltyOrInvstgtnId:{reportsId:parseInt(data.subTypeId),description:data.subType},consultFollowupProvisoId:data.consultFollowupProvisoId,status:data.status,followupdate:follDate},$scope.changePro($scope.dropdownObj),$scope.followupProvisoSpeciailityInvestigationFetch(),$scope.editIndex=$scope.followupProvisoGrid.indexOf(data)},$scope.deleteFollowUpFromGrid=function(dataIndex){$scope.removeIndex=dataIndex,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure want to delete?",$scope,"followupdel",function(){$scope.$on("followupdelOk",function(){0==$scope.warningConfirmed&&("I"==$scope.followupProvisoGrid[$scope.removeIndex].status?$scope.followupProvisoGrid.splice($scope.removeIndex,1):$scope.followupProvisoGrid[$scope.removeIndex].status="D",$scope.setFormModifiedflag()),$scope.warningConfirmed=!0}),$scope.$on("followupdelcancel",function(){$uibModalInstance.closed})})},$scope.referral=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisReferralModal.html",controller:"analysisReferralModalCtrl",resolve:{modalParam:function(){return null}}})},$scope.attachDocuments=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDocumentModal.html",controller:"AnalysisDocumentModalCtrl",size:"lg",resolve:{modalParam:function(){return null}}})},$scope.operationalprovinso=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/AddOperationalProvisos.html",controller:"CRAdhocOperationalModalCtrl",resolve:{modalParam:function(){return $scope.preloadOperationalProvisoTransfer=[],$scope.preloadOperationalProvisoDelete=[],angular.forEach($scope.operationProvisoTableData,function(value,key){2!=value.status?$scope.preloadOperationalProvisoTransfer.push(value):$scope.preloadOperationalProvisoDelete.push(value)}),$scope.preloadOperationalProvisoTransfer}}}).result.then(function(selectedItem){"string"!=typeof selectedItem&&($scope.operationProvisoTableData=[],angular.forEach(selectedItem,function(value,key){value.hasOwnProperty("actionId")?$scope.operationProvisoTableData.push({operationalProvisoId:value.actionId,code:value.code,description:value.actionName,consultOperationalProvisoId:-1,status:1}):($scope.operationProvisoTableData.push(value),$scope.setFormModifiedflag())})),$scope.operationProvisoTableData.concat($scope.preloadOperationalProvisoDelete)},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.viewMsg=function(provisoFull){ModalService.openAlert("alert","Operational Proviso",provisoFull,"null","null")},$scope.removeOperationRecord=function(delIndex){$scope.opData=delIndex,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure want to delete?",$scope,"operdel",function(){$scope.$on("operdelOk",function(){0==$scope.warningConfirmed&&($scope.operationProvisoTableData[$scope.opData].consultOperationalProvisoId==-1?$scope.operationProvisoTableData.splice($scope.opData,1):$scope.operationProvisoTableData[$scope.opData].status=2,$scope.setFormModifiedflag()),$scope.warningConfirmed=!0}),$scope.$on("operdelcancel",function(){$uibModalInstance.closed})})},$scope.getDrugSearchCombo=function(){DataManager.sendRestRequest(null,APIS.GET_DRUGS_COMBO,function(response){response.success?$scope.drugs=response.dataBean:$log.error("Drug Search: "+response.errorMessage)},$scope.userConfig.token)},$scope.addDrugs=function(data){$scope.drugsDetails.push({dosage:"",drugName:data.drugName,frequency:"",dosageId:-1,status:3}),$scope.setFormModifiedflag(),$scope.selectedDrug=null},$scope.removeDrugs=function(index){$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure want to delete?",$scope,"drugdel",function(){$scope.$on("drugdelOk",function(){0==$scope.warningConfirmed&&($scope.drugsDetails[index].dosageId==-1?$scope.drugsDetails.splice(index,1):$scope.drugsDetails[index].status=2,$scope.setFormModifiedflag()),$scope.warningConfirmed=!0}),$scope.$on("drugdelcancel",function(){$uibModalInstance.closed})})},$scope.changePro=function(typeId){$scope.followupProvisoCombos.subTypeCombo=[],$scope.protype="";var selectedTypeObj=$filter("filter")($scope.followupProvisoCombos.typeCombo,{follupProvisoTypeId:typeId.follupProvisoTypeId.follupProvisoTypeId})[0];$scope.protype=selectedTypeObj.code,$scope.followupProvisoSpeciailityInvestigationFetch()},$scope.followupProvisoSpeciailityInvestigationFetch=function(){APIS.GET_CAMB_FOLLOWUP_SUBTYPE.URL=APIS.GET_CAMB_FOLLOWUP_SUBTYPE.tempURL+$scope.protype,DataManager.sendRestRequest(null,APIS.GET_CAMB_FOLLOWUP_SUBTYPE,function(response){$scope.followupProvisoCombos.subTypeCombo=response.dataBean},$scope.userConfig.token)},$scope.getDrugDosageCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGDOSAGE"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?$scope.drugDosageList=response.dataBean:$log.error("Drug Dosage: "+response.errorMessage)},$scope.userConfig.token)},$scope.getDrugFrequencyCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGFREQ"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?$scope.drugFrequencyList=response.dataBean:$log.error("Drug Dosage: "+response.errorMessage)},$scope.userConfig.token)},$scope.open2=function(){$scope.popup2.opened=!0},$scope.saveCAMB=function(){$scope.isClose=!1,$scope.cambSave()},$scope.cambSave=function(){return $scope.isFrmSubmited=!0,$scope.frmAbortDetails.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.isFrmSubmited=!1,$scope.frmInvalid=!1,angular.forEach($scope.followupProvisoGrid,function(value,key){var fpObj={follupProvisoTypeId:value.followupProvisoTypeId,spcltyOrInvstgtnId:value.subTypeId,followupProvisoFrequencyId:value.followupProvisoFrequencyId,followupProvisoDonbyId:value.doneById?value.doneById:"",consultFollowupProvisoId:value.consultFollowupProvisoId,nextDueDateVetting:value.followupdate,othrInvstgtnId:value.othrInvstgtnId?value.othrInvstgtnId:"",status:value.status};$scope.followupProvisoList.push(fpObj)}),$scope.macList=[],$scope.isMacEntered=!0,$scope.validateMacMsg="",angular.forEach($scope.mac,function(value,key){$scope.isClose&&(null!=value.outComeId&&""!=value.outComeId||!$scope.currentMedicalAssessment||($scope.validateMacMsg="Outcome is mandatory",$scope.isMacEntered=!1),null!=value.conclusionId&&""!=value.conclusionId||($scope.validateMacMsg="Conclusion is mandatory",$scope.isMacEntered=!1),null!=value.restrictionId&&""!=value.restrictionId||2!=value.outComeId||!$scope.currentMedicalAssessment||($scope.validateMacMsg="Restriction is mandatory",$scope.isMacEntered=!1)),$scope.macList.push({classId:value.classId,outComeId:value.outComeId,restrictionId:value.restrictionId,conclusionId:value.conclusionId})}),!!$scope.isMacEntered&&($scope.drugsDetailsTemp=$scope.drugsDetails,$scope.drugsDetails=[],angular.forEach($scope.drugsDetailsTemp,function(value,key){$scope.drugsDetails.push({dosage:value.dosage,dosageId:value.dosageId,drugName:value.drugName,frequency:value.frequency,status:value.status})}),$scope.saveCambdata={applicantId:$scope.visitDetails.applicantId,consultId:$scope.visitDetails.visitId,summeryNotes:$scope.summeryNotesdata,followupPlan:$scope.followupPlandata,instructionForDME:$scope.instructionsforDmedata,diagnosisList:$scope.diganosisTableData,drugList:$scope.drugsDetails,macList:$scope.macList,operationalProvisoList:$scope.operationProvisoTableData,followupProvisoList:$scope.followupProvisoList,changedYn:$scope.currentMedicalAssessment?"Y":"N",isClose:$scope.isClose?"Y":"N"},APIS.GET_CAMB_SAVE.data=$scope.saveCambdata,void DataManager.sendRestRequest(null,APIS.GET_CAMB_SAVE,function(response){response.success?$scope.isClose?(ModalService.openAlert("alert","success ","Analysis details saved successfully","null","null"),$location.url("/camb-worklistsetup")):ModalService.openAlert("alert","success ","Analysis details saved successfully","null","null",function(){location.reload()}):$log.error("NOT SAVED: "+response.errorMessage)},$scope.userConfig.token)))},$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},$scope.cambDMF=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitDetails.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){response.success?($scope.val=response.dataBean,null!=$scope.val?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitDetails};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})}):$scope.dmfDoAction()):$log.error(response.errorMessage)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.getUploadedDocument=function(){APIS.CAMB_GETGRIDATTACHMENT.data={applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.CAMB_GETGRIDATTACHMENT,function(response){response.success?response.dataBean&&($scope.isDocumentUploaded=response.dataBean.length>0):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.close=function(){$scope.isCloseConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to close ?",$scope,"worklist",function(){}),$scope.$on("worklistOk",function(){$scope.isCloseConfirmed||($scope.isClose=!0,$scope.cambSave(),$scope.isCloseConfirmed=!0)}),$scope.$on("worklistcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.dmfdetails=function(){sessionStorage.setItem("viewdmfapplicantid",JSON.stringify($scope.visitDetails.applicantId)),$window.open("#/viewdmf")},$scope.disablefit=function(id){2==id?$scope.fitbutton=!1:$scope.fitbutton=!0},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("AnalysisDiagnosisModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","$timeout","diagnosisModalParam","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,$timeout,diagnosisModalParam,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.diagnosisGridList=[],$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.init=function(){$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup2={opened:!1},$scope.filterDiagnosis=!1,$scope.diagnosisCheck="1",angular.forEach(diagnosisModalParam,function(value,key){value.old=1;var diagObj={applicationdiagnosisID:value.applicationdiagnosisID,description:value.description,detectedDate:value.detectedDate,diagnosisId:value.diagnosisId,icdCode:value.icdCode,old:value.old,status:value.status,tagYN:value.tagYN};$scope.diagnosisGridList.push(diagObj)}),$scope.diagnosisGridList.length>0&&("Y"==$scope.diagnosisGridList[0].tagYN?$scope.tagYN=!1:"N"==$scope.diagnosisGridList[0].tagYN&&($scope.tagYN=!0)),$scope.checkApplicantDiagnosis()},$scope.$watch("filterDiagnosis",function(newValue,oldValue){$scope.filterDiagnosis?$scope.diagnosisCheck=$scope.visitDetails.applicantId:$scope.diagnosisCheck="-1"}),$scope.checkApplicantDiagnosis=function(){$scope.userInputData=[],APIS.CAMB_GET_DIAGNOSIS_DROPDOWN.data={code:"",applicantId:$scope.visitDetails.applicantId},DataManager.sendRestRequest(null,APIS.CAMB_GET_DIAGNOSIS_DROPDOWN,function(response){response.success?$scope.userInputData=response.dataBean:$log.error("CAMB_GET_DIAGNOSIS_DROPDOWN "+response)},$scope.userConfig.token)},$scope.diagnosisAutocomplete=function(userInputString){var userInputData=[];return APIS.CAMB_GET_DIAGNOSIS_DROPDOWN.data={code:userInputString,applicantId:$scope.diagnosisCheck},DataManager.sendRestRequest(null,APIS.CAMB_GET_DIAGNOSIS_DROPDOWN,function(response){response.success?userInputData=response.dataBean:$log.error("CAMB_GET_DIAGNOSIS_DROPDOWN "+response)},$scope.userConfig.token),$timeout(function(){return{data:userInputData}},5e3)},$scope.selectedDiagnosis=function(selectedObj){selectedObj&&($scope.currentObj=null,$scope.currentObj={applicationdiagnosisID:selectedObj.originalObject.applicant_diagnosis_id,diagnosisId:selectedObj.originalObject.dr_icd_id,description:selectedObj.originalObject.description,detectedDate:"",icdCode:selectedObj.originalObject.code,old:"",status:3,opened:!1},hasId(selectedObj.originalObject.code)?ModalService.openAlert("alert","DMF","Diagnosis already exist","null","null"):$scope.diagnosisGridList.push($scope.currentObj))};var hasId=function(selectedIcdCode){var i=null,flag=!1;for(i=0;$scope.diagnosisGridList.length>i;i+=1)$scope.diagnosisGridList[i].icdCode===selectedIcdCode&&(flag=!0);return flag};$scope.removeDiagnosisRecord=function(index){$scope.warningConfirmed=!1,$scope.removeDiagIndex=index,ModalService.openAlert("confirm","warning","Are you sure want to delete?",$scope,"diagdel",function(){$scope.$on("diagdelOk",function(){0==$scope.warningConfirmed&&(1==$scope.diagnosisGridList[$scope.removeDiagIndex].status?$scope.diagnosisGridList[$scope.removeDiagIndex].status=2:$scope.diagnosisGridList.splice($scope.removeDiagIndex,1)),$scope.warningConfirmed=!0}),$scope.$on("diagdelcancel",function(){$uibModalInstance.closed})})},$scope.addDiagnosis=function(){return $scope.frmSubmitted=!0,$scope.form.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,angular.forEach($scope.diagnosisGridList,function(value,key){delete value.opened,1!=value.old?(value.detectedDate=value.old,delete value.old):delete value.old}),void $uibModalInstance.close($scope.diagnosisGridList))},$scope.open2=function($event,data){$event.preventDefault(),$event.stopPropagation(),data.opened=!0},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app").controller("AnalysisDMFModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","modalParam","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,modalParam,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.roleid=$scope.userConfig.userFacilities[0].roles[0].roleId,$scope.rolename=$scope.userConfig.userFacilities[0].roles[0].roleName,$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.dmfVisit={intitiatedby:$scope.visitDetails.visitId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.visitDetails.applicantId,initatedRole:$scope.roleid},$scope.fromdatepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0]},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.dmfAction=function(){return $scope.frmSubmitted=!0,$scope.frmDMFDetails.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,void(""==$scope.dmfVisit.treatmentplan&&""==$scope.dmfVisit.dateofoccurence||($scope.dmfVisit.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),APIS.DMF_POPUP.data=$scope.dmfVisit,DataManager.sendRestRequest(null,APIS.DMF_POPUP,function(response){response.success?(ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.close()):$log.error("DMF Model: "+response.errorMessages)},$scope.userConfig.token))))},$scope.$on("dmfcancel",function(){$uibModalInstance.dismiss("cancel")}),$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app").controller("AddOperationalModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","modalParam",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,modalParam){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.init=function(){$scope.seletedOperationList=[],$scope.operationGridList=modalParam},$scope.recordSelected=function(result){if($scope.seletedOperationList.indexOf(result)==-1)$scope.seletedOperationList.push(result);else{var index=$scope.seletedOperationList.indexOf(result);$scope.seletedOperationList.splice(index,1)}},$scope.addOperation=function(){$uibModalInstance.close($scope.seletedOperationList)},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app").controller("analysisReferralModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.init=function(){$scope.updateReferral=!1,$scope.referralListdata=[],$scope.specialityCombo=[],$scope.saveReferralData={},$scope.getSpecialityComboData(),$scope.getReferralList()},$scope.getSpecialityComboData=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_SPECIALITY_COMBO,function(response){response.success?$scope.specialityCombo=response.dataBean:$log.error("GET_CAMB_SPECIALITY_COMBO:"+response)},$scope.userConfig.token)},$scope.getReferralList=function(){$scope.cmbConsultId=$scope.visitDetails.visitId,APIS.GET_CAMB_PRE_REFERRAL_LIST.URL=String.prototype.format.apply(APIS.GET_CAMB_PRE_REFERRAL_LIST.tempURL,[$scope.cmbConsultId]),DataManager.sendRestRequest(null,APIS.GET_CAMB_PRE_REFERRAL_LIST,function(response){response.success?$scope.referralListdata=response.dataBean:$log.error("GET_CAMB_PRE_REFERRAL_LIST:"+response)},$scope.userConfig.token)},$scope.editReferral=function(data){$scope.updateReferral=!0,$scope.saveReferralData.specalityId=data.specalityId,$scope.saveReferralData.remarks=data.remarks,$scope.saveReferralData.consultReferralId=data.consultReferralId},$scope.saveReferral=function(saveData){var pdf=new jsPDF;saveData.remarks&&pdf.text(20,20,saveData.remarks);var pdfoutput=pdf.output();if($scope.isFrmSubmited=!0,$scope.form.$invalid)return $scope.frmInvalid=!0,!1;if($scope.frmInvalid=!1,$scope.isFrmSubmited=!1,$scope.frmInvalid=!1,$scope.updateReferral){$scope.updateReferral=!1;var sendData={consultReferralId:saveData.consultReferralId,cmbConsultId:$scope.visitDetails.visitId,specalityId:saveData.specalityId,remarks:saveData.remarks,remarksFile:window.btoa(pdfoutput)};APIS.POST_CAMB_SAVE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_SAVE_REFERRAL,function(response){response.success?($scope.specialityCombo=response.dataBean,$scope.getReferralList(),$scope.getSpecialityComboData(),$scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks=""):$log.error("POST_CAMB_SAVE_REFERRAL:"+response)},$scope.userConfig.token)}else{var sendData={consultReferralId:0,cmbConsultId:$scope.visitDetails.visitId,specalityId:saveData.specalityId,remarks:saveData.remarks,remarksFile:window.btoa(pdfoutput)};APIS.POST_CAMB_SAVE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_SAVE_REFERRAL,function(response){response.success?($scope.specialityCombo=response.dataBean,$scope.getReferralList(),$scope.getSpecialityComboData(),$scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks=""):$log.error("POST_CAMB_SAVE_REFERRAL:"+response)},$scope.userConfig.token)}},$scope.deleteReferral=function(data){var sendData={consultReferralId:data.consultReferralId,cmbConsultId:$scope.visitDetails.visitId};APIS.POST_CAMB_DELETE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_DELETE_REFERRAL,function(response){response.success?($scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks="",$scope.getReferralList()):$log.error("POST_CAMB_DELETE_REFERRAL:"+response)},$scope.userConfig.token)},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app").controller("AnalysisDocumentModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visitInfo.visitId=parseInt($scope.visitInfo.visitId),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.rolename=$scope.currentRole.roleName,$scope.init=function(){$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup2={opened:!1},$scope.recordTypeComb=[],$scope.documentTypeCombo=[],$scope.subTypeCombo=[],$scope.subtype="",$scope.filterData={recordTypeId:null,doctypeId:null,subtypeId:null},$scope.filterData1={doctypeId:null,subtypeId:null},$scope.uploadData={document:"",filename:" ",doctypeId:null,subtypeId:null,clinicId:1,reportdate:"",createdby:1,applicantId:$scope.visitInfo.applicantId},$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.perPage=20,$scope.filteredItems=[],$scope.fileUploadGridList=[],$scope.dataBind()},$scope.dataBind=function(){
$scope.getRecordTypeCombo(),$scope.getDocumentTypeCombo(),$scope.getUploadedGridData(),$scope.getDocumentTypeCombo1()},$scope.getRecordTypeCombo=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_RECORD_TYPE_COMBO,function(response){response.success?$scope.recordTypeComb=response.dataBean:$log.error("GET_CAMB_RECORD_TYPE_COMBO:"+response)},$scope.userConfig.token)},$scope.getDocumentTypeCombo=function(){DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success?$scope.documentTypeCombo=response.dataBean:$log.error("LME_ATTACHMENT_DOC_TYPE:"+response)},$scope.userConfig.token)},$scope.attachsubdocChange=function(){$scope.subtype="",$scope.noResults=!1,$scope.getSubTypeCombo()},$scope.getSubTypeCombo=function(){$scope.subTypeCombo=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.filterData.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?$scope.subTypeCombo=response.dataBean:$log.error("LME_ATTACHMENT_DOC_SUBTYPE:"+response)},$scope.userConfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.getDocumentTypeCombo1=function(){DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success?($scope.documentTypeCombo=response.dataBean,console.log("documentType",$scope.documentTypeCombo)):$log.error("LME_ATTACHMENT_DOC_TYPE:"+response)},$scope.userConfig.token)},$scope.attachsubdocChange1=function(){$scope.subtype1="",$scope.noResults=!1,$scope.getSubTypeCombo1()},$scope.getSubTypeCombo1=function(){$scope.subTypeCombo1=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.filterData1.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?($scope.subTypeCombo1=response.dataBean,console.log("subTypeCombo1",$scope.subTypeCombo1)):$log.error("LME_ATTACHMENT_DOC_SUBTYPE:"+response)},$scope.userConfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.showContent=function($fileContent,index){var dataParts=$fileContent.split("base64,");$scope.content=dataParts[1],$scope.uploadData.document=$scope.content},$scope.filterDocumentData=function(filterData){$scope.filterData.subtypeId=$.grep($scope.subTypeCombo,function(e){return e.description==$scope.subtype})[0].document_sub_type_id;var sendData={referenceType:$scope.visitInfo.applicantDetails.v_type,referenceId:$scope.visitInfo.visitId,applicantId:$scope.visitInfo.applicantId,recordTypeId:filterData.recordTypeId,documentTypeId:$scope.filterData.doctypeId,documentSubTypeId:$scope.filterData.subtypeId};APIS.GET_CAMB_FILTER_SEARCH.data=sendData,DataManager.sendRestRequest(null,APIS.GET_CAMB_FILTER_SEARCH,function(response){response.success?$scope.filteredItems=response.dataBean:$log.error("GET_CAMB_FILTER_SEARCH:"+response)},$scope.userConfig.token)},$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?($scope.fileUploadGridList=response.dataBean,$scope.isDocumentUploaded=response.dataBean.length>0):$log.error("LME_ATTACH_DOC_GRID "+response)},$scope.userConfig.token)},$scope.clickToApprove=function(data){$scope.approveConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure want to Approve?",$scope,"docAppr",function(){}),$scope.$on("docApprOk",function(){0==$scope.approveConfirmed&&($scope.sendData={doctypeId:data,approvedYn:"y",createdby:$scope.userInfo.personId},APIS.CAMB_APPROVE_DOC.data=$scope.sendData,DataManager.sendRestRequest(null,APIS.CAMB_APPROVE_DOC,function(response){response.success?(ModalService.openAlert("alert","Success","Approved successfully","null","null"),$scope.getUploadedGridData()):$log.error("GET_CAMB_FILTER_SEARCH:"+response)},$scope.userConfig.token)),$scope.approveConfirmed=!0}),$scope.$on("docApprcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.deleteUploadedGridRecord=function(documentID){ModalService.openAlert("confirm","warning","Are you sure want to delete the record",$scope,"doccumetDelete",function(){}),$scope.$on("doccumetDeleteOk",function(){$scope.documentId=documentID,APIS.DELETE_CAMB_UPLOAD_DOC.URL=String.prototype.format.apply(APIS.DELETE_CAMB_UPLOAD_DOC.tempURL,[$scope.documentId]),DataManager.sendRestRequest(null,APIS.DELETE_CAMB_UPLOAD_DOC,function(response){response.success?$scope.getUploadedGridData():$log.error("DELETE_CAMB_UPLOAD_DOC "+response)},$scope.userConfig.token)}),$scope.$on("doccumetDeletecancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.closeattachdoc=function(){$scope.fileUploadGridList.length>0?$scope.$parent.$broadcast("isDocUploaded",{isUploded:!0}):$scope.$parent.$broadcast("isDocUploaded",{isUploded:!1}),$uibModalInstance.dismiss("cancel")},$scope.documentUpload=function(uploadData,pdfconvertfile){var filepath=document.getElementById("filename").value,filetype=filepath.substr(filepath.lastIndexOf(".")+1);if("pdf"!=filetype)return ModalService.openAlert("alert","Upload Fail","Only Pdf files can be uploaded","null","null"),!1;if($scope.frmSubmitted=!0,$scope.form.$invalid)return $scope.frmInvalid=!0,!1;if($scope.frmInvalid=!1,$scope.frmSubmitted=!1,null==pdfconvertfile||""==pdfconvertfile||void 0==pdfconvertfile)ModalService.openAlert("alert","Alert","Attach the File","null","null");else{$scope.filterData1.subtypeId=$.grep($scope.subTypeCombo1,function(e){return e.description==$scope.subtype1})[0].document_sub_type_id,$scope.attachdocumentsdescription=$.grep($scope.documentTypeCombo,function(e){return e.document_type_id==$scope.filterData1.doctypeId})[0].code,$scope.dateconvert=$filter("date")(new Date($scope.uploadData.reportdate),"yyyy-MM-dd"),$scope.filenameformat=$scope.visitInfo.applicantDetails.idNo+"_"+$scope.subtype+"_"+$scope.dateconvert;var filepath=document.getElementById("filename").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),$scope.uplddata={applicantId:$scope.visitInfo.applicantId,clinicId:1,createdby:$scope.userConfig.userSeqId,doctypeId:$scope.filterData1.doctypeId,document:pdfconvertfile,filename:filename,referenceId:$scope.visitInfo.visitId,referencetype:"CONSULT",reportdate:$scope.dateconvert,subtypeId:$scope.filterData1.subtypeId,roleName:$scope.rolename,doctypeDesc:$scope.attachdocumentsdescription},console.log($scope.uplddata),APIS.LME_SAVE_ATTACHMENT_DETAILS.data=$scope.uplddata,DataManager.sendRestRequest(null,APIS.LME_SAVE_ATTACHMENT_DETAILS,function(response){response.success?($scope.getUploadedGridData(),ModalService.openAlert("alert","success","Document Uploaded Successfully","null","null",function(){$("#fileName").val("")})):($log.error("GET_CAMB_FILTER_SEARCH:"+response),ModalService.openAlert("alert","Upload Fail","Only Pdf files can be uploaded","null","null"))},$scope.userConfig.token)}},$scope.getFileName=function(){var filepath=document.getElementById("fileName").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);return 0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),filename},$scope.getDocContentToView=function(documentId){APIS.CAMB_VIEW_DOCUMENT.URL=String.prototype.format.apply(APIS.CAMB_VIEW_DOCUMENT.tempURL,[documentId]),DataManager.sendRestRequest(null,APIS.CAMB_VIEW_DOCUMENT,function(response){response.success?$scope.getViewDocument(response.dataBean.file):$log.error("DELETE_CAMB_UPLOAD_DOC "+response)},$scope.userConfig.token)},$scope.tagdocuments=function(itemData){console.log("data",itemData),APIS.SAVE_TAG_BUTTON.data={documentsId:itemData},DataManager.sendRestRequest(null,APIS.SAVE_TAG_BUTTON,function(response){response.success?console.log(response.dataBean):$log.error("SAVE_TAG_BUTTON "+response)},$scope.userConfig.token)},$scope.getViewDocument=function(documentdata){var content=documentdata,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&$window.open("data:application/pdf;base64,"+documentdata,"_blank","location=no,enableviewportscale=yes")},$scope.open2=function(){$scope.popup2.opened=!0},$scope.init()}]),angular.module("app.profile").directive("onReadFile",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsDataURL((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}),angular.module("app").controller("WorklistCompletedCtrl",["$scope","$state","APIS","$location","ModalService","DataManager","$window","$filter",function($scope,$state,APIS,$location,ModalService,DataManager,$window,$filter){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.dataBind(),$scope.loadcompleted(),$scope.wrktypes=[{type:"CONSULT",type_id:"CONSULT"},{type:"CR(LMAB)",type_id:"CR_LMAB"},{type:"CR(post-LMAB)",type_id:"CR_LMAB_POST"},{type:"CR(AR Proviso)",type_id:"CR_AR_PROVISO"},{type:"CR(Ad-Hoc)",type_id:"CR_ADHOC"},{type:"CR(DMF Clearance)",type_id:"CR_AR_DMF"},{type:"Special Board(SB)",type_id:"SB"}],$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1},$scope.tabledata={status_page_code:"CAMBCOMPLETED",nrifinpassport:"",applicantname:"",licence_dtl:"",v_type:""},$scope.dataBind=function(){$scope.camb_filter(),$scope.keys={idNo:"",applicantname:""}},$scope.camb_filter=function(){var pagecode="CAMBCOMPLETED";APIS.CAMB_TYEP_FILTER.URL="camb/loadcrtypes/"+pagecode,DataManager.sendRestRequest(null,APIS.CAMB_TYEP_FILTER,function(response){response.success?($scope.filterData=response.dataBean,console.log($scope.filterData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.filter=function(){$scope.searchKeys=$scope.keys},$scope.order=function(rowName){$scope.row!==rowName&&($scope.row=rowName,$scope.completedData=$filter("orderBy")($scope.completedData,rowName))},$scope.select=function(page,data){data||(data=$scope.completedData);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.completedData=$filter("orderBy")($scope.completedData,rowName),$scope.onOrderChange()},$scope.loadcompleted=function(){APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.completedData=response.dataBean,console.log($scope.completedData),$scope.$emit("completedCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.completedData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.loadcompletesearch=function(){return $scope.tabledata.nrifinpassport||$scope.tabledata.applicantname||$scope.tabledata.licence_dtl||$scope.tabledata.v_type?(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,void DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){if(response.success){if(!(response.dataBean.length>0))return ModalService.openAlert("alert","Completed ","No data found for the search/Filter criteria ","null","null"),!1;$scope.completedData=response.dataBean,$scope.select($scope.currentPage,$scope.completedData)}},$scope.uconfig.token)):(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.completedData=response.dataBean,$scope.select($scope.currentPage,$scope.completedData),ModalService.openAlert("alert","Completed","Please enter any field","null","null")):console.log(response.errorMessages)},$scope.uconfig.token),!1)},$scope.loadCompletedlists=function(){APIS.CAMB_WORKLIST_LISTS.data={status_page_code:"CAMBCOMPLETED",role_code:$scope.rolename},DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_LISTS,function(response){response.success?$scope.CompletedList=response.dataBean:console.log(response.errorMessages)},$scope.uconfig.token)},$scope.viewPDF=function(completedData){switch($scope.doAction(completedData),$scope.visitDetails.visitType){case"CR_LMAB_POST":$window.open("#/crlmabpostfullreport?viewPDF=Y");break;case"CR_LMAB":$window.open("#/crlmabfullreport?viewPDF=Y");break;case"CR_ADHOC":$window.open("#/cradhocfullreport?viewPDF=Y");break;case"CR_AR":APIS.CAMB_COMMON_FULLREPORT.data={applicantId:$scope.visitDetails.applicantId,referenceType:"CR_AR",visitId:$scope.visitDetails.visitId,macIds:["1","2","3"],processstatuspageId:$scope.visitDetails.applicantDetails.processStatusPageId,processstatuspageCode:$scope.visitDetails.applicantDetails.processStatusPageCode},DataManager.sendRestRequest(null,APIS.CAMB_COMMON_FULLREPORT,function(response){if(response.success)if(null!=response.dataBean.pdfFile){var at=window.atob(response.dataBean.pdfFile),unes=unescape(at),innerContents=decodeURIComponent(unes),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()}else ModalService.openAlert("alert","Warning","PDF not available.","null","null");else $log.error("full report error: "+response.errorMessages)},$scope.uconfig.token);break;case"CMB_CONSULT":$window.open("#/viewProcessSummary");break;default:APIS.CAMB_COMMON_FULLREPORT.data={applicantId:$scope.visitDetails.applicantId,referenceType:"CR_AR",visitId:$scope.visitDetails.visitId,macIds:["1","2","3"],processstatuspageId:$scope.visitDetails.applicantDetails.processStatusPageId,processstatuspageCode:$scope.visitDetails.applicantDetails.processStatusPageCode},DataManager.sendRestRequest(null,APIS.CAMB_COMMON_FULLREPORT,function(response){if(response.success)if(null!=response.dataBean.pdfFile){var at=window.atob(response.dataBean.pdfFile),unes=unescape(at),innerContents=decodeURIComponent(unes),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()}else ModalService.openAlert("alert","Warning","PDF not available.","null","null");else $log.error("full report error: "+response.errorMessages)},$scope.uconfig.token)}},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visit_id,visitType:tablerecord.v_type,applicantId:tablerecord.applicant_id,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.doAction=function(completedData){$scope.visitDetails={},$scope.visitDetails={visitId:completedData.visit_id,visitType:completedData.v_type,applicantId:completedData.applicant_id,applicantuserId:completedData.applicantuserId,applicantDetails:completedData},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails))},$scope.init()}]),angular.module("app.camb").controller("WorklistCtrl",["$scope","$state","APIS","$location","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter",function($scope,$state,APIS,$location,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userName=$scope.userRegDetails.firstName+" "+$scope.userRegDetails.lastName,$scope.tabledatatypwrk=null,$scope.init=function(){$scope.wrktypes=[{type:"CONSULT",type_id:"CONSULT"},{type:"CR(LMAB)",type_id:"CR_LMAB"},{type:"CR(post-LMAB)",type_id:"CR_LMAB_POST"},{type:"CR(AR Proviso)",type_id:"CR_AR_PROVISO"},{type:"CR(Ad-Hoc)",type_id:"CR_ADHOC"},{type:"CR(DMF Clearance)",type_id:"CR_AR_DMF"},{type:"Special Board(SB)",type_id:"SB"}],$scope.tabledata={status_page_code:"CAMBWORKLIST",nrifinpassport:"",applicantname:"",licence_dtl:"",v_type:""},$scope.worklistData=[],$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.$on("doctorStatus",function(event,args){$scope.loadWorklist()}),$scope.dataBind()},$scope.dataBind=function(){$scope.camb_filter(),$scope.worklistPages=[],$scope.worklistData=[],$scope.loadWorklist(),$scope.Datefunctioncon()},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.camb_filter=function(){var pagecode="CAMBWORKLIST";APIS.CAMB_TYEP_FILTER.URL="camb/loadcrtypes/"+pagecode,DataManager.sendRestRequest(null,APIS.CAMB_TYEP_FILTER,function(response){response.success?($scope.filterData=response.dataBean,console.log($scope.filterData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.select=function(page,data){data||(data=$scope.worklistData);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.worklistData=$filter("orderBy")($scope.worklistData,rowName),$scope.onOrderChange()},$scope.doAction=function(actionParam,worklistData,cmbid){$scope.visitDetails={},$scope.visitDetails={visitId:worklistData.visit_id,visitType:worklistData.v_type,applicantId:worklistData.applicant_id,applicantuserId:worklistData.applicantuserId,applicantDetails:worklistData},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$("#cmbWorklistCmb").val(cmbid),$scope.triggerAction(actionParam,worklistData)},$scope.triggerAction=function(actionParam,worklistData){switch($scope.Vtype=worklistData.v_type,$scope.swichModel="",actionParam){case"Assign":$scope.triggerAssign(worklistData);break;case"View":break;case"Transfer":$scope.swichModel="Wrktlistransfer";break;case"DMF":return $scope.cambDMF(worklistData),!1;case"Abort":$scope.swichModel="cambabort";break;case"Commence":return APIS.GET_CAMB_COMMENCE.data={v_type:worklistData.v_type,visit_id:worklistData.visit_id},DataManager.sendRestRequest(null,APIS.GET_CAMB_COMMENCE,function(response){response.success?("CMB_CONSULT"==$scope.Vtype&&$state.go("cambMeasurement"),"CR_ADHOC"==$scope.Vtype&&$state.go("cambCrAdhoc"),"CR_LMAB_POST"==$scope.Vtype&&$state.go("camblambpost"),"CR_LMAB"==$scope.Vtype&&$state.go("camblamb"),"CR_AR"==$scope.Vtype&&$state.go("cambcrar")):$log.error("Commence: "+response.errorMessages)},$scope.uconfig.token),!1}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionWorklistctrl",resolve:{modalParam:function(){var temp={applicantParam:worklistData};return temp}}})},$scope.triggerAssign=function(worklistData){$scope.Vtype=worklistData.v_type,"CMB_CONSULT"!=$scope.Vtype?$uibModal.open({animation:!0,templateUrl:"assign",size:"lg",controller:"CreateassignCtrl",backdrop:"static",resolve:{modalParam:function(){var datas={applicantdeteils:worklistData};return datas}}}).result.then(function(){$scope.loadWorklist()}):$uibModal.open({animation:!0,templateUrl:"wrkcreateconsult",size:"md",controller:"WrkcreateconsultCtrl",backdrop:"static",resolve:{modalParam:function(){var datas={applicantParam:worklistData};return datas}}}).result.then(function(){$scope.loadWorklist()})},$scope.cambDMF=function(worklistData){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitDetails.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){response.success?($scope.val=response.dataBean,null!=$scope.val?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitDetails};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})}):$scope.dmfDoAction()):$log.error(response.errorMessage)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.dmfDoAction=function(worklistData){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},$scope.loadWorklist=function(){APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.worklistData=response.dataBean,console.log($scope.worklistData),$scope.loadWorklistActionlists(),$scope.$emit("worklistCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.worklistData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.loadWorklistSearch=function(){return $scope.tabledata.nrifinpassport||$scope.tabledata.applicantname||$scope.tabledata.licence_dtl||$scope.tabledata.v_type?(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,void DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){if(response.success){if(!(response.dataBean.length>0))return ModalService.openAlert("alert","Worklist ","No data found for the search/Filter criteria ","null","null"),!1;$scope.worklistData=response.dataBean,$scope.loadWorklistActionlists(),$scope.select($scope.currentPage,$scope.worklistData)}},$scope.uconfig.token)):(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.worklistData=response.dataBean,$scope.loadWorklistActionlists(),$scope.select($scope.currentPage,$scope.worklistData),ModalService.openAlert("alert","Worklist","Please enter any field","null","null")):console.log(response.errorMessages)},$scope.uconfig.token),!1)},$scope.loadWorklistActionlists=function(){APIS.CAMB_WORKLIST_LISTS.data={status_page_code:"CAMBWORKLIST",role_code:$scope.roleid},DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_LISTS,function(response){response.success?angular.forEach($scope.worklistData,function(value,key){$scope.worklistData[key].listOfActions=[],angular.forEach(response.dataBean.listofActions,function(acktionsvalue,acktionskey){$scope.worklistData[key].listOfActions.push({ActionName:acktionsvalue.ActionName,Code:acktionsvalue.Code})}),""==$scope.worklistData[key].doctor_name&&($scope.worklistData[key].listOfActions.splice($scope.worklistData[key].listOfActions.map(function(e){return e.Code}).indexOf("COMMENC"),1),$scope.worklistData[key].listOfActions.splice($scope.worklistData[key].listOfActions.map(function(e){return e.Code}).indexOf("TRANSFR"),1),$scope.worklistData[key].listOfActions.splice($scope.worklistData[key].listOfActions.map(function(e){return e.Code}).indexOf("ABORT"),1)),""!=$scope.worklistData[key].doctor_name&&$scope.worklistData[key].listOfActions.splice($scope.worklistData[key].listOfActions.map(function(e){return e.Code}).indexOf("ASSIGN"),1),"CR_AR"!=$scope.worklistData[key].v_type&&"CR_LMAB_POST"!=$scope.worklistData[key].v_type&&"CR_LMAB"!=$scope.worklistData[key].v_type||$scope.worklistData[key].listOfActions.splice($scope.worklistData[key].listOfActions.map(function(e){return e.Code}).indexOf("ABORT"),1)}):$log.error(response.errorMessages)},$scope.uconfig.token)},$scope.filter=function(){return $scope.worklistData=$filter("filter")($scope.worklistData,$scope.keys),$scope.worklistData},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visit_id,visitType:tablerecord.v_type,applicantId:tablerecord.applicant_id,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.Datefunctioncon=function(){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}$scope.dateOptions={dateDisabled:disabled,formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpenCon=function(){$scope.datepickerPopup.opened=!0}},$scope.init()}]),angular.module("app").controller("WorklistExpiredCtrl",["$scope","$state","APIS","$location","DataManager","$window","$filter","ModalService",function($scope,$state,APIS,$location,DataManager,$window,$filter,ModalService){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.wrktypes=[{type:"CONSULT",type_id:"CONSULT"},{type:"CR(LMAB)",type_id:"CR_LMAB"},{type:"CR(post-LMAB)",type_id:"CR_LMAB_POST"},{type:"CR(AR Proviso)",type_id:"CR_AR_PROVISO"},{type:"CR(Ad-Hoc)",type_id:"CR_ADHOC"},{type:"CR(DMF Clearance)",type_id:"CR_AR_DMF"},{type:"Special Board(SB)",type_id:"SB"}],$scope.tabledata={status_page_code:"CAMBEXPIRED",nrifinpassport:"",applicantname:"",licence_dtl:"",v_type:""},$scope.keys={idNo:"",applicantname:""},$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.loadexpired(),$scope.camb_filter()},$scope.camb_filter=function(){var pagecode="CAMBEXPIRED";APIS.CAMB_TYEP_FILTER.URL="camb/loadcrtypes/"+pagecode,DataManager.sendRestRequest(null,APIS.CAMB_TYEP_FILTER,function(response){response.success?($scope.filterData=response.dataBean,console.log($scope.filterData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.select=function(page,data){data||(data=$scope.expiredData);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.expiredData=$filter("orderBy")($scope.expiredData,rowName),$scope.onOrderChange()},$scope.loadexpired=function(){APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.expiredData=response.dataBean,$scope.$emit("expiredCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.expiredData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.loadexpiredSearch=function(){return $scope.tabledata.nrifinpassport||$scope.tabledata.applicantname||$scope.tabledata.licence_dtl||$scope.tabledata.v_type?(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,void DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){if(response.success){if(!(response.dataBean.length>0))return ModalService.openAlert("alert","Expired ","No data found for the search/Filter criteria ","null","null"),!1;$scope.expiredData=response.dataBean,$scope.select($scope.currentPage,$scope.expiredData)}else console.log(response.errorMessages)},$scope.uconfig.token)):(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.expiredData=response.dataBean,$scope.select($scope.currentPage,$scope.expiredData),ModalService.openAlert("alert","Expired","Please enter any field","null","null")):console.log(response.errorMessages)},$scope.uconfig.token),!1)},$scope.viewPDF=function(expiredData){switch($scope.doAction(expiredData),$scope.visitDetails.visitType){case"CR_LMAB_POST":$window.open("#/crlmabpostfullreport?viewPDF=Y");break;case"CR_LMAB":$window.open("#/crlmabfullreport?viewPDF=Y");break;case"CR_ADHOC":$window.open("#/cradhocfullreport?viewPDF=Y");break;case"CR_AR":$window.open("#/crarfullreport?viewPDF=Y");break;case"CMB_CONSULT":$window.open("#/viewProcessSummary");break;default:$window.open("#/crarfullreport?viewPDF=Y")}},$scope.doAction=function(expiredData){$scope.visitDetails={},$scope.visitDetails={visitId:expiredData.visit_id,visitType:expiredData.v_type,applicantId:expiredData.applicant_id,applicantuserId:expiredData.applicantuserId,applicantDetails:expiredData},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails))},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visit_id,visitType:tablerecord.v_type,
applicantId:tablerecord.applicant_id,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.init()}]),angular.module("app").controller("WorklistFollowupCtrl",["$scope","$state","APIS","$location","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter",function($scope,$state,APIS,$location,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userName=$scope.userRegDetails.firstName+" "+$scope.userRegDetails.lastName,$scope.wrktypes=[{type:"CONSULT",type_id:"CONSULT"},{type:"CR(LMAB)",type_id:"CR_LMAB"},{type:"CR(post-LMAB)",type_id:"CR_LMAB_POST"},{type:"CR(AR Proviso)",type_id:"CR_AR_PROVISO"},{type:"CR(Ad-Hoc)",type_id:"CR_ADHOC"},{type:"CR(DMF Clearance)",type_id:"CR_AR_DMF"},{type:"Special Board(SB)",type_id:"SB"}],$scope.tabledata={status_page_code:"CAMBFOLLOWUP",nrifinpassport:"",applicantname:"",licence_dtl:"",v_type:""},$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.fromDate=null,$scope.fromdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.fromdatepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dataBind()},$scope.dataBind=function(){$scope.loadfollowup(),$scope.loadFollowuplists(),$scope.camb_filter()},$scope.camb_filter=function(){var pagecode="CAMBFOLLOWUP";APIS.CAMB_TYEP_FILTER.URL="camb/loadcrtypes/"+pagecode,DataManager.sendRestRequest(null,APIS.CAMB_TYEP_FILTER,function(response){response.success?($scope.filterData=response.dataBean,console.log($scope.filterData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.doAction=function(actionParam,followUpData){followUpData.currentAction=actionParam,$scope.visitDetails={},$scope.visitDetails={visitId:followUpData.visit_id,visitType:followUpData.v_type,applicantId:followUpData.applicant_id,applicantuserId:followUpData.applicantuserId,applicantDetails:followUpData},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$scope.triggerAction(actionParam,followUpData)},$scope.triggerAction=function(actionParam,followUpData){switch($scope.Vtype=followUpData.v_type,$scope.swichModel="",actionParam){case"View":$scope.typeRedirect(followUpData);break;case"Transfer":$scope.swichModel="Wrktlistransfer";break;case"DMF":$scope.cambDMF(followUpData);break;case"Resume":return $scope.typeRedirect(followUpData),!1;case"Abort":$scope.swichModel="";case"Update":return $state.go("cambMeasurement"),!1}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionWorklistctrl",resolve:{modalParam:function(){var temp={applicantParam:followUpData};return temp}}})},$scope.cambDMF=function(followUpData){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitDetails.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){response.success?($scope.val=response.dataBean,null!=$scope.val?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitDetails};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})}):$scope.dmfDoAction()):$log.error(response.errorMessage)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.dmfDoAction=function(followUpData){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},$scope.typeRedirect=function(followUpData){APIS.CAMB_WORKLIST_RESUME.data={type:followUpData.v_type,id:followUpData.visit_id,flagResume:"View"!=followUpData.currentAction},DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_RESUME,function(response){response.success?("CMB_CONSULT"==$scope.Vtype&&$state.go("cambMeasurement"),"CR_ADHOC"==$scope.Vtype&&$state.go("cambCrAdhoc"),"CR_LMAB_POST"==$scope.Vtype&&$state.go("camblambpost"),"CR_LMAB"==$scope.Vtype&&$state.go("camblamb"),"CR_AR"==$scope.Vtype&&$state.go("cambcrar")):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.filter=function(){$scope.searchKeys=$scope.keys},$scope.order=function(rowName){$scope.row!==rowName&&($scope.row=rowName,$scope.followUpData=$filter("orderBy")($scope.followUpData,rowName))},$scope.loadfollowup=function(){APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.followUpData=response.dataBean,$scope.$emit("followupCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.followUpData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.loadfollowupSearch=function(){return $scope.tabledata.nrifinpassport||$scope.tabledata.applicantname||$scope.tabledata.licence_dtl||$scope.tabledata.v_type?(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,void DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){if(response.success){if(!(response.dataBean.length>0))return ModalService.openAlert("alert","FollowUp ","No data found for the search/Filter criteria ","null","null"),$scope.mrcurrentPageStores=[],!1;$scope.followUpData=response.dataBean,$scope.$emit("followupCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.followUpData)}else console.log(response.errorMessages)},$scope.uconfig.token)):(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.followUpData=response.dataBean,$scope.select($scope.currentPage,$scope.followUpData),ModalService.openAlert("alert","FollowUp","Please enter any field","null","null")):console.log(response.errorMessages)},$scope.uconfig.token),!1)},$scope.select=function(page,data){data||(data=$scope.followUpData);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.followUpData=$filter("orderBy")($scope.followUpData,rowName),$scope.onOrderChange()},$scope.loadFollowuplists=function(){APIS.CAMB_WORKLIST_LISTS.data={status_page_code:"CAMBFOLLOWUP",role_code:$scope.roleid},DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_LISTS,function(response){response.success?$scope.followupList=response.dataBean:console.log(response.errorMessages)},$scope.uconfig.token)},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visit_id,visitType:tablerecord.v_type,applicantId:tablerecord.applicant_id,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.init()}]),angular.module("app.camb").controller("WorklistInprogressCtrl",["$scope","$state","APIS","$location","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter",function($scope,$state,APIS,$location,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userName=$scope.userRegDetails.firstName+" "+$scope.userRegDetails.lastName,$scope.tabledatatypesinp=null,$scope.wrktypes=[{type:"CONSULT",type_id:"CONSULT"},{type:"CR(LMAB)",type_id:"CR_LMAB"},{type:"CR(post-LMAB)",type_id:"CR_LMAB_POST"},{type:"CR(AR Proviso)",type_id:"CR_AR_PROVISO"},{type:"CR(Ad-Hoc)",type_id:"CR_ADHOC"},{type:"CR(DMF Clearance)",type_id:"CR_AR_DMF"},{type:"Special Board(SB)",type_id:"SB"}],$scope.tabledata={status_page_code:"CAMBINPROGRESS",nrifinpassport:"",applicantname:"",licence_dtl:"",v_type:""},$scope.CambTransremark=null,$scope.docdrlist=null,$scope.keys={idNo:"",applicantname:""},$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dataBind(),$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1},$scope.dataBind=function(){$scope.loadinprogress(),$scope.loadInprogresslists(),$scope.camb_filter()},$scope.camb_filter=function(){var pagecode="CAMBINPROGRESS";APIS.CAMB_TYEP_FILTER.URL="camb/loadcrtypes/"+pagecode,DataManager.sendRestRequest(null,APIS.CAMB_TYEP_FILTER,function(response){response.success?($scope.filterData=response.dataBean,console.log($scope.filterData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.loadinprogress=function(){APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.inProgressData=response.dataBean,console.log($scope.inProgressData),$scope.$emit("worklistInprogressCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.inProgressData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.loadinprogressSearch=function(){return $scope.tabledata.nrifinpassport||$scope.tabledata.applicantname||$scope.tabledata.licence_dtl||$scope.tabledata.v_type?(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,void DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){if(response.success){if(!(response.dataBean.length>0))return ModalService.openAlert("alert","Inprogress","No data found for the search/Filter criteria ","null","null"),!1;$scope.inProgressData=response.dataBean,$scope.$emit("worklistInprogressCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.inProgressData)}else console.log(response.errorMessages)},$scope.uconfig.token)):(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success&&($scope.inProgressData=response.dataBean,$scope.select($scope.currentPage,$scope.inProgressData),ModalService.openAlert("alert","Inprogress","Please enter any field","null","null"))},$scope.uconfig.token),!1)},$scope.select=function(page,data){data||(data=$scope.inProgressData);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.inProgressData=$filter("orderBy")($scope.inProgressData,rowName),$scope.onOrderChange()},$scope.loadInprogresslists=function(){APIS.CAMB_WORKLIST_LISTS.data={status_page_code:"CAMBINPROGRESS",role_code:$scope.roleid},DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_LISTS,function(response){response.success?$scope.inprogList=response.dataBean:console.log(response.errorMessages)},$scope.uconfig.token)},$scope.doAction=function(actionParam,inProgressData){inProgressData.currentAction=actionParam,$scope.visitDetails={},$scope.visitDetails={visitId:inProgressData.visit_id,visitType:inProgressData.v_type,applicantId:inProgressData.applicant_id,applicantuserId:inProgressData.applicantuserId,applicantDetails:inProgressData},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$scope.triggerAction(actionParam,inProgressData)},$scope.triggerAction=function(actionParam,inProgressData){switch($scope.Vtype=inProgressData.v_type,$scope.swichModel="",actionParam){case"Resume":return $scope.resumedetails={type:inProgressData.v_type,id:inProgressData.visit_id},APIS.CAMB_WORKLIST_RESUME.data=$scope.resumedetails,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_RESUME,function(response){response.success?("CMB_CONSULT"==$scope.Vtype&&$state.go("cambMeasurement"),"CR_ADHOC"==$scope.Vtype&&$state.go("cambCrAdhoc"),"CR_LMAB_POST"==$scope.Vtype&&$state.go("camblambpost"),"CR_LMAB"==$scope.Vtype&&$state.go("camblamb"),"CR_AR"==$scope.Vtype&&$state.go("cambcrar")):console.log(response.errorMessages)},$scope.uconfig.token),!1;case"View":return $scope.viewredirect(),!1;case"Transfer":$scope.swichModel="inptransfer";break;case"DMF":return $scope.cambDMF(inProgressData),!1}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionWorklistctrl",resolve:{modalParam:function(){var temp={applicantParam:inProgressData};return temp}}})},$scope.viewredirect=function(actionParam,inProgressData){"CMB_CONSULT"==$scope.Vtype&&$state.go("cambMeasurement"),"CR_ADHOC"==$scope.Vtype&&$state.go("cambCrAdhoc"),"CR_LMAB_POST"==$scope.Vtype&&$state.go("camblambpost"),"CR_LMAB"==$scope.Vtype&&$state.go("camblamb"),"CR_AR"==$scope.Vtype&&$state.go("cambcrar")},$scope.cambDMF=function(inProgressData){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitDetails.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){response.success?($scope.val=response.dataBean,null!=$scope.val?$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitDetails};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})}):$scope.dmfDoAction()):$log.error(response.errorMessage)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.dmfDoAction=function(inProgressData){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visit_id,visitType:tablerecord.v_type,applicantId:tablerecord.applicant_id,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.init()}]),angular.module("app").controller("WorklistSetupCtrl",["$scope","$state","APIS","$location",function($scope,$state,APIS,$location){$scope.init=function(){$location.search().showTab?$scope.showTab=$location.search().showTab:$scope.showTab="cambWorklist",$scope.totalRecord={cambWorklist:0,cambInprogress:0,cambFollowup:0,cambVetting:0,cambCompleted:0,cambAborted:0,cambExpired:0},$scope.dataBind()},$scope.dataBind=function(){$scope.$on("worklistCount",function(event,args){$scope.totalRecord.cambWorklist=args.count}),$scope.$on("worklistInprogressCount",function(event,args){$scope.totalRecord.cambInprogress=args.count}),$scope.$on("followupCount",function(event,args){$scope.totalRecord.cambFollowup=args.count}),$scope.$on("vettingCount",function(event,args){$scope.totalRecord.cambVetting=args.count}),$scope.$on("completedCount",function(event,args){$scope.totalRecord.cambCompleted=args.count}),$scope.$on("abortedCount",function(event,args){$scope.totalRecord.cambAborted=args.count}),$scope.$on("expiredCount",function(event,args){$scope.totalRecord.cambExpired=args.count})},$scope.init()}]),angular.module("app.camb").controller("WorklistVettingCtrl",["$scope","$state","APIS","$location","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter",function($scope,$state,APIS,$location,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter){function vettingtabs(vettingData){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/vetting/vetting_tabs.html",windowClass:"vetting-custom-class",controller:"VettingTabCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={applicantDetails:vettingData};return temp}}})}$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.init=function(){$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userName=$scope.userRegDetails.firstName+" "+$scope.userRegDetails.lastName,$scope.actions=["View","Vetting","ACKNOWLEDGE","SEND REFERRAL LETTER"],$scope.itemlistvett=null,$scope.wrktypes=[{type:"CONSULT",type_id:"CONSULT"},{type:"CR(LMAB)",type_id:"CR_LMAB"},{type:"CR(post-LMAB)",type_id:"CR_LMAB_POST"},{type:"CR(AR Proviso)",type_id:"CR_AR_PROVISO"},{type:"CR(Ad-Hoc)",type_id:"CR_ADHOC"},{type:"CR(DMF Clearance)",type_id:"CR_AR_DMF"},{type:"Special Board(SB)",type_id:"SB"}],$scope.tabledata={status_page_code:"CAMBVETTING",nrifinpassport:"",applicantname:"",licence_dtl:"",v_type:""},$scope.getsummary=null,$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.getcapelReviewHeader(),$scope.getarisReviewHeader(),$scope.capelarisclass(),$scope.loadvetting(),$scope.camb_filter(),$scope.keys={idNo:"",applicantname:""}},$scope.camb_filter=function(){var pagecode="CAMBVETTING";APIS.CAMB_TYEP_FILTER.URL="camb/loadcrtypes/"+pagecode,DataManager.sendRestRequest(null,APIS.CAMB_TYEP_FILTER,function(response){response.success?($scope.filterData=response.dataBean,console.log($scope.filterData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.doAction=function(actionParam,vettingData,tdid){$scope.visitDetails={},$scope.visitDetails={visitId:vettingData.visit_id,visitType:vettingData.v_type,applicantId:vettingData.applicant_id,applicantuserId:vettingData.applicantuserId,applicantDetails:vettingData},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),console.log($scope.visitDetails),$("#cmbWorklistCmb").val(tdid),$scope.triggerAction(actionParam,vettingData,tdid)},$scope.triggerAction=function(actionParam,vettingData,tdid){switch($scope.swichModel="",actionParam){case"View":break;case"Vetting":return vettingtabs(vettingData),!1;case"Acknowledge":var url=null,tempUrl=null;tempUrl=APIS.CAMB_VETTING_ACKNOWLEDGE.URL,url=tempUrl+"/"+$scope.visitDetails.visitType+"/"+$scope.visitDetails.visitId,APIS.CAMB_VETTING_ACKNOWLEDGE.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_VETTING_ACKNOWLEDGE,function(response){response.success?($scope.acknowledge=response.dataBean,console.log($scope.acknowledge),ModalService.openAlert("alert","success","Acknowledge Successfully",$scope,"acknowledge",function(){location.reload()})):$log.error("GetAppSummary: "+response.errorMessages)},$scope.uconfig.token),APIS.CAMB_VETTING_ACKNOWLEDGE.URL=tempUrl;break;case"Send Referral Letter":if("Y"==vettingData.referral_yn||"N"==vettingData.referralSent_yn){$scope.swichModel="send_referral_letter";break}return!1;case"View PDF":$scope.swichModel="viewPDF";break;case"Review Capel Export":($scope.classdetails.concapel.length>0||$scope.classdetails.crcapel.length>0)&&$scope.loadcapelreviewexport(vettingData,tdid);break;case"Review Aris Export":($scope.classdetails.conaris.length>0||$scope.classdetails.craris.length>0)&&$scope.loadcapelarisexport(vettingData,tdid)}if("viewPDF"!=$scope.swichModel&&""!=$scope.swichModel&&$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionWorklistctrl",windowClass:"vetting-custom-class",resolve:{modalParam:function(){var temp={applicantParam:vettingData};return temp}}}),"viewPDF"==$scope.swichModel)switch($scope.visitDetails.visitType){case"CR_LMAB_POST":$window.open("#/crlmabpostfullreport?viewPDF=Y");break;case"CR_LMAB":$window.open("#/crlmabfullreport?viewPDF=Y");break;case"CR_AR":APIS.CAMB_COMMON_FULLREPORT.data={applicantId:$scope.visitDetails.applicantId,referenceType:"CR_AR",visitId:$scope.visitDetails.visitId,macIds:["1","2","3"],processstatuspageId:$scope.visitDetails.applicantDetails.processStatusPageId,processstatuspageCode:$scope.visitDetails.applicantDetails.processStatusPageCode},DataManager.sendRestRequest(null,APIS.CAMB_COMMON_FULLREPORT,function(response){if(response.success)if(null!=response.dataBean.pdfFile){var at=window.atob(response.dataBean.pdfFile),unes=unescape(at),innerContents=decodeURIComponent(unes),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()}else ModalService.openAlert("alert","Warning","PDF not available.","null","null");else $log.error("full report error: "+response.errorMessages)},$scope.uconfig.token);break;default:APIS.CAMB_COMMON_FULLREPORT.data={applicantId:$scope.visitDetails.applicantId,referenceType:"CR_AR",visitId:$scope.visitDetails.visitId,macIds:["1","2","3"],processstatuspageId:$scope.visitDetails.applicantDetails.processStatusPageId,processstatuspageCode:$scope.visitDetails.applicantDetails.processStatusPageCode},DataManager.sendRestRequest(null,APIS.CAMB_COMMON_FULLREPORT,function(response){if(response.success)if(null!=response.dataBean.pdfFile){var at=window.atob(response.dataBean.pdfFile),unes=unescape(at),innerContents=decodeURIComponent(unes),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()}else ModalService.openAlert("alert","Warning","PDF not available.","null","null");else $log.error("full report error: "+response.errorMessages)},$scope.uconfig.token)}},$scope.loadvetting=function(){APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.vettingData=response.dataBean,console.log($scope.vettingData),angular.forEach($scope.vettingData,function(value,key){$scope.loadVettinglists(value.processStatusPageCode,key)}),$scope.$emit("vettingCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.vettingData)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.loadvettingSearch=function(){return $scope.tabledata.nrifinpassport||$scope.tabledata.applicantname||$scope.tabledata.licence_dtl||$scope.tabledata.v_type?(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,void DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){if(response.success){if(!(response.dataBean.length>0))return ModalService.openAlert("alert","Warning ","No data found for the search/Filter criteria ","null","null"),!1;$scope.vettingData=response.dataBean,angular.forEach($scope.vettingData,function(value,key){$scope.loadVettinglists(value.processStatusPageCode,key)}),$scope.$emit("vettingCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.vettingData)}else console.log(response.errorMessages)},$scope.uconfig.token)):(APIS.CAMB_WORKLIST_ALLTABS.data=$scope.tabledata,DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ALLTABS,function(response){response.success?($scope.vettingData=response.dataBean,angular.forEach($scope.vettingData,function(value,key){$scope.loadVettinglists(value.processStatusPageCode,key)}),$scope.$emit("vettingCount",{count:response.dataBean.length}),$scope.select($scope.currentPage,$scope.vettingData),ModalService.openAlert("alert","Vetting","Please enter any field","null","null")):console.log(response.errorMessages)},$scope.uconfig.token),!1)},$scope.select=function(page,data){data||(data=$scope.vettingData);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.vettingData=$filter("orderBy")($scope.vettingData,rowName),$scope.onOrderChange()},$scope.loadVettinglists=function(processStatusPageCode,key){APIS.CAMB_WORKLIST_LISTS.data={status_page_code:processStatusPageCode,role_code:$scope.roleid},DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_LISTS,function(response){response.success?($scope.vettingData[key].listOfActions=response.dataBean.listofActions,"CMB_CONSULT"==$scope.vettingData[key].v_type&&$scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("ACKN"),1),"CR_LMAB"==$scope.vettingData[key].v_type&&($scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("REVARISEXP"),1),$scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("REVCAPELEXP"),1),$scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("SNDREF"),1),$scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("VETT"),1)),"CR_AR"!=$scope.vettingData[key].v_type&&"CR_LMAB_POST"!=$scope.vettingData[key].v_type&&"SB"!=$scope.vettingData[key].v_type&&"CR_ADHOC"!=$scope.vettingData[key].v_type||($scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("ACKN"),1),$scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("SNDREF"),1)),"CMB_CONSULT"==$scope.vettingData[key].v_type&&("Y"==$scope.vettingData[key].referral_yn&&"N"==$scope.vettingData[key].referralSent_yn||$scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("SNDREF"),1)),"CMB_CONSULT"!=$scope.vettingData[key].v_type&&"CR_ADHOC"!=$scope.vettingData[key].v_type||$scope.vettingData[key].listOfActions.splice($scope.vettingData[key].listOfActions.map(function(e){return e.Code}).indexOf("VWPDF"),1)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visit_id,visitType:tablerecord.v_type,applicantId:tablerecord.applicant_id,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.getcapelReviewHeader=function(){return["Name","NRIC/Passport No./FIN","Licence No.","Mobile No","MAC","LME Type","Date of Med Exam","Assessment Outcome","Date of Expiry","Restriction","Provisio","Others","Specialist Medical Report","Additional Investigation for Medical Assessment"]},$scope.loadcapelreviewexport=function(vettingData,tdid){var genId="td"+tdid;$("#"+genId).find("button").css("display","inline"),$("#"+genId).find("p").css("display","none"),$scope.capelreviewexport(vettingData)},$scope.capelreviewexport=function(vettingData){var url=null,tempUrl=null;return console.log(vettingData),tempUrl=APIS.GET_CAMB_CAPEL_EXCEL_REPORT.URL,url=tempUrl+"/"+vettingData.v_type+"/"+vettingData.visit_id+"/"+vettingData.applicant_id,APIS.GET_CAMB_CAPEL_EXCEL_REPORT.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_CAPEL_EXCEL_REPORT,function(response){if(response.success){$scope.capelexportdata=response.dataBean,console.log($scope.capelexportdata.length),$scope.capelexport=[];for(var i=0;i<$scope.capelexportdata.length;i++)$scope.capelexport.push({Name:$scope.capelexportdata[i].Name,"NRIC/Passport No./FIN":$scope.capelexportdata[i].NRIC,"Licence No.":$scope.capelexportdata[i].LicenceNo,"Mobile No.":$scope.capelexportdata[i].MobileNo,MAC:$scope.capelexportdata[i].MAC,"LME Type":$scope.capelexportdata[i].LMEType,"Date of Med Exam":$scope.capelexportdata[i].DateofMedExam,"Assessment Outcome":$scope.capelexportdata[i].AssessmentOutcome,"Date of Expiry":$scope.capelexportdata[i].DateofExpiry,Restriction:$scope.capelexportdata[i].Restriction,Provisio:$scope.capelexportdata[i].Provisio,Others:$scope.capelexportdata[i].Others,"Specialist Medical Report":$scope.capelexportdata[i].SpecialistMedicalReport,"Additional Investigation for Medical Assessment":$scope.capelexportdata[i].AdditionalInvestigation});console.log($scope.capelexport)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_CAMB_CAPEL_EXCEL_REPORT.URL=tempUrl,$scope.capelexport},$scope.getarisReviewHeader=function(){return["Licence no","NRIC","LME Type","Licence Expiry Date","Next Audio","Next ECG","NextTMX","LME Date","Restrictions","Eye Proviso","Date of LMAB","Fitness Status"]},$scope.loadcapelarisexport=function(vettingData,tdid){
var genId="td"+tdid;$("#"+genId).find("button").css("display","none"),$("#"+genId).find("p").css("display","inline"),$scope.capelarisexport(vettingData)},$scope.capelarisexport=function(vettingData){var url=null,tempUrl=null;return tempUrl=APIS.GET_CAMB_ARIS_EXCEL_REPORT.URL,url=tempUrl+"/"+vettingData.v_type+"/"+vettingData.visit_id+"/"+vettingData.applicant_id,APIS.GET_CAMB_ARIS_EXCEL_REPORT.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_ARIS_EXCEL_REPORT,function(response){if(response.success){$scope.arisexportdata=response.dataBean,$scope.arisexport=[];for(var i=0;i<$scope.arisexportdata.length;i++)$scope.arisexport.push({"Licence No":$scope.arisexportdata[i].Licenceno,"NRIC/Passport No./FIN":$scope.arisexportdata[i].NRIC,LMEType:$scope.arisexportdata[i].LMEType,LicenceExpiryDate:$scope.arisexportdata[i].LicenceExpiryDate,NextAudio:$scope.arisexportdata[i].NextAudio,NextECG:$scope.arisexportdata[i].NextECG,NextTMX:$scope.arisexportdata[i].NextTMX,"LME Date":$scope.arisexportdata[i].LmeDate,Restrictions:$scope.arisexportdata[i].Restrictions,EyeProviso:$scope.arisexportdata[i].EyeProviso,DateofLMAB:$scope.arisexportdata[i].DateofLMAB,FitnessStatus:$scope.arisexportdata[i].FitnessStatus})}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_CAMB_ARIS_EXCEL_REPORT.URL=tempUrl,$scope.arisexport},$scope.capelarisclass=function(){DataManager.sendRestRequest(null,APIS.CAMB_CAPELANDARISDISPLAY,function(response){response.success?($scope.classdetails=response.dataBean,console.log($scope.classdetails)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app.camb").controller("cambCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","$log","ModalService",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,$log,ModalService){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userSeqId=$scope.uconfig.userSeqId,$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.uconfig||$state.go("login"),$scope.statusPage=[],$scope.nCases=[],$scope.getTransferdatas=[],$scope.transferaccept={refType:"",status:"",tranreqId:"",notificationsId:"",visitId:"",transtoId:""},$scope.dataBind()},$scope.dataBind=function(){$scope.loadData(),$scope.notificationdata()},$scope.loadChart=function(){Highcharts.chart("container",{chart:{type:"column"},title:{text:null},subtitle:{text:"Assesment Status"},yAxis:{min:0,title:{text:"No of Cases"}},xAxis:{categories:$scope.statusPage},series:[{name:"Assesment Status",data:$scope.nCases}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-420,y:182,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.loadData=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_LME_WORKLIST.URL,url=tempUrl+"/"+$scope.uconfig.userSeqId,APIS.GET_LME_WORKLIST.URL=url,DataManager.sendRestRequest(null,APIS.GET_LME_WORKLIST,function(response){response.success?($scope.pageData=response.dataBean,angular.forEach($scope.pageData.graphDetialsDTO,function(value,key){$scope.statusPage.push(value.status_page_name),$scope.nCases.push(value.no_of_Cases)}),$scope.loadChart()):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_LME_WORKLIST.URL=tempUrl},$scope.notificationdata=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_NOTIFICATION.URL,url=tempUrl+"/"+$scope.userInfo.personId,APIS.LME_NOTIFICATION.URL=url,DataManager.sendRestRequest(null,APIS.LME_NOTIFICATION,function(response){response.success?($scope.pageData=response.dataBean,sessionStorage.setItem("msgcount",JSON.stringify($scope.pageData))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_NOTIFICATION.URL=tempUrl},$scope.doAction=function(tablerecord,actionParam,applicantParam){$scope.visitDetails=null,$scope.applicantid=null,$scope.applicantid=tablerecord.personId;var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmeType,applicantId:tablerecord.personId,applicantuserId:response.dataBean.id,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.callapplicant(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.doCAAction=function(tablerecord){$scope.visitDetails=null,$scope.applicantid=null,$scope.applicantid=tablerecord.personId;var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmeType,applicantId:tablerecord.personId,applicantuserId:response.dataBean.id,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.resumeca(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.callapplicant=function(worklistSelected){$scope.callapplicant={applicationId:worklistSelected.applicationId,visitId:worklistSelected.visitId,type:worklistSelected.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.callapplicant,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?$state.go("hed"):$state.go("measurement"))},$scope.uconfig.token)},$scope.resumeca=function(worklistSelected){$scope.resumeca={applicationId:worklistSelected.applicationId,visitId:worklistSelected.visitId,type:worklistSelected.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.resumeca,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?$state.go("hed"):$state.go("measurement"))},$scope.uconfig.token)},$scope.doresumeAction=function(tablerecord){$scope.visitDetails=null,$scope.applicantid=null,$scope.applicantid=tablerecord.personId;var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmeType,applicantId:tablerecord.personId,applicantuserId:response.dataBean.id,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.resume(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.resume=function(worklistSelected){ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"resume",function(){}),$scope.$on("resumeOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RESUME.URL,url=tempUrl+"/"+worklistSelected.visitId+"/"+worklistSelected.type,APIS.LME_DME_RESUME.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RESUME,function(response){response.success?$state.go("measurement"):console.log(response)},$scope.uconfig.token),APIS.LME_DME_RESUME.URL=tempUrl}),$scope.$on("resumecancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.requestunlock=function(worklistSelected){$scope.requestSend=!1,ModalService.openAlert("confirm","info","Do you want to send request for unlock?",$scope,"unlock",function(){$scope.$on("unlockOk",function(){0==$scope.requestSend&&($scope.requnlock={visitId:worklistSelected.visitId,applicantname:worklistSelected.accname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId,type:worklistSelected.type},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(){return!0},$scope.uconfig.token),$scope.requestSend=!0)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.unlock=function(worklistSelected){ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+worklistSelected.visitId+"/"+worklistSelected.statuspage,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?ModalService.openAlert("alert","Unlock","Unlock Done","","",function(){$window.location.reload()}):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.dorecallAction=function(tablerecord){$scope.visitDetails=null,$scope.applicantid=null,$scope.applicantid=tablerecord.personId;var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmeType,applicantId:tablerecord.personId,applicantuserId:response.dataBean.id,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.recall(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.recall=function(worklistSelected){ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+worklistSelected.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.dorequestrecallAction=function(tablerecord){$scope.visitDetails=null,$scope.applicantid=null,$scope.applicantid=tablerecord.personId;var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmeType,applicantId:tablerecord.personId,applicantuserId:response.dataBean.id,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.requestrecall(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.requestrecall=function(worklistSelected){ModalService.openAlert("confirm","warning","Do you want to request for recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:worklistSelected.accname,dmename:worklistSelected.doctorname,applicantid:worklistSelected.topersonId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.msg=function(param){$scope.showMsg=param;var url=null,tempUrl=null;tempUrl=APIS.LME_UPDATENOTIFICATIONS.URL,url=tempUrl+"/"+$scope.showMsg.notificationsId,APIS.LME_UPDATENOTIFICATIONS.URL=url,DataManager.sendRestRequest(null,APIS.LME_UPDATENOTIFICATIONS,function(response){response.success?($scope.pageData=response.dataBean,sessionStorage.setItem("msgcount",JSON.stringify($scope.pageData))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_UPDATENOTIFICATIONS.URL=tempUrl},$scope.getTransfer=function(notificationSelected){APIS.GET_LME_TRANSFER_VIEW.data={tranreqId:notificationSelected.transferRequestId,refType:notificationSelected.reftype},DataManager.sendRestRequest(null,APIS.GET_LME_TRANSFER_VIEW,function(response){response.success?($scope.getTransferdatas=response.dataBean,$scope.notificationsId=notificationSelected.notificationsId,""!=$scope.getTransferdatas&&($scope.notifydateFormate=function(param){return new Date(param)})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.acceptTransfer=function(transferDetails,notificationsId){$scope.transferAcceptReject={appName:transferDetails.appName,notificationsId:notificationsId,refType:transferDetails.refType,status:"Accept",tranreqId:transferDetails.tranreqId,transtoId:transferDetails.transtoId,visitId:transferDetails.refId},APIS.LME_TRANSFER_ACCEPT_REJECT.data=$scope.transferAcceptReject,DataManager.sendRestRequest(null,APIS.LME_TRANSFER_ACCEPT_REJECT,function(response){response.success?$window.location.reload():$log.error("Transfer Accept Model: "+response.errorMessages)},$scope.uconfig.token)},$scope.rejectTransfer=function(transferDetails,notificationsId){$scope.transferAcceptReject={appName:transferDetails.appName,notificationsId:notificationsId,refType:transferDetails.refType,status:"Reject",tranreqId:transferDetails.tranreqId,transformId:transferDetails.transformId,transtoId:transferDetails.transtoId,visitId:transferDetails.refId},APIS.LME_TRANSFER_ACCEPT_REJECT.data=$scope.transferAcceptReject,DataManager.sendRestRequest(null,APIS.LME_TRANSFER_ACCEPT_REJECT,function(response){response.success?$window.location.reload():$log.error("Transfer Reject Model: "+response.errorMessages)},$scope.uconfig.token)},$scope.deleteNotification=function(notificationsId){var url=null,tempUrl=null;tempUrl=APIS.LME_NOTIFICATION_DELETE.URL,url=tempUrl+"/"+notificationsId,APIS.LME_NOTIFICATION_DELETE.URL=url,DataManager.sendRestRequest(null,APIS.LME_NOTIFICATION_DELETE,function(response){response.success?$window.location.reload():$log.error("Notification Delete: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_NOTIFICATION_DELETE.URL=tempUrl},$scope.dateFormate=function(param){var date=param.split("/"),newDate=date[2]+"-"+date[1]+"-"+date[0];return new Date(newDate)},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.personId=null,$scope.personId=tablerecord.personId;var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+$scope.personId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:response.dataBean.id,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.init()}]),angular.module("app.camb").controller("InvestigationCtrl1",["$scope","$rootScope","$state","APIS","$uibModal","DataManager","$window","ModalService","$log",function($scope,$rootScope,$state,APIS,$uibModal,DataManager,$window,ModalService,$log){function colorCodeTransformation(){angular.forEach($scope.investigation.bloodTests.diabetes[0].data,function(value,index){$scope.watchField(value.fastingBloodGlucose,"fastingBloodGlucose",index),$scope.watchField(value.hba1c,"hba1c",index)}),angular.forEach($scope.investigation.bloodTests.thyroid,function(value,index){$scope.watchField(value.tsh,"tsh",index),$scope.watchField(value.ft4,"ft4",index),$scope.watchField(value.ft3,"ft3",index)}),angular.forEach($scope.investigation.bloodTests.lipidProfile[0].data,function(value,index){$scope.watchField(value.tci,"tci",index),$scope.watchField(value.hdl,"hdl",index),$scope.watchField(value.ldl,"ldl",index),$scope.watchField(value.tg,"tg",index),$scope.watchField(value.cratio,"cratio",index)}),angular.forEach($scope.investigation.bloodTests.hsCRP,function(value,index){$scope.watchField(value.hsCrp,"hscrp",index)}),angular.forEach($scope.investigation.bloodTests.bloodCount,function(value,index){$scope.watchField(value.hb,"hb",index),$scope.watchField(value.rbc,"rbc",index),$scope.watchField(value.wbc,"wbc",index),$scope.watchField(value.platelets,"platelets",index),$scope.watchField(value.htc,"hct",index)}),angular.forEach($scope.investigation.liverPanel[0].data,function(value,index){$scope.watchField(value.ast,"ast",index),$scope.watchField(value.alt,"alt",index),$scope.watchField(value.ggt,"ggt",index)}),angular.forEach($scope.investigation.renalPanel[0].data,function(value,index){$scope.watchField(value.u,"u",index),$scope.watchField(value.cr,"cr",index),$scope.watchField(value.na,"na",index),$scope.watchField(value.k,"k",index),$scope.watchField(value.cl,"cl",index),$scope.watchField(value.egfr,"egfr",index)}),angular.forEach($scope.investigation.spotUACR,function(value,index){$scope.watchField(value.spotuacr,"spotuacr",index)})}$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.currentAction=$scope.visitInfo.applicantDetails.currentAction,$scope.measurementWeight=JSON.parse($window.sessionStorage.getItem("measurement_weight")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.visittype=$scope.visitInfo.visitType,$scope.visitid=$scope.visitInfo.visitId,$scope.applicantid=$scope.visitInfo.applicantId,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.bloodlist=[],$scope.fbgcreated_ON=[],$scope.fbgMonth=[],$scope.hba1clist=[],$scope.hba1ccreated_ON=[],$scope.hba1cMonth=[],$scope.ggtlist=[],$scope.ggtMonth=[],$scope.ggtcreated_ON=[],$scope.cratioCharts=[],$scope.cratiodate=[],$scope.cratiovalueMonth=[],$scope.egfrCharts=[],$scope.egfrdate=[],$scope.efgrvalueMonth=[],$scope.frmSubmitted=!1,$scope.validlist=[],$scope.frmInvalid=!1,$scope.weightvalue=0,$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.$on("examLoad",function(event,data){$scope.loadData()}),$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.selectedclinic=!0,$scope.measureFollowData=[],$scope.validation=!0,$scope.investigation={visitId:"",applicantWeight:"",pageId:"",roleName:"",ecg:{status:"",remarks:""},cxr:{status:"",remarks:""},tmx:{status:"",remarks:""},cardiac:{status:"",remarks:""},drp:{status:"",remarks:""},ctkidney:{status:"",remarks:""},urineLabstix:[{blood:"",glucose:"",albumin:"",ketone:""}],urineMicrocsopy:[{unit:"",data:[{crystals:"",wbc:"",rbc:"",epithcells:"",casts:""}]}],bloodTests:{diabetes:[{unit:"mmol/l",data:[{fastingBloodGlucose:"",hba1c:""}]}],thyroid:[{tsh:"",ft4:"",ft3:""}],lipidProfile:[{unit:"",data:[{tci:"",hdl:"",ldl:"",tg:"",cratio:""}]}],hsCRP:[{hsCrp:""}],bloodCount:[{hb:"",rbc:"",wbc:"",platelets:"",htc:""}]},liverPanel:[{unit:"",data:[{ast:"",alt:"",ggt:""}]}],renalPanel:[{unit:"",data:[{u:"",cr:"",na:"",k:"",cl:"",egfr:""}]}],spotUACR:[{spotUacr:""}]},$scope.toDoSave={measurement:{status:!1,alertShown:!1},investigation:{status:!1,alertShown:!1},examination:{status:!1,alertShown:!1},audiometry:{status:!1,alertShown:!1},analysis:{status:!1,alertShown:!1}},$scope.dataBind();var isFormAlreadyModified=!1;$scope.$watch("form.$dirty",function(newval,old){newval&&($scope.toDoSave.investigation.status=!0,isFormAlreadyModified||$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),isFormAlreadyModified=!0)})},$scope.dataBind=function(){$scope.newform=!0,$scope.loadData(),$scope.loadCombo(),$scope.measurefollowLoadCombo(),$scope.getValidationRules(),$scope.getMandatoryFields(),$scope.getUploadedGridData(),$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1})},$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?$scope.isDocumentUploaded=response.dataBean.length>0:$log.error("LME_ATTACH_DOC_GRID "+response)},$scope.userConfig.token)},$scope.enablenext=!0,$scope.$on("measurementWeight",function(event,args){$scope.weightvalue=args.weight}),"Clinic Assistant"==$scope.rolename?$scope.myval=!0:$scope.myval=!1,$scope.getValidationRules=function(){$scope.ruleParam={pageCode:"INVEST"},APIS.GET_MEDICAL_TEMP_RULES.data=$scope.ruleParam,DataManager.sendRestRequest(null,APIS.GET_MEDICAL_TEMP_RULES,function(response){response.success?$scope.splitFields(response.dataBean):$log.error("Validation Rules:"+response.errorMessage)},$scope.uconfig.token)},$scope.splitFields=function(fields){$scope.fields={fastingBloodGlucose:null,tci:null,hdl:null,ldl:null,tg:null,cratio:null,hba1c:null,hscrp:null,hb:null,rbc:null,wbc:null,platelets:null,hct:null,ast:null,alt:null,ggt:null,u:null,cr:null,na:null,k:null,cl:null,egfr:null,spotuacr:null},angular.forEach(fields,function(value,key){switch(value.uiFieldName){case"Fasting glucose":$scope.fields.fastingBloodGlucose=value;break;case"HbA1C":$scope.fields.hba1c=value;break;case"TCI":$scope.fields.tci=value;break;case"HDL":$scope.fields.hdl=value;break;case"LDL":$scope.fields.ldl=value;break;case"TSH":$scope.fields.tsh=value;break;case"FT4":$scope.fields.ft4=value;break;case"FT3":$scope.fields.ft3=value;break;case"TG":$scope.fields.tg=value;break;case"HB":$scope.fields.hb=value;break;case"hs-CRP":$scope.fields.hscrp=value;break;case"RBC":$scope.fields.rbc=value;break;case"WBC":$scope.fields.wbc=value;break;case"PLATELETS":$scope.fields.platelets=value;break;case"HTC":$scope.fields.hct=value;break;case"AST":$scope.fields.ast=value;break;case"ALT":$scope.fields.alt=value;break;case"GGT":$scope.fields.ggt=value;break;case"U":$scope.fields.u=value;break;case"CR":$scope.fields.cr=value;break;case"NA":$scope.fields.na=value;break;case"K":$scope.fields.k=value;break;case"CL":$scope.fields.cl=value;break;case"eGFR":$scope.fields.egfr=value;break;case"Spot UACR":$scope.fields.spotuacr=value;break;case"CRATIO":$scope.fields.cratio=value}})},$scope.valuecolorchangerbc=function(value,index){var rbcselectedId="#rbc"+index,rbcoptionId="#rbc"+index+" option";$(rbcselectedId).removeClass("textcolorgreen"),$(rbcselectedId).removeClass("textcolorred"),$(rbcselectedId).removeClass("textcolororange"),1==value&&($(rbcselectedId).addClass("textcolorgreen"),$(rbcoptionId).css("color","black")),3!=value&&4!=value&&5!=value||($(rbcselectedId).addClass("textcolorred"),$(rbcoptionId).css("color","black")),2==value&&($(rbcselectedId).addClass("textcolororange"),$(rbcoptionId).css("color","black"))},$scope.valuecolorchangewbc=function(value,index){var wbcselectedId="#wbc"+index,wbcoptionId="#wbc"+index+" option";$(wbcselectedId).removeClass("textcolorgreen"),$(wbcselectedId).removeClass("textcolorred"),$(wbcselectedId).removeClass("textcolororange"),1==value&&($(wbcselectedId).addClass("textcolorgreen"),$(wbcoptionId).css("color","black")),4!=value&&3!=value||($(wbcselectedId).addClass("textcolorred"),$(wbcoptionId).css("color","black")),2==value&&($(wbcselectedId).addClass("textcolororange"),$(wbcoptionId).css("color","black"))},$scope.valuecolorchangeepith=function(value,index){var epithselectedId="#epithcells"+index,epithoptionId="#epithcells"+index+" option";$(epithselectedId).removeClass("textcolorgreen"),$(epithselectedId).removeClass("textcolorred"),$(epithselectedId).removeClass("textcolororange"),1==value&&($(epithselectedId).addClass("textcolorgreen"),$(epithoptionId).css("color","black")),2==value&&($(epithselectedId).addClass("textcolororange"),$(epithoptionId).css("color","black"))},$scope.valuecolorchangeblood=function(value,index){var bloodselectedId="#blood"+index,bloodoptionId="#blood"+index+" option";$(bloodselectedId).removeClass("textcolorgreen"),$(bloodselectedId).removeClass("textcolorred"),$(bloodselectedId).removeClass("textcolororange"),1!=value&&2!=value||($(bloodselectedId).addClass("textcolorgreen"),$(bloodoptionId).css("color","black")),4!=value&&5!=value&&6!=value||($(bloodselectedId).addClass("textcolorred"),$(bloodoptionId).css("color","black")),3==value&&($(bloodselectedId).addClass("textcolororange"),$(bloodoptionId).css("color","black"))},$scope.valuecolorchangealbumin=function(value,index){var albuminselectedId="#albumin"+index,albuminoptionId="#albumin"+index+" option";$(albuminselectedId).removeClass("textcolorgreen"),$(albuminselectedId).removeClass("textcolorred"),$(albuminselectedId).removeClass("textcolororange"),1!=value&&2!=value||($(albuminselectedId).addClass("textcolorgreen"),$(albuminoptionId).css("color","black")),4!=value&&5!=value&&6!=value||($(albuminselectedId).addClass("textcolorred"),$(albuminoptionId).css("color","black")),3==value&&($(albuminselectedId).addClass("textcolororange"),$(albuminoptionId).css("color","black"))},$scope.valuecolorchangeglucose=function(value,index){var glucoseselectedId="#glucose"+index,glucoseoptionId="#glucose"+index+" option";$(glucoseselectedId).removeClass("textcolorgreen"),$(glucoseselectedId).removeClass("textcolorred"),$(glucoseselectedId).removeClass("textcolororange"),1==value&&($(glucoseselectedId).addClass("textcolorgreen"),$(glucoseoptionId).css("color","black")),3!=value&&4!=value&&5!=value&&6!=value||($(glucoseselectedId).addClass("textcolorred"),$(glucoseoptionId).css("color","black")),2==value&&($(glucoseselectedId).addClass("textcolororange"),$(glucoseoptionId).css("color","black"))},$scope.valuecolorchangeketone=function(value,index){var ketoneselectedId="#ketone"+index,ketoneoptionId="#ketone"+index+" option";$(ketoneselectedId).removeClass("textcolorgreen"),$(ketoneselectedId).removeClass("textcolorred"),$(ketoneselectedId).removeClass("textcolororange"),1==value&&($(ketoneselectedId).addClass("textcolorgreen"),$(ketoneoptionId).css("color","black")),3!=value&&4!=value&&5!=value&&6!=value||($(ketoneselectedId).addClass("textcolorred"),$(ketoneoptionId).css("color","black")),2==value&&($(ketoneselectedId).addClass("textcolororange"),$(ketoneoptionId).css("color","black"))},$scope.reqfieldecg=function(val){2==val?$scope.reqstatusecg=!0:$scope.reqstatusecg=!1},$scope.reqfieldcxr=function(val){2==val?$scope.reqstatuscxr=!0:$scope.reqstatuscxr=!1},$scope.reqfieldtmx=function(val){2==val?$scope.reqstatustmx=!0:$scope.reqstatustmx=!1},$scope.reqfieldcardiac=function(val){2==val?$scope.reqstatuscardiac=!0:$scope.reqstatuscardiac=!1},$scope.reqfielddrp=function(val){2==val?$scope.reqstatusdrp=!0:$scope.reqstatusdrp=!1},$scope.reqfieldctkidney=function(val){2==val?$scope.reqstatusctkidney=!0:$scope.reqstatusctkidney=!1},$scope.diabetesUnitconversion=function(value){"mg/dl"==value?$scope.diabetesUnit2():$scope.diabetesUnit1()},$scope.diabetesUnit2=function(){for(var i=0;i<$scope.investigation.bloodTests.diabetes[0].data.length;i++)""!=$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose&&null!=$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose&&($scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose=parseFloat(18*$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose).toFixed(2))},$scope.diabetesUnit1=function(){for(var i=0;i<$scope.investigation.bloodTests.diabetes[0].data.length;i++)""!=$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose&&null!=$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose&&($scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose=parseFloat($scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose/18).toFixed(2))},$scope.lipidprofileUnitconversion=function(value){"mg/dl"==value?$scope.lipidprofileunit2():$scope.lipidprofileunit1()},$scope.lipidprofileunit2=function(){for(var i=0;i<$scope.investigation.bloodTests.lipidProfile[0].data.length;i++)""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tci&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tci&&($scope.investigation.bloodTests.lipidProfile[0].data[i].tci=(38.61*$scope.investigation.bloodTests.lipidProfile[0].data[i].tci).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl&&($scope.investigation.bloodTests.lipidProfile[0].data[i].hdl=(38.61*$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl&&($scope.investigation.bloodTests.lipidProfile[0].data[i].ldl=(38.61*$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tg&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tg&&($scope.investigation.bloodTests.lipidProfile[0].data[i].tg=(88.5*$scope.investigation.bloodTests.lipidProfile[0].data[i].tg).toFixed(2))},$scope.lipidprofileunit1=function(){for(var i=0;i<$scope.investigation.bloodTests.lipidProfile[0].data.length;i++)""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tci&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tci&&($scope.investigation.bloodTests.lipidProfile[0].data[i].tci=($scope.investigation.bloodTests.lipidProfile[0].data[i].tci/38.61).toFixed(2)),
""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl&&($scope.investigation.bloodTests.lipidProfile[0].data[i].hdl=($scope.investigation.bloodTests.lipidProfile[0].data[i].hdl/38.61).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl&&($scope.investigation.bloodTests.lipidProfile[0].data[i].ldl=($scope.investigation.bloodTests.lipidProfile[0].data[i].ldl/38.61).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tg&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tg&&($scope.investigation.bloodTests.lipidProfile[0].data[i].tg=($scope.investigation.bloodTests.lipidProfile[0].data[i].tg/88.5).toFixed(2))},$scope.renalUnitconversion=function(value){"mg/dl"==value?$scope.renalpanelunit2():$scope.renalpanelunit1()},$scope.renalpanelunit2=function(){for(var i=0;i<$scope.investigation.renalPanel[0].data.length;i++)""!=$scope.investigation.renalPanel[0].data[i].u&&null!=$scope.investigation.renalPanel[0].data[i].u&&($scope.investigation.renalPanel[0].data[i].u=(2.808*$scope.investigation.renalPanel[0].data[i].u).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].cr&&null!=$scope.investigation.renalPanel[0].data[i].cr&&($scope.investigation.renalPanel[0].data[i].cr=(11.3*$scope.investigation.renalPanel[0].data[i].cr).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].na&&null!=$scope.investigation.renalPanel[0].data[i].na&&($scope.investigation.renalPanel[0].data[i].na=(2.2989*$scope.investigation.renalPanel[0].data[i].na).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].k&&null!=$scope.investigation.renalPanel[0].data[i].k&&($scope.investigation.renalPanel[0].data[i].k=(3.9102*$scope.investigation.renalPanel[0].data[i].k).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].cl&&null!=$scope.investigation.renalPanel[0].data[i].cl&&($scope.investigation.renalPanel[0].data[i].cl=(3.5453*$scope.investigation.renalPanel[0].data[i].cl).toFixed(2))},$scope.renalpanelunit1=function(){for(var i=0;i<$scope.investigation.renalPanel[0].data.length;i++)""!=$scope.investigation.renalPanel[0].data[i].u&&null!=$scope.investigation.renalPanel[0].data[i].u&&($scope.investigation.renalPanel[0].data[i].u=($scope.investigation.renalPanel[0].data[i].u/2.808).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].cr&&null!=$scope.investigation.renalPanel[0].data[i].cr&&($scope.investigation.renalPanel[0].data[i].cr=($scope.investigation.renalPanel[0].data[i].cr/11.3).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].na&&null!=$scope.investigation.renalPanel[0].data[i].na&&($scope.investigation.renalPanel[0].data[i].na=($scope.investigation.renalPanel[0].data[i].na/2.2989).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].k&&null!=$scope.investigation.renalPanel[0].data[i].k&&($scope.investigation.renalPanel[0].data[i].k=($scope.investigation.renalPanel[0].data[i].k/3.9102).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].cl&&null!=$scope.investigation.renalPanel[0].data[i].cl&&($scope.investigation.renalPanel[0].data[i].cl=($scope.investigation.renalPanel[0].data[i].cl/3.5453).toFixed(2))},$scope.liverUnitconversion=function(value){"ukat/l"==value?$scope.liverUnit2():$scope.liverUnit1()},$scope.liverUnit2=function(){for(var i=0;i<$scope.investigation.liverPanel[0].data.length;i++)""!=$scope.investigation.liverPanel[0].data[i].ast&&null!=$scope.investigation.liverPanel[0].data[i].ast&&($scope.investigation.liverPanel[0].data[i].ast=($scope.investigation.liverPanel[0].data[i].ast/58.823).toFixed(2)),""!=$scope.investigation.liverPanel[0].data[i].alt&&null!=$scope.investigation.liverPanel[0].data[i].alt&&($scope.investigation.liverPanel[0].data[i].alt=($scope.investigation.liverPanel[0].data[i].alt/58.823).toFixed(2)),""!=$scope.investigation.liverPanel[0].data[i].ggt&&null!=$scope.investigation.liverPanel[0].data[i].ggt&&($scope.investigation.liverPanel[0].data[i].ggt=($scope.investigation.liverPanel[0].data[i].ggt/58.823).toFixed(2))},$scope.liverUnit1=function(){for(var i=0;i<$scope.investigation.liverPanel[0].data.length;i++)""!=$scope.investigation.liverPanel[0].data[i].ast&&null!=$scope.investigation.liverPanel[0].data[i].ast&&($scope.investigation.liverPanel[0].data[i].ast=(58.823*$scope.investigation.liverPanel[0].data[i].ast).toFixed(2)),""!=$scope.investigation.liverPanel[0].data[i].alt&&null!=$scope.investigation.liverPanel[0].data[i].alt&&($scope.investigation.liverPanel[0].data[i].alt=(58.823*$scope.investigation.liverPanel[0].data[i].alt).toFixed(2)),""!=$scope.investigation.liverPanel[0].data[i].ggt&&null!=$scope.investigation.liverPanel[0].data[i].ggt&&($scope.investigation.liverPanel[0].data[i].ggt=(58.823*$scope.investigation.liverPanel[0].data[i].ggt).toFixed(2))},$scope.cratioint=function(index,value){return isNaN(value)?"":value},$scope.cratio=function(index,tci,hdl){return tci&&hdl?void($scope.investigation.bloodTests.lipidProfile[0].data[index].cratio=($scope.investigation.bloodTests.lipidProfile[0].data[index].tci/$scope.investigation.bloodTests.lipidProfile[0].data[index].hdl).toFixed(2)):($scope.investigation.bloodTests.lipidProfile[0].data[index].cratio=null,!1)},$scope.egfr=function(index,cr){return $scope.investigation.renalPanel[0].data[index].cr&&$scope.weightvalue?void("M"==$scope.visitDetails.applicantDetails.gender?$scope.investigation.renalPanel[0].data[index].egfr=((140-$scope.visitDetails.applicantDetails.age)*$scope.weightvalue*1/(72*$scope.investigation.renalPanel[0].data[index].cr)).toFixed(2):$scope.investigation.renalPanel[0].data[index].egfr=((140-$scope.visitDetails.applicantDetails.age)*$scope.weightvalue*.85/(72*$scope.investigation.renalPanel[0].data[index].cr)).toFixed(2)):($scope.investigation.renalPanel[0].data[index].egfr="",!1)},$scope.addlabtix=function(){$scope.labtixdata={blood:"",glucose:"",albumin:"",ketone:""},$scope.investigation.urineLabstix.push($scope.labtixdata)},$scope.removelabstix=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperational",function(){$scope.$on("removeoperationalOk",function(){0==$scope.warningConfirmed&&$scope.investigation.urineLabstix.length>1&&$scope.investigation.urineLabstix.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.addmicroscopy=function(){$scope.microscopydata={crystals:"",wbc:"",rbc:"",epithcells:"",casts:""},$scope.investigation.urineMicrocsopy[0].data.push($scope.microscopydata)},$scope.removemicroscopy=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationalmicroscopy",function(){$scope.$on("removeoperationalmicroscopyOk",function(){0==$scope.warningConfirmed&&$scope.investigation.urineMicrocsopy[0].data.length>1&&$scope.investigation.urineMicrocsopy[0].data.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalmicroscopycancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.adddiabetes=function(){$scope.adddiabetesdata={fastingBloodGlucose:"",hba1c:""},$scope.investigation.bloodTests.diabetes[0].data.push($scope.adddiabetesdata)},$scope.removediabetes=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationaldiabetes",function(){$scope.$on("removeoperationaldiabetesOk",function(){0==$scope.warningConfirmed&&$scope.investigation.bloodTests.diabetes[0].data.length>1&&$scope.investigation.bloodTests.diabetes[0].data.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationaldiabetescancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.addthyroid=function(){$scope.addthyroiddata={tsh:"",ft4:"",ft3:""},$scope.investigation.bloodTests.thyroid.push($scope.addthyroiddata)},$scope.removethyroid=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationalthyroid",function(){$scope.$on("removeoperationalthyroidOk",function(){0==$scope.warningConfirmed&&$scope.investigation.bloodTests.thyroid.length>1&&$scope.investigation.bloodTests.thyroid.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalthyroidcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.addlipidprofile=function(){$scope.addlipidprofiledata={tci:"",hdl:"",ldl:"",tg:"",cratio:""},$scope.investigation.bloodTests.lipidProfile[0].data.push($scope.addlipidprofiledata)},$scope.removelipidprofile=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationallipid",function(){$scope.$on("removeoperationallipidOk",function(){0==$scope.warningConfirmed&&$scope.investigation.bloodTests.lipidProfile[0].data.length>1&&$scope.investigation.bloodTests.lipidProfile[0].data.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationallipidcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.addhscrp=function(){$scope.addhscrpdata={hsCrp:""},$scope.investigation.bloodTests.hsCRP.push($scope.addhscrpdata)},$scope.removehscrp=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationalhscrp",function(){$scope.$on("removeoperationalhscrpOk",function(){0==$scope.warningConfirmed&&$scope.investigation.bloodTests.hsCRP.length>1&&$scope.investigation.bloodTests.hsCRP.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalhscrpcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.addbloodcount=function(){$scope.addbloodcountdata={hb:"",rbc:"",wbc:"",platelets:"",htc:""},$scope.investigation.bloodTests.bloodCount.push($scope.addbloodcountdata)},$scope.removebloodcount=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationalbc",function(){$scope.$on("removeoperationalbcOk",function(){0==$scope.warningConfirmed&&$scope.investigation.bloodTests.bloodCount.length>1&&$scope.investigation.bloodTests.bloodCount.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalbccancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.addliverpanel=function(){$scope.addliverpaneldata={ast:"",alt:"",ggt:""},$scope.investigation.liverPanel[0].data.push($scope.addliverpaneldata)},$scope.removeliverpanel=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationallp",function(){$scope.$on("removeoperationallpOk",function(){0==$scope.warningConfirmed&&$scope.investigation.liverPanel[0].data.length>1&&$scope.investigation.liverPanel[0].data.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationallpcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.addrenalpanel=function(){$scope.addrenalpaneldata={u:"",cr:"",na:"",k:"",cl:"",egfr:""},$scope.investigation.renalPanel[0].data.push($scope.addrenalpaneldata)},$scope.removerenalpanel=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationalrp",function(){$scope.$on("removeoperationalrpOk",function(){0==$scope.warningConfirmed&&$scope.investigation.renalPanel[0].data.length>1&&$scope.investigation.renalPanel[0].data.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalrpcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.addspotuacr=function(){$scope.addspotuacrdata={spotUacr:""},$scope.investigation.spotUACR.push($scope.addspotuacrdata)},$scope.removespotuacr=function(index){$scope.removeindex=index,$scope.warningConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationalspot",function(){$scope.$on("removeoperationalspotOk",function(){0==$scope.warningConfirmed&&$scope.investigation.spotUACR.length>1&&$scope.investigation.spotUACR.splice($scope.removeindex,1),$scope.warningConfirmed=!0}),$scope.$on("removeoperationalspotcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.loadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_CR_COMBO,function(response){response.success?$scope.investigationdata=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.crsaveData=function(){return $scope.frmSubmitted=!0,$scope.validlist.length?$scope.validation=!1:$scope.validation=!0,$scope.validation?($scope.frmInvalid=!1,$scope.investigation.visitId=$scope.visitid,"mg/dl"==$scope.investigation.bloodTests.diabetes[0].unit&&("mmol/l"==$scope.investigation.bloodTests.diabetes[0].unit,$scope.diabetesUnit1()),"mg/dl"==$scope.investigation.bloodTests.lipidProfile[0].unit&&("mmol/l"==$scope.investigation.bloodTests.lipidProfile[0].unit,$scope.lipidprofileunit1()),"mg/dl"==$scope.investigation.renalPanel[0].unit&&("mmol/l"==$scope.investigation.renalPanel[0].unit,$scope.renalpanelunit1()),"U/L"==$scope.investigation.liverPanel[0].unit&&("ukat/l"==$scope.investigation.liverPanel[0].unit,$scope.liverUnit2()),$scope.investigation.roleName=$scope.uconfig.userFacilities[0].roles[0].roleName,APIS.CR_INVESTIGATION_SAVE.data=$scope.investigation,void DataManager.sendRestRequest(null,APIS.CR_INVESTIGATION_SAVE,function(response){$scope.status=response,response.success?($scope.toDoSave.investigation.status=!1,$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),ModalService.openAlert("alert","Investigation",response.successMessage,"null","null"),$scope.enablenext=!1,$scope.$root.$broadcast("examinationONload",!0)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)):($scope.frmInvalid=!0,ModalService.openAlert("alert","Investigation","Please enter correct values in fields"),!1)},$scope.loadData=function(){APIS.GET_CR_INVESTIGATION_DATA.data={visitId:$scope.visitid,applicantId:$scope.applicantid},DataManager.sendRestRequest(null,APIS.GET_CR_INVESTIGATION_DATA,function(response){if(response.success){if($scope.investigation=response.dataBean,$scope.investigation.urineLabstix&&0!=$scope.investigation.urineLabstix.length||$scope.urinelabstix(),$scope.investigation.urineMicrocsopy&&0!=$scope.investigation.urineMicrocsopy.length||$scope.urineMicrocsopy(),$scope.investigation.bloodTests.diabetes?$scope.investigation.bloodTests.diabetes[0].data||$scope.diabetes():$scope.diabetes(),$scope.investigation.bloodTests.thyroid||$scope.thyroid(),$scope.investigation.bloodTests.lipidProfile?$scope.investigation.bloodTests.lipidProfile[0].data||$scope.lipidprofile():$scope.lipidprofile(),$scope.investigation.bloodTests.hsCRP||$scope.hscrp(),$scope.investigation.bloodTests.bloodCount||$scope.bloodcount(),$scope.investigation.liverPanel?$scope.investigation.liverPanel[0].data||$scope.liverpanel():$scope.liverpanel(),$scope.investigation.renalPanel?$scope.investigation.renalPanel[0].data||$scope.renalpanel():$scope.renalpanel(),$scope.investigation.spotUACR||$scope.spotuacr(),$scope.investigation.urineMicrocsopy[0].unit||($scope.investigation.urineMicrocsopy[0].unit="ul"),$scope.investigation.bloodTests.diabetes[0].unit||($scope.investigation.bloodTests.diabetes[0].unit="mmol/l"),$scope.investigation.bloodTests.lipidProfile[0].unit||($scope.investigation.bloodTests.lipidProfile[0].unit="mmol/l"),$scope.investigation.renalPanel[0].unit||($scope.investigation.renalPanel[0].unit="mmol/l"),$scope.investigation.liverPanel[0].unit||($scope.investigation.liverPanel[0].unit="ukat/l"),angular.forEach($scope.investigation.bloodTests.lipidProfile,function(value,key){angular.forEach(value.data,function(val,index){""!=val.tci&&null!=val.tci&&""!=val.hdl&&null!=val.hdl&&(val.cratio=isNaN((val.tci/val.hdl).toFixed(2))?" ":(val.tci/val.hdl).toFixed(2))})}),angular.forEach($scope.investigation.renalPanel,function(value,key){angular.forEach(value.data,function(val,index){""!=$scope.visitDetails.applicantDetails.age&&""!=$scope.investigation.applicantWeight&&""!=val.cr&&null!=$scope.visitDetails.applicantDetails.age&&null!=$scope.investigation.applicantWeight&&null!=val.cr&&("M"==$scope.visitDetails.applicantDetails.gender?val.egfr=isNaN(((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*val.cr)).toFixed(2))?" ":((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*val.cr)).toFixed(2):val.egfr=isNaN(((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*val.cr)).toFixed(2))?" ":((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*val.cr)).toFixed(2))})}),angular.forEach($scope.investigation.urineLabstix,function(value,key){$scope.valuecolorchangeblood(value.blood,key),$scope.valuecolorchangeglucose(value.glucose,key),$scope.valuecolorchangealbumin(value.albumin,key),$scope.valuecolorchangeketone(value.ketone,key)}),angular.forEach($scope.investigation.urineMicrocsopy[0].data,function(value,key){$scope.valuecolorchangewbc(value.rbc,key),$scope.valuecolorchangerbc(value.rbc,key),$scope.valuecolorchangeepith(value.epithcells,key)}),colorCodeTransformation(),$scope.fastingglucose=$scope.investigation.bloodTests.diabetes[0].previousData,null!=$scope.fastingglucose&&$scope.fastingglucose.length>0)for(var b=0;b<$scope.fastingglucose.length;b++)$scope.fastingbloodchart($scope.fastingglucose[b].fastingBloodGlucose,$scope.fastingglucose[b].entryDate),$scope.hba1c($scope.fastingglucose[b].hba1c,$scope.fastingglucose[b].entryDate);if($scope.ggtdata=$scope.investigation.liverPanel[0].previousData,null!=$scope.ggtdata&&$scope.ggtdata.length>0)for(var b=0;b<$scope.ggtdata.length;b++)$scope.ggt($scope.ggtdata[b].ggt,$scope.ggtdata[b].entryDate);if($scope.cratiodata=$scope.investigation.bloodTests.lipidProfile[0].previousData,null!=$scope.cratiodata&&$scope.cratiodata.length>0)for(var b=0;b<$scope.cratiodata.length;b++)$scope.cratiographfn($scope.cratiodata[b].tci,$scope.cratiodata[b].hdl,$scope.cratiodata[b].entryDate);if($scope.egfrdata=$scope.investigation.renalPanel[0].previousData,null!=$scope.egfrdata&&$scope.egfrdata.length>0)for(var b=0;b<$scope.egfrdata.length;b++)$scope.egfrgraphfn($scope.egfrdata[b].cr,$scope.ggtdata[b].entryDate)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.measurefollowLoadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LME_FOLLOWUP_COMBO,function(response){response.success?$scope.measureFollowData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupdoAction=function(){$uibModal.open({animation:!0,templateUrl:"mesureFollowUp",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.AbortdoAction=function(){$uibModal.open({animation:!0,templateUrl:"invAbort",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.doAction=function(){$uibModal.open({animation:!0,templateUrl:"asthmacontrol",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.doattachAction=function(){$uibModal.open({animation:!0,templateUrl:"InvestigatAttachDoc",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.urinelabstix=function(){$scope.investigation.urineLabstix=temp1},$scope.urinelabstix=function(){var temp=[{blood:null,glucose:null,albumin:null,ketone:null}];$scope.investigation.urineLabstix=temp},$scope.urineMicrocsopy=function(){var temp={data:[{crystals:null,wbc:null,rbc:null,epithcells:null,casts:null}]};$scope.investigation.urineMicrocsopy.push(temp)},$scope.diabetes=function(){var temp=[{data:[{fastingBloodGlucose:null,hba1c:null}]}];$scope.investigation.bloodTests.diabetes=temp},$scope.thyroid=function(){var temp=[{tsh:null,ft4:null,ft3:null}];$scope.investigation.bloodTests.thyroid=temp},$scope.lipidprofile=function(){var temp=[{data:[{tci:null,hdl:null,ldl:null,tg:null,cratio:null}]}];$scope.investigation.bloodTests.lipidProfile=temp},$scope.hscrp=function(){var temp=[{hsCrp:null}];$scope.investigation.bloodTests.hsCRP=temp},$scope.bloodcount=function(){var temp=[{hb:null,rbc:null,wbc:null,platelets:null,htc:null}];$scope.investigation.bloodTests.bloodCount=temp},$scope.liverpanel=function(){var temp=[{data:[{ast:null,alt:null,ggt:null}]}];$scope.investigation.liverPanel=temp},$scope.renalpanel=function(){var temp=[{data:[{u:null,cr:null,na:null,k:null,cl:null,egfr:null}]}];$scope.investigation.renalPanel=temp},$scope.goPreview=function(){$window.open("#/hedprintpreview?preview=2")},$scope.spotuacr=function(){var temp=[{spotUacr:null}];$scope.investigation.spotUACR=temp},$scope.checkNumber=function(fieldName,givenVal,min,max){if(isNaN(givenVal))return $scope.validlistCheck1=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck1.length&&$scope.validlist.push(fieldName),!1;var fieldMin=fieldName+"Min",fieldMax=fieldName+"Max";if(""==givenVal||null==givenVal){$scope[fieldMin]=!1,$scope[fieldMax]=!1,$scope.validation=!0;var temp=$scope.validlist.indexOf(fieldName);return temp!=-1&&$scope.validlist.splice(temp,1),!1}if(!min||!max){if(givenVal.toString().length>12)$scope.validlistCheck1=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck1.length&&$scope.validlist.push(fieldName);else{var temp=$scope.validlist.indexOf(fieldName);temp!=-1&&$scope.validlist.splice(temp,1)}return!1}if(Number(givenVal)<min)return $scope.validlistCheck=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck.length&&$scope.validlist.push(fieldName),$scope[fieldMin]=!0,$scope[fieldMax]=!1,!1;var temp=$scope.validlist.indexOf(fieldName);if(temp!=-1&&$scope.validlist.splice(temp,1),$scope[fieldMin]=!1,Number(givenVal)>max)return $scope.validlistCheck=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck.length&&$scope.validlist.push(fieldName),$scope[fieldMin]=!1,$scope[fieldMax]=!0,!1;var temp=$scope.validlist.indexOf(fieldName);temp!=-1&&$scope.validlist.splice(temp,1),$scope[fieldMax]=!1},$scope.getMandatoryFields=function(){console.log($scope.visitInfo),$scope.ruleParam={pageCode:"INVEST",applicationId:$scope.visitInfo.applicantId,visitId:$scope.visitid},APIS.GET_MANDATORY_FIELDS.data=$scope.ruleParam,DataManager.sendRestRequest(null,APIS.GET_MANDATORY_FIELDS,function(response){response.success?$scope.splitMantotoryFields(response.dataBean):$log.error("Mandatory Fields:"+response.errorMessage)},$scope.uconfig.token)},$scope.splitMantotoryFields=function(fields){$scope.requiedFields={ecg:!1,cxr:!1,tmx:!1,cardiac:!1,drp:!1,ctKidney:!1,labstix:!1,blood:!1,glucose:!1,albumin:!1,ketone:!1,microscopy:!1,crystals:!1,microwbc:!1,microrbc:!1,epithcells:!1,casts:!1,bloodtests:!1,diabetes:!1,fastingBloodGlucose:!1,hba1c:!1,lipidProfile:!1,tci:!1,hdl:!1,ldl:!1,tg:!1,cratio:!1,hscrp:!1,bloodcount:!1,hb:!1,rbc:!1,wbc:!1,platelets:!1,hct:!1,liverpanel:!1,ast:!1,alt:!1,ggt:!1,renalPanel:!1,u:!1,cr:!1,na:!1,k:!1,cl:!1,egfr:!1,spotuacr:!1};var fieldsArray=null;fields.length>0&&(fieldsArray=fields[0].split(","),angular.forEach(fieldsArray,function(value,key){switch(value.trim()){case"ECG":$scope.requiedFields.ecg=!0;break;case"CXR":$scope.requiedFields.cxr=!0;break;case"TMX":$scope.requiedFields.tmx=!0;break;case"CARDIAC":$scope.requiedFields.cardiac=!0;break;case"DRP":$scope.requiedFields.drp=!0;break;case"CT Kidney":$scope.requiedFields.ctKidney=!0;break;case"LABSTIX":$scope.requiedFields.labstix=!0,$scope.requiedFields.blood=!0,$scope.requiedFields.glucose=!0,$scope.requiedFields.albumin=!0,$scope.requiedFields.ketone=!0;break;case"BLOOD":$scope.requiedFields.blood=!0;break;case"GLUCOSE":$scope.requiedFields.glucose=!0;break;case"ALBUMIN":$scope.requiedFields.albumin=!0;break;case"KETONE":$scope.requiedFields.ketone=!0;break;case"MICROSCOPY":$scope.requiedFields.microscopy=!0,$scope.requiedFields.crystals=!0,$scope.requiedFields.microwbc=!0,$scope.requiedFields.microrbc=!0,$scope.requiedFields.epithcells=!0,$scope.requiedFields.casts=!0;break;case"CRYSTALS":$scope.requiedFields.crystals=!0;break;case"MICROWBC":$scope.requiedFields.microwbc=!0;break;case"MICRORBC":$scope.requiedFields.microrbc=!0;break;case"EPITHCELLS":$scope.requiedFields.epithcells=!0;break;case"CASTS":$scope.requiedFields.casts=!0;break;case"DIABETES":$scope.requiedFields.diabetes=!0,$scope.requiedFields.fastingBloodGlucose=!0,$scope.requiedFields.hba1c=!0;break;case"fasting glucose":$scope.requiedFields.fastingBloodGlucose=!0;break;case"HBA1C":$scope.requiedFields.hba1c=!0;break;case"lipids":$scope.requiedFields.lipidProfile=!0,$scope.requiedFields.tci=!0,$scope.requiedFields.hdl=!0,$scope.requiedFields.ldl=!0,$scope.requiedFields.tg=!0;break;case"TCI":$scope.requiedFields.tci=!0;break;case"HDL":$scope.requiedFields.hdl=!0;break;case"LDL":$scope.requiedFields.ldl=!0;break;case"TG":$scope.requiedFields.tg=!0;break;case"CRATIO":$scope.requiedFields.cratio=!0;break;case"HSCRP":$scope.requiedFields.hscrp=!0;break;case"BLOODCOUNT":$scope.requiedFields.bloodcount=!0,$scope.requiedFields.hb=!0,$scope.requiedFields.rbc=!0,$scope.requiedFields.wbc=!0,$scope.requiedFields.platelets=!0,$scope.requiedFields.hct=!0;break;case"HB":$scope.requiedFields.hb=!0;break;case"RBC":$scope.requiedFields.rbc=!0;break;case"WBC":$scope.requiedFields.wbc=!0;break;case"PLATELETS":$scope.requiedFields.platelets=!0;break;case"HTC":$scope.requiedFields.hct=!0;break;case"LIVER":$scope.requiedFields.ast=!0,$scope.requiedFields.alt=!0,$scope.requiedFields.ggt=!0;break;case"AST":$scope.requiedFields.ast=!0;break;case"ALT":$scope.requiedFields.alt=!0;break;case"GGT":$scope.requiedFields.ggt=!0;break;case"RENAL":$scope.requiedFields.renalPanel=!0,$scope.requiedFields.u=!0,$scope.requiedFields.cr=!0,$scope.requiedFields.na=!0,$scope.requiedFields.k=!0,$scope.requiedFields.cl=!0;break;case"U":$scope.requiedFields.u=!0;break;case"CR":$scope.requiedFields.cr=!0;break;case"NA":$scope.requiedFields.na=!0;break;case"K":$scope.requiedFields.k=!0;break;case"CL":$scope.requiedFields.cl=!0;break;case"eGFR":$scope.requiedFields.egfr=!0;break;case"Spot UACR":$scope.requiedFields.spotuacr=!0}}))},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.applicantid,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"invDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})})}else $scope.dmfdoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.bloodglucosepop=function(){$uibModal.open({animation:!0,templateUrl:"fbgchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.fastingbloodchart=function(value,date){$scope.bloodlist.push(parseFloat(value)),$scope.fbgcreated_ON.push(date),$scope.fbgchartData()},$scope.fbgchartData=function(){$scope.bloodvalue=$scope.bloodlist,$scope.dateFormat($scope.fbgcreated_ON),$scope.loadfbgChart()},$scope.dateFormat=function(fbgvalue){for(var i=0;i<fbgvalue.length;i++)$scope.datecalc=new Date(fbgvalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.fbgMonth.push($scope.monthrep)},$scope.loadfbgChart=function(){$("#fbggraph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"FBG Measurements"}},xAxis:{categories:$scope.fbgMonth},series:[{name:"Fasting Blood Glucose Value",data:$scope.bloodlist}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.hba1cpop=function(){$uibModal.open({animation:!0,templateUrl:"hba1cchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.hba1c=function(value,date){$scope.hba1clist.push(parseFloat(value)),$scope.hba1ccreated_ON.push(date),$scope.hba1cchartData()},$scope.hba1cchartData=function(){$scope.datavlue=[],$scope.hba1cvalue=$scope.hba1clist,$scope.date($scope.hba1ccreated_ON),$scope.loadhba1cChart()},$scope.date=function(hba1cvalue){$scope.dateParts=[];for(var i=0;i<hba1cvalue.length;i++)$scope.datecalc=new Date(hba1cvalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.hba1cMonth.push($scope.monthrep)},$scope.loadhba1cChart=function(){$("#hba1cgraph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"HBA1C Measurements"}},xAxis:{categories:$scope.fbgMonth},series:[{name:"HBA1C Value",data:$scope.hba1cvalue}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.ggtcpop=function(){$uibModal.open({animation:!0,templateUrl:"ggtchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.ggt=function(value,date){$scope.ggtlist.push(parseFloat(value)),$scope.ggtcreated_ON.push(date),
$scope.ggtchartData()},$scope.ggtchartData=function(){$scope.ggtvalue=$scope.ggtlist,$scope.date($scope.ggtcreated_ON),$scope.loadggtChart()},$scope.date=function(ggtvalue){$scope.dateParts=[];for(var i=0;i<ggtvalue.length;i++)$scope.datecalc=new Date(ggtvalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.ggtMonth.push($scope.monthrep)},$scope.loadggtChart=function(){$("#ggtgraph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"GGT Measurements"}},xAxis:{categories:$scope.ggtMonth},series:[{name:"GGT Value",data:$scope.ggtvalue}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.cratiopop=function(){$uibModal.open({animation:!0,templateUrl:"cratiochart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.cratiographfn=function(tci,hdl,date){$scope.cratiocalculation=(tci/hdl).toFixed(2),$scope.cratioCharts.push(parseFloat($scope.cratiocalculation)),$scope.cratiodate.push(date),$scope.cratiographData()},$scope.cratiographData=function(){$scope.cratiocalvalue=$scope.cratioCharts,$scope.date($scope.cratiodate),$scope.loadcratioChart()},$scope.date=function(cratiovalue){$scope.dateParts=[];for(var i=0;i<cratiovalue.length;i++)$scope.datecalc=new Date(cratiovalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.cratiovalueMonth.push($scope.monthrep)},$scope.loadcratioChart=function(){$("#cratiograph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"CRatio Records"}},xAxis:{categories:$scope.cratiovalueMonth},series:[{name:"C-Ratio Value",data:$scope.cratiocalvalue}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.egfrpop=function(){$uibModal.open({animation:!0,templateUrl:"egfrchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.egfrgraphfn=function(cr,entryDate){"M"==$scope.visitInfo.applicantDetails.gender?($scope.egfrcalculation=((140-$scope.visitInfo.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*cr)).toFixed(2),$scope.egfrCharts.push(parseFloat($scope.egfrcalculation))):($scope.egfrcalculation=((140-$scope.visitInfo.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*cr)).toFixed(2),$scope.egfrCharts.push(parseFloat($scope.egfrcalculation))),$scope.egfrdate.push(entryDate),$scope.egfrgraphData()},$scope.egfrgraphData=function(){$scope.egfrcalvalue=$scope.egfrCharts,$scope.date($scope.egfrdate),$scope.loadefgrChart()},$scope.date=function(efgrvalue){$scope.dateParts=[];for(var i=0;i<efgrvalue.length;i++)$scope.datecalc=new Date(efgrvalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.efgrvalueMonth.push($scope.monthrep)},$scope.loadefgrChart=function(){$("#efgrgraph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"Previous eGFR Records"}},xAxis:{categories:$scope.efgrvalueMonth},series:[{name:"eGFR Value",data:$scope.egfrcalvalue}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.getColorCode=function(givenValue,fields){var highValue=$scope.fields[fields].highValue,source=highValue.split(" "),highSym=source[0],highVal=parseFloat(source[1]),normalValue=$scope.fields[fields].normalValue,sourcen=normalValue.split(" "),normalSym=sourcen[0],normalVal=parseFloat(sourcen[1]);if(!givenValue||!highVal||!normalVal)return!1;var color="orange";return">"==highSym&&givenValue>highVal&&(color="red"),">="==highSym&&givenValue>=highVal&&(color="red"),"<"==highSym&&givenValue<highVal&&(color="red"),"<="==highSym&&givenValue<=highVal&&(color="red"),"!="==highSym&&givenValue!=highVal&&(color="red"),"=="==highSym&&givenValue==highVal&&(color="red"),">"==normalSym&&givenValue>normalVal&&(color="green"),">="==normalSym&&givenValue>=normalVal&&(color="green"),"<"==normalSym&&givenValue<normalVal&&(color="green"),"<="==normalSym&&givenValue<=normalVal&&(color="green"),"!="==normalSym&&givenValue!=normalVal&&(color="green"),"=="==normalSym&&givenValue==normalVal&&(color="green"),color},$scope.watchField=function(value,fieldName,index){var temp=void 0===index?fieldName+"Color":fieldName+index+"Color";value&&($scope[temp]=$scope.getColorCode(value,fieldName))},$scope.init(),$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},$scope.cambDMF=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitInfo.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitInfo};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})})}else $scope.dmfDoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.close=function(){$location.url("/camb-worklistsetup")},$scope.attachDocuments=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDocumentModal.html",controller:"investigationAnalysisDocumentModalCtrl",size:"lg",resolve:{modalParam:function(){return null}}})},$scope.referral=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisReferralModal.html",controller:"InvestigationReferralModalCtrl",resolve:{modalParam:function(){return null}}})}}]),angular.module("app").controller("AnalysisDMFModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","modalParam","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,modalParam,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.roleid=$scope.userConfig.userFacilities[0].roles[0].roleId,$scope.rolename=$scope.userConfig.userFacilities[0].roles[0].roleName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.fromdatepickerPopup={opened:!1},$scope.dmfVisit={intitiatedby:$scope.userRegDetails.personId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.visitInfo.applicantId,initatedRole:$scope.roleid},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.fromdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1}},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.dmfAction=function(){return $scope.value={},$scope.frmSubmitted=!0,$scope.frmDMFDetails.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,ModalService.openAlert("confirm","DMF","Do you want to confirm the details?",$scope,"dmf",function(){}),$scope.$on("dmfOk",function(){$scope.temp={dateofoccurence:""},$scope.temp.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),$scope.value={intitiatedby:$scope.userRegDetails.personId,treatmentplan:$scope.dmfVisit.treatmentplan,diagnosis:$scope.dmfVisit.diagnosis,dateofoccurence:$scope.temp.dateofoccurence,applicantId:$scope.visitInfo.applicantId,initatedRole:$scope.roleid},APIS.DMF_POPUP.data=$scope.value,DataManager.sendRestRequest(null,APIS.DMF_POPUP,function(response){response.success?(ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.close()):$log.error("DMF Model: "+response.errorMessages)},$scope.userConfig.token)}),void $scope.$on("dmfcancel",function(){$uibModalInstance.dismiss("cancel")}))},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app").controller("investigationAnalysisDocumentModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),console.log($scope.userConfig),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),console.log($scope.visitInfo),$scope.visitInfo.visitId=parseInt($scope.visitInfo.visitId),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.rolename=$scope.currentRole.roleName,$scope.init=function(){$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup2={opened:!1},$scope.recordTypeComb=[],$scope.documentTypeCombo=[],$scope.subTypeCombo=[],$scope.subtype="",$scope.filterData={recordTypeId:null,doctypeId:null,subtypeId:null},$scope.filterData1={doctypeId:null,subtypeId:null},$scope.uploadData={document:"",filename:" ",filename:"",docTypeId:null,docSubtypeId:null,clinicId:1,reportDate:"",createdby:1,applicantId:$scope.visitInfo.applicantId},$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.perPage=20,$scope.filteredItems=[],$scope.griddata=[],$scope.fileUploadGridList=[],$scope.dataBind()},$scope.dataBind=function(){$scope.getRecordTypeCombo(),$scope.getDocumentTypeCombo(),$scope.getUploadedGridData(),$scope.loadgriddata(),$scope.getDocumentTypeCombo1()},$scope.loadgriddata=function(){$scope.griddata=[],$scope.visitid=$scope.visitInfo.visitId;var url=null,tempUrl=null;tempUrl=APIS.CAMB_GETGRIDATTACHMENT.URL,url=tempUrl+"/"+$scope.visitid,APIS.CAMB_GETGRIDATTACHMENT.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GETGRIDATTACHMENT,function(response){response.success?($scope.griddata=response.dataBean,console.log($scope.griddata)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token),APIS.CAMB_GETGRIDATTACHMENT.URL=tempUrl},$scope.closeattachdoc=function(){$scope.fileUploadGridList.length>0?$scope.$parent.$broadcast("isDocUploaded",{isUploded:!0}):$scope.$parent.$broadcast("isDocUploaded",{isUploded:!1}),$uibModalInstance.dismiss("cancel")},$scope.getRecordTypeCombo=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_RECORD_TYPE_COMBO,function(response){response.success?($scope.recordTypeComb=response.dataBean,console.log($scope.recordTypeComb)):$log.error("GET_CAMB_RECORD_TYPE_COMBO:"+response)},$scope.userConfig.token)},$scope.getDocumentTypeCombo=function(){DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success?($scope.documentTypeCombo=response.dataBean,console.log("documentType",$scope.documentTypeCombo)):$log.error("LME_ATTACHMENT_DOC_TYPE:"+response)},$scope.userConfig.token)},$scope.attachsubdocChange=function(){$scope.subtype="",$scope.noResults=!1,$scope.getSubTypeCombo()},$scope.getSubTypeCombo=function(){$scope.subTypeCombo=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.filterData.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?($scope.subTypeCombo=response.dataBean,console.log("subTypeCombo",$scope.subTypeCombo)):$log.error("LME_ATTACHMENT_DOC_SUBTYPE:"+response)},$scope.userConfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.getDocumentTypeCombo1=function(){DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success?($scope.documentTypeCombo=response.dataBean,console.log("documentType",$scope.documentTypeCombo)):$log.error("LME_ATTACHMENT_DOC_TYPE:"+response)},$scope.userConfig.token)},$scope.attachsubdocChange1=function(){$scope.subtype1="",$scope.noResults=!1,$scope.getSubTypeCombo1()},$scope.getSubTypeCombo1=function(){$scope.subTypeCombo1=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.filterData1.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?($scope.subTypeCombo1=response.dataBean,console.log("subTypeCombo1",$scope.subTypeCombo1)):$log.error("LME_ATTACHMENT_DOC_SUBTYPE:"+response)},$scope.userConfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.showContent=function($fileContent,index){var dataParts=$fileContent.split("base64,");$scope.content=dataParts[1],$scope.uploadData.document=$scope.content},$scope.filterDocumentData=function(){$scope.filterData.subtypeId=$.grep($scope.subTypeCombo,function(e){return e.description==$scope.subtype})[0].document_sub_type_id;var sendData={referenceType:$scope.visitInfo.applicantDetails.v_type,referenceId:$scope.visitInfo.visitId,applicantId:$scope.visitInfo.applicantId,recordTypeId:$scope.filterData.recordTypeId,documentTypeId:$scope.filterData.doctypeId,documentSubTypeId:$scope.filterData.subtypeId};APIS.GET_CAMB_FILTER_SEARCH.data=sendData,DataManager.sendRestRequest(null,APIS.GET_CAMB_FILTER_SEARCH,function(response){response.success?$scope.filteredItems=response.dataBean:$log.error("GET_CAMB_FILTER_SEARCH:"+response)},$scope.userConfig.token)},$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?($scope.fileUploadGridList=response.dataBean,$scope.isDocumentUploaded=response.dataBean.length>0,console.log($scope.fileUploadGridList)):$log.error("CAMB_GET_DIAGNOSIS_GRID_DATA "+response)},$scope.userConfig.token)},$scope.clickToApprove=function(data){$scope.approveConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure want to Approve?",$scope,"docAppr",function(){}),$scope.$on("docApprOk",function(){0==$scope.approveConfirmed&&($scope.sendData={doctypeId:data,approvedYn:"y",createdby:$scope.userInfo.personId},APIS.CAMB_APPROVE_DOC.data=$scope.sendData,DataManager.sendRestRequest(null,APIS.CAMB_APPROVE_DOC,function(response){response.success?(ModalService.openAlert("alert","Success","Approved successfully","null","null"),$scope.getUploadedGridData()):$log.error("GET_CAMB_FILTER_SEARCH:"+response)},$scope.userConfig.token)),$scope.approveConfirmed=!0}),$scope.$on("docApprcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.deleteUploadedGridRecord=function(documentID){ModalService.openAlert("confirm","warning","Are you sure want to delete the record",$scope,"doccumetDelete",function(){}),$scope.$on("doccumetDeleteOk",function(){$scope.documentId=documentID,APIS.DELETE_CAMB_UPLOAD_DOC.URL=String.prototype.format.apply(APIS.DELETE_CAMB_UPLOAD_DOC.tempURL,[$scope.documentId]),DataManager.sendRestRequest(null,APIS.DELETE_CAMB_UPLOAD_DOC,function(response){response.success?$scope.getUploadedGridData():$log.error("DELETE_CAMB_UPLOAD_DOC "+response)},$scope.userConfig.token)}),$scope.$on("doccumetDeletecancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.documentUpload=function(uploadData,pdfconvertfile){var filepath=document.getElementById("filename").value,filetype=filepath.substr(filepath.lastIndexOf(".")+1);if("pdf"!=filetype)return ModalService.openAlert("alert","Upload Fail","Only Pdf files can be uploaded","null","null"),!1;if($scope.frmSubmitted=!0,$scope.form.$invalid)return $scope.frmInvalid=!0,!1;if($scope.frmInvalid=!1,$scope.frmSubmitted=!1,null==pdfconvertfile||""==pdfconvertfile||void 0==pdfconvertfile)ModalService.openAlert("alert","Alert","Attach the File","null","null");else{$scope.filterData1.subtypeId=$.grep($scope.subTypeCombo1,function(e){return e.description==$scope.subtype1})[0].document_sub_type_id,$scope.attachdocumentsdescription=$.grep($scope.documentTypeCombo,function(e){return e.document_type_id==$scope.filterData1.doctypeId})[0].code,$scope.dateconvert=$filter("date")(new Date($scope.uploadData.reportdate),"yyyy-MM-dd"),$scope.filenameformat=$scope.visitInfo.applicantDetails.idNo+"_"+$scope.subtype+"_"+$scope.dateconvert;var filepath=document.getElementById("filename").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),$scope.uplddata={applicantId:$scope.visitInfo.applicantId,clinicId:1,createdby:$scope.userConfig.userSeqId,doctypeId:$scope.filterData1.doctypeId,document:pdfconvertfile,filename:filename,referenceId:$scope.visitInfo.visitId,referencetype:"CONSULT",reportdate:$scope.dateconvert,subtypeId:$scope.filterData1.subtypeId,roleName:$scope.rolename,doctypeDesc:$scope.attachdocumentsdescription},console.log($scope.uplddata),APIS.LME_SAVE_ATTACHMENT_DETAILS.data=$scope.uplddata,DataManager.sendRestRequest(null,APIS.LME_SAVE_ATTACHMENT_DETAILS,function(response){response.success?($scope.getUploadedGridData(),ModalService.openAlert("alert","success","Document Uploaded Successfully","null","null",function(){$("#fileName").val("")})):($log.error("GET_CAMB_FILTER_SEARCH:"+response),ModalService.openAlert("alert","Upload Fail","Only Pdf files can be uploaded","null","null"))},$scope.userConfig.token)}},$scope.getFileName=function(){var filepath=document.getElementById("fileName").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);return 0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),filename},$scope.getDocContentToView=function(documentId){APIS.CAMB_VIEW_DOCUMENT.URL=String.prototype.format.apply(APIS.CAMB_VIEW_DOCUMENT.tempURL,[documentId]),DataManager.sendRestRequest(null,APIS.CAMB_VIEW_DOCUMENT,function(response){response.success?$scope.getViewDocument(response.dataBean.file):$log.error("DELETE_CAMB_UPLOAD_DOC "+response)},$scope.userConfig.token)},$scope.tagdocuments=function(itemData){console.log("data",itemData),APIS.SAVE_TAG_BUTTON.data={documentsId:itemData},DataManager.sendRestRequest(null,APIS.SAVE_TAG_BUTTON,function(response){response.success?console.log(response.dataBean):$log.error("SAVE_TAG_BUTTON "+response)},$scope.userConfig.token)},$scope.getViewDocument=function(documentdata){var content=documentdata,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&$window.open("data:application/pdf;base64,"+documentdata,"_blank","location=no,enableviewportscale=yes")},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.open2=function(){$scope.popup2.opened=!0},$scope.init()}]),angular.module("app").controller("InvestigationReferralModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.init=function(){$scope.updateReferral=!1,$scope.referralListdata=[],$scope.specialityCombo=[],$scope.saveReferralData={},$scope.getSpecialityComboData(),$scope.getReferralList()},$scope.getSpecialityComboData=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_SPECIALITY_COMBO,function(response){response.success?$scope.specialityCombo=response.dataBean:$log.error("GET_CAMB_SPECIALITY_COMBO:"+response)},$scope.userConfig.token)},$scope.getReferralList=function(){$scope.cmbConsultId=$scope.visitInfo.visitId,APIS.GET_CAMB_PRE_REFERRAL_LIST.URL=String.prototype.format.apply(APIS.GET_CAMB_PRE_REFERRAL_LIST.tempURL,[$scope.cmbConsultId]),DataManager.sendRestRequest(null,APIS.GET_CAMB_PRE_REFERRAL_LIST,function(response){response.success?$scope.referralListdata=response.dataBean:$log.error("GET_CAMB_PRE_REFERRAL_LIST:"+response)},$scope.userConfig.token)},$scope.editReferral=function(data){console.log(data),$scope.updateReferral=!0,$scope.saveReferralData.specalityId=data.specalityId,$scope.saveReferralData.remarks=data.remarks,$scope.saveReferralData.consultReferralId=data.consultReferralId},$scope.saveReferral=function(saveData){if($scope.updateReferral){$scope.updateReferral=!1;var sendData={consultReferralId:saveData.consultReferralId,cmbConsultId:$scope.visitInfo.visitId,specalityId:saveData.specalityId,remarks:saveData.remarks};console.log(sendData),APIS.POST_CAMB_SAVE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_SAVE_REFERRAL,function(response){response.success?($scope.specialityCombo=response.dataBean,$scope.getReferralList(),$scope.getSpecialityComboData(),$scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks=""):$log.error("POST_CAMB_SAVE_REFERRAL:"+response)},$scope.userConfig.token)}else{var sendData={consultReferralId:0,cmbConsultId:$scope.visitInfo.visitId,specalityId:saveData.specalityId,remarks:saveData.remarks};APIS.POST_CAMB_SAVE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_SAVE_REFERRAL,function(response){response.success?($scope.specialityCombo=response.dataBean,$scope.getReferralList(),$scope.getSpecialityComboData(),$scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks=""):$log.error("POST_CAMB_SAVE_REFERRAL:"+response)},$scope.userConfig.token)}},$scope.deleteReferral=function(data){var sendData={consultReferralId:data.consultReferralId,cmbConsultId:$scope.visitInfo.visitId};APIS.POST_CAMB_DELETE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_DELETE_REFERRAL,function(response){response.success?($scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks="",$scope.getReferralList()):$log.error("POST_CAMB_DELETE_REFERRAL:"+response)},$scope.userConfig.token)},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app.camb").controller("cambMeasurementTabCtrl",["$scope","$state","APIS","$rootScope","$window","ModalService",function($scope,$state,APIS,$rootScope,$window,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.init=function(){"DME"==$scope.rolename&&"DMF"==$scope.visitType||"DME"==$scope.rolename&&"PR"==$scope.visitType||"CAMB Physician"==$scope.rolename?($scope.isClearnce=!0,$scope.showTab="cambanalysis"):($scope.showTab="measurements",$scope.isClearnce=!1),$scope.toDoSave=null,$scope.toDoSave={measurement:{status:!1,alertShown:!1},investigation:{status:!1,alertShown:!1},examination:{status:!1,alertShown:!1},audiometry:{status:!1,alertShown:!1},analysis:{status:!1,alertShown:!1}},$scope.dataBind()},$scope.dataBind=function(){$scope.$on("isDataSaved",function(events,args){$scope.toDoSave=args.data})},$scope.isUserModifed=function(){$scope.showSaveAlertMsg=null;var pageName=null;angular.forEach($scope.toDoSave,function(val,key){switch(key){case"measurement":pageName="Measurement";break;case"investigation":pageName="Investigation";break;case"examination":pageName="Examination";break;case"audiometry":pageName="Audiometry";break;case"analysis":pageName="Analysis"}val.status&&($scope.showSaveAlertMsg="You have modified data in "+pageName+", Please save.")}),$scope.showSaveAlertMsg&&ModalService.openAlert("alert","Alert",$scope.showSaveAlertMsg)},$scope.init()}]),angular.module("app.camb").controller("cambMeasurementsCtrl",["$scope","$state","$filter","APIS","DataManager","$timeout","$window","$rootScope","$uibModal","$log","ModalService","$stateParams",function($scope,$state,$filter,APIS,DataManager,$timeout,$window,$rootScope,$uibModal,$log,ModalService,$stateParams){function colorCodeTransformation(){angular.forEach($scope.mesurementData.generalDTO.suspineDataDTO,function(value,index){$scope.watchField(value.suspineDTO.sys,"suspineSys",index),$scope.watchField(value.suspineDTO.dia,"suspineDia",index),$scope.watchField(value.standingDTO.sys,"standingSys",index),$scope.watchField(value.standingDTO.dia,"standingDia",index),$scope.watchField(value.pulseRate,"pulseRate",index),value.posturalDrop>20?$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDropColor=!0:$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDropColor=!1}),angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,index){$scope.watchField(value.pefr,"pefr",index),$scope.watchField(value.actscore,"actScore",index)}),$scope.watchField($scope.mesurementData.generalDTO.height,"height"),$scope.watchField($scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight,"weight"),$scope.watchField($scope.mesurementData.generalDTO.waistRatioDTO.waist,"waist"),$scope.watchField($scope.mesurementData.generalDTO.waistRatioDTO.hip,"hip"),$scope.watchField($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.convergenceLimit,"convergenceLimit")}$scope.init=function(){$scope.dfile=null,$scope.isSubmitted=!1,$scope.onlyNumbers=/^\d+$/,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentAction=$scope.visitInfo.currentAction,$scope.measureFollowData=[],$scope.isLenseUsed=null,$scope.airbone="air",$scope.audioaid="withoutAid",$scope.validlist=[],$scope.audiogramData=[],$scope.frmSubmitted=!1,$scope.frmInvalid=!1,$scope.slectedVison=null,$scope.isVisionNear=!1,$scope.isVisionDistant=!1,$scope.colorPlatesValid=!0,$scope.validation=!0,$scope.enableNext=!1,$scope.bmiCharts=[],$scope.bmivalue=[],$scope.datevlue=[],$scope.datevle=[],$scope.sysMonth=[],$scope.weightcreated_ON=[],$scope.bmicreated_ON=[],$scope.weightlist=[],$scope.prewaistsRatio=[],$scope.waistcreated_ON=[],$scope.WaistMonth=[],$scope.syslist=[],$scope.dialist=[],$scope.syscreated_ON=[],$scope.audioData={visitID:$scope.visitInfo.visitId,audiometry:[{hearingAid:"withoutAid",type:"air",left:[],right:[]}]},$scope.uconfig||$state.go("login"),$scope.colorPlates=[{plateNo:1,platestatus:"a"},{plateNo:2,platestatus:"a"},{plateNo:3,platestatus:"a"},{plateNo:4,platestatus:"a"},{plateNo:5,platestatus:"a"},{plateNo:6,platestatus:"a"},{plateNo:7,platestatus:"a"},{plateNo:8,platestatus:"a"},{plateNo:9,platestatus:"a"},{plateNo:10,platestatus:"a"},{plateNo:11,platestatus:"a"},{plateNo:12,platestatus:"a"},{plateNo:13,platestatus:"a"},{plateNo:14,platestatus:"a"},{plateNo:15,platestatus:"a"},{plateNo:16,platestatus:"a"},{plateNo:17,platestatus:"a"},{plateNo:18,platestatus:"a"},{plateNo:19,platestatus:"a"},{plateNo:20,platestatus:"a"},{plateNo:21,platestatus:"a"},{plateNo:22,platestatus:"a"},{plateNo:23,platestatus:"a"},{plateNo:24,platestatus:"a"},{plateNo:25,platestatus:"a"}],$scope.mesurementData={visitID:$scope.visitInfo.visitId,generalDTO:{height:null,curentBmiDTO:{weightDTO:{currentWaight:null},bmiChartDTO:{currentBMI:null}},waistRatioDTO:{waist:null,hip:null,ratioDTO:{currentReading:null}},suspineDataDTO:[{suspineDTO:{sys:null,dia:null},standingDTO:{sys:null,dia:null},posturalDrop:"",pulseRate:"",remarks:null}],actScoreDTOList:[{pefr:null,remarks:null,asthmacontrol:{actQn1Score:null,actQn2Score:null,actQn3Score:null,actQn4Score:null,actQn5Score:null}}]},visionCorrection:{visionRequired:null,visionType:"",contactLense:"",spectacles:"",correctiveyepower:null,metricsLeftDTO:{ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null},metricsRightDTO:{rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null},visualActivityDTO:{distantVisualAcutiyDTO:{unaidedDTO:{unaidedRT:null,unaidedLT:null,unaidedBI:null},aidedDTO:{aidedRT:null,aidedLT:null,aidedBI:null}},spectacleDetailsDTO:{ableToReadN5DTO:{ableReadN5RT:null,ableReadN5LT:null,ableReadN5BI:null},ableToReadN14DTO:{ableReadN14RT:null,ableReadN14LT:null,ableReadN14BI:null}}}},colourPerceptionDTO:{paletStatusDTO:[],lmeMeaEyeOthersDTO:{colourLantern:null,cadTest:null,deficiency:null,convergenceLimit:null,stereopsis:null,remarks:null,maddoxWingDTO:{esoDTO:{pd:null,esoId:null},hypoDTO:{pd:null,esoId:null}},maddoxRodDTO:{esoDTO:{pd:null,esoId:null},hyperDTO:{pd:null,esoId:null}}}}},$scope.Act={ACTScore:[{PEFR:"rr",ACT:"gg"}]},$scope.comboData={},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.$on("examLoad",function(event,data){$scope.preloadData(),$scope.preloadaudio()}),$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.selectedclinic=!0,$scope.MonthDa=[],$scope.WeightMonth=[],$scope.dataBind(),$scope.toDoSave={measurement:{status:!1,alertShown:!1},investigation:{status:!1,alertShown:!1},examination:{status:!1,alertShown:!1},audiometry:{status:!1,alertShown:!1},analysis:{status:!1,alertShown:!1}};var isFormAlreadyModified=!1;$scope.$watch("form.$dirty",function(newval,old){newval&&($scope.toDoSave.measurement.status=!0,isFormAlreadyModified||$scope.$root.$broadcast("isDataSaved",{
data:$scope.toDoSave}),isFormAlreadyModified=!0)})},$scope.dataBind=function(){$scope.newform=!0,"DMF"==$scope.visittype||"PR"==$scope.visittype?($scope.arpreloadData(),$scope.preloadArAudio()):($scope.preloadaudio(),$scope.preloadData()),$scope.getValidationRules(),$scope.measurefollowLoadCombo(),$scope.getMandatoryFields(),$scope.getFieldsRule(),$scope.getUploadedGridData(),$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1}),$scope.loadData(),$scope.$on("audogrameLeftCount",function(event,args){args.count>0&&args.count<7?$scope.audiogramLeftPointsRequied=!0:$scope.audiogramLeftPointsRequied=!1}),$scope.$on("audogrameRightCount",function(event,args){args.count>0&&args.count<7?$scope.audiogramRightPointsRequied=!0:$scope.audiogramRightPointsRequied=!1}),$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?response.dataBean.length>0?$scope.$parent.$broadcast("isDocUploaded",{isUploded:!0}):$scope.$parent.$broadcast("isDocUploaded",{isUploded:!1}):$log.error("CAMB_GET_DIAGNOSIS_GRID_DATA "+response)},$scope.userConfig.token)},$scope.loadgriddata=function(){$scope.griddata=[],$scope.visitid=$scope.visitInfo.visitId;var url=null,tempUrl=null;tempUrl=APIS.CAMB_GETGRIDATTACHMENT.URL,url=tempUrl+"/"+$scope.visitid,APIS.CAMB_GETGRIDATTACHMENT.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_GETGRIDATTACHMENT,function(response){response.success?$scope.isDocumentUploaded=0==response.dataBean.length:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.userConfig.token),APIS.CAMB_GETGRIDATTACHMENT.URL=tempUrl},$scope.pal_status="a",$scope.$watch("colourperception",function(newValue,oldValue){"Normal"==newValue&&angular.forEach($scope.colorPlates,function(value,key){$scope.colorPlates[key].platestatus="g"}),"Clear"==newValue&&angular.forEach($scope.colorPlates,function(value,key){$scope.colorPlates[key].platestatus="a"})}),$scope.$watch("isLenseUsed",function(val,old){val&&($scope.mesurementData.visionCorrection.spectacles="spectacles"==val?"Y":"N",$scope.mesurementData.visionCorrection.contactLense="contactLense"==val?"Y":"N")}),$scope.$watch("mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight",function(val,old){$scope.$root.$broadcast("measurementWeight",{weight:val})}),$scope.$watch("bmiRatio",function(val,old){val&&($scope.bmiColor=$scope.getColorCode(val,"bmi"))}),$scope.$watch("waistRatio",function(val,old){val&&($scope.waistRatioColor=$scope.getColorCode(val,"waist"))})},$scope.watchField=function(value,fieldName,index,deficiencyFieldVal){var value=parseFloat(value),temp=void 0===index||"null"==index?fieldName+"Color":fieldName+index+"Color";return!angular.isNumber(value)||isNaN(value)?($scope[temp]=null,!1):void(value&&($scope[temp]=$scope.getColorCode(value,fieldName,deficiencyFieldVal)))},$scope.$watch("mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.pd",function(newValue,oldValue){console.log("Assign"+newValue),0==newValue?($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId="NA",$scope.maddoxWingDTO_esoDTO=!1,$('#selDiv1 option[value="string:NA"]').prop("selected",!0),$scope.maddoxWingDTO_esoDTO=!0):($('#selDiv1 option[value="string:ESO"]').removeAttr("selected"),$('#selDiv1 option[value="string:EXO"]').removeAttr("selected"),$scope.maddoxWingDTO_esoDTO=!1)}),$scope.$watch("mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.pd",function(newValue,oldValue){0==newValue?($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId="NA",$scope.maddoxWingDTO_hypoDTO=!1,$('#selDiv2 option[value="string:NA"]').prop("selected",!0),$scope.maddoxWingDTO_hypoDTO=!0):($('#selDiv2 option[value="string:HYPO"]').removeAttr("selected"),$('#selDiv2 option[value="string:HYPER"]').removeAttr("selected"),$scope.maddoxWingDTO_hypoDTO=!1)}),$scope.$watch("mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.pd",function(newValue,oldValue){0==newValue?($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId="NA",$scope.maddoxRodDTO_esoDTO=!1,$('#selDiv3 option[value="string:NA"]').prop("selected",!0),$scope.maddoxRodDTO_esoDTO=!0):($('#selDiv3 option[value="string:ESO"]').removeAttr("selected"),$('#selDiv3 option[value="string:EXO"]').removeAttr("selected"),$scope.maddoxRodDTO_esoDTO=!1)}),$scope.$watch("mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.pd",function(newValue,oldValue){0==newValue?($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId="NA",$scope.maddoxRodDTO_hyperDTO=!1,$('#selDiv4 option[value="string:NA"]').prop("selected",!0),$scope.maddoxRodDTO_hyperDTO=!0):($('#selDiv4 option[value="string:HYPO"]').removeAttr("selected"),$('#selDiv4 option[value="string:HYPER"]').removeAttr("selected"),$scope.maddoxRodDTO_hyperDTO=!1)}),$scope.valuecolorchangeUALR=function(getId,value){var ualrselectedId="#"+getId,ualroptionId="#"+getId+" option";$(ualrselectedId).removeClass("textcolorgreen"),$(ualrselectedId).removeClass("textcolorred"),$(ualrselectedId).removeClass("textcolororange"),2!=value&&3!=value&&4!=value||($(ualrselectedId).addClass("textcolorgreen"),$(ualroptionId).css("color","black")),10==value&&($(ualrselectedId).addClass("textcolorred"),$(ualroptionId).css("color","black")),5!=value&&6!=value&&7!=value&&8!=value&&9!=value||($(ualrselectedId).addClass("textcolororange"),$(ualroptionId).css("color","black"))},$scope.valuecolorchangeALR=function(getId,value){var alrselectedId="#"+getId,alroptionId="#"+getId+" option";$(alrselectedId).removeClass("textcolorgreen"),$(alrselectedId).removeClass("textcolorred"),$(alrselectedId).removeClass("textcolororange"),2!=value&&3!=value&&4!=value||($(alrselectedId).addClass("textcolorgreen"),$(alroptionId).css("color","black")),5!=value&&6!=value&&7!=value&&8!=value&&9!=value&&10!=value||($(alrselectedId).addClass("textcolorred"),$(alroptionId).css("color","black"))},$scope.valuecolorchangeUABino=function(getId,value){var UaBinoselectedId="#"+getId,UaBinooptionId="#"+getId+" option";$(UaBinoselectedId).removeClass("textcolorgreen"),$(UaBinoselectedId).removeClass("textcolorred"),$(UaBinoselectedId).removeClass("textcolororange"),2!=value&&3!=value||($(UaBinoselectedId).addClass("textcolorgreen"),$(UaBinooptionId).css("color","black")),4==value&&($(UaBinoselectedId).addClass("textcolororange"),$(UaBinooptionId).css("color","black")),5!=value&&6!=value&&7!=value&&8!=value&&9!=value&&10!=value||($(UaBinoselectedId).addClass("textcolorred"),$(UaBinooptionId).css("color","black"))},$scope.valuecolorchangeABino=function(getId,value){var ABinoselectedId="#"+getId,ABinooptionId="#"+getId+" option";$(ABinoselectedId).removeClass("textcolorgreen"),$(ABinoselectedId).removeClass("textcolorred"),$(ABinoselectedId).removeClass("textcolororange"),2!=value&&3!=value||($(ABinoselectedId).addClass("textcolorgreen"),$(ABinooptionId).css("color","black")),4==value&&($(ABinoselectedId).addClass("textcolororange"),$(ABinooptionId).css("color","black")),5!=value&&6!=value&&7!=value&&8!=value&&9!=value&&10!=value||($(ABinoselectedId).addClass("textcolorred"),$(ABinooptionId).css("color","black"))},$scope.valuecolorchangeSphere=function(getId,value){var sphereSelectedId="#"+getId,sphereOptionId="#"+getId+" option";$(sphereSelectedId).removeClass("textcolorgreen"),$(sphereSelectedId).removeClass("textcolorred"),$(sphereSelectedId).removeClass("textcolororange"),value>=25&&value<=49&&($(sphereSelectedId).addClass("textcolorred"),$(sphereOptionId).css("color","black")),value>=2&&value<=24&&($(sphereSelectedId).addClass("textcolorgreen"),$(sphereOptionId).css("color","black"))},$scope.valuecolorchangeCylinder=function(getId,value){var cylinderSelectedId="#"+getId,cylinderOptionId="#"+getId+" option";$(cylinderSelectedId).removeClass("textcolorgreen"),$(cylinderSelectedId).removeClass("textcolorred"),$(cylinderSelectedId).removeClass("textcolororange"),value>=9&&value<=28&&($(cylinderSelectedId).addClass("textcolorred"),$(cylinderOptionId).css("color","black")),value>=2&&value<=8&&($(cylinderSelectedId).addClass("textcolorgreen"),$(cylinderOptionId).css("color","black"))},$scope.MaddoxNACheck=function(flag){"MaddoxWingleft"==flag&&$("#maddox1").val()>=1&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId&&(ModalService.openAlert("alert","Alert","Select from ESO or EXO"),$scope.maddoxWingDTO_esoDTO=!1),"MaddoxWingright"==flag&&$("#maddox2").val()>=1&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId&&(ModalService.openAlert("alert","Alert","Select from HYPO or HYPER"),$scope.maddoxWingDTO_hypoDTO=!1),"MaddoxWing2left"==flag&&$("#maddox3").val()>=1&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId&&(ModalService.openAlert("alert","Alert","Select from ESO or EXO"),$scope.maddoxRodDTO_esoDTO=!1),"MaddoxWing2right"==flag&&$("#maddox4").val()>=1&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId&&(ModalService.openAlert("alert","Alert","Select from HYPO or HYPER"),$scope.maddoxRodDTO_hyperDTO=!1)},$scope.$watch("mesurementData.visionCorrection.visionRequired",function(newValue,oldValue){if("N"==newValue){$("#correctLens option").removeAttr("selected");var mySelVal=$("#correctLens option").length;mySelVal<4&&$("#correctLens").prepend('<option value="?" selected="selected"></option>'),$(".hed_eye_test option").removeAttr("selected"),$scope.mesurementData.visionCorrection.correctiveyepower="A",$scope.isLenseUsed=null}}),$scope.uncheck=function(event){$scope.colourperception==event.target.value&&($scope.colourperception=!1)},$scope.changeColor=function(index){switch($scope.colorPlates[index].platestatus){case"a":$scope.colorPlates[index].platestatus="g";break;case"g":$scope.colorPlates[index].platestatus="r",$scope.colourperception=null;break;case"r":$scope.colorPlates[index].platestatus="a"}$scope.colorPlatesClearCount=0,$scope.colorPlatesNormalCount=0,angular.forEach($scope.colorPlates,function(value,index){"a"==value.platestatus&&$scope.colorPlatesClearCount++,"g"==value.platestatus&&$scope.colorPlatesNormalCount++}),$scope.colorPlatesClearCount==$scope.colorPlates.length&&($scope.colourperception="Clear"),$scope.colorPlatesNormalCount==$scope.colorPlates.length&&($scope.colourperception="Normal")},$scope.loadData=function(){DataManager.sendRestRequest(null,APIS.GET_MEASUREMENT,function(response){response.success?$scope.comboData=response.dataBean:console.log("GET_MEASUREMENT: "+response.errorMessage)},$scope.uconfig.token)},$scope.saveData=function(){return $scope.frmSubmitted=!0,$scope.form.$invalid||!$scope.validation?($scope.frmInvalid=!0,ModalService.openAlert("alert","Measurement","Please fill all mandatory fields or There was an error with your submission."),!1):($scope.frmInvalid=!1,$scope.mesurementData.colourPerceptionDTO.paletStatusDTO=$scope.colorPlates,APIS.SAVE_MEASUREMENT.data=$scope.mesurementData,void DataManager.sendRestRequest(null,APIS.SAVE_MEASUREMENT,function(response){if(response.success){var temp={weight:0};$scope.mesurementData.generalDTO.curentBmiDTO&&(temp.weight=$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight?$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight:0),sessionStorage.setItem("measurement_weight",JSON.stringify(temp)),ModalService.openAlert("alert","Measurement",response.successMessage),$scope.enableNext=!0,$scope.$root.$broadcast("examinationONload",!0)}else $log.error(response.errorMessage)},$scope.uconfig.token))},$scope.arsaveData=function(){$scope.mesurementData.colourPerceptionDTO.paletStatusDTO=$scope.colorPlates,delete $scope.mesurementData.pageId,APIS.AR_SAVE_MEASUREMENT.data=$scope.mesurementData,DataManager.sendRestRequest(null,APIS.AR_SAVE_MEASUREMENT,function(response){response.success?(ModalService.openAlert("alert","Measurement",response.successMessage),$scope.enableNext=!0):$log.error(response.errorMessage)},$scope.uconfig.token)},$scope.postalDropTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.suspineDataDTO,function(value,index){$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop=parseInt(value.suspineDTO.sys)-parseInt(value.standingDTO.sys)})},$scope.actscroeTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,index){$scope.mesurementData.generalDTO.actScoreDTOList[index].actscore=value.asthmacontrol.actQn1Score+value.asthmacontrol.actQn2Score+value.asthmacontrol.actQn3Score+value.asthmacontrol.actQn4Score+value.asthmacontrol.actQn5Score})},$scope.preloadData=function(){var url=null,tempUrl=null;tempUrl=APIS.CAMB_PRELOAD_MEASUREMENT.URL,url=tempUrl+"/"+$scope.visitInfo.visitId+"/"+$scope.visitInfo.applicantId,APIS.CAMB_PRELOAD_MEASUREMENT.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_PRELOAD_MEASUREMENT,function(response){if(response.success){if($scope.enableNext=!0,$scope.mesurementData=response.dataBean[0],"Y"==response.dataBean[0].visionCorrection.spectacles&&($scope.isLenseUsed="spectacles"),"Y"==response.dataBean[0].visionCorrection.contactLense&&($scope.isLenseUsed="contactLense"),$scope.slectedVison=$scope.mesurementData.visionCorrection.visionType,$timeout(function(){$scope.changeVision($scope.slectedVison)},4e3),0==$scope.mesurementData.generalDTO.suspineDataDTO.length?$scope.addSupinenew():$scope.postalDropTransformation($scope.mesurementData.generalDTO.suspineDataDTO),0==$scope.mesurementData.generalDTO.actScoreDTOList.length?$scope.actscore():$scope.actscroeTransformation($scope.mesurementData.generalDTO.actScoreDTOList),!$scope.mesurementData.visionCorrection.metricsLeftDTO){var metricsLeft={ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null};$scope.mesurementData.visionCorrection.metricsLeftDTO=metricsLeft}if(!$scope.mesurementData.visionCorrection.metricsRightDTO){var metricsRight={rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null};$scope.mesurementData.visionCorrection.metricsRightDTO=metricsRight}if($scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight&&$scope.bmiCalculation($scope.mesurementData.generalDTO.height,$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight),null!=$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO.length>0)for(var b=0;b<$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO.length;b++)$scope.prebmiCalculation($scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].height,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].waight,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].created_ON),$scope.preweight($scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].waight,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].created_ON);if(null!=$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip&&$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip.length>0)for(var b=0;b<$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip.length;b++)$scope.prewaisthipCalculation($scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].waist,$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].hip,$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].created_ON);if($scope.checksup=$scope.mesurementData.generalDTO.suspineDataDTO[0].suspineDTO,$scope.checksup.previousSuspine&&$scope.checksup.previousSuspine.length>0)for(var i=0;i<$scope.checksup.previousSuspine.length>0;i++)$scope.previousSuspine($scope.checksup.previousSuspine[i].sys,$scope.checksup.previousSuspine[i].dia,$scope.checksup.previousSuspine[i].created_ON);$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip),$scope.slectedVison=$scope.mesurementData.visionCorrection.visionType,$scope.colorPlates=response.dataBean[0].colourPerceptionDTO.paletStatusDTO?response.dataBean[0].colourPerceptionDTO.paletStatusDTO:$scope.colorPlates,$scope.invalidPalets=$filter("filter")($scope.colorPlates,{platestatus:"a"}),$scope.showColorPalletMsg=!!$scope.invalidPalets.length,$scope.valuecolorchangeSphere("ltSphere",$scope.mesurementData.visionCorrection.metricsLeftDTO.ltSphere),$scope.valuecolorchangeCylinder("ltCylinder",$scope.mesurementData.visionCorrection.metricsLeftDTO.ltCylinder),$scope.valuecolorchangeSphere("rtSphere",$scope.mesurementData.visionCorrection.metricsRightDTO.rtSphere),$scope.valuecolorchangeCylinder("rtCylinder",$scope.mesurementData.visionCorrection.metricsRightDTO.rtCylinder),$scope.valuecolorchangeUABino("unAidedBinocular",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedBI),$scope.valuecolorchangeABino("aidedBinocular",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedBI),$scope.valuecolorchangeUALR("unaidedRT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedRT),$scope.valuecolorchangeUALR("unaidedLT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedLT),$scope.valuecolorchangeALR("aidedRT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedRT),$scope.valuecolorchangeALR("aidedLT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedLT),colorCodeTransformation()}else console.log("CAMB_PRELOAD_MEASUREMENT: "+response.errorMessage)},$scope.uconfig.token),APIS.CAMB_PRELOAD_MEASUREMENT.URL=tempUrl},$scope.cambsaveData=function(){return null==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO&&null==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO&&null==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO&&null==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO&&null==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO&&null==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO&&null==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO||!(null!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO&&null!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO&&0!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.pd&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId||null!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO&&null!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO&&0!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.pd&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId||null!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO&&0!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO&&0!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.pd&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId||null!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO&&0!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO&&0!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.pd&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId)?($scope.invalidPalets=$filter("filter")($scope.colorPlates,{platestatus:"a"}),$scope.isRedCell=$filter("filter")($scope.colorPlates,{platestatus:"r"}),$scope.isGreenCell=$filter("filter")($scope.colorPlates,{platestatus:"g"}),$scope.invalidPalets.length||$scope.invalidPalets.length&&($scope.isRedCell.length||$scope.isGreenCell.length)?($scope.colorPlatesValid=!1,$scope.showColorPalletMsg=!0):($scope.showColorPalletMsg=!1,$scope.colorPlatesValid=!0),$scope.validlist.length?$scope.validation=!1:$scope.validation=!0,$scope.validation?($scope.frmInvalid=!1,$scope.mesurementData.colourPerceptionDTO.paletStatusDTO=$scope.colorPlates,delete $scope.mesurementData.applicantID,APIS.CAMB_SAVE_MEASUREMENT.data=$scope.mesurementData,void DataManager.sendRestRequest(null,APIS.CAMB_SAVE_MEASUREMENT,function(response){response.success?(ModalService.openAlert("alert","Measurement",response.successMessage),$scope.$root.$broadcast("examinationONload",!0)):$log.error(response.errorMessage)},$scope.uconfig.token)):($scope.frmInvalid=!0,ModalService.openAlert("alert","Measurement","Please enter correct values in fields"),!1)):(ModalService.openAlert("alert","Alert","Please Give Valid Maddox Wing/Rod"),!1)},$scope.addSupine=function(){var temp={suspineDTO:{sys:null,dia:null},standingDTO:{sys:null,dia:null},posturalDrop:"",pulseRate:""};$scope.mesurementData.generalDTO.suspineDataDTO.push(temp)},$scope.DeleteSupine=function(index){ModalService.openAlert("confirm","warning","Are you sure want to delete the record",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.mesurementData.generalDTO.suspineDataDTO.length>1&&$scope.mesurementData.generalDTO.suspineDataDTO.splice(index,1)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.addActscore=function(){var temp={pefr:null,asthmacontrol:{actQn1Score:null,actQn2Score:null,actQn3Score:null,actQn4Score:null,actQn5Score:null}};$scope.mesurementData.generalDTO.actScoreDTOList.push(temp)},$scope.DeleteActscore=function(index){ModalService.openAlert("confirm","warning","Are you sure want to delete the record",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.mesurementData.generalDTO.actScoreDTOList.length>1&&$scope.mesurementData.generalDTO.actScoreDTOList.splice(index,1)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.measurefollowLoadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LME_FOLLOWUP_COMBO,function(response){response.success?$scope.measureFollowData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupdoAction=function(){$uibModal.open({animation:!0,templateUrl:"mesureFollowUp",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.chartpop=function(){$uibModal.open({animation:!0,templateUrl:"meschart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.waisthippop=function(){$uibModal.open({animation:!0,templateUrl:"waistchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.weightpop=function(){$uibModal.open({animation:!0,templateUrl:"weightchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.syspop=function(){$uibModal.open({animation:!0,templateUrl:"syschart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.doattachAction=function(){$uibModal.open({animation:!0,templateUrl:"MesurementAttachDoc",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"mesureDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.AbortdoAction=function(){$uibModal.open({animation:!0,templateUrl:"mesureAbort",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.redirect=function(){window.location="#/app/lme/partials/physicalexamination.html"},$scope.addSupinenew=function(){var temp=[{suspineDTO:{sys:null,dia:null},standingDTO:{sys:null,dia:null},posturalDrop:"",pulseRate:""}];$scope.mesurementData.generalDTO.suspineDataDTO=temp},$scope.actscore=function(){var temp1=[{pefr:null,actscore:null,asthmacontrol:{actQn1Score:null,actQn2Score:null,actQn3Score:null,actQn4Score:null,actQn5Score:null}}];$scope.mesurementData.generalDTO.actScoreDTOList=temp1},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.openAsthmaModal=function(param,data){var modalInstance=$uibModal.open({animation:!0,templateUrl:"asthmacontrol",controller:"AsthmaCtrl",size:"lg",resolve:{modalParam:function(){var temp={index:param,data:data};return temp}}});modalInstance.result.then(function(response){$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn1Score=response.score.score1,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn2Score=response.score.score2,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn3Score=response.score.score3,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn4Score=response.score.score4,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn5Score=response.score.score5,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].actscore=response.total},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.saveAudioMetry=function(){return $scope.audiogramLeftPointsRequied||$scope.audiogramRightPointsRequied?(ModalService.openAlert("alert","Audiograme","Invalid points please click  at least 7 points to save audiometry either left or right."),!1):(angular.forEach($scope.audioData.audiometry,function(value,key){if(Array.isArray(value.left))var left={sound1:null,sound2:null,sound3:null,sound4:null,sound5:null,sound6:null,sound7:null,sound8:null};else var left=value.left;if(angular.forEach(value.left,function(leftAudio,leftIndex){if(leftAudio&&leftAudio.hasOwnProperty("freq"))switch(leftAudio.freq){case 75:left.sound1=leftAudio.sound;break;case 132:left.sound2=leftAudio.sound;break;case 190:left.sound3=leftAudio.sound;break;case 246:left.sound4=leftAudio.sound;break;case 275:left.sound5=leftAudio.sound;break;case 304:left.sound6=leftAudio.sound;break;case 334:left.sound7=leftAudio.sound;break;case 361:left.sound8=leftAudio.sound}}),$scope.audioData.audiometry[key].left=left,Array.isArray(value.right))var right={sound1:null,sound2:null,sound3:null,sound4:null,sound5:null,sound6:null,sound7:null,sound8:null};else var right=value.right;angular.forEach(value.right,function(rightAudio,rightIndex){if(rightAudio&&rightAudio.hasOwnProperty("freq"))switch(rightAudio.freq){case 75:right.sound1=rightAudio.sound;break;case 132:right.sound2=rightAudio.sound;break;case 190:right.sound3=rightAudio.sound;break;case 246:right.sound4=rightAudio.sound;break;case 275:right.sound5=rightAudio.sound;break;case 304:right.sound6=rightAudio.sound;break;case 334:right.sound7=rightAudio.sound;break;case 361:right.sound8=rightAudio.sound}}),$scope.audioData.audiometry[key].right=right}),void $scope.saveAudio($scope.audioData))},$scope.saveAudio=function(threashold){APIS.SAVE_CAMB_AUDIOMETROY.data=threashold,DataManager.sendRestRequest(null,APIS.SAVE_CAMB_AUDIOMETROY,function(response){response.success?ModalService.openAlert("alert","Audiograme",response.successMessage):$log.error("Audiograme Save: "+response.errorMessage)},$scope.uconfig.token)},$scope.preloadaudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_CAMB_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.visitInfo.visitId,APIS.GET_CAMB_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_CAMB_AUDIOMETROY,function(response){response.success?response.dataBean.audiometry.length>0?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.showCanvas=!0):$log.error("Audiograme Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_CAMB_AUDIOMETROY.URL=tempUrl},$scope.getValidationRules=function(){$scope.ruleParam={pageCode:"MEASURE"},APIS.GET_MEDICAL_TEMP_RULES.data=$scope.ruleParam,DataManager.sendRestRequest(null,APIS.GET_MEDICAL_TEMP_RULES,function(response){response.success?$scope.splitFields(response.dataBean):$log.error("Validation Rules:"+response.errorMessage)},$scope.uconfig.token)},$scope.bmiCalculation=function(height,weight){if(!height||!weight)return $scope.bmiRatio="",!1;var height=height/100,ratio=weight/(height*height);$scope.bmiRatio=ratio.toFixed(2)},$scope.waistCalculation=function(waist,hip){if(!waist||!hip)return $scope.waistRatio="",!1;var ratio=waist/hip;$scope.waistRatio=ratio.toFixed(2)},$scope.prebmiCalculation=function(height,weight,created_ON){if(!height||!weight)return!1;var height=height/100,ratio=weight/(height*height);$scope.prebmiRatio=ratio.toFixed(2),$scope.bmiCharts.push(parseFloat($scope.prebmiRatio)),$scope.bmicreated_ON.push(created_ON),$scope.chartData()},$scope.prewaisthipCalculation=function(waist,hip,created_ON){var ratio=waist/hip;$scope.prewaistRatio=ratio.toFixed(2),$scope.prewaistsRatio.push(parseFloat($scope.prewaistRatio)),$scope.waistcreated_ON.push(created_ON),$scope.waistchartData()},$scope.preweight=function(weight,created_ON){$scope.weightlist.push(weight),$scope.weightcreated_ON.push(created_ON),$scope.weightchartData()},$scope.previousSuspine=function(sysval,diaval,created_ON){$scope.syslist.push(sysval),$scope.dialist.push(diaval),$scope.syscreated_ON.push(created_ON),$scope.syschartData()},$scope.getColorCode=function(givenValue,fields,deficiencyFieldVal){if("pdeso"==fields||"madrodpdeso"==fields||"pdhypo"==fields||"madrodpdhyper"==fields){var fieldName=null;switch(deficiencyFieldVal){case"ESO":"pdeso"==fields?fieldName="maddoxwgpdeso":"madrodpdeso"==fields&&(fieldName="maddoxrodpdeso");break;case"EXO":"pdeso"==fields?fieldName="maddoxwgpdexo":"madrodpdeso"==fields&&(fieldName="maddoxrodpdexo");break;case"HYPO":"pdhypo"==fields?fieldName="maddoxwgpdhypo":"madrodpdhyper"==fields&&(fieldName="maddoxrodpdhypo");break;case"HYPER":"pdhypo"==fields?fieldName="maddoxwgpdhyper":"madrodpdhyper"==fields&&(fieldName="maddoxrodpdhyper")}fields=fieldName}if(givenValue&&null==$scope.fields[fields])return!1;var highValue=$scope.fields[fields].highValue,source=highValue.split(" "),highSym=source[0],highVal=parseFloat(source[1]),normalValue=$scope.fields[fields].normalValue,sourcen=normalValue.split(" "),normalSym=sourcen[0],normalVal=parseFloat(sourcen[1]);if(!givenValue||!highVal||!normalVal)return!1;var color="orange";return">"==highSym&&givenValue>highVal&&(color="red"),">="==highSym&&givenValue>=highVal&&(color="red"),"<"==highSym&&givenValue<highVal&&(color="red"),"<="==highSym&&givenValue<=highVal&&(color="red"),"!="==highSym&&givenValue!=highVal&&(color="red"),"=="==highSym&&givenValue==highVal&&(color="red"),">"==normalSym&&givenValue>normalVal&&(color="green"),
">="==normalSym&&givenValue>=normalVal&&(color="green"),"<"==normalSym&&givenValue<normalVal&&(color="green"),"<="==normalSym&&givenValue<=normalVal&&(color="green"),"!="==normalSym&&givenValue!=normalVal&&(color="green"),"=="==normalSym&&givenValue==normalVal&&(color="green"),color},$scope.splitFields=function(fields){$scope.fields={height:null,weight:null,bmi:null,waist:null,hip:null,waist_hip:null,suspineSys:null,suspineDia:null,standingSys:null,standingDia:null,posturalDrop:null,pulseRate:null,pefr:null,actScore:null,ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null,rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null,unaidedRT:null,unaidedLT:null,unAidedBinocular:null,aidedRT:null,aidedLT:null,aidedBinocular:null,convergenceLimit:null,maddoxrodpdexo:null,maddoxrodpdeso:null,maddoxrodpdhypo:null,maddoxrodpdhyper:null,maddoxwgpdexo:null,maddoxwgpdeso:null,maddoxwgpdhypo:null,maddoxwgpdhyper:null},angular.forEach(fields,function(value,key){switch(value.uiFieldName){case"HEIGHT":$scope.fields.height=value;break;case"WEIGHT":$scope.fields.weight=value;break;case"BMI":$scope.fields.bmi=value;break;case"WAIST":$scope.fields.waist=value;break;case"HIP":$scope.fields.hip=value;break;case"WHRatio":$scope.fields.waist_hip=value;break;case"Supine Sys":$scope.fields.suspineSys=value;break;case"Supine Dia":$scope.fields.suspineDia=value;break;case"Standing Sys":$scope.fields.standingSys=value;break;case"Standing Dia":$scope.fields.standingDia=value;break;case"Postural Drop":$scope.fields.posturalDrop=value;break;case"Pulse Rate":$scope.fields.pulseRate=value;break;case"PEFR":$scope.fields.pefr=value;break;case"ACT Score":$scope.fields.actScore=value;break;case"LTSPHERE":$scope.fields.ltSphere=value;break;case"LTCYLINDER":$scope.fields.ltCylinder=value;break;case"LTAXIS":$scope.fields.ltAxis=value;break;case"LTINTERMEDIATE":$scope.fields.ltIntermediate=value;break;case"LTNEAR":$scope.fields.ltNear=value;break;case"RTSPHERE":$scope.fields.rtSphere=value;break;case"RTCYLINDER":$scope.fields.rtCylinder=value;break;case"RTAXIS":$scope.fields.rtAxis=value;break;case"RTINTERMEDIATE":$scope.fields.rtIntermediate=value;break;case"RTNEAR":$scope.fields.rtNear=value;break;case"DVAUNAIDEDRT":$scope.fields.unaidedRT=value;break;case"DVAUNAIDEDLT":$scope.fields.unaidedLT=value;break;case"DVAUNAIDEDBIN":$scope.fields.unAidedBinocular=value;break;case"DVAAIDEDRT":$scope.fields.aidedRT=value;break;case"DEVAAIDEDLT":$scope.fields.aidedLT=value;break;case"DVAAIDEDBIN":$scope.fields.aidedBinocular=value;break;case"Convergence Limit":$scope.fields.convergenceLimit=value;break;case"MADDOX_ROD_EXO":$scope.fields.maddoxrodpdexo=value;break;case"MADDOX_ROD_ESO":$scope.fields.maddoxrodpdeso=value;break;case"MADDOX_ROD_HYPO":$scope.fields.maddoxrodpdhypo=value;break;case"MADDOX_ROD_HYEPR":$scope.fields.maddoxrodpdhyper=value;break;case"MADDOX_WG_EXO":$scope.fields.maddoxwgpdexo=value;break;case"MADDOX_WG_ESO":$scope.fields.maddoxwgpdeso=value;break;case"MADDOX_WG_HYPO":$scope.fields.maddoxwgpdhypo=value;break;case"MADDOX_WG_HYPER":$scope.fields.maddoxwgpdhyper=value}}),$log.info("minmax value"),$log.log($scope.fields)},$scope.posturalDrop=function(index,supSys,standSys){if(!supSys||!standSys)return $scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop="",!1;var suspine=parseInt(supSys),standing=parseInt(standSys),posturalDrop=suspine-standing;posturalDrop>20?$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDropColor=!0:$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDropColor=!1,$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop=posturalDrop},$scope.getMandatoryFields=function(){console.log($scope.visitInfo),APIS.GET_MANDATORY_FIELDS.data=$scope.ruleParam,DataManager.sendRestRequest(null,APIS.GET_MANDATORY_FIELDS,function(response){response.success?($log.info("fields mandatory"),$log.log(response)):$log.error("Mandatory Fields:"+response.errorMessage)},$scope.uconfig.token)},$scope.getFieldsRule=function(){DataManager.sendRestRequest(null,APIS.GET_FIELDS_VALIDATION,function(response){response.success?($log.info("Validation Rules"),$log.log(response)):$log.error("Validation Rules:"+response.errorMessage)},$scope.uconfig.token)},$scope.checkMaxValue=function(givenValue,maxVal,fields){var highValue=$scope.fields[fields].highValue,highValue=parseInt(highValue);return!(!givenValue||!maxVal)&&(givenValue=parseInt(givenValue),maxVal=parseInt(maxVal),void(givenValue>maxVal&&ModalService.openAlert("alert","Validation","Please enter the value less than <b>"+maxVal+"</b>")))},$scope.removeAudiometry=function(){$scope.audiogramLeftPointsRequied=!1,$scope.audiogramRightPointsRequied=!1,console.log($scope.audioData.audiometry);for(var chkBox,numberOfRows=$scope.audioData.audiometry.length,cnt=0,iscleared=!1,i=0;i<numberOfRows;i++)if(chkBox=$("#rowcamb-"+i).prop("checked"),1==chkBox){$("#rowcamb-"+i).attr("checked",!1),iscleared=!0;var leftCanvasId="#leftCan-"+i,rightCanvasId="#rightCan-"+i,lastItem=$scope.audioData.audiometry[i],index=$scope.audioData.audiometry.indexOf(lastItem);$scope.audioData.audiometry.splice(index,1),$scope.audioData=$scope.audioData;var leftcanvas=angular.element(document.querySelector(leftCanvasId)),leftcontext=leftcanvas[0].getContext("2d");leftcontext.clearRect(0,0,400,350);var rightcanvas=angular.element(document.querySelector(rightCanvasId)),rightcontext=rightcanvas[0].getContext("2d");rightcontext.clearRect(0,0,400,350),$scope.$broadcast("redraw",{data:$scope.audioData}),console.log($scope.audioData.audiometry),cnt+=1}else if(iscleared){var leftCanvasId="#leftCan-"+i,rightCanvasId="#rightCan-"+i,leftcanvas=angular.element(document.querySelector(leftCanvasId)),leftcontext=leftcanvas[0].getContext("2d");leftcontext.clearRect(0,0,400,350);var rightcanvas=angular.element(document.querySelector(rightCanvasId)),rightcontext=rightcanvas[0].getContext("2d");rightcontext.clearRect(0,0,400,350),$scope.$broadcast("redraw",{data:$scope.audioData})}0==cnt&&ModalService.openAlert("alert","Info","Please select Checkbox to delete audiogram")},$scope.addAudiometry=function(index){var temp={hearingAid:"withoutAid",type:"air",left:[],right:[]};$scope.audioData.audiometry.push(temp)},$scope.preloadTransaction=function(data){var xAxis=[75,132,190,246,275,304,334,361];angular.forEach(data.audiometry,function(val,key){var i=0,leftData=[];angular.forEach(val.left,function(leftValue,leftKey){var temp={freq:xAxis[i],sound:leftValue};leftData.push(temp),i+=1}),data.audiometry[key].left=leftData;var j=0,rightData=[];angular.forEach(val.right,function(rightValue,rightKey){var temp={freq:xAxis[j],sound:rightValue};rightData.push(temp),j+=1}),data.audiometry[key].right=rightData}),$scope.audioData=data,$scope.showCanvas=!0},$scope.clearAudiometry=function(){},$scope.loadLineChart=function(){$("#bmiratio").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"BMI Measurements"}},xAxis:{categories:$scope.MonthDa},series:[{name:"BMI Value",data:$scope.bmivalue}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.chartData=function(){$scope.datavlue=[],$scope.bmivalue=$scope.bmiCharts,$scope.dateFormat($scope.bmicreated_ON),$scope.loadLineChart()},$scope.dateFormat=function(bmiReport){$scope.dateParts=[];for(var i=0;i<bmiReport.length;i++)$scope.dateParts=bmiReport[i].split("/"),$scope.dateObject=new Date($scope.dateParts[2]+"-"+$scope.dateParts[1]+"-"+$scope.dateParts[0]),$scope.datavlue=$scope.dateObject.getMonth().toString(),$scope.datavle=$scope.dateObject.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datavlue];$scope.monthr=$scope.monthreport+","+$scope.datavle,$scope.MonthDa.push($scope.monthr)},$scope.loadweightChart=function(){$("#weight").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"Weight Measurements"}},xAxis:{categories:$scope.WeightMonth},series:[{name:"Weight Value",data:$scope.weightvalue}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.weightchartData=function(){$scope.datavlue=[],$scope.weightvalue=$scope.weightlist,$scope.dateFormatee($scope.weightcreated_ON),$scope.loadweightChart()},$scope.dateFormatee=function(weightvalue){$scope.dateParts=[];for(var i=0;i<weightvalue.length;i++)$scope.date=weightvalue[i].split("/"),$scope.datecalc=new Date($scope.date[2]+"-"+$scope.date[1]+"-"+$scope.date[0]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.WeightMonth.push($scope.monthrep)},$scope.loadwaistChart=function(){$("#waist").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"Waist Measurements"}},xAxis:{categories:$scope.WaistMonth},series:[{name:"Waist Value",data:$scope.waistvalue}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.waistchartData=function(){$scope.datavlue=[],$scope.waistvalue=$scope.prewaistsRatio,$scope.dateFormats($scope.waistcreated_ON),$scope.loadwaistChart()},$scope.dateFormats=function(weightvalue){$scope.dateParts=[];for(var i=0;i<weightvalue.length;i++)$scope.date=weightvalue[i].split("/"),$scope.datecalc=new Date($scope.date[2]+"-"+$scope.date[1]+"-"+$scope.date[0]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.WaistMonth.push($scope.monthrep)},$scope.loadsyschart=function(){$("#syscontainer").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"Previous Supine Records"}},xAxis:{categories:$scope.sysMonth},series:[{name:"SYS",data:$scope.diadata},{name:"DIA",data:$scope.syslist}],legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.syschartData=function(){$scope.sysdata=$scope.syslist,$scope.diadata=$scope.dialist,$scope.dateFormate($scope.weightcreated_ON),$scope.loadsyschart()},$scope.dateFormate=function(suspdata){$scope.dateParts=[];for(var i=0;i<suspdata.length;i++)$scope.date=suspdata[i].split("/"),$scope.datecalc=new Date($scope.date[2]+"-"+$scope.date[1]+"-"+$scope.date[0]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.sysMonth.push($scope.monthrep)},$scope.changeVision=function(param){$scope.paramVison=$.grep($scope.comboData.visionsList,function(e){return e.visionsId==param})[0],$scope.mesurementData.visionCorrection.visionType=$scope.paramVison.visionsId,"DISTANT"==$scope.paramVison.code?($scope.isVisionNear=!1,$scope.isVisionDistant=!0):"NEAR"==$scope.paramVison.code?($scope.isVisionNear=!0,$scope.isVisionDistant=!1):($scope.isVisionNear=!1,$scope.isVisionDistant=!1)},$scope.removeActScore=function(){angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,key){delete $scope.mesurementData.generalDTO.actScoreDTOList[key].actscore})};var lastClickedAudiograme=null;$scope.audiocheckbox=function(currentindex){var currentelement="#row-"+currentindex;return lastClickedAudiograme==currentindex?($(currentelement).attr("checked",!1),lastClickedAudiograme=null,!1):(angular.forEach($scope.audioData.audiometry,function(val,key){var element="#row-"+key;$(element).attr("checked",!1)}),$(currentelement).attr("checked",!0),void(lastClickedAudiograme=currentindex))},$scope.checkNumber=function(fieldName,givenVal,min,max,deficiencyFieldVal){if(isNaN(givenVal))return $scope.validlistCheck1=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck1.length&&$scope.validlist.push(fieldName),!1;var fieldMin=fieldName+"Min",fieldMax=fieldName+"Max";if(""==givenVal||null==givenVal){$scope[fieldMin]=!1,$scope[fieldMax]=!1,$scope.validation=!0;var temp=$scope.validlist.indexOf(fieldName);return temp!=-1&&$scope.validlist.splice(temp,1),!1}if(!min||!max){if(givenVal.toString().length>12)$scope.validlistCheck1=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck1.length&&$scope.validlist.push(fieldName);else{var temp=$scope.validlist.indexOf(fieldName);temp!=-1&&$scope.validlist.splice(temp,1)}return!1}var fields=fieldName;if("pdeso"==fields||"madrodpdeso"==fields||"pdhypo"==fields||"madrodpdhyper"==fields){switch(deficiencyFieldVal){case"ESO":"pdeso"==fields?fieldName="maddoxwgpdeso":"madrodpdeso"==fields&&(fieldName="maddoxrodpdeso");break;case"EXO":"pdeso"==fields?fieldName="maddoxwgpdexo":"madrodpdeso"==fields&&(fieldName="maddoxrodpdexo");break;case"HYPO":"pdhypo"==fields?fieldName="maddoxwgpdhypo":"madrodpdhyper"==fields&&(fieldName="maddoxrodpdhypo");break;case"HYPER":"pdhypo"==fields?fieldName="maddoxwgpdhyper":"madrodpdhyper"==fields&&(fieldName="maddoxrodpdhyper")}var rules=$scope.fields[fieldName];min=rules?rules.minValue:min,max=rules?rules.maxValue:max,$scope.medaxFiedName=fieldName}if(Number(givenVal)<min)return $scope.validlistCheck=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck.length&&$scope.validlist.push(fieldName),$scope[fieldMin]=!0,$scope[fieldMax]=!1,!1;var temp=$scope.validlist.indexOf(fieldName);if(temp!=-1&&$scope.validlist.splice(temp,1),$scope[fieldMin]=!1,Number(givenVal)>max)return $scope.validlistCheck=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck.length&&$scope.validlist.push(fieldName),$scope[fieldMin]=!1,$scope[fieldMax]=!0,!1;var temp=$scope.validlist.indexOf(fieldName);temp!=-1&&$scope.validlist.splice(temp,1),$scope[fieldMax]=!1},$scope.preloadArAudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_AR_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.visitInfo.visitId,APIS.GET_AR_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_AR_AUDIOMETROY,function(response){response.success?response.dataBean.audiometry.length>0?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.showCanvas=!0):$log.error("Audiograme Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_AR_AUDIOMETROY.URL=tempUrl},$scope.saveArAudio=function(threashold){APIS.SAVE_AR_AUDIOMETROY.data=threashold,DataManager.sendRestRequest(null,APIS.SAVE_AR_AUDIOMETROY,function(response){response.success?ModalService.openAlert("alert","Audiograme",response.successMessage):$log.error("Audiograme Save: "+response.errorMessage)},$scope.uconfig.token)},$scope.saveArAudiometry=function(){delete $scope.audioData.remarks,angular.forEach($scope.audioData.audiometry,function(value,key){delete $scope.audioData.audiometry[key].remarks;var left={};angular.forEach(value.left,function(leftAudio,leftIndex){var index=leftIndex+1,temp="sound"+index;leftAudio.hasOwnProperty("freq")&&(left[temp]=leftAudio.sound)}),left.hasOwnProperty("sound1")||(Array.isArray(value.left)&&(value.left={}),left=value.left),$scope.audioData.audiometry[key].left=left;var right={};angular.forEach(value.right,function(rightAudio,rightIndex){var index=rightIndex+1,temp="sound"+index;rightAudio.hasOwnProperty("freq")&&(right[temp]=rightAudio.sound)}),right.hasOwnProperty("sound1")||(Array.isArray(value.right)&&(value.right={}),right=value.right),$scope.audioData.audiometry[key].right=right}),$scope.saveArAudio($scope.audioData)},$scope.getUploadedDocument=function(){APIS.CAMB_GETGRIDATTACHMENT.data={applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.CAMB_GETGRIDATTACHMENT,function(response){response.success?response.dataBean&&($scope.isDocumentUploaded=response.dataBean.length>0):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?($scope.fileUploadGridList=response.dataBean,$scope.isDocumentUploaded=response.dataBean.length>0):$log.error("CAMB_GET_DIAGNOSIS_GRID_DATA "+response)},$scope.userConfig.token)},$scope.goPreview=function(){$window.open("#/hedprintpreview?preview=2")},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitInfo.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"mesureDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})})}else $scope.dmfDoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.init(),$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},$scope.cambDMF=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitInfo.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitInfo};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})})}else $scope.dmfDoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.close=function(){$location.url("/camb-worklistsetup")},$scope.attachDocuments=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDocumentModal.html",controller:"measurementAnalysisDocumentModalCtrl",size:"lg",resolve:{modalParam:function(){return null}}})},$scope.referral=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisReferralModal.html",controller:"measurementReferralModalCtrl",resolve:{modalParam:function(){return null}}})}}]),angular.module("app").controller("AnalysisDMFModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","modalParam","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,modalParam,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.roleid=$scope.userConfig.userFacilities[0].roles[0].roleId,$scope.rolename=$scope.userConfig.userFacilities[0].roles[0].roleName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.dmfVisit={intitiatedby:$scope.visitInfo.visitId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.visitInfo.applicantId,initatedRole:$scope.roleid},$scope.fromdatepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0]},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.dmfAction=function(){$scope.isFrmSubmited=!0,""==$scope.dmfVisit.treatmentplan&&""==$scope.dmfVisit.dateofoccurence||($scope.dmfVisit.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),$uibModalInstance.dismiss("cancel"),APIS.CAMB_DMF_POPUP.data=$scope.dmfVisit,DataManager.sendRestRequest(null,APIS.CAMB_DMF_POPUP,function(response){response.success?(ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.close()):$log.error("DMF Model: "+response.errorMessages)},$scope.userConfig.token))},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app").controller("measurementAnalysisDocumentModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visitInfo.visitId=parseInt($scope.visitInfo.visitId),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.rolename=$scope.currentRole.roleName,$scope.init=function(){$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup2={opened:!1},$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.recordTypeComb=[],$scope.documentTypeCombo=[],$scope.subTypeCombo=[],$scope.subtype="",$scope.filterData={recordTypeId:null,doctypeId:null,subtypeId:null},$scope.filterData1={doctypeId:null,subtypeId:null},$scope.uploadData={document:"",filename:"",doctypeId:null,subtypeId:null,clinicId:1,reportdate:"",createdby:1,applicantId:$scope.visitInfo.applicantId},$scope.perPage=20,$scope.filteredItems=[],$scope.fileUploadGridList=[],$scope.dataBind()},$scope.dataBind=function(){$scope.getRecordTypeCombo(),$scope.getDocumentTypeCombo(),$scope.getUploadedGridData(),$scope.getDocumentTypeCombo1()},$scope.getRecordTypeCombo=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_RECORD_TYPE_COMBO,function(response){response.success?$scope.recordTypeComb=response.dataBean:$log.error("GET_CAMB_RECORD_TYPE_COMBO:"+response)},$scope.userConfig.token)},$scope.getDocumentTypeCombo=function(){DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success?($scope.documentTypeCombo=response.dataBean,console.log("documentType",$scope.documentTypeCombo)):$log.error("LME_ATTACHMENT_DOC_TYPE:"+response)},$scope.userConfig.token)},$scope.attachsubdocChange=function(){$scope.subtype="",$scope.noResults=!1,$scope.getSubTypeCombo()},$scope.getSubTypeCombo=function(){$scope.subTypeCombo=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.filterData.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?($scope.subTypeCombo=response.dataBean,console.log("subTypeCombo",$scope.subTypeCombo)):$log.error("LME_ATTACHMENT_DOC_SUBTYPE:"+response)},$scope.userConfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.getDocumentTypeCombo1=function(){DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success?($scope.documentTypeCombo=response.dataBean,console.log("documentType",$scope.documentTypeCombo)):$log.error("LME_ATTACHMENT_DOC_TYPE:"+response)},$scope.userConfig.token)},$scope.attachsubdocChange1=function(){$scope.subtype1="",$scope.noResults=!1,$scope.getSubTypeCombo1()},$scope.getSubTypeCombo1=function(){$scope.subTypeCombo1=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.filterData1.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?($scope.subTypeCombo1=response.dataBean,console.log("subTypeCombo1",$scope.subTypeCombo1)):$log.error("LME_ATTACHMENT_DOC_SUBTYPE:"+response)},$scope.userConfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.closeattachdoc=function(){$scope.fileUploadGridList.length>0?$scope.$parent.$broadcast("isDocUploaded",{isUploded:!0}):$scope.$parent.$broadcast("isDocUploaded",{isUploded:!1}),$uibModalInstance.dismiss("cancel")},$scope.showContent=function($fileContent,index){var dataParts=$fileContent.split("base64,");$scope.content=dataParts[1],$scope.uploadData.document=$scope.content},$scope.filterDocumentData=function(filterData){$scope.filterData.subtypeId=$.grep($scope.subTypeCombo,function(e){return e.description==$scope.subtype})[0].document_sub_type_id;var sendData={referenceType:$scope.visitInfo.applicantDetails.v_type,referenceId:$scope.visitInfo.visitId,applicantId:$scope.visitInfo.applicantId,recordTypeId:filterData.recordTypeId,documentTypeId:$scope.filterData.doctypeId,documentSubTypeId:$scope.filterData.subtypeId};APIS.GET_CAMB_FILTER_SEARCH.data=sendData,DataManager.sendRestRequest(null,APIS.GET_CAMB_FILTER_SEARCH,function(response){response.success?$scope.filteredItems=response.dataBean:$log.error("GET_CAMB_FILTER_SEARCH:"+response)},$scope.userConfig.token)},$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?($scope.fileUploadGridList=response.dataBean,$scope.isDocumentUploaded=response.dataBean.length>0):$log.error("LME_ATTACH_DOC_GRID "+response)},$scope.userConfig.token)},$scope.clickToApprove=function(data){$scope.approveConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure want to Approve?",$scope,"docAppr",function(){}),$scope.$on("docApprOk",function(){0==$scope.approveConfirmed&&($scope.sendData={doctypeId:data,approvedYn:"y",createdby:$scope.userInfo.personId},APIS.CAMB_APPROVE_DOC.data=$scope.sendData,DataManager.sendRestRequest(null,APIS.CAMB_APPROVE_DOC,function(response){response.success?(ModalService.openAlert("alert","Success","Approved successfully","null","null"),$scope.getUploadedGridData()):$log.error("GET_CAMB_FILTER_SEARCH:"+response)},$scope.userConfig.token)),$scope.approveConfirmed=!0}),$scope.$on("docApprcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.deleteUploadedGridRecord=function(documentID){ModalService.openAlert("confirm","warning","Are you sure want to delete the record",$scope,"doccumetDelete",function(){}),$scope.$on("doccumetDeleteOk",function(){$scope.documentId=documentID,APIS.DELETE_CAMB_UPLOAD_DOC.URL=String.prototype.format.apply(APIS.DELETE_CAMB_UPLOAD_DOC.tempURL,[$scope.documentId]),DataManager.sendRestRequest(null,APIS.DELETE_CAMB_UPLOAD_DOC,function(response){response.success?$scope.getUploadedGridData():$log.error("DELETE_CAMB_UPLOAD_DOC "+response)},$scope.userConfig.token)}),$scope.$on("doccumetDeletecancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.documentUpload=function(uploadData,pdfconvertfile){var filepath=document.getElementById("filename").value,filetype=filepath.substr(filepath.lastIndexOf(".")+1);if("pdf"!=filetype)return ModalService.openAlert("alert","Upload Fail","Only Pdf files can be uploaded","null","null"),!1;if($scope.frmSubmitted=!0,$scope.form.$invalid)return $scope.frmInvalid=!0,!1;if($scope.frmInvalid=!1,$scope.frmSubmitted=!1,null==pdfconvertfile||""==pdfconvertfile||void 0==pdfconvertfile)ModalService.openAlert("alert","Alert","Attach the File","null","null");else{$scope.filterData1.subtypeId=$.grep($scope.subTypeCombo1,function(e){return e.description==$scope.subtype1})[0].document_sub_type_id,$scope.attachdocumentsdescription=$.grep($scope.documentTypeCombo,function(e){return e.document_type_id==$scope.filterData1.doctypeId})[0].code,$scope.dateconvert=$filter("date")(new Date($scope.uploadData.reportdate),"yyyy-MM-dd"),$scope.filenameformat=$scope.visitInfo.applicantDetails.idNo+"_"+$scope.subtype+"_"+$scope.dateconvert;var startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),console.log($scope.dfile),$scope.uplddata={applicantId:$scope.visitInfo.applicantId,clinicId:1,createdby:$scope.userConfig.userSeqId,doctypeId:$scope.filterData1.doctypeId,document:pdfconvertfile,filename:filename,referenceId:$scope.visitInfo.visitId,referencetype:"CONSULT",reportdate:$scope.dateconvert,subtypeId:$scope.filterData1.subtypeId,roleName:$scope.rolename,doctypeDesc:$scope.attachdocumentsdescription},console.log($scope.uplddata),APIS.LME_SAVE_ATTACHMENT_DETAILS.data=$scope.uplddata,DataManager.sendRestRequest(null,APIS.LME_SAVE_ATTACHMENT_DETAILS,function(response){response.success?($scope.getUploadedGridData(),ModalService.openAlert("alert","success","Document Uploaded Successfully","null","null",function(){$("#fileName").val("")})):($log.error("GET_CAMB_FILTER_SEARCH:"+response),ModalService.openAlert("alert","Upload Fail","Only Pdf files can be uploaded","null","null"))},$scope.userConfig.token)}},$scope.getFileName=function(){var filepath=document.getElementById("fileName").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);return 0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),filename},$scope.getDocContentToView=function(documentId){APIS.CAMB_VIEW_DOCUMENT.URL=String.prototype.format.apply(APIS.CAMB_VIEW_DOCUMENT.tempURL,[documentId]),DataManager.sendRestRequest(null,APIS.CAMB_VIEW_DOCUMENT,function(response){response.success?$scope.getViewDocument(response.dataBean.file):$log.error("DELETE_CAMB_UPLOAD_DOC "+response)},$scope.userConfig.token)},$scope.tagdocuments=function(itemData){console.log("data",itemData),APIS.SAVE_TAG_BUTTON.data={documentsId:itemData},DataManager.sendRestRequest(null,APIS.SAVE_TAG_BUTTON,function(response){response.success?console.log(response.dataBean):$log.error("SAVE_TAG_BUTTON "+response);
},$scope.userConfig.token)},$scope.getViewDocument=function(documentdata){var content=documentdata,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&$window.open("data:application/pdf;base64,"+documentdata,"_blank","location=no,enableviewportscale=yes")},$scope.close=function(){$scope.fileUploadGridList.length>0?$scope.$parent.$broadcast("isDocUploaded",{isUploded:!0}):$scope.$parent.$broadcast("isDocUploaded",{isUploded:!1}),$uibModalInstance.close("cancel")},$scope.open2=function(){$scope.popup2.opened=!0},$scope.init()}]),angular.module("app").controller("measurementReferralModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.init=function(){$scope.updateReferral=!1,$scope.referralListdata=[],$scope.specialityCombo=[],$scope.saveReferralData={},$scope.getSpecialityComboData(),$scope.getReferralList()},$scope.getSpecialityComboData=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_SPECIALITY_COMBO,function(response){response.success?$scope.specialityCombo=response.dataBean:$log.error("GET_CAMB_SPECIALITY_COMBO:"+response)},$scope.userConfig.token)},$scope.getReferralList=function(){$scope.cmbConsultId=$scope.visitInfo.visitId,APIS.GET_CAMB_PRE_REFERRAL_LIST.URL=String.prototype.format.apply(APIS.GET_CAMB_PRE_REFERRAL_LIST.tempURL,[$scope.cmbConsultId]),DataManager.sendRestRequest(null,APIS.GET_CAMB_PRE_REFERRAL_LIST,function(response){response.success?$scope.referralListdata=response.dataBean:$log.error("GET_CAMB_PRE_REFERRAL_LIST:"+response)},$scope.userConfig.token)},$scope.editReferral=function(data){console.log(data),$scope.updateReferral=!0,$scope.saveReferralData.specalityId=data.specalityId,$scope.saveReferralData.remarks=data.remarks,$scope.saveReferralData.consultReferralId=data.consultReferralId},$scope.saveReferral=function(saveData){if($scope.updateReferral){$scope.updateReferral=!1;var sendData={consultReferralId:saveData.consultReferralId,cmbConsultId:$scope.visitInfo.visitId,specalityId:saveData.specalityId,remarks:saveData.remarks};console.log(sendData),APIS.POST_CAMB_SAVE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_SAVE_REFERRAL,function(response){response.success?($scope.specialityCombo=response.dataBean,$scope.getReferralList(),$scope.getSpecialityComboData(),$scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks=""):$log.error("POST_CAMB_SAVE_REFERRAL:"+response)},$scope.userConfig.token)}else{var sendData={consultReferralId:0,cmbConsultId:$scope.visitInfo.visitId,specalityId:saveData.specalityId,remarks:saveData.remarks};APIS.POST_CAMB_SAVE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_SAVE_REFERRAL,function(response){response.success?($scope.specialityCombo=response.dataBean,$scope.getReferralList(),$scope.getSpecialityComboData(),$scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks=""):$log.error("POST_CAMB_SAVE_REFERRAL:"+response)},$scope.userConfig.token)}},$scope.deleteReferral=function(data){var sendData={consultReferralId:data.consultReferralId,cmbConsultId:$scope.visitInfo.visitId};APIS.POST_CAMB_DELETE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_DELETE_REFERRAL,function(response){response.success?($scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks="",$scope.getReferralList()):$log.error("POST_CAMB_DELETE_REFERRAL:"+response)},$scope.userConfig.token)},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app.camb").controller("PhysicalexaminationCtrl1",["$scope","$state","$stateParams","APIS","DataManager","$window","$uibModal","$rootScope","ModalService",function($scope,$state,$stateParams,APIS,DataManager,$window,$uibModal,$rootScope,ModalService,$uibModalInstance){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentAction=$scope.visitInfo.currentAction,$scope.doctorInfo=JSON.parse(sessionStorage.getItem("doctorDetails")),$scope.clinicInfo=JSON.parse(sessionStorage.getItem("ClinicDetails")),$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={visitDetails:$scope.visitDetails};return temp}}})},$scope.cambDMF=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitInfo.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitInfo};return temp}}}).result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/camb/partials/worklist/analysisDMFModal.html",controller:"AnalysisDMFModalCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})})}else $scope.dmfDoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.close=function(){$location.url("/camb-worklistsetup")},$scope.attachDocuments=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisDocumentModal.html",controller:"PhysicalAnalysisDocumentModalCtrl",size:"lg",resolve:{modalParam:function(){return null}}})},$scope.referral=function(){$uibModal.open({animation:!0,templateUrl:"app/camb/partials/worklist/analysisReferralModal.html",controller:"PhysicalReferralModalCtrl",resolve:{modalParam:function(){return null}}})},$scope.coordinates=[{coords:{x:140,y:25},shape:"circle",color:"#009E11",pointName:"Neurology (Overall)"},{coords:{x:122,y:40},shape:"circle",color:"#009E11",pointName:"Eyes"},{coords:{x:155,y:40},shape:"circle",color:"#009E11",pointName:"Eyes"},{coords:{x:107,y:60},shape:"circle",color:"#009E11",pointName:"Ears"},{coords:{x:173,y:60},shape:"circle",color:"#009E11",pointName:"Ears"},{coords:{x:140,y:75},shape:"circle",color:"#009E11",pointName:"Mouth & Throat"},{coords:{x:140,y:102},shape:"circle",color:"#009E11",pointName:"Neck"},{coords:{x:110,y:155,rw:18,rh:25},shape:"oval",color:"#009E11",pointName:"Chest"},{coords:{x:170,y:155,rw:18,rh:25},shape:"oval",color:"#009E11",pointName:"Chest"},{coords:{x:140,y:145},shape:"circle",color:"#009E11",pointName:"Cardiovascular & Throat"},{coords:{x:70,y:200},shape:"circle",color:"#009E11",pointName:"Upper Limbs"},{coords:{x:210,y:200},shape:"circle",color:"#009E11",pointName:"Upper Limbs"},{coords:{x:45,y:330},shape:"circle",color:"#009E11",pointName:"Wrist & Hands"},{coords:{x:234,y:330},shape:"circle",color:"#009E11",pointName:"Wrist & Hands"},{coords:{x:104,y:260},shape:"circle",color:"#009E11",pointName:"Genito-Urinary"},{coords:{x:172,y:260},shape:"circle",color:"#009E11",pointName:"Genito-Urinary"},{coords:{x:140,y:280},shape:"circle",color:"#009E11",pointName:"Abdomen"},{coords:{x:110,y:315},shape:"circle",color:"#009E11",pointName:"Inguinal"},{coords:{x:168,y:315},shape:"circle",color:"#009E11",pointName:"Inguinal"},{coords:{x:116,y:420},shape:"circle",color:"#009E11",pointName:"Lower Limb"},{coords:{x:160,y:420},shape:"circle",color:"#009E11",pointName:"Lower Limb"},{coords:{x:122,y:570},shape:"circle",color:"#009E11",pointName:"Ankle & Feet"},{coords:{x:157,y:570},shape:"circle",color:"#009E11",pointName:"Ankle & Feet"},{coords:{x:140,y:45,a:148,b:62,c:130,d:62},shape:"triangle",color:"#EF6254",pointName:"Nasal Space"}],$scope.backcoordinator=[{coords:{x:140,y:165},shape:"circle",color:"#009E11",pointName:"Spine"},{coords:{x:140,y:290},shape:"circle",color:"#009E11",pointName:"Anus & Rectum"}],$scope.init=function(){$scope.edittabledata=[],$scope.editrecords={parts_id:"",parts_name:"",remarks:""},$scope.getUploadedGridData(),$scope.checkboxModel=!0,$scope.pushtargetd=[],$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1}),$scope.dataBind(),$scope.$watch("checkboxModel",function(newvalue,oldvalue){newvalue?$scope.checknew=!1:$scope.checknew=!0,$window.sessionStorage.setItem("clickval",$scope.checknew),$scope.$on("examinationONload",function(event,data){$scope.physicalexamination_Examinationonload()})})},$scope.dataBind=function(){$scope.physicalexamination_Examinationonload()},$scope.index=!1,$scope.physicalexamination_onload=function(body_part){$scope.examination_Arparams={visitId:$scope.visitInfo.visitId,personId:$scope.visitInfo.applicantId,pointName:body_part.pointName,examination_type:"consult"},APIS.LME_PHYSICALEXAMINATION_ONLOAD.data=$scope.examination_Arparams,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_ONLOAD,function(response){response.success?($scope.physicalexamination_onloaddata=response.dataBean,$scope.index=!0):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.physicalexamination_Examinationonload=function(){$scope.physicalexamination_userinfo={visitId:parseInt($scope.visitInfo.visitId),applicationId:$scope.visitInfo.applicantId},APIS.CR_PHYSICALEXAMINATION_EXAMINATION.data=$scope.physicalexamination_userinfo,DataManager.sendRestRequest(null,APIS.CR_PHYSICALEXAMINATION_EXAMINATION,function(response){response.success?($scope.measurement_bp=response.dataBean[0].ar_mea_bp,$scope.measurement_eye=response.dataBean[0].ar_mea_eye_others,$scope.measurement_audiometry=response.dataBean[0].ar_MEA_AUDIOMETRY,$scope.investigation=response.dataBean[0].investigation,$scope.system_parts_remarks=response.dataBean[0].system_parts_remarks,$scope.cr_mea_asthma=response.dataBean[0].cr_mea_asthma,$scope.physicalexamination_examinationdata=$scope.measurement_bp.concat($scope.measurement_eye,$scope.measurement_audiometry,$scope.investigation,$scope.system_parts_remarks,$scope.cr_mea_asthma)):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.physicalexamination_submit=function(physicalexamination_onloaddata){$scope.physicalexamination_data=physicalexamination_onloaddata;for(var i=0;i<$scope.physicalexamination_data.length;i++){$scope.physicalexamination_data[i].visitId=$scope.visitInfo.visitId,$scope.physicalexamination_data[i].personId=$scope.visitInfo.applicantId;for(var j=0;j<$scope.physicalexamination_data[i].partsDetails.length;j++)delete $scope.physicalexamination_data[i].partsDetails[j].pointsId}APIS.CR_PHYSICALEXAMINATION_SAVE.data=$scope.physicalexamination_data,DataManager.sendRestRequest(null,APIS.CR_PHYSICALEXAMINATION_SAVE,function(response){response.success?($scope.physicalexamination_submitdata=response.dataBean,$scope.physicalexamination_Examinationonload()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.filter=function(value){$scope.copyrecords=value,$scope.editrecords.remark_id=$scope.copyrecords.remarkid,$scope.editrecords.remark_name=$scope.copyrecords.sectionName,$scope.editrecords.reference=$scope.copyrecords.reference,$scope.editrecords.remarks=$scope.copyrecords.remark,console.log($scope.copyrecords)},$scope.edit_records=function(remarks,remarkId,sectionName){$scope.editdatas={visit_id:$scope.visitInfo.visitId,applicationid:$scope.visitInfo.applicantuserId,remark:remarks,remarkid:remarkId,sectionName:sectionName},APIS.CR_PHYSICALEXAMINATION_UPDATE.data=$scope.editdatas,DataManager.sendRestRequest(null,APIS.CR_PHYSICALEXAMINATION_UPDATE,function(response){response.success?($scope.response_update=response.dataBean,$scope.physicalexamination_Examinationonload(),$scope.$root.$broadcast("examLoad",!0),ModalService.openAlert("alert","Physical Examination","Remarks updated successfully","null","null")):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.remarks_save=function(){ModalService.openAlert("alert","Physical Examination","Saved successfully","null","null")},$scope.delete_row=function(remarkid,sectionName){$scope.delete_records={visit_id:$scope.visitInfo.visitId,sectionName:sectionName,remarkid:remarkid,applicationid:$scope.visitInfo.applicantuserId},ModalService.openAlert("confirm","warning","Do you want to delete the remarks",$scope,"recall",function(){}),$scope.$on("recallOk",function(){APIS.CR_PHYSICALEXAMINATION_DELETE.data=$scope.delete_records,DataManager.sendRestRequest(null,APIS.CR_PHYSICALEXAMINATION_DELETE,function(response){response.success?($scope.response_delete=response.dataBean,$scope.physicalexamination_Examinationonload(),$scope.$root.$broadcast("examLoad",!0)):console.log(response.errorMessage)},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.Checklist_document=function(){DataManager.sendRestRequest(null,APIS.PHYSICALEXAMINATION_CHECKLIST,function(response){if(response.success){var content=response.dataBean.document,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.document,"_blank","location=no,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token)},$scope.getTarget=function(targetPoint){if(1==targetPoint){var body_part={pointName:"Neurology (Overall)"};$scope.physicalexamination_onload(body_part)}else if(2==targetPoint||3==targetPoint){var body_part={pointName:"Eyes"};$scope.physicalexamination_onload(body_part)}else if(4==targetPoint||5==targetPoint){var body_part={pointName:"Ears"};$scope.physicalexamination_onload(body_part)}else if(26==targetPoint){var body_part={pointName:"Nasal Space"};$scope.physicalexamination_onload(body_part)}else if(6==targetPoint){var body_part={pointName:"Mouth & Throat"};$scope.physicalexamination_onload(body_part)}else if(7==targetPoint){var body_part={pointName:"Neck"};$scope.physicalexamination_onload(body_part)}else if(8==targetPoint||9==targetPoint){var body_part={pointName:"Chest"};$scope.physicalexamination_onload(body_part)}else if(10==targetPoint){var body_part={pointName:"Cardiovascular & Throat"};$scope.physicalexamination_onload(body_part)}else if(11==targetPoint||12==targetPoint){var body_part={pointName:"Upper Limbs"};$scope.physicalexamination_onload(body_part)}else if(13==targetPoint||14==targetPoint){var body_part={pointName:"Wrist & Hands"};$scope.physicalexamination_onload(body_part)}else if(15==targetPoint||16==targetPoint){var body_part={pointName:"Genito-Urinary"};$scope.physicalexamination_onload(body_part)}else if(17==targetPoint){var body_part={pointName:"Abdomen"};$scope.physicalexamination_onload(body_part),$scope.index=!0}else if(18==targetPoint||19==targetPoint){var body_part={pointName:"Inguinal"};$scope.physicalexamination_onload(body_part)}else if(20==targetPoint||21==targetPoint){var body_part={pointName:"Lower Limb"};$scope.physicalexamination_onload(body_part)}else if(22==targetPoint||23==targetPoint){var body_part={pointName:"Ankle & Feet"};$scope.physicalexamination_onload(body_part)}else if(24==targetPoint){var body_part={pointName:"Spine"};$scope.physicalexamination_onload(body_part)}else if(25==targetPoint){var body_part={pointName:"Anus & Rectum"};$scope.physicalexamination_onload(body_part)}},$scope.front=!0,$scope.back=!1,$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?($scope.fileUploadGridList=response.dataBean,$scope.isDocumentUploaded=response.dataBean.length>0):$log.error("CAMB_GET_DIAGNOSIS_GRID_DATA "+response)},$scope.userConfig.token)},$scope.togglecanvas=function(){$scope.front=!$scope.front,$scope.back=!$scope.back},$scope.goPreview=function(){$window.open("#/hedprintpreview?preview=2")},$scope.init()}]),angular.module("app").controller("AnalysisDMFModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","modalParam","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,modalParam,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.roleid=$scope.userConfig.userFacilities[0].roles[0].roleId,$scope.rolename=$scope.userConfig.userFacilities[0].roles[0].roleName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.dmfVisit={intitiatedby:$scope.visitInfo.visitId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.visitInfo.applicant_id,initatedRole:$scope.roleid},$scope.fromdatepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0]},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.dmfAction=function(){$scope.isFrmSubmited=!0,""==$scope.dmfVisit.treatmentplan&&""==$scope.dmfVisit.dateofoccurence||($scope.dmfVisit.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),$uibModalInstance.dismiss("cancel"),APIS.CAMB_DMF_POPUP.data=$scope.dmfVisit,DataManager.sendRestRequest(null,APIS.CAMB_DMF_POPUP,function(response){response.success?(ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.close()):$log.error("DMF Model: "+response.errorMessages)},$scope.userConfig.token))},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),angular.module("app").controller("PhysicalAnalysisDocumentModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance","ModalService",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visitInfo.visitId=parseInt($scope.visitInfo.visitId),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.rolename=$scope.currentRole.roleName,$scope.init=function(){$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup2={opened:!1},$scope.recordTypeComb=[],$scope.documentTypeCombo=[],$scope.subTypeCombo=[],$scope.subtype="",$scope.filterData={recordTypeId:null,doctypeId:null,subtypeId:null},$scope.filterData1={doctypeId:null,subtypeId:null},$scope.uploadData={document:"",filename:"",doctypeId:null,subtypeId:null,clinicId:1,reportdate:"",createdby:1,applicantId:$scope.visitInfo.applicantId},$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.perPage=20,$scope.filteredItems=[],$scope.fileUploadGridList=[],$scope.dataBind()},$scope.dataBind=function(){$scope.getRecordTypeCombo(),$scope.getDocumentTypeCombo(),$scope.getUploadedGridData(),$scope.getDocumentTypeCombo1(),$scope.getUploadedDocument()},$scope.getRecordTypeCombo=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_RECORD_TYPE_COMBO,function(response){response.success?$scope.recordTypeComb=response.dataBean:$log.error("GET_CAMB_RECORD_TYPE_COMBO:"+response)},$scope.userConfig.token)},$scope.getDocumentTypeCombo=function(){DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success?($scope.documentTypeCombo=response.dataBean,console.log("documentType",$scope.documentTypeCombo)):$log.error("LME_ATTACHMENT_DOC_TYPE:"+response)},$scope.userConfig.token)},$scope.attachsubdocChange=function(){$scope.subtype="",$scope.noResults=!1,$scope.getSubTypeCombo()},$scope.getSubTypeCombo=function(){$scope.subTypeCombo=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.filterData.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?($scope.subTypeCombo=response.dataBean,console.log("subTypeCombo",$scope.subTypeCombo)):$log.error("LME_ATTACHMENT_DOC_SUBTYPE:"+response)},$scope.userConfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.showContent=function($fileContent,index){var dataParts=$fileContent.split("base64,");$scope.content=dataParts[1],$scope.uploadData.document=$scope.content},$scope.getDocumentTypeCombo1=function(){DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success?($scope.documentTypeCombo=response.dataBean,console.log("documentType",$scope.documentTypeCombo)):$log.error("LME_ATTACHMENT_DOC_TYPE:"+response)},$scope.userConfig.token)},$scope.attachsubdocChange1=function(){$scope.subtype1="",$scope.noResults=!1,$scope.getSubTypeCombo1()},$scope.getSubTypeCombo1=function(){$scope.subTypeCombo1=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.filterData1.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?($scope.subTypeCombo1=response.dataBean,console.log("subTypeCombo1",$scope.subTypeCombo1)):$log.error("LME_ATTACHMENT_DOC_SUBTYPE:"+response)},$scope.userConfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.filterDocumentData=function(filterData){$scope.filterData.subtypeId=$.grep($scope.subTypeCombo,function(e){return e.description==$scope.subtype})[0].document_sub_type_id;var sendData={referenceType:$scope.visitInfo.applicantDetails.v_type,referenceId:$scope.visitInfo.visitId,applicantId:$scope.visitInfo.applicantId,recordTypeId:filterData.recordTypeId,documentTypeId:$scope.filterData.doctypeId,documentSubTypeId:$scope.filterData.subtypeId};APIS.GET_CAMB_FILTER_SEARCH.data=sendData,DataManager.sendRestRequest(null,APIS.GET_CAMB_FILTER_SEARCH,function(response){response.success?$scope.filteredItems=response.dataBean:$log.error("GET_CAMB_FILTER_SEARCH:"+response)},$scope.userConfig.token)},$scope.getUploadedGridData=function(){APIS.LME_ATTACH_DOC_GRID.data={referencetype:"CONSULT",applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?($scope.fileUploadGridList=response.dataBean,$scope.isDocumentUploaded=response.dataBean.length>0,console.log($scope.fileUploadGridList)):$log.error("CAMB_GET_DIAGNOSIS_GRID_DATA "+response)},$scope.userConfig.token)},$scope.clickToApprove=function(data){$scope.approveConfirmed=!1,ModalService.openAlert("confirm","warning","Are you sure want to Approve?",$scope,"docAppr",function(){}),$scope.$on("docApprOk",function(){0==$scope.approveConfirmed&&($scope.sendData={doctypeId:data,approvedYn:"y",createdby:$scope.userInfo.personId},APIS.CAMB_APPROVE_DOC.data=$scope.sendData,DataManager.sendRestRequest(null,APIS.CAMB_APPROVE_DOC,function(response){response.success?(ModalService.openAlert("alert","Success","Approved successfully","null","null"),$scope.getUploadedGridData()):$log.error("GET_CAMB_FILTER_SEARCH:"+response)},$scope.userConfig.token)),$scope.approveConfirmed=!0}),$scope.$on("docApprcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.deleteUploadedGridRecord=function(documentID){ModalService.openAlert("confirm","warning","Are you sure want to delete the record",$scope,"doccumetDelete",function(){}),$scope.$on("doccumetDeleteOk",function(){$scope.documentId=documentID,APIS.DELETE_CAMB_UPLOAD_DOC.URL=String.prototype.format.apply(APIS.DELETE_CAMB_UPLOAD_DOC.tempURL,[$scope.documentId]),DataManager.sendRestRequest(null,APIS.DELETE_CAMB_UPLOAD_DOC,function(response){response.success?$scope.getUploadedGridData():$log.error("DELETE_CAMB_UPLOAD_DOC "+response)},$scope.userConfig.token)}),$scope.$on("doccumetDeletecancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.documentUpload=function(uploadData,pdfconvertfile){var filepath=document.getElementById("filename").value,filetype=filepath.substr(filepath.lastIndexOf(".")+1);if("pdf"!=filetype)return ModalService.openAlert("alert","Upload Fail","Only Pdf files can be uploaded","null","null"),!1;if($scope.frmSubmitted=!0,$scope.form.$invalid)return $scope.frmInvalid=!0,!1;if($scope.frmInvalid=!1,$scope.frmSubmitted=!1,null==pdfconvertfile||""==pdfconvertfile||void 0==pdfconvertfile)ModalService.openAlert("alert","Alert","Attach the File","null","null");else{$scope.filterData1.subtypeId=$.grep($scope.subTypeCombo1,function(e){return e.description==$scope.subtype1})[0].document_sub_type_id,$scope.attachdocumentsdescription=$.grep($scope.documentTypeCombo,function(e){return e.document_type_id==$scope.filterData1.doctypeId})[0].code,$scope.dateconvert=$filter("date")(new Date($scope.uploadData.reportdate),"yyyy-MM-dd"),$scope.filenameformat=$scope.visitInfo.applicantDetails.idNo+"_"+$scope.subtype+"_"+$scope.dateconvert;var filepath=document.getElementById("filename").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),$scope.uplddata={applicantId:$scope.visitInfo.applicantId,clinicId:1,createdby:$scope.userConfig.userSeqId,doctypeId:$scope.filterData1.doctypeId,document:pdfconvertfile,filename:filename,referenceId:$scope.visitInfo.visitId,referencetype:"CONSULT",reportdate:$scope.dateconvert,subtypeId:$scope.filterData1.subtypeId,roleName:$scope.rolename,doctypeDesc:$scope.attachdocumentsdescription},console.log($scope.uplddata),APIS.LME_SAVE_ATTACHMENT_DETAILS.data=$scope.uplddata,DataManager.sendRestRequest(null,APIS.LME_SAVE_ATTACHMENT_DETAILS,function(response){response.success?($scope.getUploadedGridData(),ModalService.openAlert("alert","success","Document Uploaded Successfully","null","null",function(){$("#fileName").val("")})):($log.error("GET_CAMB_FILTER_SEARCH:"+response),ModalService.openAlert("alert","Upload Fail","Only Pdf files can be uploaded","null","null"))},$scope.userConfig.token)}},$scope.getFileName=function(){var filepath=document.getElementById("fileName").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);return 0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),filename},$scope.getDocContentToView=function(documentId){APIS.CAMB_VIEW_DOCUMENT.URL=String.prototype.format.apply(APIS.CAMB_VIEW_DOCUMENT.tempURL,[documentId]),DataManager.sendRestRequest(null,APIS.CAMB_VIEW_DOCUMENT,function(response){response.success?$scope.getViewDocument(response.dataBean.file):$log.error("DELETE_CAMB_UPLOAD_DOC "+response)},$scope.userConfig.token)},$scope.tagdocuments=function(itemData){console.log("data",itemData),APIS.SAVE_TAG_BUTTON.data={documentsId:itemData},DataManager.sendRestRequest(null,APIS.SAVE_TAG_BUTTON,function(response){response.success?console.log(response.dataBean):$log.error("SAVE_TAG_BUTTON "+response)},$scope.userConfig.token)},$scope.getViewDocument=function(documentdata){var content=documentdata,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&$window.open("data:application/pdf;base64,"+documentdata,"_blank","location=no,enableviewportscale=yes")},$scope.closeattachdoc=function(){$scope.fileUploadGridList.length>0?$scope.$parent.$broadcast("isDocUploaded",{isUploded:!0}):$scope.$parent.$broadcast("isDocUploaded",{isUploded:!1}),$uibModalInstance.close("cancel")},$scope.open2=function(){$scope.popup2.opened=!0},$scope.getUploadedDocument=function(){APIS.CAMB_GETGRIDATTACHMENT.data={applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.CAMB_GETGRIDATTACHMENT,function(response){response.success?response.dataBean&&($scope.isDocumentUploaded=response.dataBean.length>0):console.log(response.errorMessage)},$scope.userConfig.token)},$scope.init()}]),angular.module("app").controller("PhysicalReferralModalCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$uibModalInstance",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$uibModalInstance){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.init=function(){$scope.updateReferral=!1,$scope.referralListdata=[],$scope.specialityCombo=[],$scope.saveReferralData={},$scope.getSpecialityComboData(),$scope.getReferralList()},$scope.getSpecialityComboData=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_SPECIALITY_COMBO,function(response){response.success?$scope.specialityCombo=response.dataBean:$log.error("GET_CAMB_SPECIALITY_COMBO:"+response)},$scope.userConfig.token)},$scope.getReferralList=function(){$scope.cmbConsultId=$scope.visitInfo.visitId,APIS.GET_CAMB_PRE_REFERRAL_LIST.URL=String.prototype.format.apply(APIS.GET_CAMB_PRE_REFERRAL_LIST.tempURL,[$scope.cmbConsultId]),DataManager.sendRestRequest(null,APIS.GET_CAMB_PRE_REFERRAL_LIST,function(response){response.success?$scope.referralListdata=response.dataBean:$log.error("GET_CAMB_PRE_REFERRAL_LIST:"+response)},$scope.userConfig.token)},$scope.editReferral=function(data){$scope.updateReferral=!0,$scope.saveReferralData.specalityId=data.specalityId,$scope.saveReferralData.remarks=data.remarks,$scope.saveReferralData.consultReferralId=data.consultReferralId},$scope.saveReferral=function(saveData){if($scope.updateReferral){$scope.updateReferral=!1;var sendData={consultReferralId:saveData.consultReferralId,cmbConsultId:$scope.visitInfo.visitId,specalityId:saveData.specalityId,remarks:saveData.remarks};console.log(sendData),APIS.POST_CAMB_SAVE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_SAVE_REFERRAL,function(response){response.success?($scope.specialityCombo=response.dataBean,$scope.getReferralList(),$scope.getSpecialityComboData(),$scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks=""):$log.error("POST_CAMB_SAVE_REFERRAL:"+response)},$scope.userConfig.token)}else{var sendData={consultReferralId:0,cmbConsultId:$scope.visitInfo.visitId,specalityId:saveData.specalityId,remarks:saveData.remarks};console.log(sendData),APIS.POST_CAMB_SAVE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_SAVE_REFERRAL,function(response){response.success?($scope.specialityCombo=response.dataBean,$scope.getReferralList(),$scope.getSpecialityComboData(),$scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks=""):$log.error("POST_CAMB_SAVE_REFERRAL:"+response)},$scope.userConfig.token)}},$scope.deleteReferral=function(data){var sendData={consultReferralId:data.consultReferralId,cmbConsultId:$scope.visitInfo.visitId};APIS.POST_CAMB_DELETE_REFERRAL.data=sendData,DataManager.sendRestRequest(null,APIS.POST_CAMB_DELETE_REFERRAL,function(response){response.success?($scope.saveReferralData.specalityId="",$scope.saveReferralData.remarks="",$scope.getReferralList(),$scope.getSpecialityComboData()):$log.error("POST_CAMB_DELETE_REFERRAL:"+response)},$scope.userConfig.token)},$scope.close=function(){$uibModalInstance.close("cancel")},$scope.init()}]),
angular.module("app").controller("WrkcreateconsultCtrl",["$scope","$state","APIS","$uibModal","$uibModalInstance","ModalService","$location","DataManager","$window","modalParam",function($scope,$state,APIS,$uibModal,$uibModalInstance,ModalService,$location,DataManager,$window,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantDetail=modalParam.applicantParam,console.log(modalParam),$scope.applicantId=$scope.applicantDetail.applicant_id,$scope.consultdropdown(),$scope.Datefunctioncon(),$scope.appointmentDate=null,$scope.cambPhysician=null,$scope.consultassign={macid:[],consultNo:null,cambPhysicianId:null,appointmentDate:null,applicantId:null},$scope.mrsearchConsult={idNo:null,mac:{macC1:"C1",macc2:"C2",macc3:"C3"},doctorname:null,appointmentdate:null,time:null},$scope.visit=[{"class":"c1",status:"Active",type:"Initial"},{"class":"c1",status:"Expired",type:"Board"},{"class":"c2",status:"Active",type:"60"},{"class":"c2",status:"Expired",type:"PR"},{"class":"c3",status:"Active",type:"Board"},{"class":"c3",status:"Expired",type:"Board"}],$scope.mac=[{type1:"C1"},{type2:"C2"},{type3:"C3"}]},console.log(modalParam),$scope.createConsult=function(){APIS.MR_CAMBMRCONSULT.data=$scope.mrsearchConsult,console.log($scope.mrsearchConsult),DataManager.sendRestRequest(null,APIS.MR_CAMBMRCONSULT,function(response){response.success&&console.log(response)},$scope.uconfig.token)},$scope.assignandcreateConsult=function(){APIS.MR_CAMBMRCONSULT.data=$scope.mrsearchConsult,DataManager.sendRestRequest(null,APIS.MR_CAMBMRCONSULT,function(response){$scope.addStatus=response,console.log($scope.addStatus),$timeout(function(){$scope.addStatus=""},5e3)},$scope.uconfig.token)},$scope.close=function(){$uibModalInstance.close("close"),$scope.selected=""},$scope.consultdropdown=function(){DataManager.sendRestRequest(null,APIS.CAMB_SEARCHCONSULT_DOCTOR,function(response){response.success?($scope.searchconsultdd=response.dataBean,console.log($scope.searchconsultdd)):console.log(response)},$scope.uconfig.token)},$scope.checkMac=function(param){console.log(param),param.checked&&$scope.consultassign.macid.push({mac_code:param.classType})},$scope.createConsultSav=function(){1==$("#chk1").prop("checked")&&$scope.consultassign.macid.push({mac_code:"C1"}),1==$("#chk2").prop("checked")&&$scope.consultassign.macid.push({mac_code:"C2"}),1==$("#chk3").prop("checked")&&$scope.consultassign.macid.push({mac_code:"C3"}),console.log("DATE IS"),console.log($scope.appointmentDate);var appDate=new Date($scope.appointmentDate);appDate.setHours(12,appDate.getTimezoneOffset(),0,0);var newAppDate=appDate.toISOString().substring(0,10);console.log(newAppDate);var appointmentTime=$("#appointmentTime").val();if(console.log(appointmentTime),appointmentTime.length>2)var appDateAndTime=newAppDate+" "+appointmentTime+":00.000";else var appDateAndTime=newAppDate+" "+appointmentTime+":00.000";console.log(appDateAndTime),console.log("DATE IS"),console.log($scope.appointmentDate);var appDate=new Date($scope.appointmentDate);appDate.setHours(12,appDate.getTimezoneOffset(),0,0);var newAppDate=appDate.toISOString().substring(0,10);console.log(newAppDate);var appointmentTime=$("#appointmentTime").val(),appDateAndTime=newAppDate+" "+appointmentTime+":00.000";console.log(appDateAndTime),$scope.consultassign={cmbConsultId:$scope.applicantDetail.visit_id,cambPhysicianId:$scope.cambPhysician.person_id,appointmentDate:appDateAndTime},console.log($scope.consultassign.macid),APIS.CAMB_WORKLIST_ASSIGN.data=$scope.consultassign,console.log($scope.consultassign),DataManager.sendRestRequest(null,APIS.CAMB_WORKLIST_ASSIGN,function(response){response.success?(ModalService.openAlert("alert","","Assigned successfully","","",""),$scope.cancel(),$scope.$root.$broadcast("doctorStatus",!0)):console.log(response)},$scope.uconfig.token)},$scope.Datefunctioncon=function(){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}$scope.dateOptions={dateDisabled:disabled,formatDay:"dd",formatMonth:"MMM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.formats=["dd MMM yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpenCon=function(){$scope.datepickerPopup.opened=!0}},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app.common").config(function($stateProvider){}),angular.module("app.common").controller("ActionCtrl",["$scope","APIS","DataManager","ModalService","$filter","$window","$uibModalInstance","$rootScope","$timeout","modalParam","$log","$state","$location",function($scope,APIS,DataManager,ModalService,$filter,$window,$uibModalInstance,$rootScope,$timeout,modalParam,$log,$state,$location){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.visitid=modalParam.visitDetails.visitId,$scope.visittypes=modalParam.visitDetails.visitType,$scope.types=modalParam.visitDetails.applicantDetails.type,$scope.applicantDetail=modalParam.visitDetails.applicantDetails,$scope.cliniclocation=$scope.applicantDetail.clinicLoc,$scope.clinicid=$scope.applicantDetail.clinicId,$scope.applicantid=$scope.visitDetails.applicantId,$scope.applicantDetail.visitType&&($scope.appvisittypes=$scope.applicantDetail.visitType,$scope.appclassId=$scope.appvisittypes.classId),$scope.processStatusPage=$scope.applicantDetail.actionDTOList,$scope.userSeqId=$scope.uconfig.userSeqId,$scope.applicationdetails=modalParam.applicantParam,$scope.applicantId=$scope.applicationdetails.applicantId,$scope.applicationId=$scope.applicationdetails.applicationId,$scope.callApplicant=null,$scope.frmInvalid=!1,$scope.assigdoc=null,$scope.isFrmSubmited=!1,$scope.selectpage=null,$scope.doctordatas=[],$scope.dmfreport=[],$scope.doctorlist=[],$scope.cliniclist=[],$scope.newappvisittypes=[],$scope.selectedclassdisabled=!1,$scope.artransferData={visitId:$scope.applicationdetails.visitId,visitType:[]},angular.forEach($scope.applicationdetails.visitType,function(value,key){1==$scope.applicationdetails.visitType[key].checked&&$scope.artransferData.visitType.push({classId:value.classId,lmeTypeId:value.lmetypeId})}),$scope.attachdocumentsData={doctypeId:null,subtypeId:null,primaryidentifier:"null",reportdate:"",clinicId:"null",filename:null,createdby:null,doctypeDesc:null},$scope.processStatusPage&&($scope.applicantTransfer={visitId:$scope.applicationdetails.visitId,applicantName:$scope.applicationdetails.applicantname,statusPageCode:$scope.applicationdetails.statuspageName,processStatusPageId:$scope.processStatusPage[0].processStatusPageId,roleId:$scope.roleid,oldDMEId:$scope.applicationdetails.doctorId,oldDMEName:$scope.applicationdetails.doctorname,funtionalStatus:"",remarks:""}),$scope.dmfVisit={intitiatedby:$scope.userInfo.personId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.applicantid,initatedRole:$scope.roleid,dmeId:$scope.uconfig.userSeqId,dmeName:$scope.userInfo.firstName,dmeEmail:$scope.uconfig.token,processStatusPageId:null,applicationId:$scope.applicantDetail.applicationId,clinicId:$scope.clinicid,clinicName:$scope.cliniclocation,visitTypes:[]},$scope.followupdata={visitId:$scope.visitid,reasonId:"",specialityId:"",remarks:"",pagename:"",type:$scope.types},$scope.lmeVisit={clinicId:"",applicantId:$scope.applicantId,applicationId:$scope.applicationdetails.applicationId,visitType:[],doctordetails:[]},$scope.arVisit={applicantId:$scope.applicantId,clinicId:"",dmeId:"",visitType:[],types:$scope.types},$scope.attachdocuments={documentTypeID:"Measurements",subTypeId:"ECG",reportdate:"",file:""},$scope.abortsavedata={visitId:$scope.visitid,startdate:"",statusId:null,reason:"",type:$scope.types,dmeName:$scope.userInfo.firstName+" "+$scope.userInfo.lastName,dmeEmail:$scope.userInfo.email,initatedRole:$scope.roleid,intitiatedby:$scope.userInfo.personId,applicantId:$scope.visitDetails.applicantId},$scope.adddiagnosis={diagnosis:"",icdCode:"",defectedLME:"",detectionDate:"",description:""},$scope.transferaccept={refType:"LME_VISITS",status:"Accept",tranreqId:38,notificationsId:10147,visitId:1,transtoId:149},$scope.referral={shortcut:[{keylist:"Date",keyId:1},{keylist:"Applicant Name",keyId:3}],selectLetterTemplate:[{templateList:"LetterTemplate",id:5},{templateList:"LetterTemplate1",id:6}],visitType:[{"class":"C1",type:"Initial"}],addreceipients:"",context:"",attachments:[{attachment:"attachment1"},{attachment:"attachment2"}],subject:""},$scope.email={emailTemplate:[{type:"config",keyId:1},{type:"email config",keyId:3}],shortcut:[{templateList:"LetterTemplate",id:5},{templateList:"LetterTemplate1",id:6}],receipients:"",subject:""},$scope.letter={letterTemplate:[{templateList:"LetterTemplate",id:5},{templateList:"LetterTemplate1",id:6}]},$scope.vetting={visitType:[{"class":"C1",type:"Initial"}],description:"",doneby:"",frequency:"",expiryDate:"",nextdue:"",viewattachments:""},$scope.getdetails={referenceId:2,referencetype:"$scope.types",doctypeId:null,subtypeId:[],clinicId:null,reportdate:null,createdby:null,filename:null,document:null,applicantId:null,roleName:null},$scope.selecteddmedisabled=!1,$scope.selectedclinicdisabled=!0,$scope.visitc1=!1,$scope.visitc2=!1,$scope.visitc3=!1,$scope.clinicdatas=[],$scope.doctordat=[],$scope.dataBind()},$scope.dataBind=function(){$scope.Datefunction(),$scope.loadattachdocdetails(),$scope.loadgriddata(),$scope.newuser(),modalParam.applicantParam&&($scope.ardata(),modalParam.applicantParam.visitType||$scope.newloaddoctor(modalParam.applicantParam.type)),"AR"==$scope.types?($scope.arloaddoct(),$scope.arabortdata(),$scope.arloadclinicloc()):"LME"==$scope.types?($scope.loaddoct(),$scope.loadclinicloc(),$scope.abortdata()):"PR"!=$scope.types&&"DMF"!=$scope.types||$scope.newloaddoctor(modalParam.applicantParam.type)},$scope.newloadclinic=function(type){$scope.cliniciddetails=JSON.parse(sessionStorage.getItem("arclinicid"));var url=null,tempUrl=null;tempUrl=APIS.NEWDOCTOR_LIST.URL,url=tempUrl+"/"+type+"/"+$scope.cliniciddetails,APIS.NEWDOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.NEWDOCTOR_LIST,function(response){response.success&&($scope.doctorlist=response.dataBean,$log.info("Dr"),$log.log($scope.doctordata))},$scope.uconfig.token),APIS.NEWDOCTOR_LIST.URL=tempUrl},$scope.newloaddoctor=function(type){var url=null,tempUrl=null;tempUrl=APIS.NEWCLINIC_LOCATION.URL,url=tempUrl+"/"+type+"/"+$scope.uconfig.userSeqId,APIS.NEWCLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.NEWCLINIC_LOCATION,function(response){response.success&&($scope.cliniclist=response.dataBean,$log.info("clinicInfo"),$log.log($scope.clinicdetail))},$scope.uconfig.token),APIS.NEWCLINIC_LOCATION.URL=tempUrl},$scope.selectarclinicid=function(id){$scope.clinicid=id,sessionStorage.setItem("arclinicid",JSON.stringify($scope.clinicid)),$scope.newloadclinic(modalParam.applicantParam.type)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.closeattachdoc=function(){$scope.griddata.length>0?$scope.$parent.$broadcast("isDocUploaded",{isUploded:!0}):$scope.$parent.$broadcast("isDocUploaded",{isUploded:!1}),$uibModalInstance.dismiss("cancel")},$scope.ok=function(){$uibModalInstance.close()},$scope.newuser=function(){"DMF"==$scope.types?$scope.typeid=5:$scope.typeid=6;var temp=[{lmetype:$scope.types,lmetypeId:$scope.typeid,classType:"C1",classId:"1",checked:"false"},{lmetype:$scope.types,lmetypeId:$scope.typeid,classType:"C2",classId:"2",checked:"false"},{lmetype:$scope.types,lmetypeId:$scope.typeid,classType:"C3",classId:"3",checked:"false"}];$scope.newappvisittypes=temp},$scope.loaddoct=function(){var url=null,tempUrl=null;tempUrl=APIS.DOCTOR_LIST.URL,url=tempUrl+"/"+$scope.applicationId+"/"+$scope.clinicid,APIS.DOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.DOCTOR_LIST,function(response){response.success?($scope.doctordatas=response.dataBean,angular.forEach($scope.doctordatas,function(value,key){$scope.userSeqId==value.dmeuserId&&$scope.doctordatas.splice(key,1)})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.DOCTOR_LIST.URL=tempUrl},$scope.arloaddoct=function(){var url=null,tempUrl=null;tempUrl=APIS.AR_DOCTOR_LIST.URL,url=tempUrl+"/"+$scope.visitid+"/"+$scope.clinicid,APIS.AR_DOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.AR_DOCTOR_LIST,function(response){response.success?($scope.doctordat=response.dataBean,angular.forEach($scope.doctordat,function(value,key){$scope.userSeqId==value.dmeUserId&&$scope.doctordat.splice(key,1)})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.AR_DOCTOR_LIST.URL=tempUrl},$scope.loadclinicloc=function(){var url=null,tempUrl=null;tempUrl=APIS.CLINIC_LOCATION.URL,url=tempUrl+"/"+$scope.applicationId,APIS.CLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.CLINIC_LOCATION,function(response){response.success?$scope.clinicdatas=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CLINIC_LOCATION.URL=tempUrl},$scope.arloadclinicloc=function(){var url=null,tempUrl=null;tempUrl=APIS.AR_CLINIC_LOCATION.URL,url=tempUrl+"/"+$scope.visitid,APIS.AR_CLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.AR_CLINIC_LOCATION,function(response){response.success?$scope.clinicdatas=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.AR_CLINIC_LOCATION.URL=tempUrl},$scope.changeVisitType1=function(param){param.checked?$scope.lmeVisit.visitType.push({classId:param.classId,lmetypeId:param.lmetypeId,applicationClassesId:param.applicationClassesId,classCode:param.classType}):$scope.lmeVisit.visitType.splice($scope.lmeVisit.visitType.map(function(e){return e.classId}).indexOf(param.classId),1)},$scope.visitidpush=function(Details){$scope.lmeVisit.visitType=[],$scope.newvisitArray=[];for(var i=0;i<Details.visitType.length;i++)"C1"==Details.visitType[i].classType?$scope.lmeVisit.visitType.push({classId:Details.visitType[i].classId,lmetypeId:Details.visitType[i].lmetypeId,applicationClassesId:Details.visitType[i].applicationClassesId,classCode:Details.visitType[i].classType}):"C2"==Details.visitType[i].classType?$scope.lmeVisit.visitType.push({classId:Details.visitType[i].classId,lmetypeId:Details.visitType[i].lmetypeId,applicationClassesId:Details.visitType[i].applicationClassesId,classCode:Details.visitType[i].classType}):"C3"==Details.visitType[i].classType&&$scope.lmeVisit.visitType.push({classId:Details.visitType[i].classId,lmetypeId:Details.visitType[i].lmetypeId,applicationClassesId:Details.visitType[i].applicationClassesId,classCode:Details.visitType[i].classType})},$scope.changedoctor=function(param){param&&$scope.lmeVisit.doctordetails.push({dmeId:param.dmeId,doctorname:param.doctorname})},$scope.createLmeVisit=function(){$scope.lmeVisit.visitType.length>0?(APIS.LME_VISIT.data=$scope.lmeVisit,DataManager.sendRestRequest(null,APIS.LME_VISIT,function(response){response.success?($scope.lmeVisit=response.dataBean,ModalService.openAlert("alert","LME Visit","Visit Created Successfully","null","null",function(){$window.location.reload()})):$log.error("LME Visit Model: "+response.errorMessages)},$scope.uconfig.token)):ModalService.openAlert("alert","LME Visit","Please Fill all mandatory fields","null","null")},$scope.ardata=function(){var url=null,tempUrl=null;tempUrl=APIS.AR_DMFNOTIFICATION.URL,url=tempUrl+"/"+$scope.applicantId,APIS.AR_DMFNOTIFICATION.URL=url,DataManager.sendRestRequest(null,APIS.AR_DMFNOTIFICATION,function(response){response.success?$scope.arvisitloaddata=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.AR_DMFNOTIFICATION.URL=tempUrl},$scope.createArVisit=function(){$scope.arVisit.visitType.length>0?($scope.arVisit.dmfNo=$scope.arvisitloaddata.length>0?$scope.arvisitloaddata[0].dmfNo:null,APIS.AR_VISIT.data=$scope.arVisit,console.log($scope.arVisit),DataManager.sendRestRequest(null,APIS.AR_VISIT,function(response){response.success?($scope.arVisit=response,ModalService.openAlert("alert","AR Visit","Visit Created Successfully","null","null"),$scope.cancel()):"AREXISTS"==response.errorMessage&&($scope.arvisit=response,ModalService.openAlert("alert","AR Visit","AR Provisio visit already in progress for the applicant","null","null"),$scope.cancel())},$scope.uconfig.token)):ModalService.openAlert("alert","AR Visit","Please Fill mandatory fields","null","null")},$scope.changeVisitType2=function(param){param.checked?$scope.arVisit.visitType.push({classId:param.classId,lmetypeId:param.lmetypeId}):$scope.arVisit.visitType.splice($scope.arVisit.visitType.map(function(e){return e.classId}).indexOf(param.classId),1)},$scope.changeVisitTypenew=function(param,index){if(1==param)$scope.arVisit.visitType.push({classId:$scope.newappvisittypes[index].classId,lmetypeId:$scope.newappvisittypes[index].lmetypeId});else{var currentVtype=$scope.newappvisittypes[index];$scope.arVisit.visitType.splice({classId:currentVtype.classId},1)}},$scope.dmfvisittype=function(){$scope.appvisittypes&&$scope.dmfVisit.visitTypes.push({classId:$scope.appvisittypes[0].classId})},$scope.dmfAction=function(){return $scope.frmSubmit=!0,$scope.form.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmit=!1,$scope.frmInvalid=!1,ModalService.openAlert("confirm","DMF","Do you want to confirm the details?",$scope,"dmf",function(){}),$scope.$on("dmfOk",function(){$scope.dmfVisit.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),$scope.dmfvisittype(),APIS.DMF_POPUP.data=$scope.dmfVisit,DataManager.sendRestRequest(null,APIS.DMF_POPUP,function(response){response.success?(ModalService.openAlert("alert","DMF","DMF Submitted Successfully","null","null",function(){$window.location.reload()}),sessionStorage.setItem("underDMF",!0)):$log.error("DMF Model: "+response.errorMessages)},$scope.uconfig.token)}),void $scope.$on("dmfcancel",function(){$uibModalInstance.dismiss("cancel")}))},$scope.abortAction=function(){return $scope.frmSubmit=!0,$scope.form.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmit=!1,$scope.frmInvalid=!1,ModalService.openAlert("confirm","warning","Do you want to confirm the details?",$scope,"abort",function(){}),$scope.$on("abortOk",function(){$scope.abortsavedata.startdate=$scope.abortloaddata?$filter("date")(new Date($scope.abortloaddata[0].start_date),"yyyy-MM-dd hh:mm:ss"):null,$scope.abortsavedata.statusId=$scope.abortloaddata?$scope.abortloaddata[0].status_id:null,APIS.GET_LME_ABORT.data=$scope.abortsavedata,DataManager.sendRestRequest(null,APIS.GET_LME_ABORT,function(response){response.success?ModalService.openAlert("alert","Success","Record has been aborted successfully.",$scope,"abort",function(){$scope.cancel(),$state.go("queue",{abort:!0})}):$log.error("Abort Model: "+response.errorMessages)},$scope.uconfig.token)}),void $scope.$on("abortcancel",function(){$uibModalInstance.dismiss("cancel")}))},$scope.abortdata=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_CODE.URL,url=tempUrl+"/"+[$scope.visitid],APIS.LME_GET_CODE.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_CODE,function(response){response.success?($scope.abortloaddata=response.dataBean,$scope.abortloaddata[0].start_date=$filter("date")(new Date($scope.abortloaddata[0].start_date),"dd-MMM-yy hh:mm a")):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_CODE.URL=tempUrl},$scope.arabortdata=function(){var url=null,tempUrl=null;tempUrl=APIS.AR_GET_CODE.URL,url=tempUrl+"/"+$scope.visitid,APIS.AR_GET_CODE.URL=url,DataManager.sendRestRequest(null,APIS.AR_GET_CODE,function(response){response.success?($scope.abortloaddata=response.dataBean,$scope.abortloaddata[0].start_date=$filter("date")(new Date($scope.abortloaddata[0].start_date),"dd-MMM-yy hh:mm a")):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.AR_GET_CODE.URL=tempUrl},$scope.FollowUpAction=function(param){return $scope.frmSubmit=!0,$scope.form.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmit=!1,$scope.frmInvalid=!1,$scope.followupdata.pagename=param,void("DMF"==$scope.visittypes||"PR"==$scope.visittypes?(ModalService.openAlert("confirm","warning","Are you sure you want to add the followup for this record?",$scope,"followup",function(){}),$scope.$on("followupOk",function(){APIS.GET_AR_FOLLOWUP_SAVE.data=$scope.followupdata,DataManager.sendRestRequest(null,APIS.GET_AR_FOLLOWUP_SAVE,function(response){$scope.status=response,response.success?(ModalService.openAlert("alert","Follow Up","saved data successfully","null","null"),$scope.cancel()):$log.error("Follow UP Model: "+response.errorMessages)},$scope.uconfig.token)}),$scope.$on("followupcancel",function(){$uibModalInstance.dismiss("cancel")})):(ModalService.openAlert("confirm","warning","Are you sure you want to add the followup for this record?",$scope,"followup",function(){}),$scope.$on("followupOk",function(){APIS.GET_LME_FOLLOWUP_SAVE.data=$scope.followupdata,DataManager.sendRestRequest(null,APIS.GET_LME_FOLLOWUP_SAVE,function(response){$scope.status=response,response.success?(ModalService.openAlert("alert","Follow Up","saved data successfully","null","null"),$scope.cancel()):$log.error("Follow UP Model: "+response.errorMessages)},$scope.uconfig.token)}),$scope.$on("followupcancel",function(){$uibModalInstance.dismiss("cancel")}))))},$scope.changeVisitType3=function(param){"DMF"!=$scope.visittypes&&"PR"!=$scope.visittypes?(param.checked?($scope.applicantTransfer.visitType=new Array,$scope.applicantTransfer.visitType.push({classId:param.classId,lmeTypeId:param.lmetypeId}),$scope.selecteddmedisabled=!0,$scope.selectdme=$scope.applicationdetails.doctorname):($scope.applicantTransfer.visitType.splice($scope.lmeVisit.visitType.map(function(e){return e.classId}).indexOf(param.classId),1),$scope.selecteddmedisabled=!1,$scope.applicantTransfer.visitType=null),$scope.selectdme=$scope.applicationdetails.doctorname):($scope.applicantTransfer.remarks="",$scope.applicantTransfer.funtionalStatus="VisitChange",$scope.selectedclassdisabled=!0,param.checked?$scope.artransferData.visitType.push({classId:param.classId,lmeTypeId:param.lmetypeId}):$scope.artransferData.visitType.splice($scope.artransferData.visitType.map(function(e){return e.classId}).indexOf(param.classId),1))},$scope.artransfercancel=function(){$window.location.reload()},$scope.changeDme=function(select,record){null!=select?($scope.visitc1=!0,$scope.visitc2=!0,$scope.visitc3=!0,$scope.applicantTransfer.visitType=null,$scope.assigdoc=select,$scope.datalist=$.grep(record,function(e){return e.dmeId==select}),$scope.dmeName=$scope.datalist[0].doctorname,$scope.dmeEmail=$scope.datalist[0].doctorEmail):($scope.applicantTransfer.visitType=new Array,$scope.visitc1=!1,$scope.visitc2=!1,$scope.visitc3=!1,$scope.selectdme=$scope.applicationdetails.doctorname)},$scope.ArchangeDme=function(select,record){null!=select?($scope.visitc1=!0,$scope.visitc2=!0,$scope.visitc3=!0,$scope.applicantTransfer.visitType=null,$scope.applicantTransfer.funtionalStatus="ARchange",$scope.assigdoc=select,$scope.datalist=$.grep(record,function(e){return e.dmePersonId==select}),$scope.dmeName=$scope.datalist[0].dmeName,$scope.dmeEmail=$scope.datalist[0].dmeEmail):($scope.applicantTransfer.visitType=new Array,$scope.visitc1=!1,$scope.visitc2=!1,$scope.visitc3=!1,$scope.selectdme=$scope.applicationdetails.doctorname)},$scope.saveTransfer=function(){return $scope.frmSubmitted=!0,$scope.form.$invalid&&0==$scope.selectedclassdisabled?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,$scope.frmInvalid=!1,null==$scope.applicantTransfer.visitType&&"VisitChange"!=$scope.applicantTransfer.funtionalStatus?($scope.applicantTransfer.newDMEId=$scope.assigdoc,$scope.applicantTransfer.newDMEName=$scope.dmeName,$scope.applicantTransfer.newDMEEmailId=$scope.dmeEmail,$scope.applicantTransfer.funtionalStatus="DME"):(delete $scope.applicantTransfer.newDMEId,delete $scope.applicantTransfer.newDMEName,delete $scope.applicantTransfer.newDMEEmailId,$scope.applicantTransfer.funtionalStatus="visitType"),void("DMF"!=$scope.visittypes&&"PR"!=$scope.visittypes||"DME"==$scope.applicantTransfer.funtionalStatus?(APIS.LME_TRANSFER.data=$scope.applicantTransfer,DataManager.sendRestRequest(null,APIS.LME_TRANSFER,function(response){response.success?(ModalService.openAlert("alert","Transfer","saved data successfully","null","null"),$scope.cancel()):$log.error("Transfer: "+response.errorMessages)},$scope.uconfig.token)):($scope.visitTypeCheck=$.grep($scope.applicationdetails.visitType,function(e){return 1==e.checked}),0!=$scope.visitTypeCheck.length?(APIS.LME_DMF_PR_TRANSFER.data=$scope.artransferData,DataManager.sendRestRequest(null,APIS.LME_DMF_PR_TRANSFER,function(response){response.success?ModalService.openAlert("alert","Transfer","saved data successfully","null","null",function(){$window.location.reload()}):$log.error("Transfer: "+response.errorMessages)},$scope.uconfig.token)):ModalService.openAlert("alert","warning","Please select atleast one class","null","null"))))},$scope.showContent=function($fileContent,index){$scope.content=$fileContent.split("base64,")[1],$scope.profileUpdateDetails.documentsList[index].document=$scope.content},$scope.loadattachdocdetails=function(){$scope.attchdoctype=[],DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_TYPE,function(response){response.success&&($scope.attchdoctype=response.dataBean)},$scope.uconfig.token)},$scope.attachsubdocChange=function(){$scope.subtype="",$scope.noResults=!1,$scope.loadattachsubdocdetails()},$scope.loadattachsubdocdetails=function(){$scope.docsubtyperesult=[];var url=null,tempUrl=null;tempUrl=APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL,url=tempUrl+"/"+$scope.attachdocumentsData.doctypeId,APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_DOC_SUBTYPE,function(response){response.success?$scope.docsubtyperesult=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token),APIS.LME_ATTACHMENT_DOC_SUBTYPE.URL=tempUrl},$scope.loadgriddata=function(){$scope.griddata=[],"DMF"==$scope.visitDetails.visitType||"PR"==$scope.visitDetails.visitType?$scope.referencetype="AR_VISITS":$scope.referencetype="LME_VISITS",$scope.applicantiddetails={applicantId:$scope.visitDetails.applicantId,referencetype:$scope.referencetype},APIS.LME_ATTACH_DOC_GRID.data=$scope.applicantiddetails,DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?($scope.griddata=response.dataBean,console.log($scope.griddata)):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.remove=function(documentid){ModalService.openAlert("confirm","warning","Do you want to delete?",$scope,"recall",function(){$scope.$on("recallOk",function(){$scope.documentId={documentId:documentid},APIS.LME_REMOVE_ATTACH_GRID.data=$scope.documentId,DataManager.sendRestRequest(null,APIS.LME_REMOVE_ATTACH_GRID,function(response){response.success?(ModalService.openAlert("alert","Success","Removed successfully","null","null"),$scope.loadgriddata()):console.log(response.errorMessage)},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.viewdoc=function(documentid){$scope.documentId={documentId:documentid},APIS.LME_ATTACH_VIEW_DOC.data=$scope.documentId,DataManager.sendRestRequest(null,APIS.LME_ATTACH_VIEW_DOC,function(response){if(response.success){var content=response.dataBean[0].file,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean[0].file,"_blank","location=0,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token)},$scope.approved=function(approvedetails){ModalService.openAlert("confirm","warning","Do you want to Approve it?",$scope,"recall",function(){$scope.$on("recallOk",function(){$scope.uploaddate=$filter("date")(new Date(approvedetails.created_on),"yyyy-MM-dd"),$scope.approvedetails={documentId:approvedetails.documentId,editedby:$scope.userInfo.personId,approvedYN:"Y",editedon:$scope.uploaddate},console.log($scope.approvedetails),APIS.LMAB_ATTACHMENT_APPROVE.data=$scope.approvedetails,DataManager.sendRestRequest(null,APIS.LMAB_ATTACHMENT_APPROVE,function(response){response.success?(ModalService.openAlert("alert","Success","Approved successfully","null","null"),$scope.loadgriddata()):console.log(response.errorMessage)},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.Datefunction=function(){$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0}},$scope.attachpushsubtype=function(param){$scope.getdetails.subtypeList.push({subtypeId:param})},$scope.submitForApproval=function(subtype,pdfconvertfile){if("DMF"==$scope.visitDetails.visitType||"PR"==$scope.visitDetails.visitType?$scope.referencetype="AR_VISITS":$scope.referencetype="LME_VISITS",null==pdfconvertfile||""==pdfconvertfile||void 0==pdfconvertfile)ModalService.openAlert("alert","Alert","Attach the File","null","null");else{$scope.dateconvert=$filter("date")(new Date($scope.attachdocumentsData.reportdate),"yyyy-MM-dd");var filepath=document.getElementById("filename").value,startIndex=filepath.indexOf("\\")>=0?filepath.lastIndexOf("\\"):filepath.lastIndexOf("/"),filename=filepath.substring(startIndex);0!==filename.indexOf("\\")&&0!==filename.indexOf("/")||(filename=filename.substring(1)),$scope.islmehomedirect=JSON.parse($window.sessionStorage.getItem("lmehomedirect")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.attachdocumentsData.subtypeId=$.grep($scope.docsubtyperesult,function(e){return e.description==subtype})[0].document_sub_type_id,$scope.attachdocumentsdescription=$.grep($scope.attchdoctype,function(e){return e.document_type_id==$scope.attachdocumentsData.doctypeId})[0].code,$scope.getdetails={referenceId:$scope.visitDetails.visitId,referencetype:$scope.referencetype,doctypeId:$scope.attachdocumentsData.doctypeId,subtypeId:$scope.attachdocumentsData.subtypeId,clinicId:$scope.visitDetails.applicantDetails.clinicId,reportdate:$scope.dateconvert,createdby:$scope.uconfig.userSeqId,filename:filename,document:pdfconvertfile,applicantId:$scope.visitDetails.applicantId,roleName:$scope.rolename,doctypeDesc:$scope.attachdocumentsdescription},console.log($scope.getdetails),APIS.LME_ATTACHMENT_UPLOAD.data=$scope.getdetails,DataManager.sendRestRequest(null,APIS.LME_ATTACHMENT_UPLOAD,function(response){response.success?(ModalService.openAlert("alert","Success","Saved successfully","null","null"),$scope.loadgriddata()):console.log(response.errorMessage)},$scope.uconfig.token)}},$scope.docsubtypetext=function(param){
$scope.makesubtext=param},$scope.init()}]),angular.module("app.lme").directive("onReadFile",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsDataURL((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}),angular.module("app").controller("DMFactionCtrl",["$scope","$state","$log","APIS","DataManager","ModalService","$filter","$window","$uibModalInstance","modalParam",function($scope,$state,$log,APIS,DataManager,ModalService,$filter,$window,$uibModalInstance,modalParam){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.visitDetails=modalParam.visitDetails,$scope.applicantId=modalParam.visitDetails.applicantId,$scope.cambdata={},$scope.init=function(){$scope.databind(),$scope.dmfVisit={intitiatedby:$scope.userRegDetails.personId,treatmentplan:"",diagnosis:"",dateofoccurence:"",applicantId:$scope.applicantId,initatedRole:$scope.roleid}},$scope.databind=function(){$scope.visitDetails.deferredFrom&&$scope.cambrecord()},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.dmfarAction=function(){return $scope.frmSubmitted=!0,$scope.form.$invalid?($scope.frmInvalid=!0,!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,ModalService.openAlert("confirm","DMF","Do you want to confirm the details?",$scope,"dmf",function(){}),$scope.$on("dmfOk",function(){$scope.temp={dateofoccurence:""},$scope.temp.dateofoccurence=$filter("date")(new Date($scope.dmfVisit.dateofoccurence),"yyyy-MM-dd"),$scope.value={intitiatedby:$scope.userRegDetails.personId,treatmentplan:$scope.dmfVisit.treatmentplan,diagnosis:$scope.dmfVisit.diagnosis,dateofoccurence:$scope.dmfVisit.dateofoccurence,applicantId:$scope.applicantId,initatedRole:$scope.roleid},APIS.DMF_POPUP.data=$scope.value,DataManager.sendRestRequest(null,APIS.DMF_POPUP,function(response){response.success?(ModalService.openAlert("alert","DMF","saved data successfully","null","null"),$scope.cancel()):$log.error("DMF Model: "+response.errorMessages)},$scope.uconfig.token)}),void $scope.$on("dmfcancel",function(){$uibModalInstance.dismiss("cancel")}))},$scope.cambrecord=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_CAMBINSTRUCTIONS.URL,url=tempUrl+"/"+$scope.visitDetails.applicantId+"/"+$scope.visitDetails.deferredFrom,APIS.LME_CAMBINSTRUCTIONS.URL=url,DataManager.sendRestRequest(null,APIS.LME_CAMBINSTRUCTIONS,function(response){response.success?$scope.cambdata=response.dataBean:console.log(response)},$scope.uconfig.token),APIS.LME_CAMBINSTRUCTIONS.URL=tempUrl},$scope.init()}]),angular.module("app.common").controller("DMFmodalCtrl",function($scope,$uibModalInstance,items){$scope.items=items,$scope.ok=function(){$uibModalInstance.close()},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}),angular.module("app.landing").controller("LandingCtrl",["$scope","$state","APIS","DataManager","$timeout","$rootScope","ModalService","$http","$filter","$sce","ResourceManager",function($scope,$state,APIS,DataManager,$timeout,$rootScope,ModalService,$http,$filter,$sce,ResourceManager){$scope.init=function(){$scope.pasha="HIIIIII",$scope.loadlanding(),$scope.InstructionList=[],$scope.homeRM=ResourceManager,$scope.LandingInstructio=$scope.homeRM},$scope.loadlanding=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I001",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){$scope.InstructionList=response.dataBean;var ins=$scope.InstructionList.instruction;$scope.LandingInstruction=$sce.trustAsHtml(ins)}})},$scope.init()}]),angular.module("app.login").factory("Versiontime",function($cacheFactory){return $cacheFactory("releasetime")}).controller("footerCtrl",["$rootScope","$scope","$state","APIS","DataManager","ResourceManager","$timeout","$window","$uibModal","ModalService","switchRoles","PermissionManager","SessionManager","AutoSaveManager","$sce","Versiontime",function($rootScope,$scope,$state,APIS,DataManager,ResourceManager,$timeout,$window,$uibModal,ModalService,switchRoles,PermissionManager,SessionManager,AutoSaveManager,$sce,Versiontime){$scope.init=function(){},$scope.cache=Versiontime.get("releasetime"),$scope.cache?$scope.appversion_time=$scope.cache:DataManager.sendRestRequest(null,APIS.APPVERSION_TIME,function(response){response.success&&($scope.appversion_time=response.dataBean,Versiontime.put("releasetime",response.dataBean))}),$scope.init()}]),angular.module("app").controller("ProfileModelCtrl",["$rootScope","$scope","APIS","DataManager","$uibModalInstance","ResourceManager","ModalService","$filter",function($rootScope,$scope,APIS,DataManager,$uibModalInstance,ASU,ModalService,$filter){if($scope.ASU=ASU,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),!$scope.uconfig)return $state.go("login"),!1;$scope.currentDt=new Date,$scope.init=function(){$scope.user={selectedRoles:[]},$scope.selectedSpecialityList=[],$scope.selectedClinics=[],$scope.formats=["dd-MMM-yyyy","dd/MM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dateOptions={startingDay:1,showWeeks:!1},$scope.pastDateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.futureDateOptions={minDate:new Date,startingDay:1,showWeeks:!1},$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.dobopen1=function(){$scope.dobpopup1.opened=!0},$scope.dobpopup1={opened:!1},$scope.apptFromopen1=function(){$scope.apptFrompopup1.opened=!1},$scope.apptFrompopup1={opened:!1},$scope.apptToopen1=function(){$scope.apptTopopup1.opened=!0},$scope.apptTopopup1={opened:!1},$scope.accExpDtopen1=function(){$scope.accExpDtpopup1.opened=!0},$scope.accExpDtpopup1={opened:!1}},$scope.init();var getPostalAddress=function(postalCode,index){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean?($scope.userNewDataObj.person.address[index].line1=response.dataBean.building,$scope.userNewDataObj.person.address[index].line2=response.dataBean.unit):($scope.userNewDataObj.person.address[index].line1=null,$scope.userNewDataObj.person.address[index].line2=null)})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userNewDataObj.person.address[index].line1=null,$scope.userNewDataObj.person.address[index].line2=null)},$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurOfficeNum=!1,$scope.onBlurOfficeNumFn=function(){$scope.onBlurOfficeNum=!0},$scope.duplicateUser={},$scope.duplicateNRIC={},$scope.prevEmail=null,$scope.isEmailExsist=function(){$scope.duplicateUser={},$scope.prevEmail!==$scope.userNewDataObj.person.email&&(APIS.USER_EXSIST.data={email:$scope.userNewDataObj.person.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response}))},$scope.prevnric=null,$scope.isNRICExsist=function(){$scope.duplicateNRIC={},$scope.prevnric!==$scope.userNewDataObj.person.nric&&(APIS.NRIC_EXSIST.data={nric:$scope.userNewDataObj.person.nric},DataManager.sendRestRequest(null,APIS.NRIC_EXSIST,function(response){$scope.duplicateNRIC=response}))};var resetDivFlags=function(){$scope.roleDiv=!0,$scope.personalDiv=!0,$scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1};resetDivFlags();var roleIdsVarStr=null,onRoleChange=function(roleId){roleIdsVarStr=null,resetDivFlags(),roleIdsVarStr=roleId.toString(),null!=roleIdsVarStr&&(roleIdsVarStr.indexOf("6")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("7")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("8")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("12")==-1&&roleIdsVarStr.indexOf("13")==-1||($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("10")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("9")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1),roleIdsVarStr.indexOf("14")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1),roleIdsVarStr.indexOf("11")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1))};$scope.salList=[],$scope.designList=[],$scope.qualList=[],$scope.countryList=[],$scope.nationsList=[],$scope.ectyList=[],$scope.genList=[],$scope.clinicList=[],$scope.specialityList=[];var sporeKey=1;$scope.loadCombos=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.URL+"SAL,DESIGNATION,QUALIFICATION,NATIONS, ECTY, GEN, country,ORGANIZATION",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.designList=response.dataBean.DESIGNATION,$scope.qualList=response.dataBean.QUALIFICATION,$scope.nationsList=response.dataBean.NATIONS,$scope.ectyList=response.dataBean.ECTY,$scope.genList=response.dataBean.GEN,$scope.countryList=response.dataBean.country,angular.forEach($scope.countryList,function(value,key){value.lookUpItemValue==$scope.sporeTxt&&($scope.sporeKey=key)})})}(),$scope.loadClinicsCombo=function(){APIS.GETCLINICSETUPLIST.data={},DataManager.sendRestRequest(null,APIS.GETCLINICSETUPLIST,function(response){response.success?($scope.clinicList=response.dataBean,console.log("clinicList : ",$scope.clinicList)):console.log(response)},$scope.uconfig.token)}(),$scope.loadSpecialityCombo=function(){DataManager.sendRestRequest(null,APIS.ADMIN_GET_USER_SPECIALITIES,function(response){response.success&&($scope.specialityList=response.dataBean,console.log("speciality LIST : ",$scope.specialityList))},$scope.uconfig.token)}(),$scope.getUserDetailsByUserId=function(){$rootScope.showMask(!0),onRoleChange($scope.currentRole.roleId),APIS.SINGPASS_GET_PROFILE.data={},APIS.SINGPASS_GET_PROFILE.URL=String.prototype.format.apply(APIS.SINGPASS_GET_PROFILE.tempURL,[$scope.uconfig.userSeqId]),DataManager.sendRestRequest(null,APIS.SINGPASS_GET_PROFILE,function(response){response.success&&($scope.userNewDataObj=response.dataBean,console.log("modify userDetails before : ",$scope.userNewDataObj),null!=$scope.userNewDataObj.person.photo&&$("#docBinaryStorageDiv").attr("src","data:image/jpeg;base64,"+$scope.userNewDataObj.person.photo),$scope.prevEmail=$scope.userNewDataObj.person.email,angular.forEach($scope.userNewDataObj.userSpecialitiesSet,function(specialityObj,key){$scope.selectedSpecialityList.push(specialityObj.speciality.specialityId)}),angular.forEach($scope.userNewDataObj.userClinics,function(clinicObj,key){$scope.selectedClinics.push(clinicObj.clinicsId)}),null!=$scope.userNewDataObj.person.dob&&($scope.userNewDataObj.person.dob=new Date($scope.userNewDataObj.person.dob)),null!=$scope.userNewDataObj.person.period_of_appt_from&&($scope.userNewDataObj.person.period_of_appt_from=new Date($scope.userNewDataObj.person.period_of_appt_from)),null!=$scope.userNewDataObj.person.period_of_appt_to&&($scope.userNewDataObj.person.period_of_appt_to=new Date($scope.userNewDataObj.person.period_of_appt_to)),null!=$scope.userNewDataObj.acExpirtDate&&($scope.userNewDataObj.acExpirtDate=new Date($scope.userNewDataObj.acExpirtDate)),null!=$scope.userNewDataObj.person.address&&void 0!=$scope.userNewDataObj.person.address&&console.log("$scope.userNewDataObj.person.address[0]",$scope.userNewDataObj.person.address[0]))},$scope.uconfig.token)}();var configurePostalValLen=function(index){$scope.userNewDataObj.person.address[index].country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope["postalMinLen"+index]=3,$scope["postalMaxLen"+index]=15):($scope["postalMinLen"+index]=6,$scope["postalMaxLen"+index]=6)};$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.userNewDataObj.person.address[0].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isResAddChanged=!0),$scope.userNewDataObj.person.address[0].line1=null,$scope.userNewDataObj.person.address[0].line2=null,configurePostalValLen(0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.userNewDataObj.person.address[1].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),$scope.userNewDataObj.person.address[1].line1=null,$scope.userNewDataObj.person.address[1].line2=null,configurePostalValLen(1))},$scope.onClinicChange=function(){console.log("selected clinics ",$scope.selectedClinics),0==$scope.selectedClinics.length&&($scope.userNewDataObj.person.address[1]={}),APIS.GETCLINICSETUPDATA.URL="admin/clinics/"+$scope.selectedClinics[0],DataManager.sendRestRequest(null,APIS.GETCLINICSETUPDATA,function(response){response.success&&(console.log(response.dataBean),$scope.userNewDataObj.person.address[1]=response.dataBean.clinicAddress,$scope.userNewDataObj.person.address[1].addressType=2)},$scope.uconfig.token)};var upperCaseFirstLetter=function(input){return input.charAt(0).toUpperCase()+input.slice(1)};$scope.saveUserDetails=function(){return $scope.isFrmSubmited=!0,!$scope.frmConfirmProfile.$invalid&&($scope.duplicateUser.errorMessage?(ModalService.openAlert("alert","warning",$scope.duplicateUser.errorMessage+" Please enter another email.",$scope),!1):$scope.duplicateNRIC.errorMessage?(ModalService.openAlert("alert","warning",$scope.duplicateNRIC.errorMessage,$scope),!1):$scope.userNewDataObj.person.period_of_appt_from>$scope.userNewDataObj.person.period_of_appt_to?(ModalService.openAlert("alert","warning","Period of Appointment From Date should be less than To Date",$scope),!1):($scope.userNewDataObj.person.firstName&&($scope.userNewDataObj.person.firstName=upperCaseFirstLetter($scope.userNewDataObj.person.firstName)),$scope.userNewDataObj.person.lastName&&($scope.userNewDataObj.person.lastName=upperCaseFirstLetter($scope.userNewDataObj.person.lastName)),null!=$scope.userNewDataObj.person.dob&&($scope.userNewDataObj.person.dob=$filter("date")($scope.userNewDataObj.person.dob,"yyyy-MM-dd")),null!=$scope.userNewDataObj.acExpirtDate&&($scope.userNewDataObj.acExpirtDate=$filter("date")($scope.userNewDataObj.acExpirtDate,"yyyy-MM-dd")),null!=$scope.userNewDataObj.person.period_of_appt_from&&($scope.userNewDataObj.person.period_of_appt_from=$filter("date")($scope.userNewDataObj.person.period_of_appt_from,"yyyy-MM-dd")),null!=$scope.userNewDataObj.person.period_of_appt_to&&($scope.userNewDataObj.person.period_of_appt_to=$filter("date")($scope.userNewDataObj.person.period_of_appt_to,"yyyy-MM-dd")),null!=$scope.userNewDataObj.userFacilities?$scope.userNewDataObj.userFacilities[0].roles=[]:$scope.userNewDataObj.userFacilities=[{roles:[]}],$scope.userNewDataObj.userSpecialitiesSet=[],$scope.userNewDataObj.userClinics=[],$scope.userNewDataObj.lmeVisitTypes=[],$scope.userNewDataObj.arVisitType=[],$scope.userNewDataObj.username=$scope.userNewDataObj.person.lastName+" "+$scope.userNewDataObj.person.firstName,angular.forEach($scope.user.selectedRoles,function(roleId,key){$scope.userNewDataObj.userFacilities[0].roles.push({roleId:roleId})}),angular.forEach($scope.selectedSpecialityList,function(specialityId,key){$scope.userNewDataObj.userSpecialitiesSet.push({speciality:{specialityId:specialityId}})}),angular.forEach($scope.selectedClinics,function(clinicId,key){$scope.userNewDataObj.userClinics.push({clinicsId:clinicId})}),$scope.userNewDataObj.person.address.splice(1,1),void updateUserDetails()))};var updateUserDetails=function(){$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.userNewDataObj.person.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),APIS.SINGPASS_CONFIRM_PROFILE.data=$scope.userNewDataObj,DataManager.sendRestRequest(null,APIS.SINGPASS_CONFIRM_PROFILE,function(response){response.success?(ModalService.openAlert("alert","success","Updated Successfully",$scope),$scope.init()):ModalService.openAlert("alert","error","Error in Update",$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token)};$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app.directive").directive("uiFileUpload",[function(){return{restrict:"A",link:function(scope,ele){return ele.bootstrapFileInput()}}}]).directive("modal",function(){return{restrict:"EA",scope:{title:"=modalTitle",header:"=modalHeader",body:"=modalBody",footer:"=modalFooter",callbackbuttonleft:"&ngClickLeftButton",callbackbuttonright:"&ngClickRightButton",handler:"=modalId",large:"=large",small:"=small",modalparams:"=modalparams",cscope:"=cscope"},templateUrl:"app/common/directives/partials/modal.html",transclude:!0,link:function(scope,element,attrs){scope.modalparams=10},controller:function($scope){$scope.getma=null,console.log($scope.cscope),$scope.getNumber=function(num){return new Array(num)},$scope.selectMA=function(data,index){console.log(data)}}}}).directive("selectedactionpopup",["$uibModal",function($uibModal){return{restrict:"EA",transclude:!0,scope:{actionParam:"@actionParam",applicantParam:"@applicantParam",popupAction:"&popupAction"},link:function(scope,element,attrs){switch(scope.popupAction({trigger:!1}),scope.modelUrl="",attrs.actionParam){case"Create LME Visit":scope.modelUrl="app/common/directives/partials/createlmevisitmodal.html",scope.size="md";break;default:scope.modelUrl="app/common/directives/partials/noactionmodal.html"}$uibModal.open({animation:!0,templateUrl:scope.modelUrl,controller:"ActionCtrl",size:scope.size,backdrop:"static",resolve:{modalParam:function(){return attrs.applicantParam}}})}}}]).directive("uiWizardForm",[function(){return{link:function(scope,ele){return ele.steps()}}}]).filter("range",function(){return function(val,range){range=parseInt(range);for(var i=0;i<range;i++)val.push(i);return val}}).directive("setTop",function($window){var $win=angular.element($window);return{restrict:"A",link:function(scope,element,attrs){var topClass=attrs.setTop,offsetTop=element.offset().top;$win.on("scroll",function(e){$win.scrollTop()>=offsetTop?element.addClass(topClass):element.removeClass(topClass)})}}}).directive("miniProfile",function($window){return{restrict:"E",templateUrl:"app/miniprofile/partials/minprofile.html",link:function(scope,element,attrs){scope.size=attrs.size}}}).directive("histroy",function($window){return{restrict:"E",templateUrl:"app/history/partials/histroy.html",link:function(scope,element,attrs){}}}).directive("slideToggle",function(){return{restrict:"A",scope:{isOpen:"=slideToggle"},link:function(scope,element,attr){var slideDuration=parseInt(attr.slideToggleDuration,30)||600;scope.$watch("isOpen",function(newIsOpenVal,oldIsOpenVal){newIsOpenVal!==oldIsOpenVal&&element.stop().slideToggle(slideDuration)})}}}).directive("hed",function($window){return{restrict:"E",templateUrl:"app/applicant/partials/hed/preview.html",link:function(scope,element,attrs){}}}).directive("caasSecurity",function(PermissionManager){return{restrict:"A",scope:{permission:"@"},link:function($scope,inputElement,attrs){$scope.permission&&0==PermissionManager.verifyPermission($scope.permission)&&inputElement.addClass("hide")}}}).directive("popupOver",function($window){return{restrict:"A",scope:{templateId:"=templateId",ctrlModel:"=ctrlModel"},templateUrl:"app/history/partials/popupover.html",link:function(scope,element,attrs){}}}).directive("leftaudiogram",["$filter",function($filter){return{restrict:"A",scope:{canvasid:"=canvasid",spanid:"=spanid",data:"=data",index:"=index"},transclude:!0,link:function(scope,element,attrs){function getPosition(e){var targ;e||(e=window.event),e.target?targ=e.target:e.srcElement&&(targ=e.srcElement),3==targ.nodeType&&(targ=targ.parentNode);var x=e.pageX-$(targ).offset().left,y=e.pageY-$(targ).offset().top;console.log(x),console.log(y),transformation(x,y)}function transformation(clickedX,clickedY){context.clearRect(0,0,attrs.width,attrs.height);for(var targetX,targetY,x=[75,132,190,246,275,304,334,361],y=[50,61,71,81,91,101,112,122,134,142,152,163,173,183,194,203,213,223,234,245,255,263,276,284,295,304,315,325],sx=[62,102,162,220,261,289,319,348],ex=[102,162,220,261,289,319,348,378],sy=[46,56,66,76,86,96,106,116,126,138,147,157,168,176,187,197,207,217,228,238,249,259,269,278,290,299,310,319,330],ey=[56,66,76,86,96,106,116,126,138,147,157,168,176,187,197,207,217,228,238,249,259,269,278,290,299,310,319,330,341],cx=0;cx<x.length;cx++)for(var cy=0;cy<y.length;cy++)clickedX>sx[cx]&&clickedX<ex[cx]&&clickedY>sy[cy]&&clickedY<ey[cy]&&(clickedY==y[cy]?(targetX=x[cx],targetY=y[cy]):(targetX=x[cx],targetY=y[cy]));var data={freq:targetX,sound:targetY};if(audiogramData.length>0){var isduplicate=!1;angular.forEach(audiogramData,function(value,key){value.freq==targetX&&(audiogramData[key].freq=targetX,audiogramData[key].sound=targetY,isduplicate=!0,needFirstPoint=!0)}),isduplicate||data.sound&&(audiogramData.push(data),needFirstPoint=!0)}else data.sound&&(console.log(data),audiogramData.push(data));audiogramData=$filter("orderBy")(audiogramData,"freq"),angular.forEach(audiogramData,function(value,key){$("#leftaudioData").val(key),drawNextLine(value.freq,value.sound,audiogramData.length,key)}),scope.$emit("audogrameLeftCount",{count:audiogramData.length}),audiogramData.length>6&&(scope.data.audiometry[scope.index].left=audiogramData,scope.$apply())}function drawNextLine(clickedX,clickedY,len,currentPoint){$("#clrBtnLeft").show(),$("#clrBtnRight").hide(),$("#clrBtnLeft1").show(),$("#clrBtnRight1").hide(),context.strokeStyle="#FF4500",context.lineWidth=2,context.beginPath(),context.arc(clickedX,clickedY,10,0,2*Math.PI),0==currentPoint&&(needFirstPoint=!0),needFirstPoint?needFirstPoint=!1:(context.moveTo(previousX,previousY),len>1&&context.lineTo(clickedX,clickedY)),context.stroke(),previousX=clickedX,previousY=clickedY}var previousX,previousY,audiogramData=[],canvasId=String("#"+scope.canvasid),context=(document.getElementById(canvasId),element[0].getContext("2d")),needFirstPoint=!0,spanId=String("#"+scope.spanid);scope.data.audiometry[scope.index].active=!1,scope.$on("redraw",function(event,args){needFirstPoint=!0,audiogramData=scope.data.audiometry[scope.index].left,angular.forEach(scope.data.audiometry[scope.index].left,function(value,key){drawNextLine(value.freq,value.sound,scope.data.audiometry[scope.index].left.length)})}),scope.data.audiometry[scope.index].left.length>0&&(audiogramData=scope.data.audiometry[scope.index].left,angular.forEach(scope.data.audiometry[scope.index].left,function(value,key){drawNextLine(value.freq,value.sound,scope.data.audiometry[scope.index].left.length)})),element.bind("click",function(event){angular.forEach(scope.data.audiometry,function(value,key){value.active=!1}),event.currentTarget.id&&(scope.data.audiometry[scope.index].active=!0),$("#getCurrentCanvas").val($(canvasId).attr("id"));var left_position=$(canvasId).offset(),clickedX=($(spanId).offset(),parseInt(event.clientX)-parseInt(left_position.left));event.clientY+10;return!(clickedX<60)&&(!(clickedX>390)&&void(position=getPosition(event)))}),document.getElementById("clrButtonLeft")&&document.getElementById("clrButtonLeft").addEventListener("click",function(){console.log(scope.data.audiometry),angular.forEach(scope.data.audiometry,function(value,key){if(value.active){scope.data.audiometry[key].left=[],scope.$apply(),scope.$broadcast("redraw",!0);var conid="leftCan-"+key,drawingCanvas1=document.getElementById(conid),context1=drawingCanvas1.getContext("2d");context1.clearRect(0,0,context1.canvas.clientWidth,context1.canvas.clientHeight)}scope.$emit("audogrameLeftCount",{count:[]})})},!0)}}}]).directive("rightadiogram",["$filter",function($filter){return{restrict:"A",scope:{canvasid:"=canvasid",spanid:"=spanid",data:"=data",index:"=index"},transclude:!0,link:function(scope,element,attrs){function getPosition(e){var targ;e||(e=window.event),e.target?targ=e.target:e.srcElement&&(targ=e.srcElement),3==targ.nodeType&&(targ=targ.parentNode);var x=e.pageX-$(targ).offset().left,y=e.pageY-$(targ).offset().top;console.log("y"+y),console.log("x"+x),transformation(x,y)}function transformation(clickedX,clickedY){context.clearRect(0,0,attrs.width,attrs.height);for(var targetX,targetY,x=[75,132,190,246,275,304,334,361],y=[50,61,71,81,91,101,112,122,134,142,152,163,173,183,194,203,213,223,234,245,255,263,276,284,295,304,315,325],sx=[62,102,162,220,261,289,319,348],ex=[102,162,220,261,289,319,348,378],sy=[46,56,66,76,86,96,106,116,126,138,147,157,168,176,187,197,207,217,228,238,249,259,269,278,290,299,310,319,330],ey=[56,66,76,86,96,106,116,126,138,147,157,168,176,187,197,207,217,228,238,249,259,269,278,290,299,310,319,330,341],cx=0;cx<x.length;cx++)for(var cy=0;cy<y.length;cy++)clickedX>sx[cx]&&clickedX<ex[cx]&&clickedY>sy[cy]&&clickedY<ey[cy]&&(clickedY==y[cy]?(targetX=x[cx],targetY=y[cy]):(targetX=x[cx],targetY=y[cy]));var data={freq:targetX,sound:targetY};if(audiogramData.length>0){var isduplicate=!1;angular.forEach(audiogramData,function(value,key){value.freq==targetX&&(audiogramData[key].freq=targetX,audiogramData[key].sound=targetY,isduplicate=!0,needFirstPoint=!0)}),isduplicate||data.sound&&(audiogramData.push(data),needFirstPoint=!0)}else data.sound&&(console.log(data),audiogramData.push(data));console.log("audiogramData"+audiogramData.length),audiogramData=$filter("orderBy")(audiogramData,"freq"),angular.forEach(audiogramData,function(value,key){console.log(value),console.log(key),$("#rightaudioData").val(key),drawNextLine(value.freq,value.sound,audiogramData.length,key)}),scope.$emit("audogrameRightCount",{count:audiogramData.length}),audiogramData.length>6&&(scope.data.audiometry[scope.index].right=audiogramData,scope.$apply())}function drawNextLine(clickedX,clickedY,len,currentPoint){$("#clrBtnLeft").hide(),$("#clrBtnRight").show(),$("#clrBtnLeft1").hide(),$("#clrBtnRight1").show(),context.strokeStyle="#FF4500",context.lineWidth=2,context.beginPath(),context.arc(clickedX,clickedY,10,0,2*Math.PI),0==currentPoint&&(needFirstPoint=!0),needFirstPoint?needFirstPoint=!1:(context.moveTo(previousX,previousY),len>1&&context.lineTo(clickedX,clickedY)),context.stroke(),previousX=clickedX,previousY=clickedY}var previousX,previousY,audiogramData=[],context=element[0].getContext("2d"),needFirstPoint=!0,canvasId=String("#"+scope.canvasid),spanId=String("#"+scope.spanid);scope.data.audiometry[scope.index].active=!1,scope.$on("redraw",function(event,args){needFirstPoint=!0,audiogramData=scope.data.audiometry[scope.index].right,angular.forEach(scope.data.audiometry[scope.index].right,function(value,key){drawNextLine(value.freq,value.sound,scope.data.audiometry[scope.index].right.length)})}),scope.data.audiometry[scope.index].right.length>0&&(audiogramData=scope.data.audiometry[scope.index].right,angular.forEach(scope.data.audiometry[scope.index].right,function(value,key){drawNextLine(value.freq,value.sound,scope.data.audiometry[scope.index].right.length)})),element.bind("click",function(event){angular.forEach(scope.data.audiometry,function(value,key){value.active=!1}),event.currentTarget.id&&(scope.data.audiometry[scope.index].active=!0),$("#getCurrentCanvas").val($(canvasId).attr("id"));var left_position=$(canvasId).offset(),clickedX=($(spanId).offset(),parseInt(event.clientX)-parseInt(left_position.left)),clickedY=event.clientY+10;return!(clickedX<60)&&(!(clickedX>390)&&(console.log(clickedX+"--"+clickedY),void(position=getPosition(event))))}),document.getElementById("clrButtonRight")&&document.getElementById("clrButtonRight").addEventListener("click",function(){angular.forEach(scope.data.audiometry,function(value,key){if(value.active){scope.data.audiometry[key].right=[],scope.$apply(),scope.$broadcast("redraw",!0);var conid="rightCan-"+key,drawingCanvas1=document.getElementById(conid),context1=drawingCanvas1.getContext("2d");context1.clearRect(0,0,context1.canvas.clientWidth,context1.canvas.clientHeight),scope.$emit("audogrameRightCount",{count:[]})}})},!0)}}}]).directive("restrictInput",[function(){return{restrict:"A",link:function(scope,element,attrs){var ele=element[0],regex=RegExp(attrs.restrictInput),value=ele.value;ele.addEventListener("keyup",function(e){regex.test(ele.value)?value=ele.value:ele.value=value})}}}]).directive("lowerThan",[function(){var link=function($scope,$element,$attrs,ctrl){var validate=function(viewValue){var comparisonModel=$attrs.lowerThan;return isNaN(viewValue)&&ctrl.$setValidity("lowerThan",!1),viewValue&&comparisonModel||ctrl.$setValidity("lowerThan",!0),ctrl.$setValidity("lowerThan",parseInt(viewValue,10)>parseInt(comparisonModel,10)),viewValue};ctrl.$parsers.unshift(validate),ctrl.$formatters.push(validate),$attrs.$observe("lowerThan",function(comparisonModel){return validate(ctrl.$viewValue)},!0)};return{require:"ngModel",link:link}}]).directive("greaterThan",[function(){var link=function($scope,$element,$attrs,ctrl){var validate=function(viewValue){var comparisonModel=$attrs.greaterThan;return isNaN(viewValue)&&ctrl.$setValidity("greaterThan",!1),viewValue&&comparisonModel||ctrl.$setValidity("greaterThan",!0),ctrl.$setValidity("greaterThan",parseInt(viewValue,10)<parseInt(comparisonModel,10)),viewValue};ctrl.$parsers.unshift(validate),ctrl.$formatters.push(validate),$attrs.$observe("lowerThan",function(comparisonModel){return validate(ctrl.$viewValue)})};return{require:"ngModel",link:link}}]).directive("numbersOnly",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(inputValue){if(void 0==inputValue)return"";var transformedInput=inputValue.toString().replace(/[^0-9]/g,"");return transformedInput!=inputValue&&(modelCtrl.$setViewValue(transformedInput),modelCtrl.$render()),transformedInput})}}}).directive("phonenumberOnly",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(inputValue){if(void 0==inputValue)return"";var transformedInput=inputValue.toString().replace(/[^0-9-+-]/g,"");return transformedInput!=inputValue&&(modelCtrl.$setViewValue(transformedInput),modelCtrl.$render()),transformedInput})}}}),angular.module("app.common").controller("footerCtrl",["$scope","$state",function($scope,$state){$scope.showMsg="footer ctr"}]),angular.module("app.common").controller("headerCtrl",["$scope","$state",function($scope,$state){$scope.showMsg="header ctrl"}]),angular.module("app.common").factory("AutoSaveManager",["$timeout","$rootScope","DataManager","APIS",function($timeout,$rootScope,DataManager,APIS){var autoSaveTime=30,userConfig=null,uConfig=null,autoSaveTimeOut=null,start=function(){userConfig||(uConfig=JSON.parse(sessionStorage.getItem("config")),userConfig=JSON.parse(sessionStorage.getItem("userconfig"))),autoSaveTimeOut&&$timeout.cancel(autoSaveTimeOut),autoSaveTimeOut=$timeout(requestAutoSave,1e3*autoSaveTime)},stopTimer=function(){
autoSaveTimeOut&&$timeout.cancel(autoSaveTimeOut)},requestAutoSave=function(){$rootScope.$broadcast("autoSaveRequested"),$timeout.cancel(autoSaveTimeOut),autoSaveTimeOut=$timeout(requestAutoSave,1e3*autoSaveTime)},save=function(pageName,data,transactionId,transactionStatus){var saveObj={usrId:uConfig.userSeqId,screenName:pageName,tranData:""!=data?JSON.stringify(data):null,tranId:transactionId,tranStatus:transactionStatus};APIS.SAVE_AUTO_SAVE_TRANSACTION.data=saveObj,DataManager.sendRestRequest(null,APIS.SAVE_AUTO_SAVE_TRANSACTION,function(response){response.success||console.log("Auto Save Data Failed: "+response.errorMessage)},uConfig.token)},fetch=function(pageName,callback,transactionId){uConfig||(uConfig=JSON.parse(sessionStorage.getItem("config")),userConfig=JSON.parse(sessionStorage.getItem("userconfig")));var retObj={usrId:uConfig.userSeqId,screenName:pageName,tranId:transactionId};APIS.RETRIEVE_AUTO_SAVE_TRANSACTION.data=retObj,DataManager.sendRestRequest(null,APIS.RETRIEVE_AUTO_SAVE_TRANSACTION,function(response){if(response.success)var obj={success:response.success,dataBean:response.dataBean.tranData?JSON.parse(response.dataBean.tranData):null};else{var obj={success:!0,dataBean:null};console.log("Auto Save Data retrieve Failed: "+response.errorMessage)}callback(obj)},uConfig.token)},setConfig=function(config){userConfig=config,uConfig=config},clear=function(pageName,transactionId){save(pageName,"",transactionId,3),stopTimer()};return{startTimer:start,autoSaveData:save,fetchSaveData:fetch,setUserConfig:setConfig,clearData:clear,stop:stopTimer}}]),angular.module("app.common").service("CAASConfig",function(){function setAppConfigData(data){appConfig=data}function getAppConfig(config){return appConfig[config]}function setLoginData(data){loginData=data}function getLoginData(){return loginData}function validateNRIC(str){if(9!=str.length)return!1;str=str.toUpperCase();var i,icArray=[];for(i=0;i<9;i++)icArray[i]=str.charAt(i);icArray[1]=2*parseInt(icArray[1],10),icArray[2]=7*parseInt(icArray[2],10),icArray[3]=6*parseInt(icArray[3],10),icArray[4]=5*parseInt(icArray[4],10),icArray[5]=4*parseInt(icArray[5],10),icArray[6]=3*parseInt(icArray[6],10),icArray[7]=2*parseInt(icArray[7],10);var weight=0;for(i=1;i<8;i++)weight+=icArray[i];var theAlpha,offset="T"==icArray[0]||"G"==icArray[0]?4:0,temp=(offset+weight)%11,st=["J","Z","I","H","G","F","E","D","C","B","A"],fg=["X","W","U","T","R","Q","P","N","M","L","K"];return"S"==icArray[0]||"T"==icArray[0]?theAlpha=st[temp]:"F"!=icArray[0]&&"G"!=icArray[0]||(theAlpha=fg[temp]),icArray[8]===theAlpha}var appConfig={},loginData={};return{setAppConfigData:setAppConfigData,getAppConfig:getAppConfig,setLoginData:setLoginData,getLoginData:getLoginData,autoSaveTime:3e4,isValidateNRIC:validateNRIC}}).service("switchRoles",["$state",function($state){return{go:function(role){switch(role){case"Admin":return $state.go("master-home"),!1;case"DME":return $state.go("lme"),!1;case"Clinic Assistant":return $state.go("lme"),!1;case"Applicant":return $state.go("dashboard"),!1;case"Medical Assessor":return $state.go("mahome"),!1;case"LMF":return $state.go("camb-home"),!1;case"LMF Manager":return $state.go("camb-home"),!1;case"CAMB Physician":return $state.go("camb-home"),!1;default:return $state.go("singdashboard"),!1}}}}]).service("convertpdf",["$state",function($state){return{htmltoPdf:function(containerId){var elementId="#"+containerId,pdf=new jsPDF,source=$(elementId)[0],margins={top:20,bottom:10,left:10,width:300};pdf.fromHTML(source,margins.left,margins.top,{width:margins.width},function(dispose){pdf.save("test.pdf")},margins)}}}]).service("SystemDateFormat",["DataManager","APIS",function(DataManager,APIS){var dateFormat=null,getSystemDateFormat=function(callBack){null!=dateFormat?callBack&&callBack(dateFormat):DataManager.sendRestRequest(null,APIS.GET_DATE_FORMAT,function(response){response.success&&null!=response.dataBean&&(dateFormat=response.dataBean),callBack&&callBack(dateFormat)})};return{getSystemDateFormat:getSystemDateFormat}}]),angular.module("app.common").factory("ModalService",function($uibModal){return{openModal:function(templateUrl,controller,config){return $uibModal.open({template:'<div class="modal-header" style="padding:9px 15px;border-bottom:1px solid #eee;background-color: #337ab7;color:#fff">   <div class="table-header">       <button aria-hidden="true" data-dismiss="modal"  style="color:#fff; opacity: 1;" class="close"  type="button"  ng-click="cancel()">           <span title="close">×</span>\n       </button>       <strong>'+(config.modalTitle||"Modal Title")+'</strong>   </div></div><div class="modal-body" ng-include="\''+templateUrl+"'\"></div>",controller:controller,size:config.size,resolve:{data:function(){return config.data}},backdrop:"static"})},openAlert:function(type,status,Message,scope,eventName,callback){var imgClass,alert,confirm,close,warning,scope=scope,callback=callback;return eventName||(eventName=type),"alert"==type?(alert=!0,confirm=!1,close=!1,"success"==status.toLowerCase()?imgClass="fa fa-check-circle fa-2x green":"error"==status.toLowerCase()?imgClass="fa fa-times-circle fa-2x red":"info"==status.toLowerCase()?imgClass="fa fa-exclamation-circle fa-2x blue":"warning"==status.toLowerCase()&&(imgClass="fa fa-exclamation-triangle fa-2x blue")):"confirm"==type||"reset"==type?(alert=!1,confirm=!0,close=!1,warning=!1,imgClass="fa fa-question-circle fa-2x blue"):"close"==type?(alert=!1,confirm=!1,close=!0,warning=!1,imgClass="fa fa-question-circle fa-2x blue"):"warning"==type&&(alert=!1,confirm=!1,close=!1,warning=!0,imgClass="fa fa-exclamation-triangle fa-2x blue"),$uibModal.open({template:'<div class="modal-header " style="padding: 9px 15px; border-bottom: 1px solid rgb(238, 238, 238); background-color: #338ac0; color: #fff; font: normal 16px natailu; text-align: center;">   <div class="table-header">       <button aria-hidden="true" data-dismiss="modal"  style="color: #fff; padding: 2px 5px; border: 1px solid #fff;" class="close"  type="button"  ng-click="alertCancel()">           <span title="close">×</span>\n       </button>       <strong>'+status+'</strong>   </div></div><div class="modal-body" style="font:normal  16px natailu;" ><i class="'+imgClass+' col-md-2"></i>'+Message+'</div><div class="modal-footer" style="padding:5px"><button ng-if="'+alert+'" class="btn btn-primary" type="button" ng-click="alertCancel()">Ok</button><button ng-if="'+confirm+'" class="btn btn-primary" type="button" ng-click="ok()">Yes</button><button ng-if="'+warning+'" class="btn btn-primary" type="button" ng-click="ok()">ok</button><button ng-if="'+confirm+'" class="btn btn-warning" type="button" ng-click="confirmCancel()">No</button><button ng-if="'+close+'" class="btn btn-primary" type="button" ng-click="closeOk()">Yes</button><button ng-if="'+close+'" class="btn btn-warning" type="button" ng-click="closeCancel()">No</button></div>',controller:function($scope,$rootScope,$uibModalInstance){$scope.alertCancel=function(){$uibModalInstance.dismiss("cancel"),callback&&callback()},$scope.confirmCancel=function(){scope.$emit(eventName+"Cancel"),$uibModalInstance.dismiss("cancel")},$scope.ok=function(){callback&&callback(),scope.$emit(eventName+"Ok"),$uibModalInstance.dismiss("cancel")},$scope.closeOk=function(){callback&&callback(),scope.$emit(eventName+"Ok"),$uibModalInstance.dismiss("cancel")},$scope.closeCancel=function(){callback&&callback(),$uibModalInstance.dismiss("cancel")}},backdrop:"static",windowClass:"centered modal-alert",size:"sm"})}}}),angular.module("app.common").factory("PermissionManager",function($http,$state,$stateParams,APIS,DataManager,$window,switchRoles){function setPermissions(data){permissions=data}function verifyPermission(permission){return permissions[permission],!0}function setMultiRoleResponse(data){multiRoleResponse=data}function getMultiRoleResponse(){return multiRoleResponse}function roleChanged(selectedRole,selectedRoleName){setPermissionsBasedOnRole(selectedRole,selectedRoleName,function(){multiRoleResponse.selectedRole=selectedRole,multiRoleResponse.dataBean.firstLogin?"6"==selectedRole?cacheApplicantUserInfo(multiRoleResponse,"singApplicantProfile"):"7"==selectedRole?cacheUserInfo(multiRoleResponse,"adminProfile"):"8"==selectedRole?cacheUserInfo(multiRoleResponse,"adminProfile"):"9"==selectedRole?cacheUserInfo(multiRoleResponse,"cpProfile"):"10"==selectedRole?cacheUserInfo(multiRoleResponse,"caProfile"):"11"==selectedRole?cacheUserInfo(multiRoleResponse,"dmeProfile"):"12"==selectedRole?cacheUserInfo(multiRoleResponse,"lmfProfile"):"13"==selectedRole?cacheUserInfo(multiRoleResponse,"cpProfile"):"14"==selectedRole?cacheUserInfo(multiRoleResponse,"maProfile"):"15"==selectedRole&&cacheUserInfo(multiRoleResponse,"cpProfile"):7==selectedRole?cacheUserInfo(multiRoleResponse,"master-home"):6==selectedRole?cacheApplicantUserInfo(multiRoleResponse,"dashboard"):10==selectedRole?cacheuserDetails(multiRoleResponse,selectedRoleName):11==selectedRole?cacheuserDetails(multiRoleResponse,selectedRoleName):12==selectedRole?cacheuserDetails(multiRoleResponse,selectedRoleName):13==selectedRole?cacheuserDetails(multiRoleResponse,selectedRoleName):14==selectedRole?cacheuserDetails(multiRoleResponse,selectedRoleName):15==selectedRole?cacheuserDetails(multiRoleResponse,selectedRoleName):$state.go("singdashboard")}),cacheSelectedRole(selectedRole,selectedRoleName)}function setPermissionsBasedOnRole(roleId,selectedRoleName,callBack){APIS.GET_PERMISSIONS.data={},APIS.GET_PERMISSIONS.URL=APIS.GET_PERMISSIONS.tempURL+roleId,DataManager.sendRestRequest(null,APIS.GET_PERMISSIONS,function(response){response.dataBean&&setPermissions(response.dataBean),callBack&&callBack()})}function cacheSelectedRole(roleId,selectedRoleName){APIS.GET_ROLES_FACILITIES.data={},APIS.GET_ROLES_FACILITIES.URL=String.prototype.format.apply(APIS.GET_ROLES_FACILITIES.tempURL,[roleId]),DataManager.sendRestRequest(null,APIS.GET_ROLES_FACILITIES,function(response){response.success})}var permissions={},multiRoleResponse={},cacheUserInfo=function(data,state){APIS.SINGPASS_GET_PROFILE.data={},APIS.SINGPASS_GET_PROFILE.URL=String.prototype.format.apply(APIS.SINGPASS_GET_PROFILE.tempURL,[data.dataBean.userSeqId]),DataManager.sendRestRequest(null,APIS.SINGPASS_GET_PROFILE,function(response){response.success&&($window.sessionStorage.setItem("userconfig",JSON.stringify(response.dataBean.person)),$window.sessionStorage.setItem("userprofileconfig",JSON.stringify(response.dataBean)),$state.go(state))},data.dataBean.token)},cacheuserDetails=function(data,selectedRoleName){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+data.dataBean.userSeqId,APIS.GET_PROFILE.URL=url,APIS.GET_PROFILE.data={},DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($window.sessionStorage.setItem("userconfig",JSON.stringify(response.dataBean)),switchRoles.go(selectedRoleName))},data.dataBean.token),APIS.GET_PROFILE.URL=tempUrl},cacheApplicantUserInfo=function(data,state){APIS.GET_PROFILE.data={};var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+data.dataBean.userSeqId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($window.sessionStorage.setItem("userconfig",JSON.stringify(response.dataBean)),$state.go(state))},data.dataBean.token),APIS.GET_PROFILE.URL=tempUrl};return{setPermissions:setPermissions,verifyPermission:verifyPermission,roleChanged:roleChanged,setMultiRoleResponse:setMultiRoleResponse,setPermissionsBasedOnRole:setPermissionsBasedOnRole,cacheSelectedRole:cacheSelectedRole,getMultiRoleResponse:getMultiRoleResponse}}),angular.module("app.common").factory("ResourceManager",["$http",function($http){return{resources:{},getLocalizationData:function(locale){var ctx=this;$http.get("resources/locale/"+locale+".json").then(function(response){ctx.resources=response.data},function(response){throw new Error("Locales Data loading failed")})}}}]),angular.module("app.common").factory("SessionManager",["$timeout","$state","ModalService","$window",function($timeout,$state,ModalService,$window){var sessionTime=20,sessionTimeOut=null,start=function(duration){sessionTime=duration,sessionTimeOut&&$timeout.cancel(sessionTimeOut),sessionTimeOut=$timeout(showLogut,60*sessionTime*1e3)},reset=function(){$timeout.cancel(sessionTimeOut),sessionTimeOut=$timeout(showLogut,60*sessionTime*1e3)},showLogut=function(){$timeout.cancel(sessionTimeOut),0!=sessionTime&&20!=sessionTime&&(ModalService.openAlert("alert","","Session has been Expired !",""),$state.go("login")),sessionTime=0};return{timeReset:reset,startTimer:start}}]),angular.module("app.common").service("ValidationManager",function($rootScope,$state){this.getAutoSave=function(jsonName){return sessionStorage.getItem(jsonName)?JSON.parse(sessionStorage.getItem(jsonName)):null},this.setAutoSave=function(jsonName,data){$rootScope.isAutoSaved=!0,sessionStorage.setItem(jsonName,JSON.stringify(data))}}),angular.module("app").controller("ShorthistroyCtrl",["$scope","$state","APIS","$rootScope","DataManager","$window",function($scope,$state,APIS,$rootScope,DataManager,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visitid=$scope.visitInfo.visitId,$scope.oneAtATime=!0,$scope.status={isCustomHeaderOpen:!1,isFirstOpen:!0,isFirstDisabled:!1},$scope.applimsitdet(),"LMF"==$scope.rolename||"CAMB Physician"==$scope.rolename?($scope.visitInfo.applicant_id?$scope.applicantid=$scope.visitInfo.applicant_id:$scope.applicantid=$scope.visitInfo.applicantId,$scope.applicantuserId=$scope.visitInfo.applicantuserId,$scope.cambtargeted()):($scope.applicantid=$scope.visitInfo.applicantId,$scope.applicantuserId=$scope.visitInfo.applicantuserId,$scope.targeted()),$scope.uconfig||$state.go("login"),$scope.applimini=[],$scope.appliminihis(),$scope.cambtargeted()},$scope.appliminihis=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_APPLICANTMINI_HISTORY.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_APPLICANTMINI_HISTORY.URL=url,DataManager.sendRestRequest(null,APIS.LME_APPLICANTMINI_HISTORY,function(response){response.success?($scope.applimini=response.dataBean,console.log($scope.applimini)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_APPLICANTMINI_HISTORY.URL=tempUrl},$scope.viewdoc=function(documentid){APIS.LME_ATTACH_VIEW_DOC.data={documentId:documentid},DataManager.sendRestRequest(null,APIS.LME_ATTACH_VIEW_DOC,function(response){if(response.success){var content=response.dataBean[0].file,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean[0].file,"_blank","location=0,enableviewportscale=yes")}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.targeted=function(){$scope.targetedparam={applicationid:$scope.visitInfo.applicantDetails.applicationId},APIS.LME_PHYSICALEXAMINATION_TARGETED.data=$scope.targetedparam,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_TARGETED,function(response){response.success?$scope.targeted_bean=response.dataBean.listLME_SendToUI_DTO:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.cambtargeted=function(){console.log($scope.visitInfo),$scope.visitInfo?$scope.targetedparam={applicationid:$scope.visitInfo.applicationId}:$scope.visitInfo.applicant_id&&($scope.targetedparam={applicationid:$scope.visitInfo.applicant_id}),APIS.LME_PHYSICALEXAMINATION_TARGETED.data=$scope.targetedparam,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_TARGETED,function(response){response.success?$scope.targeted_bean=response.dataBean.listLME_SendToUI_DTO:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.applimsitdet=function(){APIS.LME_APPLICANT_MSIT.data={applicantId:$scope.visitInfo.applicantId},DataManager.sendRestRequest(null,APIS.LME_APPLICANT_MSIT,function(response){response.success?($scope.applimsit=response.dataBean,console.log($scope.applimsit)):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("BoardqCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","ModalService","CAASConfig","ResourceManager",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,ModalService,CAASConfig,regRM){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.regRM=regRM,$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantSearchDTO={slotTime:null,nricNo:null,licenceNo:null,name:null,flag:"BOARDQ"},$scope.init=function(){$scope.boardqdate=[],$scope.datafirstSelected=[],$scope.datasecondSelected=[],$scope.datathirdSelected=[],$scope.datafourthSelected=[],$scope.checkdataarray=[],$scope.dataBind(),$scope.currentPage=1,$scope.zero=0,$scope.excelexport=[{0:{},1:{},2:{},3:{}}],$scope.putboardqData=[],$scope.excelexportpush=[],$scope.findlength=0,$scope.firstdatatruecount=0,$scope.seconddatatruecount=0,$scope.thirddatatruecount=0,$scope.fourthdatatruecount=0,$scope.exceltrue=!1,$scope.selectedAll=!1},$scope.dataBind=function(){$scope.mrcurrentPageStores=[],$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[0]},$scope.checkfilter=function(one,two,three,four){$scope.loadboardqqdata(one,two)},$scope.loadboardqqdata=function(nric,slolid){$scope.applicantSearchDTO.slotTime=slolid,$scope.applicantSearchDTO.nricNo=nric,APIS.LMAB_GET_MASTERQ.data=$scope.applicantSearchDTO,DataManager.sendRestRequest(null,APIS.LMAB_GET_MASTERQ,function(response){response.success?($scope.getboardqData=[{0:{},1:{},2:{},3:{}}],$scope.getboardqData[0]=response.dataBean.first,$scope.getboardqData[1]=response.dataBean.second,$scope.getboardqData[2]=response.dataBean.third,$scope.getboardqData[3]=response.dataBean.fourth,$scope.select($scope.currentPage),$scope.excelexport[0]=response.dataBean.first,$scope.excelexport[1]=response.dataBean.second,$scope.excelexport[2]=response.dataBean.third,$scope.excelexport[3]=response.dataBean.fourth,0==$scope.getboardqData[0].length&&0==$scope.getboardqData[1].length&&0==$scope.getboardqData[2].length&&0==$scope.getboardqData[3].length&&ModalService.openAlert("alert","info","No Records Found","","","")):(console.log(response.errorMessage),ModalService.openAlert("alert","info","No Records Found","","",""))},$scope.uconfig.token)},$scope.select=function(page){var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=$scope.getboardqData.slice(start,end)},$scope.loaddateofboardq=function(){APIS.LMAB_GET_MASTERQ.data=$scope.applicantSearchDTO,DataManager.sendRestRequest(null,APIS.LMAB_GET_MASTERQ_SLOTDATE,function(response){response.success?$scope.boardqdate=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.applicantFetch=function(getapplicantDetails){$scope.visitDetails={visitId:getapplicantDetails.visitId,applicantId:getapplicantDetails.applicantId,applicantuserId:getapplicantDetails.userId,applicantDetails:{applicationId:getapplicantDetails.applicantId}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$state.go("lmeapplicantprofile")},$scope.makelesstrue=function(index){$scope.lessvisible[index]=!0,$scope.morevisible[index]=!1,$scope.showdata[index]=!1},$scope.makemoretrue=function(index){$scope.morevisible[index]=!0,$scope.lessvisible[index]=!0,$scope.showdata[index]=!0},$scope.passingnotes=function(val){return null==val||0==val.length?($scope.notesgreenflag=!1,"notesdefault"):($scope.notesgreenflag=!0,"notesgreen")},$scope.loadboardqqdata(),$scope.loaddateofboardq(),$scope.removefromboardslot=function(param){for(var i=0;i<=$scope.datafirstSelected.length;i++)1!=$scope.datafirstSelected[i]&&"true"!=$scope.datafirstSelected[i]||($scope.firstdatatruecount=$scope.firstdatatruecount+1);for(var j=0;j<=$scope.datasecondSelected.length;j++)1!=$scope.datasecondSelected[j]&&"true"!=$scope.datasecondSelected[j]||($scope.seconddatatruecount=$scope.seconddatatruecount+1);for(var k=0;k<=$scope.datathirdSelected.length;k++)1!=$scope.datathirdSelected[k]&&"true"!=$scope.datathirdSelected[k]||($scope.thirddatatruecount=$scope.thirddatatruecount+1);for(var l=0;l<=$scope.datafourthSelected.length;l++)1!=$scope.datafourthSelected[l]&&"true"!=$scope.datafourthSelected[l]||($scope.fourthdatatruecount=$scope.fourthdatatruecount+1);$scope.firstdatatruecount>0||$scope.seconddatatruecount>0||$scope.thirddatatruecount>0||$scope.fourthdatatruecount>0?"true"==param?($scope.passthefunction(),$scope.exceltrue=!0):$scope.moveboardq():ModalService.openAlert("alert","info","Select the Applicant","","",""),$scope.firstdatatruecount=0,$scope.seconddatatruecount=0,$scope.thirddatatruecount=0,$scope.fourthdatatruecount=0},$scope.moveboardq=function(){for(var i=0;i<$scope.datafirstSelected.length;i++)1!=$scope.datafirstSelected[i]&&"true"!=$scope.datafirstSelected[i]||$scope.putboardqData.push({visitId:$scope.getboardqData[0][i].visitId});for(var j=0;j<$scope.datasecondSelected.length;j++)1!=$scope.datasecondSelected[j]&&"true"!=$scope.datasecondSelected[j]||$scope.putboardqData.push({visitId:$scope.getboardqData[1][j].visitId});for(var k=0;k<$scope.datathirdSelected.length;k++)1!=$scope.datathirdSelected[k]&&"true"!=$scope.datathirdSelected[k]||$scope.putboardqData.push({visitId:$scope.getboardqData[2][k].visitId});for(var l=0;l<$scope.datafourthSelected.length;l++)1!=$scope.datafourthSelected[l]&&"true"!=$scope.datafourthSelected[l]||$scope.putboardqData.push({visitId:$scope.getboardqData[3][l].visitId});APIS.LMAB_BOARDQ_REMOVE.data=$scope.putboardqData,DataManager.sendRestRequest(null,APIS.LMAB_BOARDQ_REMOVE,function(response){response.success&&ModalService.openAlert("alert","success","Applicants removed from the Board Q",$scope,"recall",function(){$scope.loadboardqqdata()})},$scope.uconfig.token)},$scope.openNotes=function(visitId,notes){$scope.notesStruct={visitId:null,notes:null},$scope.notesStruct.visitId=visitId,$scope.viewNotes=notes},$scope.saveNotes=function(viewNotes){$scope.notesStruct.notes=viewNotes,APIS.LMAB_BOARDQ_NOTES_ADD.data=$scope.notesStruct,DataManager.sendRestRequest(null,APIS.LMAB_BOARDQ_NOTES_ADD,function(response){response.success&&$window.location.reload()},$scope.uconfig.token)},$scope.exportData=function(){var blob=new Blob([document.getElementById("exportable").innerHTML],{type:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8"});saveAs(blob,"Report.xls")},$scope.getHeader=function(){return["No","ID No","Applicant Name","License No","MAC","Age","Gender","DOB","Current Proviso","DME Recommendation"]},$scope.passthefunction=function(){$scope.excelexportpush=[];for(var no=0,i=0;i<$scope.datafirstSelected.length;i++)if(1==$scope.datafirstSelected[i]){$scope.currentproviso={MAC:JSON.stringify($scope.excelexport[0][i].visitType),fitness:JSON.stringify($scope.excelexport[0][i].fitness),restrictions:JSON.stringify($scope.excelexport[0][i].restrictions),proviso:JSON.stringify($scope.excelexport[0][i].proviso),validity:JSON.stringify($scope.excelexport[0][i].validity)},$scope.DMErecommendation={MAC:JSON.stringify($scope.excelexport[0][i].visitType),fitness:JSON.stringify($scope.excelexport[0][i].fitness),restrictions:JSON.stringify($scope.excelexport[0][i].restrictions),proviso:JSON.stringify($scope.excelexport[0][i].proviso),validity:JSON.stringify($scope.excelexport[0][i].validity)};var tempMac="",currentproviso="";angular.forEach($scope.excelexport[0][l].visitType,function(value,key){tempMac=tempMac?tempMac+"\n"+value:value;var prviso=value+"\n"+$scope.currentproviso.fitness[key]+"\n"+$filter("date")(new Date($scope.currentproviso.validity[key]),"dd-MMM-yyyy");currentproviso=currentproviso?currentproviso+"\n"+prviso:prviso}),$scope.excelexportpush.push({No:++no,IDNo:$scope.excelexport[0][i].nricNo,applicantName:$scope.excelexport[0][i].applicantName,licenceNo:$scope.excelexport[0][i].licenceNo,MAC:tempMac,age:$scope.excelexport[0][i].age,gender:$scope.excelexport[0][i].gender,dob:$scope.excelexport[0][i].dob,currentproviso:currentproviso,DMErecommendation:""})}for(var j=0;j<$scope.datasecondSelected.length;j++)if(1==$scope.datasecondSelected[j]){$scope.currentproviso={MAC:JSON.stringify($scope.excelexport[1][j].visitType),fitness:JSON.stringify($scope.excelexport[1][j].fitness),restrictions:JSON.stringify($scope.excelexport[1][j].restrictions),proviso:JSON.stringify($scope.excelexport[1][j].proviso),validity:JSON.stringify($scope.excelexport[1][j].validity)},$scope.DMErecommendation={MAC:JSON.stringify($scope.excelexport[1][j].visitType),fitness:JSON.stringify($scope.excelexport[1][j].fitness),restrictions:JSON.stringify($scope.excelexport[1][j].restrictions),proviso:JSON.stringify($scope.excelexport[1][j].proviso),validity:JSON.stringify($scope.excelexport[1][j].validity)};var tempMac="",currentproviso="";angular.forEach($scope.excelexport[1][l].visitType,function(value,key){tempMac=tempMac?tempMac+"\n"+value:value;var prviso=value+"\n"+$scope.currentproviso.fitness[key]+"\n"+$filter("date")(new Date($scope.currentproviso.validity[key]),"dd-MMM-yyyy");currentproviso=currentproviso?currentproviso+"\n"+prviso:prviso}),$scope.excelexportpush.push({No:++no,IDNo:$scope.excelexport[1][j].nricNo,applicantName:$scope.excelexport[1][j].applicantName,licenceNo:$scope.excelexport[1][j].licenceNo,MAC:tempMac,age:$scope.excelexport[1][j].age,gender:$scope.excelexport[1][j].gender,dob:$scope.excelexport[1][j].dob,currentproviso:currentproviso,DMErecommendation:""})}for(var k=0;k<$scope.datathirdSelected.length;k++)if(1==$scope.datathirdSelected[k]){$scope.currentproviso={MAC:JSON.stringify($scope.excelexport[2][k].visitType),fitness:JSON.stringify($scope.excelexport[2][k].fitness),restrictions:JSON.stringify($scope.excelexport[2][k].restrictions),proviso:JSON.stringify($scope.excelexport[2][k].proviso),validity:JSON.stringify($scope.excelexport[2][k].validity)},$scope.DMErecommendation={MAC:JSON.stringify($scope.excelexport[2][k].visitType),fitness:JSON.stringify($scope.excelexport[2][k].fitness),restrictions:JSON.stringify($scope.excelexport[2][k].restrictions),proviso:JSON.stringify($scope.excelexport[2][k].proviso),validity:JSON.stringify($scope.excelexport[2][k].validity)};var tempMac="",currentproviso="";angular.forEach($scope.excelexport[2][l].visitType,function(value,key){tempMac=tempMac?tempMac+"\n"+value:value;var prviso=value+"\n"+$scope.currentproviso.fitness[key]+"\n"+$filter("date")(new Date($scope.currentproviso.validity[key]),"dd-MMM-yyyy");currentproviso=currentproviso?currentproviso+"\n"+prviso:prviso}),$scope.excelexportpush.push({No:++no,IDNo:$scope.excelexport[2][k].nricNo,applicantName:$scope.excelexport[2][k].applicantName,licenceNo:$scope.excelexport[2][k].licenceNo,MAC:tempMac,age:$scope.excelexport[2][k].age,gender:$scope.excelexport[2][k].gender,dob:$scope.excelexport[2][k].dob,currentproviso:currentproviso,DMErecommendation:""})}for(var l=0;l<$scope.datafourthSelected.length;l++)if(1==$scope.datafourthSelected[l]){$scope.currentproviso={MAC:$scope.excelexport[3][l].visitType,fitness:$scope.excelexport[3][l].fitness,restrictions:$scope.excelexport[3][l].restrictions,proviso:$scope.excelexport[3][l].proviso,validity:$scope.excelexport[3][l].validity},$scope.DMErecommendation={MAC:$scope.excelexport[3][l].visitType,fitness:$scope.excelexport[3][l].fitness,restrictions:$scope.excelexport[3][l].restrictions,proviso:$scope.excelexport[3][l].proviso,validity:$scope.excelexport[3][l].validity};var tempMac="",currentproviso="";angular.forEach($scope.excelexport[3][l].visitType,function(value,key){tempMac=tempMac?tempMac+"\n"+value:value;var prviso=value+"\n"+$scope.currentproviso.fitness[key]+"\n"+$filter("date")(new Date($scope.currentproviso.validity[key]),"dd-MMM-yyyy");currentproviso=currentproviso?currentproviso+"\n"+prviso:prviso});$scope.excelexportpush.push({No:++no,IDNo:$scope.excelexport[3][l].nricNo,applicantName:$scope.excelexport[3][l].applicantName,licenceNo:$scope.excelexport[3][l].licenceNo,MAC:tempMac,age:$scope.excelexport[3][l].age,gender:$scope.excelexport[3][l].gender,dob:$filter("date")(new Date($scope.excelexport[3][l].dob),"dd-MMM-yyyy"),currentproviso:currentproviso,DMErecommendation:""})}return console.log("exportable"),console.log($scope.excelexportpush),$scope.excelexportpush},$scope.makechecktrue=function(param){if(param){for(var i=0;i<$scope.datafirstSelected.length;i++)$scope.datafirstSelected[i]=!0;for(var j=0;j<$scope.datasecondSelected.length;j++)$scope.datasecondSelected[j]=!0;for(var k=0;k<$scope.datathirdSelected.length;k++)$scope.datathirdSelected[k]=!0;for(var l=0;l<$scope.datafourthSelected.length;l++)$scope.datafourthSelected[l]=!0}else{for(var i=0;i<$scope.datafirstSelected.length;i++)$scope.datafirstSelected[i]=!1;for(var j=0;j<$scope.datasecondSelected.length;j++)$scope.datasecondSelected[j]=!1;for(var k=0;k<$scope.datathirdSelected.length;k++)$scope.datathirdSelected[k]=!1;for(var l=0;l<$scope.datafourthSelected.length;l++)$scope.datafourthSelected[l]=!1}},$scope.firstindextrue=function(select,index,flag){select?$scope.datafirstSelected[index]=!0:$scope.datafirstSelected[index]=!1},$scope.secondindextrue=function(select,index,flag){select?$scope.datasecondSelected[index]=!0:$scope.datasecondSelected[index]=!1},$scope.thirdindextrue=function(select,index,flag){select?$scope.datathirdSelected[index]=!0:$scope.datathirdSelected[index]=!1},$scope.forthindextrue=function(select,index,flag){select?$scope.datafourthSelected[index]=!0:$scope.datafourthSelected[index]=!1},$scope.init()}]),angular.module("app").controller("CreateslotsCtrl",["$scope","$rootScope","$state","APIS","DataManager","$log","$window","$filter","ModalService","ResourceManager","$timeout",function($scope,$rootScope,$state,APIS,DataManager,$log,$window,$filter,ModalService,regRM,$timeout){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}function getDayClass(data){var date=data.date,mode=data.mode;if("day"===mode)for(var dayToCheck=new Date(date).setHours(0,0,0,0),i=0;i<$scope.lmapslot.length;i++){var currentDay=new Date($scope.lmapslot[i].uiDate).setHours(0,0,0,0);if(dayToCheck===currentDay)return $scope.lmapslot[i].unStatus}return""}$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.regRM=regRM,$scope.init=function(){$rootScope.month_param={},$rootScope.loadlamp_onloadData(),$scope.loadlamp_ma(),$scope.lmapslot=[],$scope.lmapadd_slot=[],$scope.lmap_ma=[],$timeout(function(){$scope.showdatepicker=!0},1e3)},$rootScope.loadlamp_onloadData=function(){APIS.LMAP_GET_SLOT.data=$rootScope.month_param,DataManager.sendRestRequest(null,APIS.LMAP_GET_SLOT,function(response){response.success&&($scope.lmapslot=response.dataBean)},$scope.uconfig.token)},$scope.loadlamp_ma=function(){DataManager.sendRestRequest(null,APIS.LAMP_GET_LMAP_MA,function(response){response.success&&($scope.lmap_ma=response.dataBean)},$scope.uconfig.token)},$scope.asigntime=[{time:"15",duration:"15 Minutes"},{time:"30",duration:"30 Minutes"},{time:"45",duration:"45 Minutes"},{time:"60",duration:"1 Hour"}],$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.mindate=new Date,$scope.inlineOptions={customClass:getDayClass,minDate:new Date,showWeeks:!0},$scope.dateOptions={dateDisabled:disabled,formatYear:"yy",maxDate:new Date(2020,5,22),
minDate:new Date,startingDay:1},$scope.toggleMin=function(){$scope.inlineOptions.minDate=$scope.inlineOptions.minDate?null:new Date,$scope.dateOptions.minDate=$scope.inlineOptions.minDate},$scope.time1=new Date,$scope.createSlot=function(daten){var curdaten=daten;$scope.selectdate=$filter("date")(new Date(curdaten),"dd-MM-yyyy"),$scope.selecteventdate=$filter("date")(new Date(curdaten),"MM-dd-yyyy");$scope.lmapslot.length+1,$scope.lmapadd_slot.length+1;$scope.selectedevents={date:$scope.selectdate,status:"",unStatus:"Booked",uiDate:$scope.selecteventdate,lmbSlotsList:[{slotId:0,time:"",duration:"",lmfId:"",slotdate:$scope.selectdate,expiredDate:"NO",editableyn:"Y"}]},$scope.lmapslot.push($scope.selectedevents),$scope.lmapadd_slot.push($scope.selectedevents)},$scope.comaparetime=function(get_time){var time=get_time;$scope.gettime=get_time;var hours=Number(time.match(/^(\d+)/)[1]),minutes=Number(time.match(/:(\d+)/)[1]),AMPM=time.match(/\s(.*)$/)[1],ampm=time.match(/\s(.*)$/)[1];"PM"==AMPM&&hours<12&&(hours+=12),"AM"==AMPM&&12==hours&&(hours-=12),"pm"==ampm&&hours<12&&(hours+=12),"am"==ampm&&12==hours&&(hours-=12);var sHours=hours.toString(),sMinutes=minutes.toString();hours<10&&(sHours="0"+sHours),minutes<10&&(sMinutes="0"+sMinutes);var slottime=sHours+":"+sMinutes,currenttimeslot=$filter("date")(new Date($scope.time1),"h:mm a"),current_date=$filter("date")(new Date($scope.time1),"dd-MM-yyyy"),slot_date=$scope.dt,time1=($filter("date")(new Date(slot_date),"dd-MM-yyyy"),currenttimeslot),hours1=Number(time1.match(/^(\d+)/)[1]),minutes1=Number(time1.match(/:(\d+)/)[1]),AMPM1=time1.match(/\s(.*)$/)[1],ampm1=time.match(/\s(.*)$/)[1];"PM"==AMPM1&&hours1<12&&(hours1+=12),"AM"==AMPM1&&12==hours1&&(hours1-=12),"pm"==ampm1&&hours1<12&&(hours1+=12),"am"==ampm1&&12==hours1&&(hours1-=12);var sHours1=hours1.toString(),sMinutes1=minutes1.toString();hours1<10&&(sHours1="0"+sHours1),minutes1<10&&(sMinutes1="0"+sMinutes1);var datetime=sHours1+":"+sMinutes1;return!(current_date<$scope.selectdate)&&(current_date!=$scope.selectdate||datetime<=slottime?void 0:(ModalService.openAlert("alert","error","Please enter future time",$scope,"only2Lic",function(){}),!1))},$scope.save_lmapslot=function(gettime){function timeduplicates(lampaddlist){var i,j,n;for(n=lampaddlist.length,i=0;i<n;i++)for(j=i+1;j<n;j++)if(lampaddlist[i].time==lampaddlist[j].time&&lampaddlist[i].slotdate==lampaddlist[j].slotdate)return!0;return!1}for(var i=0;i<$scope.lmapslot.length;i++){delete $scope.lmapslot[i].uiDate,delete $scope.lmapslot[i].status,delete $scope.lmapslot[i].unStatus;for(var j=0;j<$scope.lmapslot[i].lmbSlotsList.length;j++)delete $scope.lmapslot[i].lmbSlotsList[j].lmfName}$scope.lampaddlist=[];for(var a=0;a<$scope.lmapslot.length;a++)for(var b=0;b<$scope.lmapslot[a].lmbSlotsList.length;b++)$scope.lampaddlist.push($scope.lmapslot[a].lmbSlotsList[b]);for(var x=0;x<$scope.lmapslot.length;x++)for(var y=0;y<$scope.lmapslot[x].lmbSlotsList.length;y++)if(!$scope.lmapslot[x].lmbSlotsList[y].time||!$scope.lmapslot[x].lmbSlotsList[y].duration||!$scope.lmapslot[x].lmbSlotsList[y].lmfId)return ModalService.openAlert("alert","error","Please Enter the value in fields",$scope,"only2Lic",function(){}),!1;var time=gettime,hours=Number(time.match(/^(\d+)/)[1]),minutes=Number(time.match(/:(\d+)/)[1]),AMPM=time.match(/\s(.*)$/)[1],ampm=time.match(/\s(.*)$/)[1];"PM"==AMPM&&hours<12&&(hours+=12),"AM"==AMPM&&12==hours&&(hours-=12),"pm"==ampm&&hours<12&&(hours+=12),"am"==ampm&&12==hours&&(hours-=12);var sHours=hours.toString(),sMinutes=minutes.toString();hours<10&&(sHours="0"+sHours),minutes<10&&(sMinutes="0"+sMinutes);var slottime=sHours+":"+sMinutes,currenttimeslot=$filter("date")(new Date($scope.time1),"h:mm a"),current_date=$filter("date")(new Date($scope.time1),"dd-MM-yyyy"),slot_date=$scope.dt,time1=($filter("date")(new Date(slot_date),"dd-MM-yyyy"),currenttimeslot),hours1=Number(time1.match(/^(\d+)/)[1]),minutes1=Number(time1.match(/:(\d+)/)[1]),AMPM1=time1.match(/\s(.*)$/)[1],ampm1=time.match(/\s(.*)$/)[1];"PM"==AMPM1&&hours1<12&&(hours1+=12),"AM"==AMPM1&&12==hours1&&(hours1-=12),"pm"==ampm1&&hours1<12&&(hours1+=12),"am"==ampm1&&12==hours1&&(hours1-=12);var sHours1=hours1.toString(),sMinutes1=minutes1.toString();hours1<10&&(sHours1="0"+sHours1),minutes1<10&&(sMinutes1="0"+sMinutes1);var datetime=sHours1+":"+sMinutes1;if(current_date<$scope.selectdate);else if(current_date==$scope.selectdate&&!(datetime<=slottime))return ModalService.openAlert("alert","error","Please enter future time",$scope,"only2Lic",function(){}),!1;return timeduplicates($scope.lampaddlist)?(ModalService.openAlert("alert","error","Please enter different time",$scope,"only2Lic",function(){}),!1):(APIS.LMAP_POST_SLOT.data=$scope.lmapslot,void DataManager.sendRestRequest(null,APIS.LMAP_POST_SLOT,function(response){response.success&&($scope.submitsolt=response.dataBean,ModalService.openAlert("alert","CreateSlots","Slots saved successfully","null","null"),$rootScope.loadlamp_onloadData())},$scope.uconfig.token))},$scope.remove_lmapslot=function(slotdate,slotId,slot,index){$scope.date=slotdate,$scope.slotId=slotId,$scope.lmapslots=slot,ModalService.openAlert("confirm","warning","Do you want to delete the remarks",$scope,"recall",function(){}),$scope.$on("recallOk",function(){APIS.LAMP_DELETE_SLOT.URL="lmab/deleteSlots/"+$scope.date+"/"+$scope.slotId,DataManager.sendRestRequest(null,APIS.LAMP_DELETE_SLOT,function(response){response.success},$scope.uconfig.token);for(var i in $scope.lmapslots)if($scope.lmapslots[i].slotId==$scope.slotId)return $scope.lmapslots.splice(index,1),!1}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.publish_slot=function(){for(var x=0;x<$scope.lmapslot.length;x++)for(var y=0;y<$scope.lmapslot[x].lmbSlotsList.length;y++)if(!$scope.lmapslot[x].lmbSlotsList[y].time||!$scope.lmapslot[x].lmbSlotsList[y].duration||!$scope.lmapslot[x].lmbSlotsList[y].lmfId)return ModalService.openAlert("alert","Create slots","Enter The value in fields ","null","null"),!1;$scope.publishdate=$filter("date")(new Date($scope.dt),"dd-MM-yyyy"),APIS.LAMP_PUBLISH_SLOT.URL="lmab/sendNotification/"+$scope.publishdate,DataManager.sendRestRequest(null,APIS.LAMP_PUBLISH_SLOT,function(response){response.success&&(ModalService.openAlert("alert","Create Slots","slot publish successfully","null","null"),$scope.publish=!0)},$scope.uconfig.token)},$scope.copy_first_row=function(lmapslot,lmapadd_slot){$scope.source=lmapslot,$scope.designation_slots=lmapadd_slot;for(var i=0;i<$scope.designation_slots.length;i++)for(var j=0;j<$scope.designation_slots[i].lmbSlotsList.length;j++)$scope.designation_slots[i].lmbSlotsList[j].duration=$scope.source.duration,$scope.designation_slots[i].lmbSlotsList[j].time=$scope.source.time,$scope.designation_slots[i].lmbSlotsList[j].lmfId=$scope.source.lmfId},$scope.init()}]),angular.module("app").controller("DMEdetailsCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}function getDayClass(data){var date=data.date,mode=data.mode;if("day"===mode)for(var dayToCheck=new Date(date).setHours(0,0,0,0),i=0;i<$scope.events.length;i++){var currentDay=new Date($scope.events[i].date).setHours(0,0,0,0);if(dayToCheck===currentDay)return $scope.events[i].status}return""}$scope.mac=[{image:"C1",dropdownone:[{name:"Fit With res",id:"01"},{name:"Defer to DME",id:"02"},{name:"Defer to CAMB ",id:"03"},{name:"Unfit",id:"04"}],dropdowntwo:[{name:"Compl",id:"01"},{name:"Remars1",id:"02"},{name:"Remars2",id:"03"},{name:"Remars3",id:"04"}]}],$scope.ops=[{Code:"Infomation",Description:"Infomation Description"}],$scope.opsnewdata=null,$scope.addoperationprovinso=function(value){$scope.opsnewdata=value,console.log($scope.opsnewdata)},$scope.firstdrop=null,$scope.firstdropdownValid=function(firstdrop){$scope.isMacFirstdrop=!1,"01"==firstdrop&&($scope.isMacFirstdrop=!0),console.log($scope.sec)},$scope.message=function(){console.log($scope.thirdcontent.macfirstdropdown.$invalid)},$scope.change=function(param){"others"==param&&($scope.istrue=!0)},$scope.colors=[{name:"Specality"},{name:"others"}],$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.inlineOptions={customClass:getDayClass,minDate:new Date,showWeeks:!0},$scope.dateOptions={dateDisabled:disabled,formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},$scope.toggleMin=function(){$scope.inlineOptions.minDate=$scope.inlineOptions.minDate?null:new Date,$scope.dateOptions.minDate=$scope.inlineOptions.minDate},$scope.toggleMin(),$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.setDate=function(year,month,day){$scope.dt=new Date(year,month,day)},$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.altInputFormats=["M!/d!/yyyy"],$scope.popup1={opened:!1},$scope.popup2={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+1),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}]}]),angular.module("app").controller("InprogressCtrl",["$scope","$state","APIS","DataManager","$log","$window","CAASConfig","ResourceManager",function($scope,$state,APIS,DataManager,$log,$window,CAASConfig,regRM){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.tabledata={},$scope.regRM=regRM,$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas()},$scope.tabledatas=function(){$scope.madetails={slotid:-1,maid:-1},APIS.LMAB_LOAD_ALL_INPROGESS.data=$scope.madetails,DataManager.sendRestRequest(null,APIS.LMAB_LOAD_ALL_INPROGESS,function(response){response.success?$scope.tabledata=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("LMABhistoryCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","CAASConfig","ResourceManager",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$uibModalInstance,CAASConfig,regRM,$rootScope){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.formats=["yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[1],$scope.regRM=regRM,$scope.fromdatepickerPopup={opened:!1},$scope.todatepickerPopup={opened:!1},$scope.fromdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.todateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.dataBind()},$scope.dataBind=function(){$scope.fromDate=null,$scope.toDate=null,$scope.lmabhistoyback()},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.todatepickerOpen=function(){$scope.todateOptions.minDate=new Date($scope.fromDate),$scope.todatepickerPopup.opened=!0},$scope.lmabhistoyback=function(){$scope.lmabhistoysearch=!0,$scope.lmabhistoyview=!1},$scope.searchhistorybydate=function(){null!=$scope.fromDate&&null!=$scope.toDate&&($scope.fromDate=$filter("date")(new Date($scope.fromDate),$scope.format),$scope.toDate=$filter("date")(new Date($scope.toDate),$scope.format)),$scope.searchdate={fromDate:$scope.fromDate,toDate:$scope.toDate},APIS.LMAB_HISTORY_SEARCH.data=$scope.searchdate,DataManager.sendRestRequest(null,APIS.LMAB_HISTORY_SEARCH,function(response){response.success?$scope.lambhistoryData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.lmabhistorydetailsView=function(slotId){$scope.lmabhistoysearch=!1,$scope.lmabhistoyview=!0;var url=null,tempUrl=null;tempUrl=APIS.LMAB_HISTORY_SEARCH_VIEW.URL,url=tempUrl+"/"+slotId,APIS.LMAB_HISTORY_SEARCH_VIEW.URL=url,DataManager.sendRestRequest(null,APIS.LMAB_HISTORY_SEARCH_VIEW,function(response){response.success?($scope.lambhistoryviewData=response.dataBean,console.log($scope.lambhistoryviewData),$scope.lambhistoryviewData[0][0].startDate=$filter("date")(new Date($scope.lambhistoryviewData[0][0].startDate),"dd-MMM-yyyy HH:mm"),$scope.lmababatchdetail={visitid:$scope.lambhistoryviewData[1][0].visitId,applicantId:$scope.lambhistoryviewData[1][0].userId,applicantid_mac:$scope.lambhistoryviewData[1][0].applicantId},$window.sessionStorage.setItem("lmabbatchconclusion",JSON.stringify($scope.lmababatchdetail))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_HISTORY_SEARCH_VIEW.URL=tempUrl},$scope.lmabhistorypdf=function(applicantid){var url=null,tempUrl=null;tempUrl=APIS.LMAB_HISTORY_PDF_GENERATE.URL,console.log($scope.lmabhistorypdfapplicantId),url=tempUrl+"/"+applicantid,APIS.LMAB_HISTORY_PDF_GENERATE.URL=url,DataManager.sendRestRequest(null,APIS.LMAB_HISTORY_PDF_GENERATE,function(response){if(response.success){var textvalue=$(response.dataBean.letter).text();console.log($scope.lambhistorypdfData);var doc=new jsPDF;doc.setFontSize(15),doc.text(80,20,"Vetting Letter"),doc.text(10,50,$scope.nullcheck(textvalue)),doc.output("dataurlnewwindow")}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_HISTORY_PDF_GENERATE.URL=tempUrl},$scope.nullcheck=function(param){if(null==param){var a="";return a}return param},$scope.getHeader=function(){return["Applicant Name","visit Type","Fitness","Restriction","Provisos","Remarks"]},$scope.generatereport=function(){$scope.detailExport=[],$scope.concatVisit=[],$scope.concatFitness=[],$scope.concatRestrication=[],$scope.concatProvisos=[];for(var i=0;i<$scope.lambhistoryviewData[1].length;i++){for(var j=0;j<$scope.lambhistoryviewData[1][0].visitType.length;j++)$scope.concatVisit.push([{visitType:$scope.lambhistoryviewData[1][i].visitType[j].code}]);for(var k=0;k<$scope.lambhistoryviewData[1][0].fitness.length;k++)$scope.concatFitness.push([{fitness:$scope.lambhistoryviewData[1][i].fitness[k].fit}]);for(var l=0;l<$scope.lambhistoryviewData[1][0].restrication.length;l++)$scope.concatRestrication.push([{restrication:$scope.lambhistoryviewData[1][i].restrication[l].Restriction}]);for(var m=0;m<$scope.lambhistoryviewData[1][0].provisos.length;m++)$scope.lambhistoryviewData[1][i].provisos[m].hasOwnProperty("followup_provisos")?$scope.concatProvisos.push([{provisos:$scope.lambhistoryviewData[1][i].provisos[m].followup_provisos}]):$scope.concatProvisos.push([{provisos:$scope.lambhistoryviewData[1][i].provisos[m].provisos}]);$scope.concatVisit.length,$scope.concatFitness.length,$scope.concatRestrication.length,$scope.concatProvisos.length;$scope.visittemp="",$scope.fitnesstemp="",$scope.Resttemp="",$scope.provisotemp="";for(var c=0;c<$scope.concatVisit.length;c++){var temp1=$scope.concatVisit[c][0].visitType;$scope.visittemp=$scope.visittemp.concat(temp1,",")}for(var d=0;d<$scope.concatFitness.length;d++){var temp2=$scope.concatFitness[d][0].fitness;$scope.fitnesstemp=$scope.fitnesstemp.concat(temp2,",")}for(var e=0;e<$scope.concatRestrication.length;e++){var temp3=$scope.concatRestrication[e][0].restrication;$scope.Resttemp=$scope.Resttemp.concat(temp3,",")}for(var f=0;f<$scope.concatProvisos.length;f++){var temp4=$scope.concatProvisos[f][0].provisos;$scope.provisotemp=$scope.provisotemp.concat(temp4,",")}$scope.detailExport.push({"Applicant Name":$scope.lambhistoryviewData[1][i].applicantName,"visit Type":$scope.visittemp,Fitness:$scope.fitnesstemp,Restriction:$scope.Resttemp,Provisos:$scope.provisotemp,Remarks:$scope.lambhistoryviewData[1][i].remarks}),$scope.concatVisit=[],$scope.concatFitness=[],$scope.concatRestrication=[],$scope.concatProvisos=[]}return $scope.detailExport},$scope.openlmabbatchreport=function(){$window.open("#/lmabhistorybatch")},$scope.batchprint=function(){$scope.batchvettingId=[];for(var z=0;z<$scope.lambhistoryviewData[1].length;z++)$scope.lambhistoryviewData[1][z].lmbVettingId!==-1&&$scope.batchvettingId.push({lmbVettingId:$scope.lambhistoryviewData[1][z].lmbVettingId,applicantId:$scope.lambhistoryviewData[1][z].applicantId,applicantName:$scope.lambhistoryviewData[1][z].applicantName});console.log($scope.batchvettingId),APIS.LMAB_HISTORY_BATCH_LETTER.data=$scope.batchvettingId,DataManager.sendRestRequest(null,APIS.LMAB_HISTORY_BATCH_LETTER,function(response){if(response.success){$scope.batchprintVettingIds=response.dataBean,console.log($scope.batchprintVettingIds);for(var doc=new jsPDF,x=0;x<$scope.batchprintVettingIds.length;x++){doc.setFontSize(15);var stringconvert=$scope.batchprintVettingIds[x].applicantId.toString();doc.text(20,50,"Applicant Name:"),doc.text(90,50,$scope.batchprintVettingIds[x].applicantName),doc.text(20,70,"Applicant Id:"),doc.text(90,70,stringconvert);var textvalue=$($scope.batchprintVettingIds[x].letter).text();doc.splitTextToSize(textvalue,180);doc.addPage(),doc.output("dataurlnewwindow")}}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("LMABhistoryPdfCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","convertpdf",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$uibModalInstance,$rootScope,convertpdf){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.lmabhistorypdfapplicantId=JSON.parse($window.sessionStorage.getItem("lmabhistorypdfApplicantid")),$scope.dataBind()},$scope.dataBind=function(){$scope.lmabhistorypdf()},$scope.lmabhistorypdf=function(){var url=null,tempUrl=null;tempUrl=APIS.LMAB_HISTORY_PDF_GENERATE.URL,console.log($scope.lmabhistorypdfapplicantId),url=tempUrl+"/"+$scope.lmabhistorypdfapplicantId,APIS.LMAB_HISTORY_PDF_GENERATE.URL=url,DataManager.sendRestRequest(null,APIS.LMAB_HISTORY_PDF_GENERATE,function(response){response.success?($scope.lambhistorypdfData=response.dataBean,console.log($scope.lambhistorypdfData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_HISTORY_PDF_GENERATE.URL=tempUrl},$scope.giveprint=function(param){$scope.genPDF(param)},$scope.genPDF=function(param){convertpdf.htmltoPdf(param)},$scope.init()}]),angular.module("app").controller("LMABhistorybatchCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$log",function($scope,$filter,$state,APIS,$location,DataManager,$window,$log){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.Fullreport=JSON.parse($window.sessionStorage.getItem("lmabbatchconclusion")),$scope.lmababatchdetail={visitid:$scope.Fullreport.visitid,applicantId:$scope.Fullreport.applicantId,applicantidMac:$scope.Fullreport.applicantid_mac},$scope.applicantMac=JSON.parse(sessionStorage.getItem("applicantMac")),$scope.applicantprofile=JSON.parse(sessionStorage.getItem("applicantProfile")),1==$scope.applicantprofile.professionalDetailsList[0].licenseType&&($scope.licenseTypedetail="Initial"),2==$scope.applicantprofile.professionalDetailsList[0].licenseType&&($scope.licenseTypedetail="Renewal"),3==$scope.applicantprofile.professionalDetailsList[0].licenseType&&($scope.licenseTypedetail="Board"),4==$scope.applicantprofile.professionalDetailsList[0].licenseType&&($scope.licenseTypedetail="Age 60"),$scope.init=function(){$scope.databind()},$scope.databind=function(){$scope.getApplicant(),$scope.measurementloadData(),$scope.physicalexamination(),$scope.preinvestigationloadData(),$scope.preloadaudio(),$scope.lmerecommendationgetfetch(),$scope.applicantmac()},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.lmababatchdetail.applicantId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean,console.log($scope.applicantInfo))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.measurementloadData=function(){var url=null,tempUrl=null;tempUrl=APIS.PRELOAD_MEASUREMENT.URL,url=tempUrl+"/"+$scope.lmababatchdetail.visitid+"/"+$scope.lmababatchdetail.applicantId,APIS.PRELOAD_MEASUREMENT.URL=url,DataManager.sendRestRequest(null,APIS.PRELOAD_MEASUREMENT,function(response){response.success?($scope.mesurementData=response.dataBean[0],console.log($scope.mesurementData),"Y"==response.dataBean[0].visionCorrection.spectacles&&($scope.isLenseUsed="spectacles"),"Y"==response.dataBean[0].visionCorrection.contactLense&&($scope.isLenseUsed="contactLense"),$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight&&$scope.bmiCalculation($scope.mesurementData.generalDTO.curentBmiDTO.height,$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight),$scope.mesurementData.generalDTO.actScoreDTOList[0].asthmacontrol.length>0&&($scope.actScorevalue=[]),$scope.actScorevalue1={},$scope.actScorevalue=$scope.mesurementData.generalDTO.actScoreDTOList[0],$scope.actScorevalue1=$scope.actScorevalue.asthmacontrol,$scope.actscore($scope.actScorevalue1.actQn1Score,$scope.actScorevalue1.actQn2Score,$scope.actScorevalue1.actQn3Score,$scope.actScorevalue1.actQn4Score,$scope.actScorevalue1.actQn5Score),$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.PRELOAD_MEASUREMENT.URL=tempUrl},$scope.physicalexamination=function(){$scope.userinfo={visitId:$scope.lmababatchdetail.visitid,applicationId:$scope.lmababatchdetail.applicantId},APIS.LME_PHYSICALEXAMINATION_EXAMINATION.data=$scope.userinfo,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_EXAMINATION,function(response){response.success?($scope.system_parts_remarks=response.dataBean[0].system_parts_remarks,console.log($scope.system_parts_remarks)):$log.error("Physical Examination : "+response.errorMessage)},$scope.uconfig.token)},$scope.preinvestigationloadData=function(){APIS.GET_LME_INVESTIGATION_DATA.data={visitId:$scope.lmababatchdetail.visitid,applicantId:$scope.lmababatchdetail.applicantId},DataManager.sendRestRequest(null,APIS.GET_LME_INVESTIGATION_DATA,function(response){response.success?($scope.investigation=response.dataBean,console.log($scope.investigation)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.preloadaudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.lmababatchdetail.visitid,APIS.GET_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_AUDIOMETROY,function(response){response.success?response.dataBean.audiometry.length>0?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.showCanvas=!0):$log.error("Audiograme Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_AUDIOMETROY.URL=tempUrl},$scope.lmerecommendationgetfetch=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_RECOMMENDATION.URL,url=tempUrl+"/"+$scope.lmababatchdetail.visitid,APIS.LME_GET_RECOMMENDATION.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_RECOMMENDATION,function(response){response.success?$scope.recommendationData=response.dataBean:$log.error("RECOMMENDATION : "+response.errorMessage)},$scope.uconfig.token),APIS.LME_GET_RECOMMENDATION.URL=tempUrl},$scope.preloadTransaction=function(data){var xAxis=[86,142,198,253,280,309,336,365];angular.forEach(data.audiometry,function(val,key){var i=0,leftData=[];angular.forEach(val.left,function(leftValue,leftKey){var temp={freq:xAxis[i],sound:leftValue};leftData.push(temp),i+=1}),data.audiometry[key].left=leftData;var j=0,rightData=[];angular.forEach(val.right,function(rightValue,rightKey){var temp={freq:xAxis[j],sound:rightValue};rightData.push(temp),j+=1}),data.audiometry[key].right=rightData}),$scope.audioData=data,$scope.showCanvas=!0},$scope.bmiCalculation=function(height,weight){if(!height||!weight)return!1;var height=height/100,ratio=weight/(height*height);$scope.bmiRatio=ratio.toFixed(2)},$scope.waistCalculation=function(waist,hip){if(!waist||!hip)return!1;var ratio=waist/hip;$scope.waistRatio=ratio.toFixed(2)},$scope.actscore=function(val1,val2,val3,val4,val5){$scope.calactscore=val1+val2+val3+val4+val5},$scope.applicantmac=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_APPLICANTMACS.URL,url=tempUrl+"/"+$scope.lmababatchdetail.applicantidMac,APIS.LME_GET_APPLICANTMACS.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_APPLICANTMACS,function(response){response.success&&(console.log(response),$scope.appliminimac=response.dataBean)},$scope.uconfig.token),APIS.LME_GET_APPLICANTMACS.URL=tempUrl},$scope.init()}]),angular.module("app.lmab").controller("MasterqCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$rootScope","ModalService","CAASConfig","ResourceManager",function($scope,$filter,$state,APIS,$location,DataManager,$window,$rootScope,ModalService,CAASConfig,regRM){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.regRM=regRM,$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantUserid=$scope.uconfig.userSeqId,$scope.applicantSearchDTO={nricNo:null,licenceNo:null,name:null,flag:"LMESUBMITTED"},$scope.init=function(){$scope.masterdate=[],$scope.datafirstSelected=[],$scope.datasecondSelected=[],$scope.datathirdSelected=[],$scope.datafourthSelected=[],$scope.mdate={slotId:null,slotdate:null},$scope.dataBind(),$scope.currentPage=1,$scope.lessvisible=[],$scope.morevisible=[],$scope.showdata=[],$scope.count=1,$scope.zero=0,$scope.firstdatatruecount=0,$scope.seconddatatruecount=0,$scope.thirddatatruecount=0,$scope.fourthdatatruecount=0},$scope.dataBind=function(){$scope.mrcurrentPageStores=[],$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[0]},$scope.checkfilter=function(one,two,three){$scope.loadmasterqdata()},$scope.loadmasterqdata=function(){APIS.LMAB_GET_MASTERQ.data=$scope.applicantSearchDTO,DataManager.sendRestRequest(null,APIS.LMAB_GET_MASTERQ,function(response){response.success?(console.log(response.dataBean),$scope.getmasterqData=[{0:{},1:{},2:{},3:{}}],$scope.getmasterqData[0]=response.dataBean.first,$scope.getmasterqData[1]=response.dataBean.second,$scope.getmasterqData[2]=response.dataBean.third,$scope.getmasterqData[3]=response.dataBean.fourth,$scope.select($scope.currentPage),0==$scope.getmasterqData[0].length&&0==$scope.getmasterqData[1].length&&0==$scope.getmasterqData[2].length&&0==$scope.getmasterqData[3].length&&ModalService.openAlert("alert","info","No Records Found","","","")):(console.log(response.errorMessage),ModalService.openAlert("alert","info","No Records Found","","",""))},$scope.uconfig.token)},$scope.validatecheck=function(){$scope.loadmasterqdata()},$scope.applicantFetch=function(getapplicantDetails){$scope.visitDetails={visitId:getapplicantDetails.visitId,applicantId:getapplicantDetails.applicantId,applicantuserId:getapplicantDetails.userId,applicantDetails:{applicationId:getapplicantDetails.applicantId}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$state.go("lmeapplicantprofile")},$scope.makelesstrue=function(index){$scope.lessvisible[index]=!0,$scope.morevisible[index]=!1,$scope.showdata[index]=!1},$scope.makemoretrue=function(index){$scope.morevisible[index]=!0,$scope.lessvisible[index]=!1,$scope.showdata[index]=!0},$scope.select=function(page){var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=$scope.getmasterqData.slice(start,end)},$scope.loaddateofmasterq=function(){DataManager.sendRestRequest(null,APIS.LMAB_GET_MASTERQ_SLOTDATE,function(response){response.success?$scope.masterdate=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.loadmasterqdata(),$scope.loaddateofmasterq(),$scope.addtoboardslot=function(mdateslot){for(var i=0;i<=$scope.datafirstSelected.length;i++)"true"!=$scope.datafirstSelected[i]&&1!=$scope.datafirstSelected[i]||($scope.firstdatatruecount=$scope.firstdatatruecount+1);for(var j=0;j<=$scope.datasecondSelected.length;j++)"true"!=$scope.datasecondSelected[j]&&1!=$scope.datasecondSelected[j]||($scope.seconddatatruecount=$scope.seconddatatruecount+1);for(var k=0;k<=$scope.datathirdSelected.length;k++)"true"!=$scope.datathirdSelected[k]&&1!=$scope.datathirdSelected[k]||($scope.thirddatatruecount=$scope.thirddatatruecount+1);for(var l=0;l<=$scope.datafourthSelected.length;l++)"true"!=$scope.datafourthSelected[l]&&1!=$scope.datafourthSelected[l]||($scope.fourthdatatruecount=$scope.fourthdatatruecount+1);$scope.firstdatatruecount>0||$scope.seconddatatruecount>0||$scope.thirddatatruecount>0||$scope.fourthdatatruecount>0?void 0==mdateslot||null==mdateslot?ModalService.openAlert("alert","info","Select Slot Date & Applicant","","",""):$scope.addcall():ModalService.openAlert("alert","info","Select Slot Date & Applicant","","",""),$scope.firstdatatruecount=0,$scope.seconddatatruecount=0,$scope.thirddatatruecount=0,$scope.fourthdatatruecount=0},$scope.addcall=function(){$scope.putmasterqData=[];for(var i=0;i<$scope.datafirstSelected.length;i++)"true"!=$scope.datafirstSelected[i]&&1!=$scope.datafirstSelected[i]||$scope.putmasterqData.push({visitId:$scope.getmasterqData[0][i].visitId,slot:{slotId:$scope.mdateslot}});for(var j=0;j<$scope.datasecondSelected.length;j++)"true"!=$scope.datasecondSelected[j]&&1!=$scope.datasecondSelected[j]||$scope.putmasterqData.push({visitId:$scope.getmasterqData[1][j].visitId,slot:{slotId:$scope.mdateslot}});for(var k=0;k<$scope.datathirdSelected.length;k++)"true"!=$scope.datathirdSelected[k]&&1!=$scope.datathirdSelected[k]||$scope.putmasterqData.push({visitId:$scope.getmasterqData[2][k].visitId,slot:{slotId:$scope.mdateslot}});for(var l=0;l<$scope.datafourthSelected.length;l++)"true"!=$scope.datafourthSelected[l]&&1!=$scope.datafourthSelected[l]||$scope.putmasterqData.push({visitId:$scope.getmasterqData[3][l].visitId,slot:{slotId:$scope.mdateslot}});APIS.LMAB_ADD_BOARDQ_SLOTDATE.data=$scope.putmasterqData,DataManager.sendRestRequest(null,APIS.LMAB_ADD_BOARDQ_SLOTDATE,function(response){response.success&&ModalService.openAlert("alert","info","Applicants successfully added to the Board Q",$scope,"recall",function(){$scope.loadmasterqdata()})},$scope.uconfig.token)},$scope.makechecktrue=function(param){if(param){for(var i=0;i<$scope.datafirstSelected.length;i++)$scope.datafirstSelected[i]=!0;for(var j=0;j<$scope.datasecondSelected.length;j++)$scope.datasecondSelected[j]=!0;for(var k=0;k<$scope.datathirdSelected.length;k++)$scope.datathirdSelected[k]=!0;for(var l=0;l<$scope.datafourthSelected.length;l++)$scope.datafourthSelected[l]=!0}else{for(var i=0;i<$scope.datafirstSelected.length;i++)$scope.datafirstSelected[i]=!1;for(var j=0;j<$scope.datasecondSelected.length;j++)$scope.datasecondSelected[j]=!1;for(var k=0;k<$scope.datathirdSelected.length;k++)$scope.datathirdSelected[k]=!1;for(var l=0;l<$scope.datafourthSelected.length;l++)$scope.datafourthSelected[l]=!1}},$scope.firstindextrue=function(select,index,flag){select?$scope.datafirstSelected[index]=!0:$scope.datafirstSelected[index]=!1},$scope.secondindextrue=function(select,index,flag){
select?$scope.datasecondSelected[index]=!0:$scope.datasecondSelected[index]=!1},$scope.thirdindextrue=function(select,index,flag){select?$scope.datathirdSelected[index]=!0:$scope.datathirdSelected[index]=!1},$scope.forthindextrue=function(select,index,flag){select?$scope.datafourthSelected[index]=!0:$scope.datafourthSelected[index]=!1},$scope.init()}]),angular.module("app").controller("popupassignmaCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$rootScope","$uibModalInstance",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.selectMA()},$scope.selectMA=function(selectmadropdownValue){$scope.slotAssaignedId="0",APIS.LMAB_VIEWSCHEDULE_MA.data=$scope.slotAssaignedId,DataManager.sendRestRequest(null,APIS.LMAB_VIEWSCHEDULE_MA,function(response){response.success?$scope.selectmaDropdown=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.assignsaveMA=function(userId){APIS.LMAB_VIEWSCHEDULE_ASSIGNMA.data=userId,DataManager.sendRestRequest(null,APIS.LMAB_VIEWSCHEDULE_ASSIGNMA,function(response){response.success?$scope.selectmaDropdown=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.assignmaClose=function(){$scope.modalInstance.close()},$scope.init()}]),angular.module("app").controller("PostboardCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService","CAASConfig","ResourceManager",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService,CAASConfig,regRM){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.init=function(){$scope.slotsData=[],$scope.regRM=regRM,$scope.fitnessData=[],$scope.macData=[],$scope.postboardData=[],$scope.publishlmabData=[],$scope.publishlettersData=[],$scope.postboardFilter={idno:"",applicantname:"",licenceno:"",lmabslots:"",fitness:"",provosis:"",mac:""},$scope.showPublishLmabBtn=!0,$scope.isLmabPublished=!1,$scope.arisexportdata={},$scope.capelexportdata={},$scope.databind(),$scope.Publishletterenable=!0},$scope.databind=function(){$scope.slotsFetch(),$scope.fitnessFetch(),$scope.macFetch(),$scope.loadcapelexport(),$scope.loadarisexport()},$scope.slotsFetch=function(){DataManager.sendRestRequest(null,APIS.GET_POST_BOARD_SLOTS,function(response){response.success?$scope.slotsData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.fitnessFetch=function(){DataManager.sendRestRequest(null,APIS.GET_POST_BOARD_FITNESS,function(response){response.success?($scope.fitnessData=response.dataBean,$scope.fitnessData.unshift({code:"",description:"All"}),$scope.postboardFilter.fitnessData==$scope.fitnessData[0]):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.macFetch=function(){DataManager.sendRestRequest(null,APIS.GET_POST_BOARD_MAC,function(response){response.success?($scope.macData=response.dataBean,$scope.macData.unshift({macId:"",description:"All"}),$scope.postboardFilter.mac==$scope.macData[0]):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.postboardFetch=function(appliDetails){return $scope.isFiltered=!0,!$scope.pbform.$invalid&&(sessionStorage.setItem("postboardslotid",$scope.postboardFilter.lmabslots),APIS.LMAB_LMF_POST_BOARD_FETCH.data=$scope.postboardFilter,void DataManager.sendRestRequest(null,APIS.LMAB_LMF_POST_BOARD_FETCH,function(response){response.success?($scope.showPublishLmabBtn=!0,$scope.postboardData=response.dataBean,console.log($scope.postboardData),$scope.isLmabPublished=$scope.postboardData.length>0&&"Yes"==$scope.postboardData[0].lmabPublishedFlag,$scope.isVettingConfirmed($scope.postboardData),$scope.isVettingLetterConfirmed($scope.postboardData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token))},$scope.requestcambChecked=function(postboardObj,index){$scope.reviewcambData={},$scope.reviewcambData={applicant_Id:postboardObj.vetting[index].applicant_id,visit_Id:postboardObj.vetting[index].visit_id,assessment_Id:postboardObj.vetting[index].assesment_id,assessment_Detail_Id:postboardObj.vetting[index].assesment_detail_id}},$scope.requestcambreview=function(){APIS.LAMB_POST_BOARD_REVIEW_CAMB.data=$scope.reviewcambData,DataManager.sendRestRequest(null,APIS.LAMB_POST_BOARD_REVIEW_CAMB,function(response){response.success?ModalService.openAlert("alert","success","Your Request CAMB Review Send Successfully","null","null",function(){$scope.postboardFetchInternalCall()}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.publishlmab=function(){for(var i=0;i<$scope.postboardData.length;i++)for(var j=0;j<$scope.postboardData[i].vetting.length;j++)"Y"==$scope.postboardData[i].vetting[j].confirmed&&$scope.publishlmabData.push({assessment_Id:$scope.postboardData[i].vetting[j].assesment_id,assessment_Detail_Id:$scope.postboardData[i].vetting[j].assesment_detail_id});APIS.LAMB_POST_BOARD_PUBLISH.data=$scope.publishlmabData,DataManager.sendRestRequest(null,APIS.LAMB_POST_BOARD_PUBLISH,function(response){response.success?($scope.showPublishLmabBtn=!0,$scope.isLmabPublished=!0,$scope.publishlmabData=[],ModalService.openAlert("alert","success","Publish LMAB Successfully","null","null",function(){$scope.postboardFetchInternalCall(),$scope.Publishletterenable=!1})):($scope.publishlmabData=[],console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages))},$scope.uconfig.token)},$scope.publishletters=function(){angular.forEach($scope.postboardData,function(postboard,index){angular.forEach(postboard.fitness,function(fitness,key){var temp={assessment_Id:null,assessment_Detail_Id:null,fitnessCode:null,visitId:null};temp.assessment_Id=postboard.vetting[key].assesment_id,temp.assessment_Detail_Id=postboard.vetting[key].assesment_detail_id,temp.fitnessCode=fitness.code,temp.visitId=postboard.vetting[key].visit_id;var isexsists=$filter("filter")($scope.publishlettersData,temp);isexsists.length||$scope.publishlettersData.push(temp)})}),APIS.LAMB_POST_BOARD_PUBLISH_LETTERS.data=$scope.publishlettersData,DataManager.sendRestRequest(null,APIS.LAMB_POST_BOARD_PUBLISH_LETTERS,function(response){if(response.success){var url=null,tempUrl=null;tempUrl=APIS.LAMB_POST_BOARD_PUBLISH_LETTERS_SUCCESS.URL,url=tempUrl+"/"+$scope.postboardFilter.lmabslots,APIS.LAMB_POST_BOARD_PUBLISH_LETTERS_SUCCESS.URL=url,DataManager.sendRestRequest(null,APIS.LAMB_POST_BOARD_PUBLISH_LETTERS_SUCCESS,function(response){response.success?ModalService.openAlert("alert","success","Publish LETTERS Successfully","null","null",function(){$window.location.reload()}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LAMB_POST_BOARD_PUBLISH_LETTERS_SUCCESS.URL=tempUrl}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.vettingModal=function(tabname,visittype,applicantDetails,index){$scope.postboardapplicantDetails={},$scope.visitDetails={},$scope.visitDetails={visitId:applicantDetails.vetting[index].visit_id,applicantId:applicantDetails.vetting[index].applicant_id,applicantuserId:applicantDetails.vetting[index].user_id,applicantDetails:{applicationId:applicantDetails.vetting[index].applicant_id}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$scope.postboardapplicantDetails={vetting_id:applicantDetails.vetting[index].vetting_id,applicant_id:applicantDetails.vetting[index].applicant_id,visit_id:applicantDetails.vetting[index].visit_id,assesment_id:applicantDetails.vetting[index].assesment_id,vetting_confirmed:applicantDetails.vetting[index].confirmed,letter_confirmed:applicantDetails.viewletter[index].letter_confirmed,email_confirmed:applicantDetails.viewletter[index].email_confirmed},$uibModal.open({animation:!0,templateUrl:"app/lmab/partials/LMF/postboardmodal.html",windowClass:"vetting-custom-class",controller:"VettingCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={screenName:"LMAB Postboard",tabname:tabname,visittype:visittype,applicantDetails:$scope.postboardapplicantDetails};return temp}}})},$scope.isVettingConfirmed=function(postboardData){angular.forEach(postboardData,function(postboard,index){angular.forEach(postboard.fitness,function(fitness,key){"Y"!=postboard.vetting[key].camb_review_requested_YN&&("FIT"!=fitness.code&&"FITWR"!=fitness.code&&"UNFIT"!=fitness.code||"Y"==postboard.vetting[key].confirmed&&postboard.vetting[key].confirmed||($scope.showPublishLmabBtn=!1))})})},$scope.isVettingLetterConfirmed=function(postboardData){angular.forEach(postboardData,function(postboard,index){angular.forEach(postboard.fitness,function(fitness,key){"FIT"!=fitness.code&&"FITWR"!=fitness.code&&"UNFIT"!=fitness.code||"Y"==postboard.viewletter[key].email_confirmed&&postboard.viewletter[key].email_confirmed&&"Y"==postboard.viewletter[key].letter_confirmed&&postboard.viewletter[key].letter_confirmed||($scope.showPublishLetterBtn=!1)})})},$scope.getcapelHeader=function(){return["Name","NRIC/Passport No./FIN","Licence No.","Mobile No","MAC","LME Type","Date of Med Exam","Assessment Outcome","Date of Expiry","Restriction","Provisio","Others","Specialist Medical Report","Additional Investigation for Medical Assessment"]},$scope.getarisHeader=function(){return["Licence no","NRIC","LME Type","Licence Expiry Date","MAC","Next Audio","Next ECG","Next TMX","Date of med exam","Restrictions","Eye Proviso","Date of LMAB","Fitness Status"]},$scope.getarisfilename=function(){var objToday=new Date,day=objToday.getDate(),month=objToday.getMonth()+1,year=objToday.getFullYear(),curHour=objToday.getHours(),curMinute=objToday.getMinutes(),curSeconds=objToday.getSeconds();return"ARIS_EXPORT_"+day+month+year+curHour+curMinute+curSeconds+".csv"},$scope.getcapelfilename=function(){var objToday=new Date,day=objToday.getDate(),month=objToday.getMonth()+1,year=objToday.getFullYear(),curHour=objToday.getHours(),curMinute=objToday.getMinutes(),curSeconds=objToday.getSeconds();return"CAPEL_EXPORT_"+day+month+year+curHour+curMinute+curSeconds+".csv"},$scope.loadarisexport=function(){DataManager.sendRestRequest(null,APIS.GET_ARIS_EXCEL_REPORT,function(response){response.success?($scope.arisexportdata=response.dataBean,console.log($scope.arisexportdata)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.loadcapelexport=function(){DataManager.sendRestRequest(null,APIS.GET_CAPEL_EXCEL_REPORT,function(response){response.success?($scope.capelexportdata=response.dataBean,console.log($scope.capelexportdata)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.capelexport=function(){for(var i=0;i>$scope.capelexportdata.length;i++)$scope.capelexportdata.push([{Name:$scope.capelexportdata[i].Name,"NRIC/Passport No./FIN":$scope.capelexportdata[i].NRIC,"Licence No.":$scope.capelexportdata[i].LicenceNo,"Mobile No.":$scope.capelexportdata[i].MobileNo,MAC:$scope.capelexportdata[i].MAC,"LME Type":$scope.capelexportdata[i].LMEType,"Date of Med Exam":$scope.capelexportdata[i].DateofMedExam,"Assessment Outcome":$scope.capelexportdata[i].AssessmentOutcome,"Date of Expiry":$scope.capelexportdata[i].DateofExpiry,Restriction:$scope.capelexportdata[i].Restriction,Provisio:$scope.capelexportdata[i].Provisio,Others:$scope.capelexportdata[i].Others,"Specialist Medical Report":$scope.capelexportdata[i].SpecialistMedicalReport,"Additional Investigation for Medical Assessment":$scope.capelexportdata[i].AdditionalInvestigation}]);return $scope.capelexportdata},$scope.arisexport=function(){for(var i=0;i>$scope.arisexportdata.length;i++)$scope.arisexportdata.push([{"Licence No":$scope.arisexportdata[i].Licenceno,"NRIC/Passport No./FIN":$scope.arisexportdata[i].NRIC,LMEType:$scope.arisexportdata[i].LMEType,MAC:$scope.arisexportdata[i].MAC,LicenceExpiryDate:$scope.arisexportdata[i].LicenceExpiryDate,NextAudio:$scope.arisexportdata[i].NextAudio,NextECG:$scope.arisexportdata[i].NextECG,NextTMX:$scope.arisexportdata[i].NextTMX,Dateofmedexam:$scope.arisexportdata[i].Dateofmedexam,Restrictions:$scope.arisexportdata[i].Restrictions,EyeProviso:$scope.arisexportdata[i].EyeProviso,DateofLMAB:$scope.arisexportdata[i].DateofLMAB,FitnessStatus:$scope.arisexportdata[i].FitnessStatus}]);return $scope.arisexportdata},$scope.postboardFetchInternalCall=function(){console.log($scope.postboardFilter),APIS.LMAB_LMF_POST_BOARD_FETCH.data=$scope.postboardFilter,DataManager.sendRestRequest(null,APIS.LMAB_LMF_POST_BOARD_FETCH,function(response){response.success?($scope.postboardData=response.dataBean,console.log($scope.postboardData),$scope.isLmabPublished=$scope.postboardData.length>0&&"Yes"==$scope.postboardData[0].lmabPublishedFlag,$scope.isVettingConfirmed($scope.postboardData),$scope.isVettingLetterConfirmed($scope.postboardData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.makecolor=function(index){var count=index+1;return count%2==0?"postboardeven":"postboardodd"},$rootScope.postboardFetchInternalCall=function(){APIS.LMAB_LMF_POST_BOARD_FETCH.data=$scope.postboardFilter,DataManager.sendRestRequest(null,APIS.LMAB_LMF_POST_BOARD_FETCH,function(response){response.success?($scope.postboardData=response.dataBean,$scope.showPublishLmabBtn=!0,$scope.isLmabPublished=$scope.postboardData.length>0&&"Yes"==$scope.postboardData[0].lmabPublishedFlag,$scope.isVettingConfirmed($scope.postboardData),$scope.isVettingLetterConfirmed($scope.postboardData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("VettingCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService","modalParam","$uibModalInstance","$parse","$timeout",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService,modalParam,$uibModalInstance,$parse,$timeout){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.requestScreenName=modalParam.screenName,$scope.showTab=modalParam.tabname,$scope.visittype=modalParam.visittype,$scope.applicantDetails=modalParam.applicantDetails,$scope.postboardslotid=JSON.parse($window.sessionStorage.getItem("postboardslotid")),$scope.init=function(){$scope.followupProvisoListAdd=[],$scope.followupProvisoListDel=[],$scope.followupProvisoTypeList=[],$scope.descriptionType=null,$scope.descriptionSubType=null,$scope.vettingconfirmDisabled=!1,$scope.letterconfirmDisabled=!1,$scope.emailconfirmDisabled=!1,$scope.letterregenerateDisabled=!0,$scope.vettingpreloadData={},$scope.lettertemplatesData=[],$scope.lettertemplatescontentData={},$scope.lettertemplatespreloadData={},$scope.emailtemplatespreloadData={},$scope.nextdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.expirydateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.databind()},$scope.databind=function(){$scope.followupProvisoTypeFetch(),$scope.followupProvisoFrequencyFetch(),$scope.followupProvisoDonebyFetch(),$scope.vettingPreload(),$scope.letterTemplatesFetch(),$scope.emailTemplatesFetch(),$scope.emailShortcutFetch(),$scope.$watch("showTab",function(newValue,oldValue){if(newValue)switch(newValue){case"vetting":break;case"letter":$timeout(function(){$scope.letterTemplatesPreload()},3e3);break;case"email":$timeout(function(){$scope.emailTemplatesPreload()},3e3)}})},$scope.nextdatepickerOpen=function($event,nextdatepickerPopup){$event.preventDefault(),$event.stopPropagation(),nextdatepickerPopup.opened=!0},$scope.expirydatepickerOpen=function($event,expirydatepickerPopup){$event.preventDefault(),$event.stopPropagation(),expirydatepickerPopup.opened=!0},$scope.vettingPreload=function(){$scope.vettingpreloadData={followupProvisoDTOList:[],latestFitness:[]};var url=null,tempUrl=null;tempUrl=APIS.LMAB_LMF_POSTBOARD_VETTING_PRELOAD.URL,url=tempUrl+"/"+$scope.visittype.mac_id+"/"+$scope.applicantDetails.applicant_id+"/"+$scope.applicantDetails.visit_id+"/"+$scope.applicantDetails.assesment_id,APIS.LMAB_LMF_POSTBOARD_VETTING_PRELOAD.URL=url,DataManager.sendRestRequest(null,APIS.LMAB_LMF_POSTBOARD_VETTING_PRELOAD,function(response){if(response.success){$scope.vettingpreloadData=response.dataBean;for(var d=0;d<$scope.vettingpreloadData.followupProvisoDTOList.length;d++)null!=$scope.vettingpreloadData.followupProvisoDTOList[d].nextDueDateVetting&&($scope.vettingpreloadData.followupProvisoDTOList[d].nextDueDateVetting=new Date($scope.vettingpreloadData.followupProvisoDTOList[d].nextDueDateVetting));for(var l=0;l<$scope.vettingpreloadData.latestFitness.length;l++)null!=$scope.vettingpreloadData.latestFitness[l].ExpiryDate&&($scope.vettingpreloadData.latestFitness[l].ExpiryDate=new Date($scope.vettingpreloadData.latestFitness[l].ExpiryDate)),"null"==$scope.vettingpreloadData.latestFitness[l].NextLME&&($scope.vettingpreloadData.latestFitness[l].NextLME="");"Y"==$scope.applicantDetails.vetting_confirmed&&($scope.vettingconfirmDisabled=!0);var monthNum="";if($scope.vettingpreloadData.followupProvisoDTOList)for(var f=0;f<$scope.vettingpreloadData.followupProvisoDTOList.length;f++)if(angular.forEach($scope.followupProvisoFrequencyList,function(value,key){$scope.vettingpreloadData.followupProvisoDTOList[f].followupProvisoFrequencyId===value.followupProvisoFrequencyId&&(monthNum=value.code.match(/\d/g)[0])}),!isNaN.monthNum){var nextDate=new Date($scope.vettingpreloadData.lmeStartDate);$scope.vettingpreloadData.followupProvisoDTOList[f].nextDueDateVetting=nextDate.setMonth(nextDate.getMonth()+monthNum)}}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_LMF_POSTBOARD_VETTING_PRELOAD.URL=tempUrl,$scope.lmabreviewCurrentDetails={visitId:$scope.applicantDetails.visit_id,applicantId:$scope.applicantDetails.applicant_id,lmbAssessmentId:$scope.applicantDetails.assesment_id,slotId:$scope.postboardslotid,user_seq_Id:$scope.uconfig.userSeqId},sessionStorage.setItem("lmabreviewCurrentDetailsfullreport",JSON.stringify($scope.lmabreviewCurrentDetails)),APIS.LMAB_REVIEW_PRELOAD.data=$scope.lmabreviewCurrentDetails,DataManager.sendRestRequest(null,APIS.LMAB_REVIEW_PRELOAD,function(response){response.success?($rootScope.lmabreviewData=response.dataBean,sessionStorage.setItem("lmabfullreportdetail",JSON.stringify($rootScope.lmabreviewData))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.viewAttachments=function(documentid){var url=null,tempUrl=null;tempUrl=APIS.GET_LMAB_VIEW_ATTACHMENTS.URL,url=tempUrl+"/"+documentid,APIS.GET_LMAB_VIEW_ATTACHMENTS.URL=url,APIS.GET_LMAB_VIEW_ATTACHMENTS.data=$scope.documentId,DataManager.sendRestRequest(null,APIS.GET_LMAB_VIEW_ATTACHMENTS,function(response){if(response.success){var content=response.dataBean.attachDocContent,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.attachDocContent,"_blank","location=0,enableviewportscale=yes")}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_LMAB_VIEW_ATTACHMENTS.URL=tempUrl},$scope.followupProvisoTypeFetch=function(){DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_TYPE,function(response){response.success?$scope.followupProvisoTypeList=response.dataBean.followupProvsoTypeList:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoSubTypeFetch=function(subtypeSearch,index){$scope.followupProvisoSubTypeList=[];var url=null,tempUrl=null;tempUrl=APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE.URL,url=tempUrl+"/"+$scope.followupProvisoListAdd[index].Type+"/"+subtypeSearch,APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE.URL=url,DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE,function(response){response.success?$scope.followupProvisoSubTypeList=response.dataBean.spcltyOrInvstgnList:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE.URL=tempUrl},$scope.addfollowupProvisoSubType=function(followupProvisoListSubType,index){$scope.followupProvisoListAdd[index].specialityOrInvestigationId=$.grep($scope.followupProvisoSubTypeList,function(e){return e.description==followupProvisoListSubType})[0].specialityOrInvestigationId},$scope.change_descriptionType=function(index){$scope.followupProvisoListAdd[index].SubType=null,$scope.followupProvisoSubTypeList=[],$scope.followupProvisoListAdd[index].specialityOrInvestigationId=null},$scope.followupProvisoFrequencyFetch=function(){DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_FREQUENCY,function(response){response.success?$scope.followupProvisoFrequencyList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoFrequencyChange=function(getfollowupProvisoFrequencyId,index){var monthNum="";if(angular.forEach($scope.followupProvisoFrequencyList,function(value,key){getfollowupProvisoFrequencyId===value.followupProvisoFrequencyId&&(monthNum=value.code.match(/\d/g)[0])}),!isNaN.monthNum){var nextDate=new Date($scope.vettingpreloadData.lmeStartDate);$scope.vettingpreloadData.followupProvisoDTOList[index].nextDueDateVetting=nextDate.setMonth(nextDate.getMonth()+monthNum)}},$scope.followupProvisoDonebyFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_POSTBOARD_VETTING_FOLLOWUP_PROVISO_DONEBY,function(response){if(response.success){$scope.followupProvisoDoneByList=response.dataBean.doneByNames;for(var f=0;f<$scope.followupProvisoDoneByList.length;f++){var parsefollowupProvisoDoneByList=$parse($scope.followupProvisoDoneByList[f].PersonId);$scope.followupProvisoDoneByList[f].PersonId=parsefollowupProvisoDoneByList($scope)}}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisosAdd=function(){$scope.followupProvisoListAdd.push({lmbFollowupProvisoId:0,lmbAssesmentId:$scope.applicantDetails.assesment_id,followupProvisoTypeId:"",specialityOrInvestigationId:"",followupProvisoFrequencyId:$scope.followupProvisoFrequencyList[0].followupProvisoFrequencyId,followupProvisoDoneById:$scope.followupProvisoDoneByList[0].PersonId,nextDueDateVetting:"",recordExist:"Yes"})},$scope.followupProvisosRemove=function(index,removeFrom){"existfolloup"==removeFrom&&($scope.followupProvisoListDel.push({lmbFollowupProvisoId:$scope.vettingpreloadData.followupProvisoDTOList[index].lmbFollowupProvisoId,lmbAssesmentId:$scope.vettingpreloadData.followupProvisoDTOList[index].assesment_id,followupProvisoTypeId:$scope.vettingpreloadData.followupProvisoDTOList[index].followupProvisoTypeId,specialityOrInvestigationId:$scope.vettingpreloadData.followupProvisoDTOList[index].specialityOrInvestigationId,followupProvisoFrequencyId:$scope.vettingpreloadData.followupProvisoDTOList[index].followupProvisoFrequencyId,followupProvisoDoneById:$scope.vettingpreloadData.followupProvisoDTOList[index].followupProvisoDoneById,nextDueDateVetting:$scope.vettingpreloadData.followupProvisoDTOList[index].nextDueDateVetting,recordExist:"No"}),$scope.vettingpreloadData.followupProvisoDTOList.splice(index,1)),"newfollowup"==removeFrom&&$scope.followupProvisoListAdd.splice(index,1)},$scope.vettingSave=function(){$scope.postboardvettingsaveData={followupProvisoDTOList:[],latestFitness:[],vettingId:$scope.applicantDetails.vetting_id};for(var l=0;l<$scope.vettingpreloadData.latestFitness.length;l++)$scope.postboardvettingsaveData.latestFitness.push({ExpiryDate:$filter("date")(new Date($scope.vettingpreloadData.latestFitness[l].ExpiryDate),$scope.formats[3]),MacId:$scope.vettingpreloadData.latestFitness[l].MacId,AppLatesFitnesstId:$scope.vettingpreloadData.latestFitness[l].AppLatesFitnesstId,MacCode:$scope.vettingpreloadData.latestFitness[l].MacCode,NextLME:$scope.vettingpreloadData.latestFitness[l].NextLME,NextLMETypeId:$scope.vettingpreloadData.latestFitness[l].NextLMETypeId});if($scope.vettingpreloadData.followupProvisoDTOList.length>=0)for(var fe=0;fe<$scope.vettingpreloadData.followupProvisoDTOList.length;fe++)$scope.vettingpreloadData.followupProvisoDTOList[fe].nextDueDateVetting=$filter("date")(new Date($scope.vettingpreloadData.followupProvisoDTOList[fe].nextDueDateVetting),$scope.formats[3]),delete $scope.vettingpreloadData.followupProvisoDTOList[fe].otherInvestigation,delete $scope.vettingpreloadData.followupProvisoDTOList[fe].addedAtVetting,delete $scope.vettingpreloadData.followupProvisoDTOList[fe].donebyDescription,delete $scope.vettingpreloadData.followupProvisoDTOList[fe].macId,delete $scope.vettingpreloadData.followupProvisoDTOList[fe].opened;if($scope.followupProvisoListAdd.length>=0)for(var fa=0;fa<$scope.followupProvisoListAdd.length;fa++)$scope.type=$.grep($scope.followupProvisoTypeList,function(e){return e.code==$scope.followupProvisoListAdd[fa].Type}),$scope.followupProvisoListAdd[fa].nextDueDateVetting=$filter("date")(new Date($scope.followupProvisoListAdd[fa].nextDueDateVetting),$scope.formats[3]),$scope.followupProvisoListAdd[fa].followupProvisoTypeId=$scope.type[0].followupProvisoTypeId,delete $scope.followupProvisoListAdd[fa].opened,delete $scope.followupProvisoListAdd[fa].Type,delete $scope.followupProvisoListAdd[fa].SubType;$scope.followupProvisoListAdd=$scope.followupProvisoListAdd.concat($scope.followupProvisoListDel),$scope.postboardvettingsaveData.followupProvisoDTOList=$scope.vettingpreloadData.followupProvisoDTOList.concat($scope.followupProvisoListAdd),APIS.LMAB_LMF_POSTBOARD_VETTING_SAVE.data=$scope.postboardvettingsaveData,DataManager.sendRestRequest(null,APIS.LMAB_LMF_POSTBOARD_VETTING_SAVE,function(response){response.success?ModalService.openAlert("alert","success","Vetting Confirmed Successfully","null","null",function(){$scope.cancel()}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.letterTemplatesPreload=function(){CKEDITOR.replace("vettinglettertemplatecontent"),$scope.lettertemplatespreloadData={};var url=null,tempUrl=null;tempUrl=APIS.LMAB_POSTBOARD_LETTER_TEMPLATES_PRELOAD.URL,url=tempUrl+"/"+$scope.applicantDetails.vetting_id,APIS.LMAB_POSTBOARD_LETTER_TEMPLATES_PRELOAD.URL=url,DataManager.sendRestRequest(null,APIS.LMAB_POSTBOARD_LETTER_TEMPLATES_PRELOAD,function(response){response.success?($scope.lettertemplatespreloadData=response.dataBean,CKEDITOR.instances.vettinglettertemplatecontent.insertHtml($scope.lettertemplatespreloadData.letterContent),"Y"==$scope.applicantDetails.letter_confirmed&&($scope.letterconfirmDisabled=!0,$scope.letterregenerateDisabled=!1)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_POSTBOARD_LETTER_TEMPLATES_PRELOAD.URL=tempUrl},$scope.letterTemplatesFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_POSTBOARD_LETTER_TEMPLATES,function(response){response.success?$scope.lettertemplatesData=response.dataBean.templates:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.letterTemplatesContentFetch=function(letterTemplateId){CKEDITOR.instances.vettinglettertemplatecontent.setData(""),$scope.lettertemplatescontentData={};var url=null,tempUrl=null;tempUrl=APIS.GET_LMAB_POSTBOARD_LETTER_TEMPLATES_CONTENT.URL,url=tempUrl+"/"+letterTemplateId+"/"+$scope.applicantDetails.applicant_id+"/"+$scope.applicantDetails.visit_id+"/"+$scope.postboardslotid+"/"+$scope.visittype.mac_id,APIS.GET_LMAB_POSTBOARD_LETTER_TEMPLATES_CONTENT.URL=url,DataManager.sendRestRequest(null,APIS.GET_LMAB_POSTBOARD_LETTER_TEMPLATES_CONTENT,function(response){response.success?($scope.lettertemplatescontentData=response.dataBean,""!==$scope.lettertemplatescontentData.letterContent&&CKEDITOR.instances.vettinglettertemplatecontent.insertHtml($scope.lettertemplatescontentData.letterContent),$scope.letterconfirmDisabled=!1,$scope.letterregenerateDisabled=!0):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_LMAB_POSTBOARD_LETTER_TEMPLATES_CONTENT.URL=tempUrl},$scope.letterTemplatesSave=function(){$scope.lettertemplatesaveData={vettingId:$scope.applicantDetails.vetting_id,assessmentId:$scope.applicantDetails.assesment_id,letterContent:CKEDITOR.instances.vettinglettertemplatecontent.getData(),letterTemplateId:$scope.lettertemplatespreloadData.letterTemplateId,macId:$scope.visittype.mac_id},APIS.LMAB_POSTBOARD_LETTER_TEMPLATES_SAVE.data=$scope.lettertemplatesaveData,DataManager.sendRestRequest(null,APIS.LMAB_POSTBOARD_LETTER_TEMPLATES_SAVE,function(response){response.success?($scope.letterSaveStatus=response,$scope.letterconfirmDisabled=!0,$scope.letterregenerateDisabled=!1):console.log("Letter Templates Save - Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.emailTemplatesPreload=function(){CKEDITOR.replace("vettingemailtemplatecontent"),$scope.emailtemplatespreloadData={};var url=null,tempUrl=null;tempUrl=APIS.LMAB_POSTBOARD_EMAIL_TEMPLATES_PRELOAD.URL,url=tempUrl+"/"+$scope.applicantDetails.vetting_id,APIS.LMAB_POSTBOARD_EMAIL_TEMPLATES_PRELOAD.URL=url,DataManager.sendRestRequest(null,APIS.LMAB_POSTBOARD_EMAIL_TEMPLATES_PRELOAD,function(response){response.success?($scope.emailtemplatespreloadData=response.dataBean,CKEDITOR.instances.vettingemailtemplatecontent.insertHtml($scope.emailtemplatespreloadData.emailBody),"Y"==$scope.applicantDetails.email_confirmed&&($scope.emailconfirmDisabled=!0)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_POSTBOARD_EMAIL_TEMPLATES_PRELOAD.URL=tempUrl},$scope.emailTemplatesFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_POSTBOARD_EMAIL_TEMPLATES,function(response){response.success?$scope.emailtemplatesData=response.dataBean.templates:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.emailTemplatesContentFetch=function(emailTemplateId){CKEDITOR.instances.vettingemailtemplatecontent.setData("");var url=null,tempUrl=null;tempUrl=APIS.GET_LMAB_POSTBOARD_EMAIL_TEMPLATES_CONTENT.URL,url=tempUrl+"/"+emailTemplateId+"/"+$scope.applicantDetails.applicant_id+"/"+$scope.applicantDetails.visit_id+"/"+$scope.postboardslotid+"/"+$scope.visittype.mac_id,APIS.GET_LMAB_POSTBOARD_EMAIL_TEMPLATES_CONTENT.URL=url,
DataManager.sendRestRequest(null,APIS.GET_LMAB_POSTBOARD_EMAIL_TEMPLATES_CONTENT,function(response){response.success?($scope.emailtemplatescontentData=response.dataBean,""!==$scope.emailtemplatescontentData.emailBody&&CKEDITOR.instances.vettingemailtemplatecontent.insertHtml($scope.emailtemplatescontentData.emailBody),$scope.emailtemplatespreloadData.emailshortcut=$scope.emailtemplatescontentData.emailSubject):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_LMAB_POSTBOARD_EMAIL_TEMPLATES_CONTENT.URL=tempUrl},$scope.emailShortcutFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_POSTBOARD_EMAIL_TEMPLATES_SHORTCUT,function(response){response.success?$scope.emailshortcutData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.emailShortcutAdd=function(emailshortcut){APIS.GET_LMAB_POSTBOARD_EMAIL_SHORTCUT.URL="lmab/getShortcutDescription/"+emailshortcut+"/"+$scope.applicantDetails.applicant_id+"/"+$scope.applicantDetails.visit_id+"/"+$scope.postboardslotid+"/"+$scope.visittype.mac_id,DataManager.sendRestRequest(null,APIS.GET_LMAB_POSTBOARD_EMAIL_SHORTCUT,function(response){response.success?($scope.responseData=response.dataBean,CKEDITOR.instances.vettingemailtemplatecontent.insertHtml($scope.responseData)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.emailTemplatesSave=function(){return $scope.emailConfirmBtnClicked=!0,!!$scope.validateEmail()&&($scope.emailtemplatesaveData={vettingId:$scope.applicantDetails.vetting_id,assessmentId:$scope.applicantDetails.assesment_id,emailRecipients:$scope.emailtemplatespreloadData.emailRecipients,emailSubject:$scope.emailtemplatespreloadData.emailSubject,emailBody:CKEDITOR.instances.vettingemailtemplatecontent.getData(),emailTemplateId:$scope.emailtemplatespreloadData.emailTemplateId,macId:$scope.visittype.mac_id},APIS.LMAB_POSTBOARD_EMAIL_TEMPLATES_SAVE.data=$scope.emailtemplatesaveData,void DataManager.sendRestRequest(null,APIS.LMAB_POSTBOARD_EMAIL_TEMPLATES_SAVE,function(response){response.success?$scope.emailTempStatus=response:console.log("Email Temp Save - Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token))},$scope.cancel=function(){ModalService.openAlert("confirm","warning","Are you sure you want to close window?",$scope,"vetting",function(){}),$scope.$on("vettingOk",function(){$uibModalInstance.dismiss("cancel"),$rootScope.postboardFetchInternalCall()})},$scope.onTabClick=function(param){switch(param){case"vetting":break;case"letter":$scope.letterTemplatesPreload();break;case"email":$scope.emailTemplatesPreload()}},$scope.getFullReport=function(){var url=null,tempUrl=null;tempUrl=APIS.LMAB_VETTING_FULL_REPORT.URL,url=tempUrl+"/10481/1",APIS.LMAB_VETTING_FULL_REPORT.URL=url,DataManager.sendRestRequest(null,APIS.LMAB_VETTING_FULL_REPORT,function(response){response.success||console.log("FULL REPORT Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_VETTING_FULL_REPORT.URL=tempUrl},$scope.openfullreport=function(){$window.open("#/lmabvettingfullreport")},$scope.validateEmail=function(){var re=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/gim;return re.test($scope.emailtemplatespreloadData.emailRecipients)?$scope.invalidEmail=!0:$scope.invalidEmail=!1,$scope.invalidEmail},$scope.init()}]),angular.module("app").controller("VettingfullreportCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window",function($scope,$filter,$state,APIS,$location,DataManager,$window){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantMac=JSON.parse(sessionStorage.getItem("applicantMac")),$scope.applicantprofile=JSON.parse(sessionStorage.getItem("applicantProfile")),$scope.lmabfullreport=JSON.parse(sessionStorage.getItem("lmabfullreportdetail")),$scope.lmabfullreportCurrentma=JSON.parse(sessionStorage.getItem("lmabreviewCurrentDetailsfullreport")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.Fullreport=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.lmababatchdetail={visitid:$scope.Fullreport.visitId,applicantId:$scope.Fullreport.applicantId,applicantidMac:$scope.Fullreport.applicantid_mac},$scope.expiryDatecount=0,$scope.init=function(){$scope.databind()},$scope.databind=function(){$scope.getApplicant(),$scope.measurementloadData(),$scope.physicalexamination(),$scope.preinvestigationloadData(),$scope.preloadaudio(),$scope.lmerecommendationgetfetch(),$scope.applicantmac(),$scope.lmabdetails()},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.Fullreport.applicantuserId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean,console.log($scope.applicantInfo))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.measurementloadData=function(){var url=null,tempUrl=null;tempUrl=APIS.PRELOAD_MEASUREMENT.URL,url=tempUrl+"/"+$scope.lmababatchdetail.visitid+"/"+$scope.lmababatchdetail.applicantId+"/"+$scope.visitInfo.applicantDetails.applicationId,APIS.PRELOAD_MEASUREMENT.URL=url,DataManager.sendRestRequest(null,APIS.PRELOAD_MEASUREMENT,function(response){response.success?($scope.mesurementData=response.dataBean[0],$scope.colorPlates=response.dataBean[0].colourPerceptionDTO.paletStatusDTO?response.dataBean[0].colourPerceptionDTO.paletStatusDTO:$scope.colorPlates,"Y"==response.dataBean[0].visionCorrection.spectacles&&($scope.isLenseUsed="spectacles"),"Y"==response.dataBean[0].visionCorrection.contactLense&&($scope.isLenseUsed="contactLense"),1==response.dataBean[0].visionCorrection.visionType&&($scope.myvisionType="Near"),2==response.dataBean[0].visionCorrection.visionType&&($scope.myvisionType="Distant"),3==response.dataBean[0].visionCorrection.visionType&&($scope.myvisionType="Both"),$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight&&$scope.bmiCalculation($scope.mesurementData.generalDTO.height,$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight),$scope.mesurementData.generalDTO.actScoreDTOList.length>0&&$scope.actscoreTransformation($scope.mesurementData.generalDTO.actScoreDTOList),$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip),$scope.mesurementData.generalDTO.suspineDataDTO.length>0&&$scope.postalDropTransformation($scope.mesurementData.generalDTO.suspineDataDTO)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.PRELOAD_MEASUREMENT.URL=tempUrl},$scope.physicalexamination=function(){$scope.userinfo={visitId:$scope.lmababatchdetail.visitid,applicationId:$scope.lmababatchdetail.applicantId},APIS.LME_PHYSICALEXAMINATION_EXAMINATION.data=$scope.userinfo,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_EXAMINATION,function(response){response.success?($scope.hed=response.dataBean[0].hedList,$scope.measurement_bp=response.dataBean[0].lme_mea_bp,$scope.measurement_eye=response.dataBean[0].lme_mea_eye_others,$scope.measurement_asthma=response.dataBean[0].lme_mea_asthma,$scope.hed.lme_dme=response.dataBean[0].lme_DME_REMARKS,$scope.measurement_audiometry=response.dataBean[0].lme_MEA_AUDIOMETRY,$scope.physicalexamination_investigation=response.dataBean[0].investigation,$scope.system_parts_remarks=response.dataBean[0].system_parts_remarks,$scope.body_points=response.dataBean[0].body_points_list,$scope.physicalexamination_examinationdata=$scope.hed.concat($scope.measurement_bp,$scope.measurement_asthma,$scope.measurement_eye,$scope.measurement_audiometry,$scope.hed.lme_dme,$scope.physicalexamination_investigation,$scope.system_parts_remarks)):$log.error("Physical Examination : "+response.errorMessage)},$scope.uconfig.token)},$scope.preinvestigationloadData=function(){APIS.GET_LME_INVESTIGATION_DATA.data={visitId:$scope.lmababatchdetail.visitid,applicantId:$scope.lmababatchdetail.applicantId},DataManager.sendRestRequest(null,APIS.GET_LME_INVESTIGATION_DATA,function(response){response.success?($scope.investigation=response.dataBean,console.log($scope.investigation),$scope.egfr($scope.investigation.renalPanel[0].data[0].cr),$scope.cratio($scope.investigation.bloodTests.lipidProfile[0].data[0].tci,$scope.investigation.bloodTests.lipidProfile[0].data[0].hdl)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.preloadaudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.lmababatchdetail.visitid,APIS.GET_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_AUDIOMETROY,function(response){response.success?response.dataBean.audiometry.length>0?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.showCanvas=!0):$log.error("Audiograme Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_AUDIOMETROY.URL=tempUrl},$scope.lmerecommendationgetfetch=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_RECOMMENDATION.URL,url=tempUrl+"/"+$scope.lmababatchdetail.visitid,APIS.LME_GET_RECOMMENDATION.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_RECOMMENDATION,function(response){response.success?$scope.recommendationData=response.dataBean:$log.error("RECOMMENDATION : "+response.errorMessage)},$scope.uconfig.token),APIS.LME_GET_RECOMMENDATION.URL=tempUrl},$scope.preloadTransaction=function(data){var xAxis=[75,132,190,246,275,304,334,361];angular.forEach(data.audiometry,function(val,key){var i=0,leftData=[];angular.forEach(val.left,function(leftValue,leftKey){var temp={freq:xAxis[i],sound:leftValue};leftValue&&leftData.push(temp),i+=1}),data.audiometry[key].left=leftData;var j=0,rightData=[];angular.forEach(val.right,function(rightValue,rightKey){var temp={freq:xAxis[j],sound:rightValue};rightValue&&rightData.push(temp),j+=1}),data.audiometry[key].right=rightData}),$scope.audioData=data,$scope.showCanvas=!0},$scope.bmiCalculation=function(height,weight){if(!height||!weight)return!1;var height=height/100,ratio=weight/(height*height);$scope.bmiRatio=ratio.toFixed(2)},$scope.waistCalculation=function(waist,hip){if(!waist||!hip)return!1;var ratio=waist/hip;$scope.waistRatio=ratio.toFixed(2)},$scope.actscore=function(val1,val2,val3,val4,val5){$scope.calactscore=val1+val2+val3+val4+val5},$scope.applicantmac=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_APPLICANTMACS.URL,url=tempUrl+"/"+$scope.lmababatchdetail.applicantId,APIS.LME_GET_APPLICANTMACS.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_APPLICANTMACS,function(response){response.success&&(console.log(response),$scope.appliminimac=response.dataBean)},$scope.uconfig.token),APIS.LME_GET_APPLICANTMACS.URL=tempUrl},$scope.lmabdetails=function(){APIS.LMAB_REVIEW_FULL_REPORT.data=$scope.lmabfullreportCurrentma,DataManager.sendRestRequest(null,APIS.LMAB_REVIEW_FULL_REPORT,function(response){response.success&&($scope.reviewdetails=response.dataBean,null!=$scope.reviewdetails.expirayDate&&"null"!=$scope.reviewdetails.expirayDate||($scope.expirayDate="N/A"),console.log($scope.reviewdetails))},$scope.uconfig.token)},$scope.postalDropTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.suspineDataDTO,function(value,index){$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop=parseInt(value.suspineDTO.sys)-parseInt(value.standingDTO.sys)})},$scope.actscoreTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,index){$scope.mesurementData.generalDTO.actScoreDTOList[index].actscore=value.asthmacontrol.actQn1Score+value.asthmacontrol.actQn2Score+value.asthmacontrol.actQn3Score+value.asthmacontrol.actQn4Score+value.asthmacontrol.actQn5Score})},$scope.egfr=function(cr){return!!cr&&void("M"==$scope.visitInfo.applicantDetails.gender?($scope.investigation.renalPanel[0].data[0].egfr=((140-$scope.visitInfo.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*$scope.investigation.renalPanel[0].data[0].cr)).toFixed(2),$scope.va=$scope.investigation.renalPanel[0].data[0].egfr):($scope.investigation.renalPanel[0].data[0].egfr=((140-$scope.visitInfo.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*$scope.investigation.renalPanel[0].data[0].cr)).toFixed(2),$scope.va=$scope.investigation.renalPanel[0].data[0].egfr))},$scope.cratio=function(tci,hdl){return!(!tci||!hdl)&&void angular.forEach($scope.investigation.bloodTests.lipidProfile[0].data,function(value,key){$scope.investigation.bloodTests.lipidProfile[0].data[key].cratio=(value.tci/value.hdl).toFixed(2)})},$scope.close=function(){$window.close()},$scope.init()}]),angular.module("app").controller("ViewscheduleCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","$log","convertpdf","ModalService","CAASConfig","ResourceManager",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,$log,convertpdf,ModalService,CAASConfig,regRM){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.regRM=regRM,$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig"));var months=["January","February","March","April","May","June","July","August","September","October","November","December"];$scope.monthyeartableParameter={month:$filter("date")(new Date,"MM"),year:$filter("date")(new Date,"yyyy")},$scope.monthviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.month),"MMMM"),$scope.yearviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.year),"yyyy");var currentMonth=(new Date).getMonth();$scope.nameMonth=months[currentMonth];var previouscount=1,nextcount=1,previousDate=new Date,nextDate=new Date;new Date;$scope.previousMonthYear=function(){nextDate.getMonth()>=11?""==previouscount?(previouscount=1,previousDate=new Date(nextDate.getFullYear()-previouscount,0,1)):(previousDate=new Date(nextDate.getFullYear(),nextDate.getMonth()-previouscount,1),nextcount=""):(""==previouscount?(previouscount=1,previousDate=new Date(nextDate.getFullYear(),nextDate.getMonth()-previouscount,1)):previousDate=new Date(nextDate.getFullYear(),nextDate.getMonth()-previouscount,1),nextcount=""),previouscount++,$scope.monthyeartableParameter={month:$filter("date")(new Date(previousDate),"MM"),year:$filter("date")(new Date(previousDate),"yyyy"),maUserId:""},$scope.monthviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.month),"MMMM"),$scope.yearviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.year),"yyyy"),$scope.lambviewschedule();var previousMonth=previousDate.getMonth();$scope.nameMonth=months[previousMonth]},$scope.nextMonthYear=function(){previouscount="",previousDate.getMonth()>=11?""==nextcount?(nextcount=1,nextDate=new Date(previousDate.getFullYear()+nextcount,0,1)):(nextDate=new Date(previousDate.getFullYear(),previousDate.getMonth()+nextcount,1),previouscount=""):(""==nextcount?(nextcount=1,nextDate=new Date(previousDate.getFullYear(),previousDate.getMonth()+nextcount,1)):nextDate=new Date(previousDate.getFullYear(),previousDate.getMonth()+nextcount,1),previouscount=""),nextcount++,$scope.monthyeartableParameter={month:$filter("date")(new Date(nextDate),"MM"),year:$filter("date")(new Date(nextDate),"yyyy"),maUserId:""},$scope.monthviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.month),"MMMM"),$scope.yearviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.year),"yyyy"),$scope.lambviewschedule();var nextMonth=nextDate.getMonth();$scope.nameMonth=months[nextMonth]},$scope.viewSchedule=[],$scope.dataBind(),$scope.optionassignmaAvaliable=[],$scope.assignmaNotavaliable={},$scope.viewdatetimeSchedule=[],$scope.printdata=[],$scope.arraypush={},$scope.status={isCustomHeaderOpen:!1,isFirstOpen:!0,isFirstDisabled:!1}},$scope.dataBind=function(){$scope.lambviewschedule(),$scope.asbutton_enable=!0,$scope.reasbutton_enable=!0},$scope.lambviewschedule=function(){APIS.LMAB_VIEWSCHEDULE.data=$scope.monthyeartableParameter,DataManager.sendRestRequest(null,APIS.LMAB_VIEWSCHEDULE,function(response){response.success?($scope.viewSchedule=response.dataBean,$scope.length=$scope.viewSchedule.length,$scope.viewdatetimeSchedule=[]):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.reassign_ma=function(date,slotId,slotAssignedId,oldMaId,index){$scope.slotId=slotId,$scope.maSeqid=index,$scope.reassign_maobj=[{date:date,lmfName:$scope.userInfo.firstName+$scope.userInfo.lastName,slotAssignDetails:[{slotAssaignedId:slotAssignedId,slotId:slotId,oldMaId:oldMaId,newMaId:"",maSeqId:$scope.maSeqid}]}],$scope.reasbutton_enable=!1,$scope.asbutton_enable=!0},$scope.assign_ma=function(date,slotId,slotAssignedId,index){$scope.slotId=slotId,$scope.maSeqid=index,$scope.reassign_maobj=[{date:date,lmfName:$scope.userInfo.firstName+$scope.userInfo.lastName,slotAssignDetails:[{slotAssaignedId:slotAssignedId,slotId:slotId,newMaId:"",maSeqId:$scope.maSeqid}]}],$scope.asbutton_enable=!1,$scope.reasbutton_enable=!0},$scope.viewSchedule_getma=function(){APIS.LMAB_VIEWSCHEDULE_MA.URL="lmab/getlmfmas/"+$scope.slotId+"/"+$scope.maSeqid,console.log(APIS.LMAB_VIEWSCHEDULE_MA.URL),DataManager.sendRestRequest(null,APIS.LMAB_VIEWSCHEDULE_MA,function(response){response.success?$scope.selectmaDropdown=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.submit_viewScheduleMa=function(reassign_maobj){$scope.getdata=reassign_maobj,console.log($scope.getdata),APIS.LMAB_VIEWSCHEDULE_ASSIGNMA.data=$scope.getdata,DataManager.sendRestRequest(null,APIS.LMAB_VIEWSCHEDULE_ASSIGNMA,function(response){response.success?($scope.response_assignma=response.dataBean,$scope.lambviewschedule(),ModalService.openAlert("alert","View schedule","slot assigned successfully","null","null"),$scope.asbutton_enable=!0,$scope.reasbutton_enable=!0):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.maprofile=function(param){sessionStorage.setItem("maId",JSON.stringify(param)),$window.open("#/maprofile")},$scope.printviewschedule=function(param){APIS.LMAB_VIEWSCHEDULE_PRINT.data=$scope.monthyeartableParameter,console.log(APIS.LMAB_VIEWSCHEDULE_PRINT.data),DataManager.sendRestRequest(null,APIS.LMAB_VIEWSCHEDULE_PRINT,function(response){response.success?($scope.printdata=response.dataBean,$scope.genPDF(param),console.log($scope.printdata),$scope.text="Schedule for Licensing Medical Assessors Board"):$scope.genPDF(param)},$scope.uconfig.token)},$scope.genPDF=function(param){convertpdf.htmltoPdf(param)},$scope.init()}]),angular.module("app").controller("LMFheaderCtrl",["$scope","$state","APIS","$location","DataManager","$window","switchRoles",function($scope,$state,APIS,$location,DataManager,$window,switchRoles){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userinfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.roles=$scope.uconfig.userFacilities[0].roles,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.uconfig||$state.go("login"),$scope.dataBind()},$scope.swichRole=function(param){sessionStorage.setItem("currentRole",JSON.stringify(param)),switchRoles.go(param.roleName)},$scope.dataBind=function(){},$scope.viewProfileTemplate=function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/common/partials/Profile_Model_Form.html",controller:"ProfileModelCtrl",size:"lg",resolve:{}},$scope.uconfig.token)},$scope.logout=function(){$window.sessionStorage.clear(),$state.go("login")},$scope.init()}]),angular.module("app").controller("LMFhomeCtrl",["$scope","$state","APIS","$location","DataManager","$window",function($scope,$state,APIS,$location,DataManager,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.loadWorklikstselect(),$scope.loadNotifications(),$scope.worklistData=[],$scope.notificationtData=[],$scope.worklistupdate={}},$scope.loadWorklikstselect=function(){DataManager.sendRestRequest(null,APIS.ADMIN_HOME_WORKLIST_SELECT,function(response){response.success?(console.log(response),$scope.worklistData=response.dataBean):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.loadWorklistupdate=function(data,c){APIS.ADMIN_HOME_WORKLIST_UPDATE.data=data,DataManager.sendRestRequest(null,APIS.ADMIN_HOME_WORKLIST_UPDATE,function(response){response.success&&($scope.data[worklistupdate]=response.dataBean)},$scope.uconfig.token)},$scope.loadNotifications=function(){DataManager.sendRestRequest(null,APIS.ADMIN_HOME_WORKLIST_NOTIFICATIONS,function(response){response.success?(console.log(response),$scope.notificationtData=response.dataBean):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.dataBind=function(){},$scope.viewMsg=function(param){$scope.showMsg=param},$scope.init()}]),angular.module("app").controller("LMABreviewCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService","$parse","$http",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService,$parse,$http){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.maDetails=JSON.parse($window.sessionStorage.getItem("maDetails")),$scope.lmabreviewDetails=JSON.parse($window.sessionStorage.getItem("lmabreviewDetails")),$scope.lmfCommentsFlag=JSON.parse($window.sessionStorage.getItem("lmfCommentsFlag")),$scope.uconfig||$state.go("login"),$scope.init=function(){if($scope.macassement=[],$scope.followupprovisoList=[],$scope.operationProvisoListAdd=[],$scope.operationProvisoListDel=[],$scope.onLoadFollowupProvisoListAdd=[],$scope.onLoadFollowupProvisoListDel=[],$scope.outcomesList=[],$scope.restrictionsList=[],$scope.lmabcontentDisabled={},$rootScope.lmabreviewData={},$scope.followupprovisoIndex="",$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.temp=[],$scope.lmfCommentsFlag=void 0==$scope.lmfCommentsFlag||$scope.lmfCommentsFlag,$scope.lmabreviewDetails&&$scope.lmabreviewDetails.length){var lastItem=$scope.lmabreviewDetails.length-1;$scope.disableNextBtn=1==$scope.lmabreviewDetails[lastItem].selectedQueue}$scope.databind()},$scope.databind=function(){$scope.outcomesFetch(),$scope.followupProvisoTypeFetch(),$scope.followupProvisoDoneByFetch(),$scope.followupProvisoFrequencyFetch(),$scope.auditdmeFetch(),$scope.lmabreviewFetch(),$scope.loadAttachments(),$scope.lmabdetails()},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.lmabreviewFetch=function(){for(var l=0;l<$scope.lmabreviewDetails.length;l++)1==$scope.lmabreviewDetails[l].selectedQueue&&($scope.visitDetails={},$scope.visitDetails={visitId:$scope.lmabreviewDetails[l].visitId,applicantId:$scope.lmabreviewDetails[l].applicantId,applicantuserId:$scope.lmabreviewDetails[l].userId,applicantDetails:{applicationId:$scope.lmabreviewDetails[l].applicationId,assessmentId:$scope.lmabreviewDetails[l].assessmentId,ma1color:$scope.lmabreviewDetails[l].ma1color,ma2color:$scope.lmabreviewDetails[l].ma2color,match:$scope.lmabreviewDetails[l].match,licenceNo:$scope.lmabreviewDetails[l].licenceNo,ma1:$scope.lmabreviewDetails[l].ma1,ma1Name:$scope.lmabreviewDetails[l].ma1Name,ma2:$scope.lmabreviewDetails[l].ma2,ma2Name:$scope.lmabreviewDetails[l].ma2Name,applicanName:$scope.lmabreviewDetails[l].applicanName,visitType:$scope.lmabreviewDetails[l].visitType,fitness:$scope.lmabreviewDetails[l].fitness,restriction:$scope.lmabreviewDetails[l].restriction,provisos:$scope.lmabreviewDetails[l].provisos,remarks:$scope.lmabreviewDetails[l].remarks,age:$scope.lmabreviewDetails[l].age}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$scope.lmabreviewCurrentDetails={visitId:$scope.lmabreviewDetails[l].visitId,applicantId:$scope.lmabreviewDetails[l].applicantId,lmbAssessmentId:$scope.lmabreviewDetails[l].assessmentId,slotId:$scope.maDetails.slotid,user_seq_Id:$scope.uconfig.userSeqId,lmfCommentsFlag:$scope.lmfCommentsFlag});sessionStorage.setItem("lmabreviewCurrentDetailsfullreport",JSON.stringify($scope.lmabreviewCurrentDetails)),APIS.LMAB_REVIEW_PRELOAD.data=$scope.lmabreviewCurrentDetails,DataManager.sendRestRequest(null,APIS.LMAB_REVIEW_PRELOAD,function(response){response.success?($rootScope.lmabreviewData=response.dataBean,$scope.restrictionsList=response.dataBean.restrictionDTO,"Y"==$rootScope.lmabreviewData.lmfComments&&ModalService.openAlert("Comments","Comments",$rootScope.lmabreviewData.lmfCommentsAvilable,"",""),sessionStorage.setItem("lmabfullreportdetail",JSON.stringify($rootScope.lmabreviewData)),$scope.refresh(),$(".lastsubmittedDME").html($rootScope.lmabreviewData.lastSubbmittedDME.process_summery),$scope.addOperationalProvisosCheck=$rootScope.lmabreviewData.operationProvisoList.length,$scope.followupprovisoCheck=$rootScope.lmabreviewData.onLoadFollowupProvisoList.length):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.loadAttachments=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_ATTACHMENTS.URL,url=tempUrl+"/"+$scope.lmabreviewCurrentDetails.visitId+"/LME_VISITS/"+$scope.lmabreviewCurrentDetails.applicantId,APIS.GET_ATTACHMENTS.URL=url,DataManager.sendRestRequest(null,APIS.GET_ATTACHMENTS,function(response){response.success?$scope.attachmentList=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token),APIS.GET_ATTACHMENTS.URL=tempUrl},$scope.getViewAttachment=function(ID){var url=null,tempUrl=null;tempUrl=APIS.VIEW_ATTACHMENTS_DOCUMENT.URL,url=tempUrl+"/"+ID,APIS.VIEW_ATTACHMENTS_DOCUMENT.URL=url,DataManager.sendRestRequest(null,APIS.VIEW_ATTACHMENTS_DOCUMENT,function(response){if(response.success){var content=response.dataBean.docContent,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.docContent,"_blank","location=0,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token),APIS.VIEW_ATTACHMENTS_DOCUMENT.URL=tempUrl},$scope.outcomesFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_OUTCOMES,function(response){response.success?$scope.outcomesList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.outcomeChange=function(outcomeCode,index){"FITWR"===outcomeCode||null===outcomeCode?$scope.lmabcontentDisabled.ristriction[index]=!1:($scope.lmabcontentDisabled.ristriction[index]=!0,$scope.macassement[index].ristrictionId=null),null!==outcomeCode&&($scope.lmabcontentDisabled.savelisting=!1,$scope.lmabreviewDetails.length>1&&($scope.lmabcontentDisabled.savenext=!1))},$scope.addOperationalProvisos=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/operationalprovisosmodal.html",controller:"OperationalprovisosCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={screenName:"LMAB Review",existingOperationalprovisos:$rootScope.lmabreviewData.operationProvisoList};return temp}}})},$scope.operationalprovisosRemove=function(index){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removefollowupprovisos",function(){$scope.flag=!1,$scope.$on("removefollowupprovisosOk",function(){0==$scope.flag&&($rootScope.lmabreviewData.operationProvisoList[index].lmboperationalProvisoId||($rootScope.lmabreviewData.operationProvisoList[index].lmboperationalProvisoId=null),$rootScope.lmabreviewData.operationProvisoList[index].operationalProvisoId&&($scope.operationalProvisoId=$rootScope.lmabreviewData.operationProvisoList[index].operationalProvisoId),$rootScope.lmabreviewData.operationProvisoList[index].actionId&&($scope.operationalProvisoId=$rootScope.lmabreviewData.operationProvisoList[index].actionId),$scope.operationProvisoListDel.push({lmboperationalProvisoId:$rootScope.lmabreviewData.operationProvisoList[index].lmboperationalProvisoId,operationalProvisoId:$scope.operationalProvisoId,operationalprovisoflag:2}),$rootScope.lmabreviewData.operationProvisoList.splice(index,1),$scope.flag=!0)}),$scope.$on("removefollowupprovisoscancel",function(){$uibModalInstance.closed})})},$scope.followupProvisoTypeFetch=function(){$scope.followupProvisoSpeciailityInvestigationList=[],DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_TYPE,function(response){response.success?$scope.followupProvisoTypeList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoChange=function(){$scope.followupProvisoSpeciailityInvestigationList=[]},$scope.followupProvisoSpeciailityInvestigationChange=function(){$scope.followupprovisoList.otherInvDescription=""},$scope.followupProvisoSpeciailityInvestigationFetch=function(){$scope.type_code=$.grep($scope.followupProvisoTypeList,function(e){return e.description==$scope.followupprovisoList.type_name}),$scope.followupProvisoSpeciailityInvestigationList=[];var url=null,tempUrl=null;tempUrl=APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL,url=tempUrl+"/"+$scope.type_code[0].code,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL=url,DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION,function(response){response.success?($scope.followupProvisoSpeciailityInvestigationList=response.dataBean,$scope.followupProvisoSpeciailityInvestigationList.push({actionName:"Others in Investigation"}),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex||($scope.followupprovisoList.speciality_investigation_name=$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].specInvDescription,$scope.followupprovisoList.otherInvDescription=$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].otherInvDescription)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL=tempUrl},$scope.followupProvisoDoneByFetch=function(){DataManager.sendRestRequest(null,APIS.GET_LMAB_FOLLOWUP_PROVISO_DONE_BY,function(response){if(response.success){$scope.followupProvisoDoneByList=response.dataBean;for(var f=0;f<$scope.followupProvisoDoneByList.length;f++){var parsefollowupProvisoDoneByList=$parse($scope.followupProvisoDoneByList[f].personId);$scope.followupProvisoDoneByList[f].personId=parsefollowupProvisoDoneByList($scope)}}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoFrequencyFetch=function(){DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_FREQUENCY,function(response){
response.success?$scope.followupProvisoFrequencyList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupprovisosAdd=function(){$scope.existtype=$.grep($rootScope.lmabreviewData.onLoadFollowupProvisoList,function(e){return e.fprovTypeDescription==$scope.followupprovisoList.type_name}),$scope.existspeciailityinvestigation=$.grep($rootScope.lmabreviewData.onLoadFollowupProvisoList,function(e){return e.specInvDescription==$scope.followupprovisoList.speciality_investigation_name}),$scope.existdoneby=$.grep($rootScope.lmabreviewData.onLoadFollowupProvisoList,function(e){return e.followupProvisoDoneById==$scope.followupprovisoList.doneby_name}),$scope.existfrequency=$.grep($rootScope.lmabreviewData.onLoadFollowupProvisoList,function(e){return e.frequencyDescription==$scope.followupprovisoList.frequency_name}),$scope.existfollowupDate=$.grep($rootScope.lmabreviewData.onLoadFollowupProvisoList,function(e){return e.followupProvisoDate==$scope.followupprovisoList.followupProvisoDate}),0!=$scope.existtype.length&&0!=$scope.existspeciailityinvestigation.length&&0!=$scope.existdoneby.length&&0!=$scope.existfrequency&&0!=$scope.existfollowupDate||($scope.type=$.grep($scope.followupProvisoTypeList,function(e){return e.description==$scope.followupprovisoList.type_name}),$scope.speciailityinvestigation=$.grep($scope.followupProvisoSpeciailityInvestigationList,function(e){return e.actionName==$scope.followupprovisoList.speciality_investigation_name}),$scope.doneby=$.grep($scope.followupProvisoDoneByList,function(e){return e.personId==$scope.followupprovisoList.doneby_name}),$scope.frequency=$.grep($scope.followupProvisoFrequencyList,function(e){return e.description==$scope.followupprovisoList.frequency_name}),$scope.followupProvisoDate=$filter("date")(new Date($scope.followupprovisoList.followupProvisoDate),$scope.formats[3]),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex?(""==$scope.followupprovisoList.otherInvDescription&&($scope.followupprovisoList.otherInvDescription=null),"Once"!=$scope.followupprovisoList.frequency_name?$scope.followupprovisoList.followupProvisoDate=null:$scope.followupProvisoDate=$filter("date")(new Date($scope.followupprovisoList.followupDate),$scope.formats[3]),$rootScope.lmabreviewData.onLoadFollowupProvisoList.push({lmbfollowupProvisoId:null,followupProvisoTypeId:$scope.type[0].followupProvisoTypeId,fprovTypeDescription:$scope.type[0].description,specialityOrInvestigationId:$scope.speciailityinvestigation[0].actionId,specInvDescription:$scope.speciailityinvestigation[0].actionName,followupProvisoDoneById:$scope.doneby[0].personId,followupProvisoDoneByName:$scope.doneby[0].name,otherInvDescription:$scope.followupprovisoList.otherInvDescription,followupProvisoFrequencyId:$scope.frequency[0].followupProvisoFrequencyId,frequencyDescription:$scope.frequency[0].description,followupProvisoDate:$scope.followupprovisoList.followupProvisoDate}),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvDescription="",$scope.followupprovisoList.followupProvisoDate=""):($rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].lmbfollowupProvisoId=null,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].followupProvisoTypeId=$scope.type[0].followupProvisoTypeId,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].fprovTypeDescription=$scope.type[0].description,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].specialityOrInvestigationId=$scope.speciailityinvestigation[0].actionId,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].specInvDescription=$scope.speciailityinvestigation[0].actionName,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].followupProvisoDoneById=$scope.doneby[0].personId,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].followupProvisoDoneByName=$scope.doneby[0].name,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].otherInvDescription=$scope.followupprovisoList.otherInvDescription,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].followupProvisoFrequencyId=$scope.frequency[0].followupProvisoFrequencyId,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].frequencyDescription=$scope.frequency[0].description,$rootScope.lmabreviewData.onLoadFollowupProvisoList[$scope.followupprovisoIndex].followupProvisoDate=new Date($scope.followupProvisoDate),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvDescription="",$scope.followupProvisoDate="",$scope.followupprovisoIndex=""))},$scope.followupprovisosEdit=function(index){$scope.followupprovisoList.type_name=$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].fprovTypeDescription,$scope.followupProvisoSpeciailityInvestigationFetch(),$scope.followupprovisoList.doneby_name=$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoDoneById,$scope.followupprovisoList.frequency_name=$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].frequencyDescription,$scope.followupprovisoList.followupProvisoDate=new Date($rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoDate),$scope.followupprovisoIndex=index},$scope.followupprovisosRemove=function(index){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removefollowupprovisos",function(){$scope.flag=!1,$scope.$on("removefollowupprovisosOk",function(){0==$scope.flag&&(""==$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].otherInvDescription&&($rootScope.lmabreviewData.onLoadFollowupProvisoList[index].otherInvDescription=null),"Once"!=$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].frequencyDescription?$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoDate=null:$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoDate=$filter("date")(new Date($rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoDate),$scope.formats[3]),$scope.onLoadFollowupProvisoListDel.push({lmbfollowupProvisoId:$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].lmbfollowupProvisoId,followupProvisoTypeId:$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoTypeId,specialityOrInvestigationId:$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].specialityOrInvestigationId,followupProvisoDoneById:$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoDoneById,followupProvisoFrequencyId:$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoFrequencyId,otherInvDescription:$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].otherInvDescription,followupProvisoDate:$rootScope.lmabreviewData.onLoadFollowupProvisoList[index].followupProvisoDate,followuoprovisoflag:2}),$rootScope.lmabreviewData.onLoadFollowupProvisoList.splice(index,1),$scope.flag=!0)}),$scope.$on("removefollowupprovisoscancel",function(){$uibModalInstance.closed})})},$scope.auditdmeFetch=function(){DataManager.sendRestRequest(null,APIS.GET_AUDIT_DME,function(response){response.success?$scope.auditdmeList=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.lmabreviewSave=function(buttonType){"save_next"==buttonType?sessionStorage.setItem("lmfCommentsFlag",!0):"save"==buttonType&&sessionStorage.setItem("lmfCommentsFlag",!1),APIS.LMAB_MA_QUEUE_DETAILSPASS.data={maId:$scope.userInfo.personId,slotId:$scope.maDetails.slotid,assessmentId:$scope.lmabreviewCurrentDetails.lmbAssessmentId},DataManager.sendRestRequest(null,APIS.LMAB_MA_QUEUE_DETAILSPASS,function(response){if(response.success){$scope.lmabreviewsaveData={lmbAssessmentId:$scope.lmabreviewCurrentDetails.lmbAssessmentId,slotId:$scope.maDetails.slotid,maId:$scope.userInfo.personId,macassement:[],mac:[],onLoadFollowupProvisoList:[],dmePerformanceAudit:{dmePerformanceAuditId:$rootScope.lmabreviewData.dmePerformanceAudit.dmePerformanceAuditId,remarksInstructions:$rootScope.lmabreviewData.dmePerformanceAudit.remarksInstructions,auditRemarks:$rootScope.lmabreviewData.dmePerformanceAudit.auditRemarks},lastSubbmittedDME:{process_summery:$rootScope.lmabreviewData.lastSubbmittedDME.process_summery,applicantId:$scope.lmabreviewCurrentDetails.applicantId},mavalidity:[]};for(var mac=0;mac<$rootScope.lmabreviewData.macassement.length;mac++)$scope.outcomesCode=$.grep($scope.outcomesList,function(e){return e.code==$scope.macassement[mac].maoutcomeCode}),$scope.lmabreviewsaveData.macassement.push({ristrictionId:$scope.macassement[mac].ristrictionId,maoutComeId:$scope.outcomesCode[0].outcomeId,maoutcomeCode:$scope.outcomesCode[0].code,classId:$rootScope.lmabreviewData.macassement[mac].classId,lmbAssessmentDetailsId:$rootScope.lmabreviewData.macassement[mac].lmbAssessmentDetailsId});for(var op=0;op<$rootScope.lmabreviewData.operationProvisoList.length;op++)$rootScope.lmabreviewData.operationProvisoList[op].lmboperationalProvisoId||($rootScope.lmabreviewData.operationProvisoList[op].lmboperationalProvisoId=null),$rootScope.lmabreviewData.operationProvisoList[op].operationalProvisoId&&($scope.operationalProvisoId=$rootScope.lmabreviewData.operationProvisoList[op].operationalProvisoId),$rootScope.lmabreviewData.operationProvisoList[op].actionId&&($scope.operationalProvisoId=$rootScope.lmabreviewData.operationProvisoList[op].actionId),$scope.operationProvisoListAdd.push({lmboperationalProvisoId:$rootScope.lmabreviewData.operationProvisoList[op].lmboperationalProvisoId,operationalProvisoId:$scope.operationalProvisoId,operationalprovisoflag:1});""!=$scope.operationProvisoListDel||"0"!=$scope.operationProvisoListDel.length?$scope.lmabreviewsaveData.mac=$scope.operationProvisoListAdd.concat($scope.operationProvisoListDel):$scope.lmabreviewsaveData.mac=$scope.operationProvisoListAdd;for(var fp=0;fp<$rootScope.lmabreviewData.onLoadFollowupProvisoList.length;fp++)""==$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].otherInvDescription&&($rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].otherInvDescription=null),"Once"!=$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].frequencyDescription?$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].followupProvisoDate=null:$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].followupProvisoDate=$filter("date")(new Date($rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].followupProvisoDate),$scope.formats[3]),$scope.onLoadFollowupProvisoListAdd.push({lmbfollowupProvisoId:$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].lmbfollowupProvisoId,followupProvisoTypeId:$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].followupProvisoTypeId,specialityOrInvestigationId:$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].specialityOrInvestigationId,followupProvisoDoneById:$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].followupProvisoDoneById,followupProvisoFrequencyId:$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].followupProvisoFrequencyId,otherInvDescription:$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].otherInvDescription,followupProvisoDate:$rootScope.lmabreviewData.onLoadFollowupProvisoList[fp].followupProvisoDate,followuoprovisoflag:1});""!=$scope.onLoadFollowupProvisoListDel||"0"!=$scope.onLoadFollowupProvisoListDel.length?$scope.lmabreviewsaveData.onLoadFollowupProvisoList=$scope.onLoadFollowupProvisoListAdd.concat($scope.onLoadFollowupProvisoListDel):$scope.lmabreviewsaveData.onLoadFollowupProvisoList=$scope.onLoadFollowupProvisoListAdd;for(var mav=0;mav<$rootScope.lmabreviewData.mavalidity.length;mav++)$scope.lmabreviewsaveData.mavalidity.push({lmbAssessmentDetailsId:$rootScope.lmabreviewData.mavalidity[mav].lmbAssessmentDetailsId,maoutComeId:$rootScope.lmabreviewData.mavalidity[mav].maoutComeId,classId:$rootScope.lmabreviewData.mavalidity[mav].classId,validity:$rootScope.lmabreviewData.mavalidity[mav].validity});$scope.lmabreviewsaveData.changedyn=$scope.lmabreviewcontent.$dirty?"Y":"N",$scope.addOperationalProvisosCheck!=$rootScope.lmabreviewData.operationProvisoList.length&&($scope.lmabreviewsaveData.changedyn="Y"),$scope.followupprovisoCheck!=$rootScope.lmabreviewData.onLoadFollowupProvisoList.length&&($scope.lmabreviewsaveData.changedyn="Y"),"save"==buttonType?$scope.lmabreviewsaveData.saveflag=!1:$scope.lmabreviewsaveData.saveflag=!0,APIS.LMAB_MA_REVIEW_SAVE.data=$scope.lmabreviewsaveData,DataManager.sendRestRequest(null,APIS.LMAB_MA_REVIEW_SAVE,function(response){response.success?(null==response.dataBean||"null"==response.dataBean||""==response.dataBean?$scope.savemessage="LMAB Review Saved Successfully":$scope.savemessage=response.dataBean,"save"==buttonType&&ModalService.openAlert("alert","success",$scope.savemessage,"null","null",function(){$window.location.reload()}),"save_listing"==buttonType&&ModalService.openAlert("alert","success",$scope.savemessage,"null","null",function(){$state.go("inprogressqueue")}),"save_next"==buttonType&&0!=$scope.lmabreviewDetails.length&&ModalService.openAlert("alert","success",$scope.savemessage,"null","null",function(){$scope.updatelmabreviewDetails=[],$scope.nextcheck=0;for(var l=0;l<$scope.lmabreviewDetails.length;l++)1==$scope.lmabreviewDetails[l].selectedQueue&&0==$scope.nextcheck&&($scope.updatelmabreviewDetails.push({selectedQueue:0,visitId:$scope.lmabreviewDetails[l].visitId,applicantId:$scope.lmabreviewDetails[l].applicantId,assessmentId:$scope.lmabreviewDetails[l].assessmentId,userId:$scope.lmabreviewDetails[l].userId,applicationId:$scope.lmabreviewDetails[l].applicationId,ma1color:$scope.lmabreviewDetails[l].ma1color,ma2color:$scope.lmabreviewDetails[l].ma2color,match:$scope.lmabreviewDetails[l].match,licenceNo:$scope.lmabreviewDetails[l].licenceNo,ma1:$scope.lmabreviewDetails[l].ma1,ma1Name:$scope.lmabreviewDetails[l].ma1Name,ma2:$scope.lmabreviewDetails[l].ma2,ma2Name:$scope.lmabreviewDetails[l].ma2Name,applicanName:$scope.lmabreviewDetails[l].applicanName,visitType:$scope.lmabreviewDetails[l].visitType,fitness:$scope.lmabreviewDetails[l].fitness,restriction:$scope.lmabreviewDetails[l].restriction,provisos:$scope.lmabreviewDetails[l].provisos,remarks:$scope.lmabreviewDetails[l].remarks,age:$scope.lmabreviewDetails[l].age}),$scope.nextcheck=1),0==$scope.lmabreviewDetails[l].selectedQueue&&0==$scope.nextcheck&&$scope.updatelmabreviewDetails.push({selectedQueue:0,visitId:$scope.lmabreviewDetails[l].visitId,applicantId:$scope.lmabreviewDetails[l].applicantId,assessmentId:$scope.lmabreviewDetails[l].assessmentId,userId:$scope.lmabreviewDetails[l].userId,applicationId:$scope.lmabreviewDetails[l].applicationId,ma1color:$scope.lmabreviewDetails[l].ma1color,ma2color:$scope.lmabreviewDetails[l].ma2color,match:$scope.lmabreviewDetails[l].match,licenceNo:$scope.lmabreviewDetails[l].licenceNo,ma1:$scope.lmabreviewDetails[l].ma1,ma1Name:$scope.lmabreviewDetails[l].ma1Name,ma2:$scope.lmabreviewDetails[l].ma2,ma2Name:$scope.lmabreviewDetails[l].ma2Name,applicanName:$scope.lmabreviewDetails[l].applicanName,visitType:$scope.lmabreviewDetails[l].visitType,fitness:$scope.lmabreviewDetails[l].fitness,restriction:$scope.lmabreviewDetails[l].restriction,provisos:$scope.lmabreviewDetails[l].provisos,remarks:$scope.lmabreviewDetails[l].remarks,age:$scope.lmabreviewDetails[l].age}),0==$scope.lmabreviewDetails[l].selectedQueue&&1==$scope.nextcheck&&($scope.updatelmabreviewDetails.push({selectedQueue:1,visitId:$scope.lmabreviewDetails[l].visitId,applicantId:$scope.lmabreviewDetails[l].applicantId,assessmentId:$scope.lmabreviewDetails[l].assessmentId,userId:$scope.lmabreviewDetails[l].userId,applicationId:$scope.lmabreviewDetails[l].applicationId,ma1color:$scope.lmabreviewDetails[l].ma1color,ma2color:$scope.lmabreviewDetails[l].ma2color,match:$scope.lmabreviewDetails[l].match,licenceNo:$scope.lmabreviewDetails[l].licenceNo,ma1:$scope.lmabreviewDetails[l].ma1,ma1Name:$scope.lmabreviewDetails[l].ma1Name,ma2:$scope.lmabreviewDetails[l].ma2,ma2Name:$scope.lmabreviewDetails[l].ma2Name,applicanName:$scope.lmabreviewDetails[l].applicanName,visitType:$scope.lmabreviewDetails[l].visitType,fitness:$scope.lmabreviewDetails[l].fitness,restriction:$scope.lmabreviewDetails[l].restriction,provisos:$scope.lmabreviewDetails[l].provisos,remarks:$scope.lmabreviewDetails[l].remarks,age:$scope.lmabreviewDetails[l].age}),$scope.nextcheck=0);sessionStorage.setItem("lmabreviewDetails",JSON.stringify($scope.updatelmabreviewDetails)),$scope.lmabreviewDetails=JSON.parse($window.sessionStorage.getItem("lmabreviewDetails")),$window.location.reload()})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.perviousassementView=function(){$uibModal.open({animation:!0,templateUrl:"app/lmab/partials/MA/operationalprovisospreviousmodal.html",controller:"OperationalprovisospreviousCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={screenName:"LMAB Review",screenData:$rootScope.lmabreviewData.perviousAssementsAvilable};return temp}}})},$scope.lmfcommentsView=function(){ModalService.openAlert("alert","info",$rootScope.lmabreviewData.lmfCommentsAvilable,"null","null")},$scope.refresh=function(){APIS.GET_LMAB_REVIEW_ALERT.data={slotId:$scope.maDetails.slotid,maId:$scope.userInfo.personId,assessmentId:$scope.lmabreviewCurrentDetails.lmbAssessmentId},DataManager.sendRestRequest(null,APIS.GET_LMAB_REVIEW_ALERT,function(response){if(response.success){if(null!=response.dataBean){$scope.lmabcontentDisabled={full_report_btn:!0,hed_btn:!0,attachment:!0,outcome:!0,ristriction:[],operationalprovisos_search_btn:!0,operationalprovisos_delete_btn:!0,followupproviso_add_btn:!0,followupproviso_type_name:!0,followupproviso_search_btn:!0,followupproviso_speciality_investigation_name:!0,followupproviso_doneby_name:!0,followupproviso_frequency_name:!0,followupproviso_other_description:!0,followupproviso_date:!0,followupproviso_edit_btn:!0,followupproviso_delete_btn:!0,remarks_instructions:!0,validity:!0,dme_performance_audit:!0,audit_remarks:!0,save:!0,savenext:!0,savelisting:!0};for(var f=0;f<$rootScope.lmabreviewData.macassement.length;f++)$scope.lmabcontentDisabled.ristriction[f]=!0;ModalService.openAlert("alert","warning",response.dataBean,"null","null")}else{$scope.lmabcontentDisabled={full_report_btn:!1,hed_btn:!1,attachment:!1,outcome:!1,ristriction:[],operationalprovisos_search_btn:!1,operationalprovisos_delete_btn:!1,followupproviso_add_btn:!1,followupproviso_type_name:!1,followupproviso_search_btn:!1,followupproviso_speciality_investigation_name:!1,followupproviso_doneby_name:!1,followupproviso_frequency_name:!1,followupproviso_other_description:!1,followupproviso_date:!1,followupproviso_edit_btn:!1,followupproviso_delete_btn:!1,remarks_instructions:!1,validity:!1,dme_performance_audit:!1,audit_remarks:!1,save:!1,savenext:!1,savelisting:!1};for(var f=0;f<$rootScope.lmabreviewData.macassement.length;f++)"FITWR"==$rootScope.lmabreviewData.macassement[f].maoutcomeCode?$scope.lmabcontentDisabled.ristriction[f]=!1:($scope.macassement[f].ristrictionId=null,$scope.lmabcontentDisabled.ristriction[f]=!0);$scope.outcomeCheck=$.grep($rootScope.lmabreviewData.macassement,function(e){return""!=e.maoutcomeCode}),0!=$scope.outcomeCheck.length?($scope.lmabcontentDisabled.savelisting=!1,$scope.lmabcontentDisabled.savenext=!1):($scope.lmabcontentDisabled.savelisting=!0,$scope.lmabcontentDisabled.savenext=!0)}0!=$scope.lmabreviewDetails.length&&1!=$scope.lmabreviewDetails[$scope.lmabreviewDetails.length-1].selectedQueue||($scope.lmabcontentDisabled.savenext=!0)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.openfullreport=function(){$window.open("#/lmabvettingfullreport")},$scope.lmabdetails=function(){APIS.LMAB_REVIEW_FULL_REPORT.data=$scope.lmabreviewCurrentDetails,DataManager.sendRestRequest(null,APIS.LMAB_REVIEW_FULL_REPORT,function(response){response.success&&($scope.reviewdetails=response.dataBean,console.log($scope.reviewdetails),sessionStorage.setItem("dmeName",$scope.reviewdetails.dmeName),sessionStorage.setItem("dateofExamination",$scope.reviewdetails.subbmittedDate))},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("MAprofileCtrl",["$rootScope","$scope","APIS","DataManager","ResourceManager","ModalService","$filter",function($rootScope,$scope,APIS,DataManager,ASU,ModalService,$filter){if($scope.ASU=ASU,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.MaId=JSON.parse(sessionStorage.getItem("maId")),!$scope.uconfig)return $state.go("login"),!1;$scope.currentDt=new Date,$scope.init=function(){$scope.user={selectedRoles:[]},$scope.selectedSpecialityList=[],$scope.selectedClinics=[],$scope.formats=["dd-MMM-yyyy","dd/MM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dateOptions={startingDay:1,showWeeks:!1},$scope.pastDateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.futureDateOptions={minDate:new Date,startingDay:1,showWeeks:!1},$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.dobopen1=function(){$scope.dobpopup1.opened=!1},$scope.dobpopup1={opened:!1},$scope.apptFromopen1=function(){$scope.apptFrompopup1.opened=!0},$scope.apptFrompopup1={opened:!1},$scope.apptToopen1=function(){$scope.apptTopopup1.opened=!0},$scope.apptTopopup1={opened:!1},$scope.accExpDtopen1=function(){$scope.accExpDtpopup1.opened=!0},$scope.accExpDtpopup1={opened:!1}},$scope.init();var getPostalAddress=function(postalCode,index){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean?($scope.userNewDataObj.person.address[index].line1=response.dataBean.building,$scope.userNewDataObj.person.address[index].line2=response.dataBean.unit):($scope.userNewDataObj.person.address[index].line1=null,$scope.userNewDataObj.person.address[index].line2=null)})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userNewDataObj.person.address[index].line1=null,$scope.userNewDataObj.person.address[index].line2=null)},$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurOfficeNum=!1,$scope.onBlurOfficeNumFn=function(){$scope.onBlurOfficeNum=!0},$scope.duplicateUser={},$scope.duplicateNRIC={},$scope.prevEmail=null,$scope.isEmailExsist=function(){$scope.duplicateUser={},$scope.prevEmail!==$scope.userNewDataObj.person.email&&(APIS.USER_EXSIST.data={email:$scope.userNewDataObj.person.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response}))},$scope.prevnric=null,$scope.isNRICExsist=function(){$scope.duplicateNRIC={},$scope.prevnric!==$scope.userNewDataObj.person.nric&&(APIS.NRIC_EXSIST.data={nric:$scope.userNewDataObj.person.nric},DataManager.sendRestRequest(null,APIS.NRIC_EXSIST,function(response){$scope.duplicateNRIC=response}))};var resetDivFlags=function(){$scope.roleDiv=!0,$scope.personalDiv=!0,$scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1};resetDivFlags();var roleIdsVarStr=null,onRoleChange=function(roleId){roleIdsVarStr=null,resetDivFlags(),roleIdsVarStr=roleId.toString(),null!=roleIdsVarStr&&(roleIdsVarStr.indexOf("6")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("7")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("8")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("12")==-1&&roleIdsVarStr.indexOf("13")==-1||($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("10")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("9")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1),roleIdsVarStr.indexOf("14")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1),roleIdsVarStr.indexOf("11")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1))};$scope.salList=[],$scope.designList=[],$scope.qualList=[],$scope.countryList=[],$scope.nationsList=[],$scope.ectyList=[],$scope.genList=[],$scope.clinicList=[],$scope.specialityList=[];var sporeKey=1;$scope.loadCombos=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.URL+"SAL,DESIGNATION,QUALIFICATION,NATIONS, ECTY, GEN, country,ORGANIZATION",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.designList=response.dataBean.DESIGNATION,$scope.qualList=response.dataBean.QUALIFICATION,$scope.nationsList=response.dataBean.NATIONS,$scope.ectyList=response.dataBean.ECTY,$scope.genList=response.dataBean.GEN,$scope.countryList=response.dataBean.country,angular.forEach($scope.countryList,function(value,key){value.lookUpItemValue==$scope.sporeTxt&&($scope.sporeKey=key)})})}(),$scope.loadClinicsCombo=function(){APIS.GETCLINICSETUPLIST.data={},DataManager.sendRestRequest(null,APIS.GETCLINICSETUPLIST,function(response){response.success?($scope.clinicList=response.dataBean,console.log("clinicList : ",$scope.clinicList)):console.log(response)},$scope.uconfig.token)}(),$scope.loadSpecialityCombo=function(){DataManager.sendRestRequest(null,APIS.ADMIN_GET_USER_SPECIALITIES,function(response){response.success&&($scope.specialityList=response.dataBean,console.log("speciality LIST : ",$scope.specialityList))},$scope.uconfig.token)}(),$scope.getUserDetailsByUserId=function(){$rootScope.showMask(!0),onRoleChange(14),APIS.SINGPASS_GET_PROFILE.data={},APIS.SINGPASS_GET_PROFILE.URL=String.prototype.format.apply(APIS.SINGPASS_GET_PROFILE.tempURL,[$scope.MaId]),DataManager.sendRestRequest(null,APIS.SINGPASS_GET_PROFILE,function(response){response.success&&($scope.userNewDataObj=response.dataBean,console.log("modify userDetails before : ",$scope.userNewDataObj),null!=$scope.userNewDataObj.person.photo&&$("#docBinaryStorageDiv").attr("src","data:image/jpeg;base64,"+$scope.userNewDataObj.person.photo),$scope.prevEmail=$scope.userNewDataObj.person.email,angular.forEach($scope.userNewDataObj.userSpecialitiesSet,function(specialityObj,key){$scope.selectedSpecialityList.push(specialityObj.speciality.specialityId)}),angular.forEach($scope.userNewDataObj.userClinics,function(clinicObj,key){$scope.selectedClinics.push(clinicObj.clinicsId)}),null!=$scope.userNewDataObj.person.dob&&($scope.userNewDataObj.person.dob=new Date($scope.userNewDataObj.person.dob)),null!=$scope.userNewDataObj.person.period_of_appt_from&&($scope.userNewDataObj.person.period_of_appt_from=new Date($scope.userNewDataObj.person.period_of_appt_from)),null!=$scope.userNewDataObj.person.period_of_appt_to&&($scope.userNewDataObj.person.period_of_appt_to=new Date($scope.userNewDataObj.person.period_of_appt_to)),null!=$scope.userNewDataObj.acExpirtDate&&($scope.userNewDataObj.acExpirtDate=new Date($scope.userNewDataObj.acExpirtDate)),null!=$scope.userNewDataObj.person.address&&void 0!=$scope.userNewDataObj.person.address&&console.log("$scope.userNewDataObj.person.address[0]",$scope.userNewDataObj.person.address[0]))},$scope.uconfig.token)}();var configurePostalValLen=function(index){$scope.userNewDataObj.person.address[index].country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope["postalMinLen"+index]=3,$scope["postalMaxLen"+index]=15):($scope["postalMinLen"+index]=6,$scope["postalMaxLen"+index]=6)};$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.userNewDataObj.person.address[0].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isResAddChanged=!0),$scope.userNewDataObj.person.address[0].line1=null,$scope.userNewDataObj.person.address[0].line2=null,configurePostalValLen(0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.userNewDataObj.person.address[1].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),$scope.userNewDataObj.person.address[1].line1=null,$scope.userNewDataObj.person.address[1].line2=null,configurePostalValLen(1))},$scope.onClinicChange=function(){console.log("selected clinics ",$scope.selectedClinics),0==$scope.selectedClinics.length&&($scope.userNewDataObj.person.address[1]={}),APIS.GETCLINICSETUPDATA.URL="admin/clinics/"+$scope.selectedClinics[0],DataManager.sendRestRequest(null,APIS.GETCLINICSETUPDATA,function(response){response.success&&(console.log(response.dataBean),$scope.userNewDataObj.person.address[1]=response.dataBean.clinicAddress,$scope.userNewDataObj.person.address[1].addressType=2)},$scope.uconfig.token)};var upperCaseFirstLetter=function(input){return input.charAt(0).toUpperCase()+input.slice(1)};$scope.saveUserDetails=function(){return $scope.isFrmSubmited=!0,!$scope.frmConfirmProfile.$invalid&&($scope.duplicateUser.errorMessage?(ModalService.openAlert("alert","warning",$scope.duplicateUser.errorMessage+" Please enter another email.",$scope),!1):$scope.duplicateNRIC.errorMessage?(ModalService.openAlert("alert","warning",$scope.duplicateNRIC.errorMessage,$scope),!1):$scope.userNewDataObj.person.period_of_appt_from>$scope.userNewDataObj.person.period_of_appt_to?(ModalService.openAlert("alert","warning","Period of Appointment From Date should be less than To Date",$scope),!1):($scope.userNewDataObj.person.firstName&&($scope.userNewDataObj.person.firstName=upperCaseFirstLetter($scope.userNewDataObj.person.firstName)),$scope.userNewDataObj.person.lastName&&($scope.userNewDataObj.person.lastName=upperCaseFirstLetter($scope.userNewDataObj.person.lastName)),null!=$scope.userNewDataObj.person.dob&&($scope.userNewDataObj.person.dob=$filter("date")($scope.userNewDataObj.person.dob,"yyyy-MM-dd")),null!=$scope.userNewDataObj.acExpirtDate&&($scope.userNewDataObj.acExpirtDate=$filter("date")($scope.userNewDataObj.acExpirtDate,"yyyy-MM-dd")),null!=$scope.userNewDataObj.person.period_of_appt_from&&($scope.userNewDataObj.person.period_of_appt_from=$filter("date")($scope.userNewDataObj.person.period_of_appt_from,"yyyy-MM-dd")),null!=$scope.userNewDataObj.person.period_of_appt_to&&($scope.userNewDataObj.person.period_of_appt_to=$filter("date")($scope.userNewDataObj.person.period_of_appt_to,"yyyy-MM-dd")),null!=$scope.userNewDataObj.userFacilities?$scope.userNewDataObj.userFacilities[0].roles=[]:$scope.userNewDataObj.userFacilities=[{roles:[]}],$scope.userNewDataObj.userSpecialitiesSet=[],$scope.userNewDataObj.userClinics=[],$scope.userNewDataObj.lmeVisitTypes=[],
$scope.userNewDataObj.arVisitType=[],$scope.userNewDataObj.username=$scope.userNewDataObj.person.lastName+" "+$scope.userNewDataObj.person.firstName,angular.forEach($scope.user.selectedRoles,function(roleId,key){$scope.userNewDataObj.userFacilities[0].roles.push({roleId:roleId})}),angular.forEach($scope.selectedSpecialityList,function(specialityId,key){$scope.userNewDataObj.userSpecialitiesSet.push({speciality:{specialityId:specialityId}})}),angular.forEach($scope.selectedClinics,function(clinicId,key){$scope.userNewDataObj.userClinics.push({clinicsId:clinicId})}),$scope.userNewDataObj.person.address.splice(1,1),void updateUserDetails()))};var updateUserDetails=function(){$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.userNewDataObj.person.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),APIS.SINGPASS_CONFIRM_PROFILE.data=$scope.userNewDataObj,DataManager.sendRestRequest(null,APIS.SINGPASS_CONFIRM_PROFILE,function(response){response.success?(ModalService.openAlert("alert","success","Updated Successfully",$scope),$scope.init()):ModalService.openAlert("alert","error","Error in Update",$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token)};$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("OperationalprovisospreviousCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModalInstance","$rootScope","ModalService","modalParam",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope,ModalService,modalParam){$scope.requestScreenName=modalParam.screenName,$scope.perviousAssements=modalParam.screenData,$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app.lmab").controller("QueuedInprogressCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService","$log","CAASConfig","ResourceManager",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService,$log,CAASConfig,regRM){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.maDetails=JSON.parse($window.sessionStorage.getItem("maDetails")),$scope.reverseorderflag=$window.sessionStorage.getItem("reverse"),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.reverse=!1,$scope.tabledata={},$scope.regRM=regRM,$scope.dataBind(),$scope.storearray={}},$scope.dataBind=function(){$scope.tabledatas($scope.reverseorderflag)},$scope.tabledatas=function(reverseflag){null==$scope.maDetails||(APIS.LMAB_LOAD_QUEUE_INPROGESS.data={slotid:$scope.maDetails.slotid,maid:$scope.maDetails.maid,order:reverseflag},DataManager.sendRestRequest(null,APIS.LMAB_LOAD_QUEUE_INPROGESS,function(response){if(response.success){$scope.tabledata=response.dataBean;for(var count=0,i=0;i<$scope.tabledata.length;i++)"Green"==$scope.tabledata[i].match&&count++;$scope.tabledata.length==count?$scope.matching=!1:$scope.matching=!0}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token))},$scope.order=function(){$scope.reverseorderflag=$window.sessionStorage.getItem("reverse"),"N"==$scope.reverseorderflag?(sessionStorage.setItem("reverse","Y"),$scope.tabledatas("Y")):(sessionStorage.setItem("reverse","N"),$scope.tabledatas("N"))},$scope.lmabreviewdetails=function(getdetails,datalenth){$scope.lmabreviewDetails=[],$scope.lmabreviewCurrentApplicant=$.grep($scope.tabledata,function(e){return e.applicantId==getdetails.applicantId});for(var q=0;q<$scope.tabledata.length;q++)$scope.lmabreviewCurrentApplicant[0].applicantId==$scope.tabledata[q].applicantId?$scope.selectedQueue=1:$scope.selectedQueue=0,$scope.lmabreviewDetails.push({selectedQueue:$scope.selectedQueue,visitId:$scope.tabledata[q].visitId,applicantId:$scope.tabledata[q].applicantId,assessmentId:$scope.tabledata[q].assessmentId,userId:$scope.tabledata[q].userId,applicationId:$scope.tabledata[q].applicationId,ma1color:$scope.tabledata[q].ma1color,ma2color:$scope.tabledata[q].ma2color,match:$scope.tabledata[q].match,licenceNo:$scope.tabledata[q].licenceNo,ma1:$scope.tabledata[q].ma1,ma1Name:$scope.tabledata[q].ma1Name,ma2:$scope.tabledata[q].ma2,ma2Name:$scope.tabledata[q].ma2Name,applicanName:$scope.tabledata[q].applicanName,visitType:$scope.tabledata[q].visitType,fitness:$scope.tabledata[q].fitness,restriction:$scope.tabledata[q].restriction,provisos:$scope.tabledata[q].provisos,remarks:$scope.tabledata[q].remarks,age:$scope.tabledata[q].age,inprogressQueueLenth:datalenth});sessionStorage.setItem("lmabreviewDetails",JSON.stringify($scope.lmabreviewDetails)),sessionStorage.setItem("lmfCommentsFlag",!0),$state.go("lmabreview")},$scope.signsubmit=function(){$scope.signandsubmit={slotid:$scope.maDetails.slotid,maid:$scope.userInfo.personId},APIS.LMAB_SIGN_SUBMIT.data=$scope.signandsubmit,DataManager.sendRestRequest(null,APIS.LMAB_SIGN_SUBMIT,function(response){response.success?ModalService.openAlert("alert","success","Sign And Submit Successfully","null","null",function(){sessionStorage.removeItem("maDetails"),$window.location.reload()}):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_SIGN_SUBMIT.URL=tempUrl},$scope.init()}]).filter("orderObjectBy",function(){return function(items,field,reverse){var filtered=[];return angular.forEach(items,function(item){filtered.push(item)}),filtered.sort(function(a,b){return a[field]>b[field]?1:-1}),reverse&&filtered.reverse(),filtered}}),angular.module("app").controller("MAViewscheduleCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","$log","ModalService",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,$log,ModalService){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig"));var months=["January","February","March","April","May","June","July","August","September","October","November","December"];$scope.monthyeartableParameter={month:$filter("date")(new Date,"MM"),year:$filter("date")(new Date,"yyyy"),maId:$scope.userInfo.personId},console.log($scope.monthyeartableParameter),$scope.monthviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.month),"MMMM"),$scope.yearviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.year),"yyyy");var currentMonth=(new Date).getMonth();$scope.nameMonth=months[currentMonth];var previouscount=1,nextcount=1,previousDate=new Date,nextDate=new Date;new Date;$scope.previousMonthYear=function(){nextDate.getMonth()>=11?""==previouscount?(previouscount=1,previousDate=new Date(nextDate.getFullYear()-previouscount,0,1)):(previousDate=new Date(nextDate.getFullYear(),nextDate.getMonth()-previouscount,1),nextcount=""):(""==previouscount?(previouscount=1,previousDate=new Date(nextDate.getFullYear(),nextDate.getMonth()-previouscount,1)):previousDate=new Date(nextDate.getFullYear(),nextDate.getMonth()-previouscount,1),nextcount=""),previouscount++,$scope.monthyeartableParameter={month:$filter("date")(new Date(previousDate),"MM"),year:$filter("date")(new Date(previousDate),"yyyy"),maId:$scope.userInfo.personId},$scope.monthviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.month),"MMMM"),$scope.yearviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.year),"yyyy"),$scope.lambviewschedule();var previousMonth=previousDate.getMonth();$scope.nameMonth=months[previousMonth]},$scope.nextMonthYear=function(){previouscount="",previousDate.getMonth()>=11?""==nextcount?(nextcount=1,nextDate=new Date(previousDate.getFullYear()+nextcount,0,1)):(nextDate=new Date(previousDate.getFullYear(),previousDate.getMonth()+nextcount,1),previouscount=""):(""==nextcount?(nextcount=1,nextDate=new Date(previousDate.getFullYear(),previousDate.getMonth()+nextcount,1)):nextDate=new Date(previousDate.getFullYear(),previousDate.getMonth()+nextcount,1),previouscount=""),nextcount++,$scope.monthyeartableParameter={month:$filter("date")(new Date(nextDate),"MM"),year:$filter("date")(new Date(nextDate),"yyyy"),maId:$scope.userInfo.personId},$scope.monthviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.month),"MMMM"),$scope.yearviewFormat=$filter("date")(new Date($scope.monthyeartableParameter.year),"yyyy"),$scope.lambviewschedule();var nextMonth=nextDate.getMonth();$scope.nameMonth=months[nextMonth]},$scope.viewSchedule=[],$scope.dataBind(),$scope.optionassignmaAvaliable=[],$scope.assignmaNotavaliable={},$scope.viewdatetimeSchedule=[],$scope.actionMA=[]},$scope.dataBind=function(){$scope.lambviewschedule()},$scope.lambviewschedule=function(){APIS.LMABA_MAVIEWSLOTS.data=$scope.monthyeartableParameter,DataManager.sendRestRequest(null,APIS.LMABA_MAVIEWSLOTS,function(response){if(response.success){$scope.viewSchedule=response.dataBean,$scope.viewdatetimeSchedule=[];for(var a=0;a<$scope.viewSchedule.length;a++){for(var b=0;b<$scope.viewSchedule[a].slotDetails.length;b++)$scope.viewdatetimeSchedule.push($scope.viewSchedule[a].slotDetails[b]);console.log(response.success)}$scope.length=$scope.viewdatetimeSchedule.length}else console.log(response.errorMessage)},$scope.uconfig.token)},$scope.radio_checked=function(slotAssignedId,slotId){$scope.actionMA=[{slotAssaignedId:slotAssignedId,slotId:slotId,newMaId:$scope.uconfig.userSeqId}]},$scope.checkbox_checked=function(slotAssignedId,slotId){var slot_Info={slotAssaignedId:slotAssignedId,slotId:slotId,newMaId:$scope.uconfig.userSeqId};$scope.actionMA.push(slot_Info)},$scope.ma_accept=function(actionMA){$scope.submitdata=actionMA,console.log($scope.submitdata),APIS.LAMP_MAACCEPT.data=$scope.submitdata,DataManager.sendRestRequest(null,APIS.LAMP_MAACCEPT,function(response){response.success?($scope.acceptMA=response.dataBean,$scope.lambviewschedule(),ModalService.openAlert("alert","Viewschedule","Accepted successfully","null","null")):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.ma_cancel=function(actionMA){$scope.submitdata=actionMA,$scope.macanceldata={slotAssaignedId:$scope.submitdata[0].slotAssaignedId},APIS.LAMP_MACANCEL.data=$scope.macanceldata,DataManager.sendRestRequest(null,APIS.LAMP_MACANCEL,function(response){response.success?($scope.cancelMA=response.dataBean,$scope.lambviewschedule(),ModalService.openAlert("alert","Viewschedule","Canceled successfully","null","null")):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("MAheaderCtrl",["$scope","$state","APIS","$location","$window","DataManager","$uibModal","ModalService","switchRoles","$interval",function($scope,$state,APIS,$location,$window,DataManager,$uibModal,ModalService,switchRoles,$interval){$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.roles=$scope.userConfig.userFacilities[0].roles,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.msgcount=JSON.parse(sessionStorage.getItem("msgcount")),$scope.menuClass=function(path){return $location.path().substr(0,path.length)===path?"top-nav-active":""},$scope.userInfo.photo&&angular.element("#MAprofilePic").attr("src","data:image/jpeg;base64,"+$scope.userInfo.photo),$scope.swichRole=function(param){sessionStorage.setItem("currentRole",JSON.stringify(param)),switchRoles.go(param.roleName)},$scope.viewProfileTemplate=function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/common/partials/Profile_Model_Form.html",controller:"ProfileModelCtrl",size:"lg",resolve:{}},$scope.uconfig.token)},$scope.logout=function(){$window.sessionStorage.clear(),$state.go("login")},$interval(function(){$scope.msgcount=JSON.parse(sessionStorage.getItem("msgcount"))},1e3)}]),angular.module("app").controller("MAhomeCtrl",["$scope","$state","APIS","$location","DataManager","$window","$rootElement","$rootScope","CAASConfig","ResourceManager",function($scope,$state,APIS,$location,DataManager,$window,$rootElement,$rootScope,CAASConfig,regRM){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.worklistData=[],$scope.regRM=regRM,$scope.notificationtData=[],$scope.boardSession=[],$scope.maDetails={},$scope.dataBind(),$scope.notificationdata()},$scope.menuClass=function(path){return $location.path().substr(0,path.length)===path?"top-nav-active":""},$scope.dataBind=function(){$scope.loadNotification(),$scope.loadboardSessions()},$scope.passUserSeqId=function(){var url=null,tempUrl=null;tempUrl=APIS.LMAB_PASS_SEQ_ID_FOR_HOME.URL,url=tempUrl+"/"+$scope.uconfig.userSeqId,APIS.LMAB_PASS_SEQ_ID_FOR_HOME.URL=url,DataManager.sendRestRequest(null,APIS.LMAB_PASS_SEQ_ID_FOR_HOME,function(response){response.success||console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LMAB_PASS_SEQ_ID_FOR_HOME.URL=tempUrl},$scope.loadWorklist=function(){DataManager.sendRestRequest(null,APIS.GET_LMABWORKLIST,function(response){response.success?$scope.worklistData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.loadNotification=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_LMABNOTIFICATION.URL,url=tempUrl+"/"+$scope.uconfig.userSeqId+"/"+$scope.roleid,APIS.GET_LMABNOTIFICATION.URL=url,DataManager.sendRestRequest(null,APIS.GET_LMABNOTIFICATION,function(response){response.success?$scope.notificationtData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_LMABNOTIFICATION.URL=tempUrl},$scope.loadboardSessions=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_LMABBOARDSESSIONS.URL,url=tempUrl+"/"+$scope.uconfig.userSeqId,APIS.GET_LMABBOARDSESSIONS.URL=url,DataManager.sendRestRequest(null,APIS.GET_LMABBOARDSESSIONS,function(response){response.success?$scope.boardSession=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_LMABBOARDSESSIONS.URL=tempUrl,sessionStorage.setItem("reverse","N")},$scope.viewMsg=function(notificationsId){$scope.notificationsId=notificationsId,APIS.LMAB_NOTIFICATIONSCOUNT.URL="/lmab/updateRemovedNotfi/"+$scope.notificationsId,DataManager.sendRestRequest(null,APIS.LMAB_NOTIFICATIONSCOUNT,function(response){response.success?($scope.responsedata=response.dataBean,$scope.notificationdata()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.passSlotId=function(getslotid){sessionStorage.removeItem("lmabreviewDetails"),$scope.maDetails={slotid:getslotid,maid:$scope.userInfo.personId,reverseOrder:!1},sessionStorage.setItem("maDetails",JSON.stringify($scope.maDetails)),$state.go("inprogressqueue")},$scope.change_maviewsate=function(){$state.go("maviewschedule")},$scope.deleteRow=function(notiId){$scope.delete_notifications=notiId,APIS.CAMB_HOME_NOTIFI_DELETE.data={notificationsId:$scope.delete_notifications},DataManager.sendRestRequest(null,APIS.CAMB_HOME_NOTIFI_DELETE,function(response){response.success?($scope.homeNotiDel=response.dataBean,$scope.loadNotification()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.notificationdata=function(){APIS.CAMB_NOTI_ALERT.URL="worklist/getNotiAndBrodCount/"+$scope.userInfo.personId+"/"+$scope.currentRole.roleId,DataManager.sendRestRequest(null,APIS.CAMB_NOTI_ALERT,function(response){response.success?($scope.pageData=response.dataBean,sessionStorage.setItem("msgcount",JSON.stringify($scope.pageData))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("RoleCtrl",["$scope","$state","APIS",function($scope,$state,APIS){$scope.init=function(){},$scope.init()}]),angular.module("app.lmab").config(function($stateProvider){$stateProvider.state("createslots",{url:"/createslots",controller:"CreateslotsCtrl",templateUrl:"app/lmab/partials/LMF/createslots.html"}).state("viewschedule",{url:"/viewschedule",controller:"ViewscheduleCtrl",templateUrl:"app/lmab/partials/LMF/viewschedule.html"}).state("popupassignmaCtrl",{url:"/popupassignmaCtrl",controller:"popupassignmaCtrl",templateUrl:"app/lmab/partials/LMF/viewschedule.html"}).state("masterq",{url:"/masterq",controller:"MasterqCtrl",templateUrl:"app/lmab/partials/LMF/masterq.html"}).state("boardq",{url:"/boardq",controller:"BoardqCtrl",templateUrl:"app/lmab/partials/LMF/boardq.html"}).state("inprogress",{url:"/inprogress",controller:"InprogressCtrl",templateUrl:"app/lmab/partials/LMF/inprogress.html"}).state("postboard",{url:"/postboard",templateUrl:"app/lmab/partials/LMF/postboard.html"}).state("lmabhistory",{url:"/lmabhistory",controller:"LMABhistoryCtrl",templateUrl:"app/lmab/partials/LMF/LMABhistory.html"}).state("mahome",{url:"/mahome",controller:"MAhomeCtrl",templateUrl:"app/lmab/partials/MAhome.html"}).state("lmfhome",{url:"/lmfhome",controller:"LMFhomeCtrl",templateUrl:"app/lmab/partials/LMFhome.html"}).state("dmedetails",{url:"/dmedetails",controller:"DMEdetailsCtrl",templateUrl:"app/lmab/partials/LMF/dmedetails.html"}).state("inprogressqueue",{url:"/inprogressqueue",controller:"QueuedInprogressCtrl",templateUrl:"app/lmab/partials/MA/inprogressqueue.html"}).state("postboardmodalpopup",{url:"/postboardmodalpopup",controller:"PostboardCtrl",templateUrl:"app/lmab/partials/setting/postboardmodalpopup.html"}).state("maviewschedule",{url:"/maviewschedule",controller:"MAViewscheduleCtrl",templateUrl:"app/lmab/partials/MAviewschedule.html"}).state("lmabreview",{url:"/lmabreview",controller:"LMABreviewCtrl",templateUrl:"app/lmab/partials/MA/LMABreview.html"}).state("maheader",{url:"/maheader",controller:"MAheaderCtrl",templateUrl:"app/lmab/partials/MA/MAhome.html"}).state("lmfheader",{url:"/lmfheader",controller:"LMFheaderCtrl",templateUrl:"app/lmab/partials/LMFheader.html"}).state("lmabviewscheduleprint",{url:"/viewscheduleprint",controller:"ViewschedulePrintCtrl",templateUrl:"app/lmab/partials/LMF/viewscheduleprint.html"}).state("lmabhistorypdf",{url:"/lmabhistorypdfview",controller:"LMABhistoryPdfCtrl",templateUrl:"app/lmab/partials/LMF/lmabhistorypdf.html"}).state("lmabvettingfullreport",{url:"/lmabvettingfullreport",controller:"VettingfullreportCtrl",templateUrl:"app/lmab/partials/LMF/vettingfullreport.html"}).state("lmabhistorybatch",{url:"/lmabhistorybatch",controller:"LMABhistorybatchCtrl",templateUrl:"app/lmab/partials/LMF/lmabhistorygeneralbatch.html"}).state("maprofile",{url:"/maprofile",controller:"MAprofileCtrl",templateUrl:"app/lmab/partials/MA/maprofile.html"})}).run(function($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams}),angular.module("app.lme").controller("AbortedCtrl",["$scope","$state","APIS","DataManager","$window","$filter","ModalService",function($scope,$state,APIS,DataManager,$window,$filter,ModalService){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}function getDayClass(data){var date=data.date,mode=data.mode;if("day"===mode)for(var dayToCheck=new Date(date).setHours(0,0,0,0),i=0;i<$scope.events.length;i++){var currentDay=new Date($scope.events[i].date).setHours(0,0,0,0);if(dayToCheck===currentDay)return $scope.events[i].status}return""}$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.keys={idno:"",applicantname:"",startDate:"",abortedDate:""},$scope.startDate=null,$scope.abortedDate=null,$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas(),$scope.$watch("startDate",function(newVal,oldVal){newVal&&($scope.keys.startDate=$filter("date")(newVal,"yyyy-MM-dd"))}),$scope.$watch("abortedDate\t",function(newVal,oldVal){newVal&&($scope.keys.abortedDate=$filter("date")(newVal,"yyyy-MM-dd"))})},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.inlineOptions={customClass:getDayClass,minDate:new Date,showWeeks:!0},$scope.dateOptions={dateDisabled:disabled,formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){APIS.LME_ABORTED.data=$scope.keys,DataManager.sendRestRequest(null,APIS.LME_ABORTED,function(response){response.success&&response.dataBean.length>0&&($scope.mrfilteredStores=response.dataBean,$scope.select($scope.currentPage))},$scope.uconfig.token)},$scope.toggleMin=function(){$scope.inlineOptions.minDate=$scope.inlineOptions.minDate?null:new Date,$scope.dateOptions.minDate=$scope.inlineOptions.minDate},$scope.toggleMin(),$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.setDate=function(year,month,day){$scope.dt=new Date(year,month,day)},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.altInputFormats=["M!/d!/yyyy"],$scope.popup1={opened:!1},$scope.popup2={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+1),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.tabledatas=function(){APIS.LME_ABORTED.data=$scope.keys,DataManager.sendRestRequest(null,APIS.LME_ABORTED,function(response){response.success?($scope.mrfilteredStores=response.dataBean,$scope.$emit("abortedCount",{count:response.dataBean.length}),$scope.select($scope.currentPage)):console.log(response)},$scope.uconfig.token)},$scope.dateFormate=function(param){return new Date(param)},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.init()}]),angular.module("app.lme").controller("AdddiagnosisCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModalInstance","$rootScope","ModalService","modalParam","$timeout",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope,ModalService,modalParam,$timeout){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),console.log($scope.visitDetails),$scope.visitType=$scope.visitDetails.visitType,console.log($scope.visitType),$scope.addpopupdiagnosis=[],$scope.detectedlme="N",$scope.requestScreenName=modalParam.screenName,$scope.existdiagnosisList=modalParam.existingDiagnosis,$scope.diagnosisList=[],$scope.addDiagnosisData=[],$scope.dateOptions={formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.findcodedescription=null,$scope.dataBind()},$scope.dataBind=function(){"DMF"==$scope.visitType||"PR"==$scope.visitType?$scope.arRec=!0:$scope.arRec=!1},$scope.datepickerOpen=function($event,diagnosisData){$event.preventDefault(),$event.stopPropagation(),diagnosisData.opened=!0},$scope.cancel=function(){for(var c=0;c<$scope.diagnosisList.length;c++)$scope.diagnosisList.splice(c,1);$uibModalInstance.dismiss("cancel")},$scope.diagnosisCodeDescriptionFetch=function(param,checkdata){if(param.length>2)return checkdata?$scope.checkedvalue=!0:$scope.checkedvalue=!1,APIS.GET_LME_DIAGNOSIS.data={description:param,favourite:$scope.checkedvalue},$scope.icdresult=DataManager.autoSearch(null,APIS.GET_LME_DIAGNOSIS,$scope.uconfig.token),$scope.icdresult},$scope.existdiagnosisCheckpoint=[],$scope.addDiagnosisGridPopup=function(data){if($scope.addDiagnosisData=$filter("filter")($scope.icdresult.$$state.value,{code:data.split(" ")[0]}),$scope.newdiagnosisList=[],$scope.newdiagnosisCheckpoint=[],$rootScope.recommendationData&&0!=$rootScope.recommendationData.diagnosisDTOList.length&&("PR"!=$scope.visitType||"DMF"!=$scope.visitType))for(var i=0;i<$rootScope.recommendationData.diagnosisDTOList.length;i++)$scope.existdiagnosisCheckpoint.push($rootScope.recommendationData.diagnosisDTOList[i].icdCode.replace(/ /g,""));if(0!=$rootScope.dmfClearanceRecommendationData.existingApplicantDiagnosis.length&&("PR"==$scope.visitType||"DMF"==$scope.visitType))for(var i=0;i<$rootScope.dmfClearanceRecommendationData.existingApplicantDiagnosis.length;i++)$scope.existdiagnosisCheckpoint.push($rootScope.dmfClearanceRecommendationData.existingApplicantDiagnosis[i].icdCode.replace(/ /g,""));return $scope.existdiagnosisCheckpoint.indexOf(data.split(" ")[0])>0||0==$scope.existdiagnosisCheckpoint.indexOf(data.split(" ")[0])?(ModalService.openAlert("alert","Alert","Diagnosis already Added","null","null"),!1):void(null!==$scope.existdiagnosisList&&"0"!=$scope.existdiagnosisList.length?($scope.newdiagnosisCheckpoint=$.grep($scope.diagnosisList,function(e){return e.icdCode==$scope.addDiagnosisData[0].code}),$scope.existdiagnosisCheckpoint=$.grep($scope.existdiagnosisList,function(e){return e.icdCode==$scope.addDiagnosisData[0].code}),$scope.existdiagnosisCheckpoint.push(data.split(" ")[0]),0!=$scope.newdiagnosisCheckpoint.length&&0!=$scope.existdiagnosisCheckpoint.length?ModalService.openAlert("confirm","warning","Diagnosis already exist, do you want to continue?",$scope,"adddiagnosis",function(){$scope.$on("adddiagnosisOk",function(){$scope.newdiagnosisList.push({processesId:null,diagnosisId:$scope.addDiagnosisData[0].icdId,icdCode:$scope.addDiagnosisData[0].code,description:$scope.addDiagnosisData[0].description,dmeDetectedYN:"N",detectedDate:""}),$scope.diagnosisList=$scope.newdiagnosisList.concat($scope.diagnosisList)}),$scope.$on("adddiagnosiscancel",function(){$scope.newdiagnosisList=[],$uibModalInstance.closed})}):($scope.diagnosisList.push({processesId:null,diagnosisId:$scope.addDiagnosisData[0].icdId,icdCode:$scope.addDiagnosisData[0].code,description:$scope.addDiagnosisData[0].description,dmeDetectedYN:"N",detectedDate:""}),$scope.findcodedescription="")):($scope.diagnosisList.push({processesId:null,diagnosisId:$scope.addDiagnosisData[0].icdId,icdCode:$scope.addDiagnosisData[0].code,description:$scope.addDiagnosisData[0].description,dmeDetectedYN:"N",detectedDate:""}),$scope.existdiagnosisCheckpoint.push(data.split(" ")[0]),$scope.findcodedescription=""))},$scope.addDiagnosisGrid=function(){if($scope.frmSubmitted=!0,$scope.form.$invalid)return $scope.frmInvalid=!0,!1;$scope.frmInvalid=!1,$scope.frmSubmit=!1,$scope.frmInvalid=!1;for(var d=0;d<$scope.diagnosisList.length;d++)""!=$scope.diagnosisList[d].detectedDate&&($scope.diagnosisList[d].detectedDate=$filter("date")(new Date($scope.diagnosisList[d].detectedDate),$scope.formats[3])),delete $scope.diagnosisList[d].opened;"Analysis Diagnosis"==$scope.requestScreenName&&($rootScope.dmfClearanceRecommendationData.existingApplicantDiagnosis=$scope.existdiagnosisList.concat($scope.diagnosisList)),"Recommendation Diagnosis"==$scope.requestScreenName&&(null!==$scope.existdiagnosisList&&"0"!=$scope.existdiagnosisList.length?$rootScope.recommendationData.diagnosisDTOList=$scope.existdiagnosisList.concat($scope.diagnosisList):$rootScope.recommendationData.diagnosisDTOList=$scope.diagnosisList),$uibModalInstance.dismiss("cancel")},$scope.removeDiagnosis=function(index,removeFrom){$scope.gridindex=index,$scope.removeDec=removeFrom,$scope.warningConfirmed=!0,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"remdiag",function(){$scope.$on("remdiagOk",function(){1==$scope.warningConfirmed&&("newdiagnosis"==$scope.removeDec&&($scope.diagnosisList.splice($scope.gridindex,1),$scope.existdiagnosisCheckpoint.splice($scope.gridindex,1)),"existdiagnosis"==$scope.removeDec&&($scope.existdiagnosisList.splice($scope.gridindex,1),$scope.existdiagnosisCheckpoint.splice($scope.gridindex,1),0==$scope.existdiagnosisList.length&&($scope.existdiagnosisList=[]))),$scope.warningConfirmed=!1}),$scope.$on("remdiagcancel",function(){$scope.newdiagnosisList=[],$uibModalInstance.closed})})},$scope.init()}]),angular.module("app.lme").controller("AnalysisCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$window.sessionStorage.setItem("Dmepagename","recommentation"),$window.sessionStorage.setItem("analysispage","analysis"),$scope.lmeupdatecheck=JSON.parse($window.sessionStorage.getItem("LME_Updatecheck")),$scope.visitId=$scope.visitInfo.visitId,$scope.visittype=$scope.visitInfo.visitType,$scope.applicantId=$scope.visitInfo.applicantId,$scope.init=function(){$scope.followupprovisoList=[],$scope.measureFollowData=[],$scope.followupprovisoIndex="",$scope.arsavecheck=!0,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:null,minDate:new Date,startingDay:1},$scope.formats=["dd/MM/yyyy","MMM yyyy","dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.recommendcheck={checked:!1},$scope.ristrictionDisabled=[],$scope.dmfClearanceRecommendationFetch(),$scope.dataBind()},$scope.dataBind=function(){"DMF"==$scope.visittype&&($scope.headinglabel="Aeromedical Review - DMF Clearance",$scope.visittypecheck=!1,$scope.savemessage="Saved Successfully"),"PR"==$scope.visittype&&($scope.headinglabel="Aeromedical Review - Proviso",$scope.visittypecheck=!0,$scope.savemessage="Saved Successfully"),$scope.dmfClearanceRecommendationFetch(),$scope.measurefollowLoadCombo(),$scope.getUploadedDocument(),$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1}),$scope.getDrugSearch(),$scope.getDrugDosageCombo(),$scope.getDrugFrequencyCombo()},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.dmfClearanceRecommendationFetch=function(){
var url=null,tempUrl=null;tempUrl=APIS.LME_DMF_CLEARANCE_FETCH.URL,url=tempUrl+"/"+$scope.visitId+"/"+$scope.applicantId,APIS.LME_DMF_CLEARANCE_FETCH.URL=url,DataManager.sendRestRequest(null,APIS.LME_DMF_CLEARANCE_FETCH,function(response){if(response.success){$rootScope.dmfClearanceRecommendationData=response.dataBean,null!=$rootScope.dmfClearanceRecommendationData.arRecommendationId&&($scope.arsavecheck=!1),$scope.outComeDetails=[];for(var mac=0;mac<$rootScope.dmfClearanceRecommendationData.mac.length;mac++)$scope.outComeDetails=$.grep($rootScope.dmfClearanceRecommendationData.outCome,function(e){return e.actionId==$rootScope.dmfClearanceRecommendationData.mac[mac].selected_outCome_Id}),0==$scope.outComeDetails.length?null==$rootScope.dmfClearanceRecommendationData.mac[mac].outCome||""==$rootScope.dmfClearanceRecommendationData.mac[mac].outCome?$rootScope.dmfClearanceRecommendationData.mac[mac].outCome="":$rootScope.dmfClearanceRecommendationData.mac[mac].outCome=$rootScope.dmfClearanceRecommendationData.outCome[0].code:$rootScope.dmfClearanceRecommendationData.mac[mac].outCome=$scope.outComeDetails[0].code,"FITWR"==$rootScope.dmfClearanceRecommendationData.mac[mac].outCome?$scope.ristrictionDisabled[mac]=!1:($scope.dmfClearanceRecommendationData.mac[mac].selected_restriction_Id=null,$scope.ristrictionDisabled[mac]=!0);$scope.restrictionsFetch()}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_DMF_CLEARANCE_FETCH.URL=tempUrl},$scope.recommendClick=function(){$scope.recommendcheck.checked===!0?$scope.visittypecheck=!1:$scope.visittypecheck=!0},$scope.addDiagnosis=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/adddiagnosismodal.html",controller:"AdddiagnosisCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={screenName:"Analysis Diagnosis",existingDiagnosis:$rootScope.dmfClearanceRecommendationData.existingApplicantDiagnosis};return temp}}})},$scope.getDrugSearch=function(){DataManager.sendRestRequest(null,APIS.GET_DRUGS_COMBO,function(response){response.success?$scope.drugsData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.addDrugs=function(data){$rootScope.dmfClearanceRecommendationData.existingARDrugDosage.push({drug_Dosage_Id:data.drugId,drug_name:data.drugName,dosage:"",frequency:""}),$scope.selectedDrug=""},$scope.removeDrugs=function(index){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removedrugs",function(){$scope.$on("removedrugsOk",function(){$rootScope.dmfClearanceRecommendationData.existingARDrugDosage.splice(index,1)}),$scope.$on("removedrugscancel",function(){$uibModalInstance.closed})})},$scope.getDrugDosageCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGDOSAGE"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?$scope.drugDosageList=response.dataBean:$log.error("Drug Dosage: "+response.errorMessage)},$scope.uconfig.token)},$scope.getDrugFrequencyCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGFREQ"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?$scope.drugFrequencyList=response.dataBean:$log.error("Drug Dosage: "+response.errorMessage)},$scope.uconfig.token)},$scope.outcomeChange=function(outcomeCode,index){"FITWR"===outcomeCode||null===outcomeCode?$scope.ristrictionDisabled[index]=!1:($rootScope.dmfClearanceRecommendationData.mac[index].selected_restriction_Id=null,$scope.ristrictionDisabled[index]=!0)},$scope.restrictionsFetch=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_CRAR,function(response){if(response.success){$scope.restrictionDetails=[],$scope.restrictionsArray=response.dataBean.restrictions,angular.forEach($scope.restrictionsArray,function(value,key){$rootScope.dmfClearanceRecommendationData.restriction[key]={actionId:"",actionName:"",code:""},$rootScope.dmfClearanceRecommendationData.restriction[key].actionId=$scope.restrictionsArray[key].restrictionsId,$rootScope.dmfClearanceRecommendationData.restriction[key].actionName=$scope.restrictionsArray[key].restriction,$rootScope.dmfClearanceRecommendationData.restriction[key].code=$scope.restrictionsArray[key].classCode});for(var mac=0;mac<$rootScope.dmfClearanceRecommendationData.mac.length;mac++)$scope.restrictionDetails=$.grep($rootScope.dmfClearanceRecommendationData.restriction,function(e){return e.actionId==$rootScope.dmfClearanceRecommendationData.mac[mac].selected_restriction_Id}),$rootScope.dmfClearanceRecommendationData.mac[mac].selected_restriction_Id=$scope.restrictionDetails[0].actionId}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupProvisoChange=function(){$scope.followupProvisoSpeciailityInvestigationList=[]},$scope.followupProvisoSpeciailityInvestigationChange=function(){$scope.followupprovisoList.otherInvestigation=""},$scope.followupProvisoSpeciailityInvestigationFetch=function(){$scope.type_code=$.grep($rootScope.dmfClearanceRecommendationData.followupProvisoType,function(e){return e.actionName==$scope.followupprovisoList.type_name}),$scope.followupProvisoSpeciailityInvestigationList=[];var url=null,tempUrl=null;tempUrl=APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL,url=tempUrl+"/"+$scope.type_code[0].code,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL=url,DataManager.sendRestRequest(null,APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION,function(response){response.success?($scope.followupProvisoSpeciailityInvestigationList=response.dataBean,$scope.followupProvisoSpeciailityInvestigationList.push({actionName:"Others in Investigation"}),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex||($scope.followupprovisoList.speciality_investigation_name=$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].speciality_investigation_name,$scope.followupprovisoList.otherInvestigation=$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].otherInvestigation)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION.URL=tempUrl},$scope.addOperationalProvisos=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/operationalprovisosmodal.html",controller:"OperationalprovisosCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={screenName:"LME Analysis",existingOperationalprovisos:$rootScope.dmfClearanceRecommendationData.existingOpertionalproviso};return temp}}})},$scope.operationalprovisosRemove=function(index){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeoperationalprovisos",function(){$scope.$on("removeoperationalprovisosOk",function(){$rootScope.dmfClearanceRecommendationData.existingOpertionalproviso.splice(index,1)}),$scope.$on("removeoperationalprovisoscancel",function(){$uibModalInstance.closed})})},$scope.followupprovisosAdd=function(){$scope.existtype=$.grep($rootScope.dmfClearanceRecommendationData.existingFollowupProviso,function(e){return e.type_name==$scope.followupprovisoList.type_name}),$scope.existspeciailityinvestigation=$.grep($rootScope.dmfClearanceRecommendationData.existingFollowupProviso,function(e){return e.speciality_investigation_name==$scope.followupprovisoList.speciality_investigation_name}),$scope.existdoneby=$.grep($rootScope.dmfClearanceRecommendationData.existingFollowupProviso,function(e){return e.doneby_name==$scope.followupprovisoList.doneby_name}),$scope.existfrequency=$.grep($rootScope.dmfClearanceRecommendationData.existingFollowupProviso,function(e){return e.frequency_name==$scope.followupprovisoList.frequency_name}),$scope.existfollowupDate=$.grep($rootScope.dmfClearanceRecommendationData.existingFollowupProviso,function(e){return e.followupDate==$scope.followupprovisoList.followupDate}),0!=$scope.existtype.length&&0!=$scope.existspeciailityinvestigation.length&&0!=$scope.existdoneby.length&&0!=$scope.existfrequency&&0!=$scope.existfollowupDate||($scope.type=$.grep($rootScope.dmfClearanceRecommendationData.followupProvisoType,function(e){return e.actionName==$scope.followupprovisoList.type_name}),$scope.speciailityinvestigation=$.grep($scope.followupProvisoSpeciailityInvestigationList,function(e){return e.actionName==$scope.followupprovisoList.speciality_investigation_name}),$scope.doneby=$.grep($rootScope.dmfClearanceRecommendationData.doneBy,function(e){return e.actionName==$scope.followupprovisoList.doneby_name}),$scope.frequency=$.grep($rootScope.dmfClearanceRecommendationData.frequency,function(e){return e.actionName==$scope.followupprovisoList.frequency_name}),$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.followupDate),$scope.formats[3]),""==$scope.followupprovisoIndex&&"0"!=$scope.followupprovisoIndex?(""==$scope.followupprovisoList.followupDate||"Invalid Date"==$scope.followupprovisoList.followupDate||"Once"!=$scope.followupprovisoList.frequency_name?$scope.followupDate=null:$scope.followupDate=$filter("date")(new Date($scope.followupprovisoList.followupDate),$scope.formats[3]),$rootScope.dmfClearanceRecommendationData.existingFollowupProviso.push({type_id:$scope.type[0].actionId,type_name:$scope.type[0].actionName,speciality_investigation_id:$scope.speciailityinvestigation[0].actionId,speciality_investigation_name:$scope.speciailityinvestigation[0].actionName,doneby_id:$scope.doneby[0].actionId,doneby_name:$scope.doneby[0].actionName,otherInvestigation:$scope.followupprovisoList.otherInvestigation,frequency_id:$scope.frequency[0].actionId,frequency_name:$scope.frequency[0].actionName,followupDate:$scope.followupDate}),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvestigation="",$scope.followupprovisoList.followupDate=""):($rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].type_id=$scope.type[0].actionId,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].type_name=$scope.type[0].actionName,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].speciality_investigation_id=$scope.speciailityinvestigation[0].actionId,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].speciality_investigation_name=$scope.speciailityinvestigation[0].actionName,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].doneby_id=$scope.doneby[0].actionId,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].doneby_name=$scope.doneby[0].actionName,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].otherInvestigation=$scope.followupprovisoList.otherInvestigation,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].frequency_id=$scope.frequency[0].actionId,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].frequency_name=$scope.frequency[0].actionName,$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[$scope.followupprovisoIndex].followupDate=new Date($scope.followupDate),$scope.followupprovisoList.type_name="",$scope.followupprovisoList.speciality_investigation_name="",$scope.followupprovisoList.doneby_name="",$scope.followupprovisoList.frequency_name="",$scope.followupprovisoList.otherInvestigation="",$scope.followupDate="",$scope.followupprovisoIndex=""))},$scope.followupprovisosEdit=function(index){$scope.followupprovisoList.type_name=$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[index].type_name,$scope.followupProvisoSpeciailityInvestigationFetch(),$scope.followupprovisoList.doneby_name=$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[index].doneby_name,$scope.followupprovisoList.frequency_name=$rootScope.dmfClearanceRecommendationData.existingFollowupProviso[index].frequency_name,$scope.followupprovisoList.followupDate=new Date($rootScope.dmfClearanceRecommendationData.existingFollowupProviso[index].followupDate),$scope.followupprovisoIndex=index},$scope.followupprovisosRemove=function(index){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removefollowupprovisos",function(){$scope.$on("removefollowupprovisosOk",function(){$rootScope.dmfClearanceRecommendationData.existingFollowupProviso.splice(index,1)}),$scope.$on("removefollowupprovisoscancel",function(){$uibModalInstance.closed})})},$scope.dmfClearanceRecommendationSave=function(){$rootScope.dmfClearanceRecommendationData.visit_Id=$scope.visitId,$rootScope.dmfClearanceRecommendationData.applicant_id=$scope.applicantId;for(var m=0;m<$rootScope.dmfClearanceRecommendationData.mac.length;m++)$scope.findoutcomes=$.grep($rootScope.dmfClearanceRecommendationData.outCome,function(e){return e.code==$rootScope.dmfClearanceRecommendationData.mac[m].outCome}),0!=$scope.findoutcomes.length&&($rootScope.dmfClearanceRecommendationData.mac[m].selected_outCome_Id=$scope.findoutcomes[0].actionId),delete $rootScope.dmfClearanceRecommendationData.mac[m].outCome,delete $rootScope.dmfClearanceRecommendationData.mac[m].restriction;APIS.LME_DMF_CLEARANCE_SAVE.data=$rootScope.dmfClearanceRecommendationData,DataManager.sendRestRequest(null,APIS.LME_DMF_CLEARANCE_SAVE,function(response){response.success?(ModalService.openAlert("alert","Recommendation",$scope.savemessage,"null","null",function(){$window.location.reload()}),$scope.arsavecheck=!1):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"analdmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})})}else $scope.dmfdoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"analdmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.followupdoAction=function(){$uibModal.open({animation:!0,templateUrl:"analFollowUp",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.doattachAction=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/attachmentmodel.html",controller:"ActionCtrl",backdrop:"static",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.AbortdoAction=function(){$uibModal.open({animation:!0,templateUrl:"mesureAbort",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.measurefollowLoadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LME_FOLLOWUP_COMBO,function(response){response.success?$scope.measureFollowData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.getUploadedDocument=function(){"DMF"==$scope.visittype||"PR"==$scope.visittype?$scope.referencetype="AR_VISITS":$scope.referencetype="LME_VISITS",APIS.LME_ATTACH_DOC_GRID.data={applicantId:$scope.visitInfo.applicantId,referencetype:$scope.referencetype},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?response.dataBean&&($scope.isDocumentUploaded=response.dataBean.length>0):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.dmfdetails=function(){sessionStorage.setItem("viewdmfapplicantid",JSON.stringify($scope.applicantId)),$window.open("#/viewdmf")},$scope.init()}]),angular.module("app.lme").controller("ArinprogressCtrl",["$scope","$state","APIS","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter","convertpdf",function($scope,$state,APIS,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter,convertpdf){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userSeqId=$scope.uconfig.userSeqId,$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.personId=$scope.userInfo.personId,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visittypeRecord=JSON.parse(sessionStorage.getItem("VisitRecords")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.visitType={I:!1,R:!1,B:!1,60:!1,DMF:!1,PR:!1,EVERY:!1},$scope.selectedAction={selectedObject:{}},$scope.visitData=[],$scope.keys={idno:"",applicantname:"",doctorname:"",visitType:{lmetype:""}},$scope.keyvalue=[{lmetype:null}],$scope.selectedclinic=!0,$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.visiList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas(),$scope.visitList(),$scope.visitInfo&&($scope.loaddme($scope.visitInfo.applicantDetails.applicationId),$scope.loadclinic($scope.visitInfo.applicantDetails.applicationId))},$scope.tabledatas=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_ARINPROGRESS.URL,url=tempUrl+$scope.roleid+"/"+$scope.userSeqId,APIS.LME_ARINPROGRESS.URL=url,DataManager.sendRestRequest(null,APIS.LME_ARINPROGRESS,function(response){response.success?($scope.mrfilteredStores=response.dataBean,$scope.temp=response.dataBean,$scope.$emit("arInprogressCount",{count:response.dataBean.length}),$scope.drList=$scope.groupDr(),$scope.select($scope.currentPage,$scope.mrfilteredStores),$scope.visitList()):console.log(response)},$scope.uconfig.token),APIS.LME_ARINPROGRESS.URL=tempUrl},$scope.visitList=function(){$scope.visittypeRecord&&$scope.groupVisit($scope.visittypeRecord)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.filter(),$scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){if($scope.keys.idno||$scope.keys.applicantname||$scope.keys.doctorname||$scope.keys.visitType.lmetype){$scope.mrfilteredStores=$scope.temp;var data=$scope.mrfilteredStores;return null==$scope.keys.doctorname&&($scope.keys.doctorname=""),null==$scope.keys.visitType.lmetype&&($scope.keys.visitType.lmetype=""),data=$filter("filter")(data,$scope.keys),$scope.mrfilteredStores=data,$scope.onFilterChange(data)}$scope.mrfilteredStores=$scope.temp,$scope.mrcurrentPageStores=$scope.select($scope.currentPage,$scope.mrfilteredStores)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.doAction=function(actionParam,applicantParam,tablerecord){$scope.visitDetails=null,$scope.deferredtab=!1,sessionStorage.setItem("DefferedPage",JSON.stringify($scope.deferredtab)),$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$scope.applicantId=$scope.visitDetails.applicantId,$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.triggerAction(actionParam,applicantParam,tablerecord),$scope.lmehomedirect=!1,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect)),$scope.targeted_bean=[],$scope.targeted_beanData=sessionStorage.setItem("targeted_beanData",JSON.stringify($scope.targeted_bean))},$scope.triggerAction=function(actionParam,applicantParam,tablerecord){switch(sessionStorage.removeItem("LME_Updatecheck"),$scope.swichModel="",actionParam.actionName){case"Abort":$scope.swichModel="arinprogressabort";break;case"Accept Transfer Request":break;case"Attach Documents":break;case"CAMB Instructions":break;case"Call Applicant":return $scope.callapplicant={applicationId:tablerecord.applicationId,visitId:tablerecord.visitId,type:tablerecord.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.callapplicant,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&$state.go("measurement")},$scope.uconfig.token),!1;case"Create AR Visit":break;case"DMF":$scope.val="";var url=null,tempUrl=null;return tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+tablerecord.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"arinprogressdmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return $scope.selectedAction.selectedObject={},temp}}})})}else $scope.dmf(tablerecord)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl,!1;case"View DMF":return $scope.selectedAction.selectedObject={},sessionStorage.setItem("viewdmfapplicantid",JSON.stringify($scope.applicantId)),$window.open("#/viewdmf"),!1;case"Follow Up":break;case"HED":break;case"Preview":break;case"Recall":return ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Recall":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:tablerecord.applicantname,dmename:tablerecord.doctorname,applicantid:tablerecord.applicantId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Unlock":return $scope.selectedAction.selectedObject={},ModalService.openAlert("confirm","warning","Do you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){$scope.requnlock={visitId:tablerecord.visitId,applicantname:tablerecord.applicantname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId,type:tablerecord.type},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(response){response.success},$scope.uconfig.token)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Resume":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"resume",function(){}),$scope.$on("resumeOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RESUME.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RESUME.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RESUME,function(response){response.success?$state.go("measurement"):console.log(response)},$scope.uconfig.token),APIS.LME_DME_RESUME.URL=tempUrl}),$scope.$on("resumecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Transfer":$scope.modifyvisitType=[],$scope.modifyvisitType=[{"class":"C1",classId:"1",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1},{"class":"C2",classId:"2",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1},{"class":"C3",classId:"3",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1}],angular.forEach(tablerecord.visitType,function(value,key){"C1"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[value.classId-1].checked=!0),"C2"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[value.classId-1].checked=!0),"C3"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[value.classId-1].checked=!0)}),tablerecord.visitType=[],tablerecord.visitType=$scope.modifyvisitType,"AR"==tablerecord.type?$scope.swichModel="arinprogresstransfer":$scope.swichModel="lmetransfer";break;case"Unlock":return $scope.selectedAction.selectedObject={},ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+tablerecord.visitId+"/"+tablerecord.statuspageName,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?ModalService.openAlert("alert","Unlock","Unlock Done","","",function(){$window.location.reload()}):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Update":return ModalService.openAlert("confirm","warning","Are you sure you want to update the selected record?",$scope,"update",function(){}),$scope.$on("updateOk",function(){$state.go("measurement")}),$scope.$on("updatecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"View Submission":break;case"Create LME Visit":break;case"Next":break;case"Request CAMB Review":break;case"Review Capel Export":break;case"Review Aris Export":break;case"Publish LMAB":break;case"Publish Letters":break;case"Referral":break;case"Send":break;case"View LMF Comments":break;case"Review Assessment Changes":break;case"Close":break;case"Return to LMAB":break;case"Circulate":break;case"Commence":break;case"Submit":break;case"View  Only":break;default:$scope.swichModel="noAction"}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:tablerecord,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.groupDr=function(){var drlist=[];return angular.forEach($scope.mrfilteredStores,function(value,key){var temp={doctorId:value.doctorId,doctorname:value.doctorname};drlist.push(temp)}),drlist},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.loaddme=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.DOCTOR_LIST.URL,url=tempUrl+"/"+applicationId,APIS.DOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.DOCTOR_LIST,function(response){response.success?($scope.doctordata=response.dataBean,angular.forEach($scope.doctordata,function(value,key){$scope.userSeqId==value.dmeuserId&&$scope.doctordata.splice(key,1)}),$window.sessionStorage.setItem("doctorDetails",JSON.stringify($scope.doctordata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.DOCTOR_LIST.URL=tempUrl},$scope.loadclinic=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.CLINIC_LOCATION.URL,url=tempUrl+"/"+applicationId,APIS.CLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.CLINIC_LOCATION,function(response){response.success?($scope.clinicdata=response.dataBean,$window.sessionStorage.setItem("ClinicDetails",JSON.stringify($scope.clinicdata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CLINIC_LOCATION.URL=tempUrl},$scope.removeVisit=function(){angular.forEach($scope.mrfilteredStores,function(combo,index){visitType[combo.code]&&tempArray.push(combo)})},$scope.groupVisit=function(visitCombo){angular.forEach($scope.mrfilteredStores,function(value,key){angular.forEach(value.visitType,function(visit,index){switch(visit.lmetype){case"I":$scope.visitType.I=!0;break;case"R":$scope.visitType.R=!0;break;case"B":$scope.visitType.B=!0;break;case"60":$scope.visitType[60]=!0;break;case"DMF":$scope.visitType.DMF=!0;break;case"PR":$scope.visitType.PR=!0;break;case"EVERY":$scope.visitType.EVERY=!0}})});var tempArray=[];angular.forEach(visitCombo,function(combo,index){$scope.visitType[combo.code]&&tempArray.push(combo)}),$scope.visitData=tempArray},$scope.dmf=function(param){$uibModal.open({animation:!0,templateUrl:"dmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.init()}]),angular.module("app.lme").controller("AsthmaCtrl",["$scope","$state","APIS","$uibModalInstance","modalParam","ModalService",function($scope,$state,APIS,$uibModalInstance,modalParam,ModalService){
$scope.init=function(){modalParam.data,$scope.score1=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn1Score:0,$scope.score2=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn2Score:0,$scope.score3=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn3Score:0,$scope.score4=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn4Score:0,$scope.score5=modalParam.data.asthmacontrol.actQn1Score?modalParam.data.asthmacontrol.actQn5Score:0,$scope.dataBind(),$scope.questions={ques1:$scope.score1?$scope.score1:null,ques2:$scope.score2?$scope.score2:null,ques3:$scope.score3?$scope.score3:null,ques4:$scope.score4?$scope.score4:null,ques5:$scope.score5?$scope.score5:null}},$scope.dataBind=function(){$scope.total=null,$scope.$watch("[score1,score2,score3,score4,score5]",function(newValue,oldValue){$scope.total=parseInt(newValue[0])+parseInt(newValue[1])+parseInt(newValue[2])+parseInt(newValue[3])+parseInt(newValue[4])},!0)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.actscore1=function(value){$scope.score1=value},$scope.actscore2=function(value){$scope.score2=value},$scope.actscore3=function(value){$scope.score3=value},$scope.actscore4=function(value){$scope.score4=value},$scope.actscore5=function(value){$scope.score5=value},$scope.asthmacontrolSave=function(){if(0!=$scope.score1||0!=$scope.score2||0!=$scope.score3||0!=$scope.score4||0!=$scope.score5)if(0==$scope.score1||0==$scope.score2||0==$scope.score3||0==$scope.score4||0==$scope.score5)ModalService.openAlert("alert","Alert","Please fill all the Control Test");else{var score={score1:$scope.score1,score2:$scope.score2,score3:$scope.score3,score4:$scope.score4,score5:$scope.score5};$uibModalInstance.close({index:modalParam.index,total:$scope.total,score:score})}},$scope.init()}]),angular.module("app.lme").controller("CompletedCtrl",["$scope","$state","APIS","DataManager","$window","$filter","ModalService",function($scope,$state,APIS,DataManager,$window,$filter,ModalService){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}function getDayClass(data){var date=data.date,mode=data.mode;if("day"===mode)for(var dayToCheck=new Date(date).setHours(0,0,0,0),i=0;i<$scope.events.length;i++){var currentDay=new Date($scope.events[i].date).setHours(0,0,0,0);if(dayToCheck===currentDay)return $scope.events[i].status}return""}$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.keys={idno:"",applicantname:"",startDate:"",completedDate:""},$scope.startDate=null,$scope.completedDate=null,$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas(),$scope.$watch("startDate",function(newVal,oldVal){newVal&&($scope.keys.startDate=$filter("date")(newVal,"yyyy-MM-dd"))}),$scope.$watch("completedDate  ",function(newVal,oldVal){newVal&&($scope.keys.completedDate=$filter("date")(newVal,"yyyy-MM-dd"))})},$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){APIS.LME_COMPLETED.data=$scope.keys,DataManager.sendRestRequest(null,APIS.LME_COMPLETED,function(response){response.success&&response.dataBean.length>0&&($scope.mrfilteredStores=response.dataBean,$scope.select($scope.currentPage))},$scope.uconfig.token)},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.inlineOptions={customClass:getDayClass,minDate:new Date,showWeeks:!0},$scope.dateOptions={dateDisabled:disabled,formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},$scope.toggleMin=function(){$scope.inlineOptions.minDate=$scope.inlineOptions.minDate?null:new Date,$scope.dateOptions.minDate=$scope.inlineOptions.minDate},$scope.toggleMin(),$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.setDate=function(year,month,day){$scope.dt=new Date(year,month,day)},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.altInputFormats=["M!/d!/yyyy"],$scope.popup1={opened:!1},$scope.popup2={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+1),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.tabledatas=function(){APIS.LME_COMPLETED.data=$scope.keys,DataManager.sendRestRequest(null,APIS.LME_COMPLETED,function(response){response.success?($scope.mrfilteredStores=response.dataBean,console.log($scope.mrfilteredStores),$scope.$emit("completedCount",{count:response.dataBean.length}),$scope.select($scope.currentPage)):console.log(response)},$scope.uconfig.token)},$scope.dateFormate=function(param){return new Date(param)},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.init()}]),angular.module("app.lme").controller("DeferredCtrl",["$scope","$state","APIS","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter",function($scope,$state,APIS,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.doctorInfo=JSON.parse(sessionStorage.getItem("doctorDetails")),$scope.clinicInfo=JSON.parse(sessionStorage.getItem("ClinicDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userSeqId=$scope.uconfig.userSeqId,$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.personId=$scope.userInfo.personId,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visittypeRecord=JSON.parse(sessionStorage.getItem("VisitRecords")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.visitType={I:!1,R:!1,B:!1,60:!1,DMF:!1,PR:!1,EVERY:!1},$scope.visitData=[],$scope.keys={idno:"",applicantname:"",doctorname:"",visitType:{lmetype:""}},$scope.selectedAction={selectedObject:{}},$scope.keyvalue=[{lmetype:null}],$scope.selectedclinic=!0,$scope.date=null,$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.visiList=[],$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas(),$scope.visitList(),$scope.visitInfo&&($scope.loaddme($scope.visitInfo.applicantDetails.applicationId),$scope.loadclinic($scope.visitInfo.applicantDetails.applicationId))},$scope.dateFormate=function(param){return new Date(param)},$scope.tabledatas=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DEFFERED.URL,url=tempUrl+$scope.roleid,APIS.LME_DEFFERED.URL=url,DataManager.sendRestRequest(null,APIS.LME_DEFFERED,function(response){response.success?($scope.mrfilteredStores=response.dataBean,$scope.temp=response.dataBean,$scope.$emit("diferredCount",{count:response.dataBean.length}),$scope.drList=$scope.groupDr(),$scope.select($scope.currentPage),$scope.visitList()):console.log(response)},$scope.uconfig.token),APIS.LME_DEFFERED.URL=tempUrl},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){if($scope.keys.idno||$scope.keys.applicantname||$scope.keys.doctorname||$scope.keys.visitType.lmetype){$scope.mrfilteredStores=$scope.temp;var data=$scope.mrfilteredStores;return null==$scope.keys.doctorname&&($scope.keys.doctorname=""),null==$scope.keys.visitType.lmetype&&($scope.keys.visitType.lmetype=""),data=$filter("filter")(data,$scope.keys),$scope.mrfilteredStores=data,$scope.onFilterChange(data)}$scope.mrfilteredStores=$scope.temp,$scope.mrcurrentPageStores=$scope.select($scope.currentPage,$scope.mrfilteredStores)},$scope.visitList=function(){$scope.visittypeRecord&&$scope.groupVisit($scope.visittypeRecord)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.doAction=function(actionParam,applicantParam,tablerecord){$scope.visitDetails=null,$scope.deferredtab=!0,sessionStorage.setItem("DefferedPage",JSON.stringify($scope.deferredtab)),$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.lmehomedirect=!1,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect)),$scope.triggerAction(actionParam,applicantParam,tablerecord)},$scope.triggerAction=function(actionParam,applicantParam,tablerecord){switch(sessionStorage.removeItem("LME_Updatecheck"),$scope.swichModel="",actionParam.actionName){case"Abort":$scope.swichModel="defferedabort";break;case"Accept Transfer Request":break;case"Attach Documents":break;case"CAMB Instructions":$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"defcambins.html",controller:"DMFactionCtrl",size:"md",resolve:{modalParam:function(){var temp={visitDetails:tablerecord};return $scope.selectedAction.selectedObject={},temp}}});return!1;case"Call Applicant":return $scope.callapplicant={applicationId:tablerecord.applicationId,visitId:tablerecord.visitId,type:tablerecord.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.callapplicant,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?$state.go("hed"):$state.go("measurement"))},$scope.uconfig.token),!1;case"Create AR Visit":break;case"DMF":$scope.val="";var url=null,tempUrl=null;return tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+tablerecord.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitInfo};return $scope.selectedAction.selectedObject={},temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"deffereddmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return $scope.selectedAction.selectedObject={},temp}}})})}else $scope.dmf(tablerecord)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl,!1;case"Follow Up":break;case"HED":break;case"Preview":break;case"Recall":return ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Recall":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:tablerecord.applicantname,dmename:tablerecord.doctorname,applicantid:tablerecord.applicantId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Unlock":return ModalService.openAlert("confirm","warning","Do you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){$scope.requnlock={visitId:tablerecord.visitId,applicantname:tablerecord.applicantname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId,type:tablerecord.type},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(response){response.success},$scope.uconfig.token)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Resume":return $scope.selectedAction.selectedObject={},$state.go("measurement"),!1;case"Transfer":"AR"==tablerecord.type?$scope.swichModel="ardefferedtransfer":$scope.swichModel="defferedtransfer";break;case"Unlock":return ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+tablerecord.visitId+"/"+tablerecord.statuspageName,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?(ModalService.openAlert("alert","Unlock","Unlock Done","","",""),$window.location.reload()):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Update":return $scope.setupdatetrue=!0,$scope.selectedAction.selectedObject={},ModalService.openAlert("confirm","warning","Are you sure you want to update the selected record?",$scope,"update",function(){}),$scope.$on("updateOk",function(){sessionStorage.setItem("LME_Updatecheck",JSON.stringify($scope.setupdatetrue)),$state.go("measurement")}),$scope.$on("updatecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"VIEW DMF":$scope.swichModel="deffereddmf";break;case"View Submission":break;case"Create LME Visit":break;case"Next":break;case"Request CAMB Review":break;case"Review Capel Export":break;case"Review Aris Export":break;case"Publish LMAB":break;case"Publish Letters":break;case"Referral":break;case"Send":break;case"View LMF Comments":break;case"Review Assessment Changes":break;case"Close":break;case"Return to LMAB":break;case"Circulate":break;case"Commence":break;case"Submit":break;case"View  Only":break;default:$scope.swichModel="noAction"}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:tablerecord,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.groupDr=function(){var drlist=[];return angular.forEach($scope.mrfilteredStores,function(value,key){var temp={doctorId:value.doctorId,doctorname:value.doctorname};drlist.push(temp)}),drlist},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.loaddme=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.DOCTOR_LIST.URL,url=tempUrl+"/"+applicationId,APIS.DOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.DOCTOR_LIST,function(response){response.success?($scope.doctordata=response.dataBean,angular.forEach($scope.doctordata,function(value,key){$scope.userSeqId==value.dmeuserId&&$scope.doctordata.splice(key,1)}),$window.sessionStorage.setItem("doctorDetails",JSON.stringify($scope.doctordata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.DOCTOR_LIST.URL=tempUrl},$scope.loadclinic=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.CLINIC_LOCATION.URL,url=tempUrl+"/"+applicationId,APIS.CLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.CLINIC_LOCATION,function(response){response.success?($scope.clinicdata=response.dataBean,$window.sessionStorage.setItem("ClinicDetails",JSON.stringify($scope.clinicdata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CLINIC_LOCATION.URL=tempUrl},$scope.groupVisit=function(visitCombo){angular.forEach($scope.mrfilteredStores,function(value,key){angular.forEach(value.visitType,function(visit,index){switch(visit.lmetype){case"I":$scope.visitType.I=!0;break;case"R":$scope.visitType.R=!0;break;case"B":$scope.visitType.B=!0;break;case"60":$scope.visitType[60]=!0;break;case"DMF":$scope.visitType.DMF=!0;break;case"PR":$scope.visitType.PR=!0;break;case"EVERY":$scope.visitType.EVERY=!0}})});var tempArray=[];angular.forEach(visitCombo,function(combo,index){$scope.visitType[combo.code]&&tempArray.push(combo)}),$scope.visitData=tempArray},$scope.dmf=function(param){$uibModal.open({animation:!0,templateUrl:"dmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return $scope.selectedAction.selectedObject={},temp}}})},$scope.init()}]),angular.module("app.lme").controller("DmesubbmissionCtrl",["$scope","$state","APIS","convertpdf","DataManager","$rootScope","$log","ModalService","$window","$location","$filter",function($scope,$state,APIS,convertpdf,DataManager,$rootScope,$log,ModalService,$window,$location,$filter){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.deferredpagestatus=JSON.parse(sessionStorage.getItem("DefferedPage")),$scope.recommedationpre=$window.sessionStorage.getItem("Dmepagename"),$scope.analysisback=$window.sessionStorage.getItem("analysispage"),$scope.submitback=$window.sessionStorage.getItem("backtosubmit"),$scope.visitid=$scope.visitInfo.visitId,$scope.applicantId=$scope.visitInfo.applicantId,$scope.personId=$scope.userInfo.personId,$scope.visittype=$scope.visitInfo.visitType,$scope.init=function(){$scope.applicantInfo={},$scope.mesurementData={},$scope.investigation={},$scope.examinationData={},$scope.recomendationData={},$scope.combos={applicationType:null,vission:null,drugs:null,problem:null,relation:null},$scope.submissionPDFData={visitId:null,applicantId:null,personId:null,referenceType:null,fileName:null,pdfFile:null},$scope.appliminimac=[],$scope.applicantmac(),"submittedtab"==$scope.recommedationpre?$scope.dmetrue=!0:$scope.dmefalse=!1,$scope.getVisionCorrectionCombo()},$scope.dataBind=function(){$scope.getApplicant(),"DMF"==$scope.visittype||"PR"==$scope.visittype?($scope.armeasurementloadData(),$scope.prearinvestigationloadData(),$scope.arphysicalexamination(),$scope.preloadArAudio(),$scope.dmfClearanceRecommendationFetch(),$scope.outComeDetails=[],$scope.restrictionDetails=[]):($scope.measurementloadData(),$scope.preinvestigationloadData(),$scope.physicalexamination(),$scope.preloadaudio(),$scope.lmerecommendationgetfetch())},$scope.UrineMicroscopy_emptyOrNull=function(microscopyValue){return!(null===microscopyValue.crystalsDescription&&null===microscopyValue.wbcDescription&&null===microscopyValue.rbcDescription&&null===microscopyValue.epithcellsDescription&&null===microscopyValue.castsDescription)},$scope.Diabetes_emptyOrNull=function(diabetesValue){return!(null===diabetesValue.fastingBloodGlucose&&null===diabetesValue.hba1c)},$scope.Thyroid_emptyOrNull=function(thyroidValue){return!(null===thyroidValue.tsh&&null===thyroidValue.ft4&&null===thyroidValue.ft3)},$scope.Lipid_emptyOrNull=function(lipidProfileValue){return!(null===lipidProfileValue.tci&&null===lipidProfileValue.hdl&&null===lipidProfileValue.ldl&&null===lipidProfileValue.tg&&null===lipidProfileValue.cratio)},$scope.hsCRP_emptyOrNull=function(hsCRPValue){return!(null===hsCRPValue.hsCrp)},$scope.Blood_emptyOrNull=function(bloodcountValue){return!(null===bloodcountValue.hb&&null===bloodcountValue.rbc&&null===bloodcountValue.wbc&&null===bloodcountValue.platelets&&null===bloodcountValue.htc)},$scope.Liver_emptyOrNull=function(liverpanelValue){return!(null===liverpanelValue.ast&&null===liverpanelValue.alt&&null===liverpanelValue.ggt)},$scope.Renal_emptyOrNull=function(renalpanelValue){return!(null===renalpanelValue.u&&null===renalpanelValue.cr&&null===renalpanelValue.na&&null===renalpanelValue.k&&null===renalpanelValue.cl&&null===renalpanelValue.egfr)},$scope.spotUACR_emptyOrNull=function(spotUACRValue){return!(null===spotUACRValue.spotUacr)},$scope.DMERemarks_emptyOrNull=function(examinationsValue){return!(null===examinationsValue.reference&&null===examinationsValue.remark)},$scope.getApplicant=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.visitInfo.applicantuserId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($scope.applicantInfo=response.dataBean,$scope.applicantInfo.photo&&angular.element("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.applicantInfo.photo))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.close=function(){"submitted"==$scope.submitback&&$state.go("queue")},$scope.DMEcancel=function(){"analysis"==$scope.analysisback?$state.go("measurement"):$state.go("measurement")},$scope.applicantmac=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_APPLICANTMACS.URL,url=tempUrl+"/"+$scope.applicantId,APIS.LME_GET_APPLICANTMACS.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_APPLICANTMACS,function(response){response.success&&($scope.appliminimac=response.dataBean,sessionStorage.setItem("applicantMac",JSON.stringify($scope.appliminimac)),$scope.applicantMac=JSON.parse($window.sessionStorage.getItem("applicantMac")))},$scope.uconfig.token),APIS.LME_GET_APPLICANTMACS.URL=tempUrl};var form=$(".form");form.width();$scope.lmeSubmission=function(){var innerContents=document.getElementById("submission").innerHTML,popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close();var currentdate=new Date,months=["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"];$scope.submissionPDFData.fileName="MR_"+$scope.visitInfo.applicantDetails.type+"_"+$scope.applicantId+"_"+currentdate.getDate()+"-"+months[currentdate.getMonth()]+"-"+currentdate.getFullYear()+".pdf",console.log($("#submission").html());var enURI=encodeURIComponent($("#submission").html()),es=escape(enURI);$scope.submissionPDFData.pdfFile=window.btoa(es),$scope.submissionPDFData.visitId=$scope.visitid,$scope.submissionPDFData.applicantId=$scope.applicantId,$scope.submissionPDFData.personId=$scope.personId,"AR"==$scope.visitInfo.applicantDetails.type&&($scope.submissionPDFData.referenceType="AR_VISITS"),"LME"==$scope.visitInfo.applicantDetails.type&&($scope.submissionPDFData.referenceType="LME_VISITS"),APIS.COMMON_SUBMISSION_UPLOAD_FILE.data=$scope.submissionPDFData,DataManager.sendRestRequest(null,APIS.COMMON_SUBMISSION_UPLOAD_FILE,function(response){if(response.success){if("AR"==$scope.visitInfo.applicantDetails.type){var url=null,tempUrl=null;tempUrl=APIS.SUBMIT_AR.URL,url=tempUrl+"/"+$scope.visitid+"/"+$scope.applicantId+"/"+$rootScope.arRecommendationId,APIS.SUBMIT_AR.URL=url,DataManager.sendRestRequest(null,APIS.SUBMIT_AR,function(response){response.success?(ModalService.openAlert("alert","AR Submission",response.successMessage),$state.go("queue")):$log.error("AR Submission: "+response.errorMessage)},$scope.uconfig.token),APIS.SUBMIT_AR.URL=tempUrl}if("LME"==$scope.visitInfo.applicantDetails.type)if(0==$scope.deferredpagestatus){var url=null,tempUrl=null;tempUrl=APIS.SUBMIT_LME.URL,url=tempUrl+"/"+$scope.visitid,APIS.SUBMIT_LME.URL=url,DataManager.sendRestRequest(null,APIS.SUBMIT_LME,function(response){response.success?(ModalService.openAlert("alert","LME Submission",response.successMessage),$state.go("queue")):$log.error("LME Submission: "+response.errorMessage)},$scope.uconfig.token),APIS.SUBMIT_LME.URL=tempUrl}else if(1==$scope.deferredpagestatus){var url=null,tempUrl=null;tempUrl=APIS.SUBMIT_LME.URL,url=tempUrl+"/"+$scope.visitid,APIS.SUBMIT_LME.URL=url,DataManager.sendRestRequest(null,APIS.SUBMIT_LME,function(response){response.success?ModalService.openAlert("alert","LME Submission",response.successMessage):$log.error("LME Submission: "+response.errorMessage)},$scope.uconfig.token),APIS.SUBMIT_LME.URL=tempUrl}}else $log.error("Upload PDF Submission: "+response.errorMessage)},$scope.uconfig.token)},$scope.genPDF=function(param){convertpdf.htmltoPdf(param)},$scope.lmerecommendationgetfetch=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_RECOMMENDATION.URL,url=tempUrl+"/"+$scope.visitid,APIS.LME_GET_RECOMMENDATION.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_RECOMMENDATION,function(response){response.success?$scope.recommendationData=response.dataBean:$log.error("RECOMMENDATION : "+response.errorMessage)},$scope.uconfig.token),APIS.LME_GET_RECOMMENDATION.URL=tempUrl},$scope.dmfClearanceRecommendationFetch=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DMF_CLEARANCE_FETCH.URL,url=tempUrl+"/"+$scope.visitid+"/"+$scope.applicantId,APIS.LME_DMF_CLEARANCE_FETCH.URL=url,DataManager.sendRestRequest(null,APIS.LME_DMF_CLEARANCE_FETCH,function(response){if(response.success){$scope.dmfClearanceRecommendationData=response.dataBean,$scope.getDrugDosageCombo(),$scope.getDrugFrequencyCombo(),$rootScope.arRecommendationId=$scope.dmfClearanceRecommendationData.arRecommendationId;for(var mac=0;mac<$scope.dmfClearanceRecommendationData.mac.length;mac++)0!=$scope.dmfClearanceRecommendationData.mac[mac].selected_outCome_Id&&($scope.outComeDetails[mac]=$.grep($scope.dmfClearanceRecommendationData.outCome,function(e){return e.actionId==$scope.dmfClearanceRecommendationData.mac[mac].selected_outCome_Id})[0].actionName),0!=$scope.dmfClearanceRecommendationData.mac[mac].selected_restriction_Id&&($scope.restrictionDetails[mac]=$.grep($scope.dmfClearanceRecommendationData.restriction,function(e){return e.actionId==$scope.dmfClearanceRecommendationData.mac[mac].selected_restriction_Id})[0].actionName)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_DMF_CLEARANCE_FETCH.URL=tempUrl},$scope.getDrugDosageCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGDOSAGE"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?($scope.drugDosageList=response.dataBean,angular.forEach($scope.dmfClearanceRecommendationData.existingARDrugDosage,function(val,key){$scope.dmfClearanceRecommendationData.existingARDrugDosage[key].dosage=$.grep($scope.drugDosageList,function(e){return e.code==val.dosage})[0].description})):$log.error("Drug Dosage: "+response.errorMessage)},$scope.uconfig.token)},$scope.getDrugFrequencyCombo=function(){APIS.ADMIN_MASTER_SETUP_LIST.data={masterTableCode:"AMADUGFREQ"},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success?($scope.drugFrequencyList=response.dataBean,angular.forEach($scope.dmfClearanceRecommendationData.existingARDrugDosage,function(val,key){$scope.dmfClearanceRecommendationData.existingARDrugDosage[key].frequency=$.grep($scope.drugFrequencyList,function(e){return e.code==val.frequency})[0].description})):$log.error("Drug Dosage: "+response.errorMessage)},$scope.uconfig.token)},$scope.physicalexamination=function(){$scope.userinfo={visitId:$scope.visitInfo.visitId,applicationId:$scope.visitInfo.applicantDetails.applicationId},APIS.LME_PHYSICALEXAMINATION_EXAMINATION.data=$scope.userinfo,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_EXAMINATION,function(response){response.success?($scope.hed=response.dataBean[0].hedList,$scope.measurement_bp=response.dataBean[0].lme_mea_bp,$scope.measurement_eye=response.dataBean[0].lme_mea_eye_others,$scope.measurement_asthma=response.dataBean[0].lme_mea_asthma,$scope.hed.lme_dme=response.dataBean[0].lme_DME_REMARKS,$scope.measurement_audiometry=response.dataBean[0].lme_MEA_AUDIOMETRY,$scope.physicalexamination_investigation=response.dataBean[0].investigation,$scope.system_parts_remarks=response.dataBean[0].system_parts_remarks,$scope.body_points=response.dataBean[0].body_points_list,$scope.physicalexamination_examinationdata=$scope.hed.concat($scope.measurement_bp,$scope.measurement_asthma,$scope.measurement_eye,$scope.measurement_audiometry,$scope.hed.lme_dme,$scope.physicalexamination_investigation,$scope.system_parts_remarks)):$log.error("Physical Examination : "+response.errorMessage)},$scope.uconfig.token)},$scope.arphysicalexamination=function(){
$scope.userinfo={visitId:$scope.visitInfo.visitId,applicationId:$scope.visitInfo.applicantDetails.applicationId},APIS.AR_PHYSICALEXAMINATION_EXAMINATION.data=$scope.userinfo,DataManager.sendRestRequest(null,APIS.AR_PHYSICALEXAMINATION_EXAMINATION,function(response){response.success?($scope.measurement_bp=response.dataBean[0].ar_mea_bp,$scope.measurement_eye=response.dataBean[0].ar_mea_eye_others,$scope.measurement_asthma=response.dataBean[0].ar_mea_asthma,$scope.measurement_audiometry=response.dataBean[0].ar_MEA_AUDIOMETRY,$scope.arphysicalexamination_investigation=response.dataBean[0].investigation,$scope.system_parts_remarks=response.dataBean[0].system_parts_remarks,$scope.physicalexamination_examinationdata=$scope.measurement_bp.concat($scope.measurement_eye,$scope.measurement_asthma,$scope.measurement_audiometry,$scope.arphysicalexamination_investigation,$scope.system_parts_remarks)):$log.error("Physical Examination : "+response.errorMessage)},$scope.uconfig.token)},$scope.measurementloadData=function(){var url=null,tempUrl=null;tempUrl=APIS.PRELOAD_MEASUREMENT.URL,url=tempUrl+"/"+$scope.visitid+"/"+$scope.applicantId+"/"+$scope.visitInfo.applicantDetails.applicationId,APIS.PRELOAD_MEASUREMENT.URL=url,DataManager.sendRestRequest(null,APIS.PRELOAD_MEASUREMENT,function(response){if(response.success){$scope.mesurementData=response.dataBean[0],$scope.loadData(),"Y"==response.dataBean[0].visionCorrection.spectacles&&($scope.isLenseUsed="spectacles"),"Y"==response.dataBean[0].visionCorrection.contactLense&&($scope.isLenseUsed="contactLense"),$scope.colorPlates=response.dataBean[0].colourPerceptionDTO.paletStatusDTO?response.dataBean[0].colourPerceptionDTO.paletStatusDTO:$scope.colorPlates,$scope.stCo=[];var lendt=response.dataBean[0].colourPerceptionDTO.paletStatusDTO.length;console.log($scope.colorPlates);for(var i=0;i<lendt;i++)"a"!=response.dataBean[0].colourPerceptionDTO.paletStatusDTO[i].platestatus&&$scope.stCo.push(i);if($scope.stColen=$scope.stCo.length,0==$scope.mesurementData.generalDTO.suspineDataDTO.length?$scope.addSupinenew():$scope.postalDropTransformation($scope.mesurementData.generalDTO.suspineDataDTO),0==$scope.mesurementData.generalDTO.actScoreDTOList.length?$scope.actscore():$scope.actscoreTransformation($scope.mesurementData.generalDTO.actScoreDTOList),!$scope.mesurementData.visionCorrection.metricsLeftDTO){var metricsLeft={ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null};$scope.mesurementData.visionCorrection.metricsLeftDTO=metricsLeft}if(!$scope.mesurementData.visionCorrection.metricsRightDTO){var metricsRight={rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null};$scope.mesurementData.visionCorrection.metricsRightDTO=metricsRight}$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight&&$scope.bmiCalculation($scope.mesurementData.generalDTO.height,$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight),$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip)}else $scope.stColen=0,console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.PRELOAD_MEASUREMENT.URL=tempUrl},$scope.armeasurementloadData=function(){var url=null,tempUrl=null;tempUrl=APIS.AR_PRELOAD_MEASUREMENT.URL,url=tempUrl+"/"+$scope.visitid+"/"+$scope.applicantId,APIS.AR_PRELOAD_MEASUREMENT.URL=url,DataManager.sendRestRequest(null,APIS.AR_PRELOAD_MEASUREMENT,function(response){if(response.success){$scope.mesurementData=response.dataBean[0],$scope.loadData(),"Y"==response.dataBean[0].visionCorrection.spectacles&&($scope.isLenseUsed="spectacles"),"Y"==response.dataBean[0].visionCorrection.contactLense&&($scope.isLenseUsed="contactLense"),$scope.colorPlates=response.dataBean[0].colourPerceptionDTO.paletStatusDTO?response.dataBean[0].colourPerceptionDTO.paletStatusDTO:$scope.colorPlates,$scope.stCo=[];var lendt=response.dataBean[0].colourPerceptionDTO.paletStatusDTO.length;console.log($scope.colorPlates);for(var i=0;i<lendt;i++)"a"!=response.dataBean[0].colourPerceptionDTO.paletStatusDTO[i].platestatus&&$scope.stCo.push(i);if($scope.stColen=$scope.stCo.length,0==$scope.mesurementData.generalDTO.suspineDataDTO.length?$scope.addSupinenew():$scope.postalDropTransformation($scope.mesurementData.generalDTO.suspineDataDTO),0==$scope.mesurementData.generalDTO.actScoreDTOList.length?$scope.actscore():$scope.actscoreTransformation($scope.mesurementData.generalDTO.actScoreDTOList),!$scope.mesurementData.visionCorrection.metricsLeftDTO){var metricsLeft={ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null};$scope.mesurementData.visionCorrection.metricsLeftDTO=metricsLeft}if(!$scope.mesurementData.visionCorrection.metricsRightDTO){var metricsRight={rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null};$scope.mesurementData.visionCorrection.metricsRightDTO=metricsRight}$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight&&$scope.bmiCalculation($scope.mesurementData.generalDTO.height,$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight),$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip)}else $scope.stColen=0,console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.AR_PRELOAD_MEASUREMENT.URL=tempUrl},$scope.loadData=function(){DataManager.sendRestRequest(null,APIS.GET_MEASUREMENT,function(response){response.success?($scope.comboData=response.dataBean,$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId&&($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId=$.grep($scope.comboData.maddoxEsoList,function(e){return e.code==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId})[0].description),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId&&($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId=$.grep($scope.comboData.maddoxHyperList,function(e){return e.code==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId})[0].description),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId&&($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId=$.grep($scope.comboData.maddoxEsoList,function(e){return e.code==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId})[0].description),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId&&($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId=$.grep($scope.comboData.maddoxHyperList,function(e){return e.code==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId})[0].description)):console.log("GET_MEASUREMENT: "+response.errorMessage)},$scope.uconfig.token)},$scope.bmiCalculation=function(height,weight){if(!height||!weight)return!1;var height=height/100,ratio=weight/(height*height);$scope.bmiRatio=ratio.toFixed(2)},$scope.waistCalculation=function(waist,hip){if(!waist||!hip)return!1;var ratio=waist/hip;$scope.waistRatio=ratio.toFixed(2)},$scope.preinvestigationloadData=function(){APIS.GET_LME_INVESTIGATION_DATA.data={visitId:$scope.visitid,applicantId:$scope.applicantId},DataManager.sendRestRequest(null,APIS.GET_LME_INVESTIGATION_DATA,function(response){response.success?($scope.investigation=response.dataBean,$scope.egfr($scope.investigation.renalPanel[0].data[0].cr),$scope.cratio($scope.investigation.bloodTests.lipidProfile[0].data[0].tci,$scope.investigation.bloodTests.lipidProfile[0].data[0].hdl)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.prearinvestigationloadData=function(){APIS.GET_AR_INVESTIGATION_DATA.data={visitId:$scope.visitid,applicantId:$scope.applicantId},DataManager.sendRestRequest(null,APIS.GET_AR_INVESTIGATION_DATA,function(response){response.success?($scope.investigation=response.dataBean,$scope.egfr($scope.investigation.renalPanel[0].data[0].cr),$scope.cratio($scope.investigation.bloodTests.lipidProfile[0].data[0].tci,$scope.investigation.bloodTests.lipidProfile[0].data[0].hdl)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.egfr=function(cr){return!!cr&&void("M"==$scope.visitInfo.applicantDetails.gender?($scope.investigation.renalPanel[0].data[0].egfr=((140-$scope.visitInfo.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*$scope.investigation.renalPanel[0].data[0].cr)).toFixed(2),$scope.va=$scope.investigation.renalPanel[0].data[0].egfr):($scope.investigation.renalPanel[0].data[0].egfr=((140-$scope.visitInfo.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*$scope.investigation.renalPanel[0].data[0].cr)).toFixed(2),$scope.va=$scope.investigation.renalPanel[0].data[0].egfr))},$scope.cratio=function(tci,hdl){return!(!tci||!hdl)&&void angular.forEach($scope.investigation.bloodTests.lipidProfile[0].data,function(value,key){$scope.investigation.bloodTests.lipidProfile[0].data[key].cratio=(value.tci/value.hdl).toFixed(2)})},$scope.preloadaudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.visitid,APIS.GET_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_AUDIOMETROY,function(response){response.success?response.dataBean&&(response.dataBean.audiometry.length>0&&response.dataBean.audiometry[0].hearingAid&&response.dataBean.audiometry[0].type?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.showCanvas=!0)):$log.error("Audiograme Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_AUDIOMETROY.URL=tempUrl},$scope.preloadArAudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_AR_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.visitInfo.visitId,APIS.GET_AR_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_AR_AUDIOMETROY,function(response){response.success?response.dataBean&&(response.dataBean.audiometry.length>0?response.dataBean.audiometry[0].hearingAid&&response.dataBean.audiometry[0].type?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.audioData.remarks=response.dataBean.remarks,$scope.showCanvas=!0):($scope.audioData=$scope.audioData,$scope.showCanvas=!0)):$log.error("Audiograme Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_AR_AUDIOMETROY.URL=tempUrl},$scope.preloadTransaction=function(data){var xAxis=[75,132,190,246,275,304,334,361];angular.forEach(data.audiometry,function(val,key){var i=0,leftData=[];angular.forEach(val.left,function(leftValue,leftKey){var temp={freq:xAxis[i],sound:leftValue};leftValue&&leftData.push(temp),i+=1}),data.audiometry[key].left=leftData;var j=0,rightData=[];angular.forEach(val.right,function(rightValue,rightKey){var temp={freq:xAxis[j],sound:rightValue};rightValue&&rightData.push(temp),j+=1}),data.audiometry[key].right=rightData}),$scope.audioData=data,$scope.showCanvas=!0},$scope.actscore=function(){var temp1=[{pefr:null,actscore:null,asthmacontrol:{actQn1Score:null,actQn2Score:null,actQn3Score:null,actQn4Score:null,actQn5Score:null}}];$scope.mesurementData.generalDTO.actScoreDTOList=temp1},$scope.actscoreTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,index){$scope.mesurementData.generalDTO.actScoreDTOList[index].actscore=value.asthmacontrol.actQn1Score+value.asthmacontrol.actQn2Score+value.asthmacontrol.actQn3Score+value.asthmacontrol.actQn4Score+value.asthmacontrol.actQn5Score})},$scope.postalDropTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.suspineDataDTO,function(value,index){$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop=parseInt(value.suspineDTO.sys)-parseInt(value.standingDTO.sys)})},$scope.getVisionCorrectionCombo=function(){DataManager.sendRestRequest(null,APIS.GET_VISSION_COMBO,function(response){response.success?($scope.combos.vission=response.dataBean,$scope.dataBind()):$log.error(response.errorMessage)},$scope.uconfig.token)},$scope.formateDate=function(param){if(null!=param)return new Date(param)},$scope.init()}]),angular.module("app.lme").controller("DocumentsCtrl",["$scope","$state","APIS",function($scope,$state,APIS){$scope.init=function(){},$scope.init()}]),angular.module("app.lme").controller("ExpiredCtrl",["$scope","$state","APIS","DataManager","$window","$filter","ModalService",function($scope,$state,APIS,DataManager,$window,$filter,ModalService){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}function getDayClass(data){var date=data.date,mode=data.mode;if("day"===mode)for(var dayToCheck=new Date(date).setHours(0,0,0,0),i=0;i<$scope.events.length;i++){var currentDay=new Date($scope.events[i].date).setHours(0,0,0,0);if(dayToCheck===currentDay)return $scope.events[i].status}return""}$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.keys={idno:"",applicantname:"",startDate:"",expiredDate:""},$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas(),$scope.$watch("startDate",function(newVal,oldVal){newVal&&($scope.keys.startDate=$filter("date")(newVal,"yyyy-MM-dd"))}),$scope.$watch("expiredDate  ",function(newVal,oldVal){newVal&&($scope.keys.expiredDate=$filter("date")(newVal,"yyyy-MM-dd"))})},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.inlineOptions={customClass:getDayClass,minDate:new Date,showWeeks:!0},$scope.dateOptions={dateDisabled:disabled,formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},$scope.toggleMin=function(){$scope.inlineOptions.minDate=$scope.inlineOptions.minDate?null:new Date,$scope.dateOptions.minDate=$scope.inlineOptions.minDate},$scope.toggleMin(),$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.setDate=function(year,month,day){$scope.dt=new Date(year,month,day)},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.altInputFormats=["M!/d!/yyyy"],$scope.popup1={opened:!1},$scope.popup2={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+1),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){$scope.searchKeys=$scope.keys,APIS.LME_EXPIRED.data=$scope.searchKeys,DataManager.sendRestRequest(null,APIS.LME_EXPIRED,function(response){response.success&&response.dataBean.length>0&&($scope.mrfilteredStores=response.dataBean,$scope.select($scope.currentPage))},$scope.uconfig.token)},$scope.tabledatas=function(){DataManager.sendRestRequest(null,APIS.LME_EXPIRED,function(response){response.success?($scope.mrfilteredStores=response.dataBean,$scope.$emit("expiredCount",{count:response.dataBean.length}),$scope.select($scope.currentPage)):console.log(response)},$scope.uconfig.token)},$scope.dateFormate=function(param){return new Date(param)},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.init()}]),angular.module("app.lme").controller("LmeHeaderCtrl",["$scope","$state","APIS","switchRoles","$window","$interval","DataManager","$uibModal","ModalService",function($scope,$state,APIS,switchRoles,$window,$interval,DataManager,$uibModal,ModalService){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.roles=$scope.uconfig.userFacilities[0].roles,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.msgcount=JSON.parse(sessionStorage.getItem("msgcount")),$scope.init=function(){$scope.userInfo.photo&&angular.element("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.userInfo.photo)},$scope.menu=!0,$scope.swichRole=function(param){sessionStorage.setItem("currentRole",JSON.stringify(param)),switchRoles.go(param.roleName)},$scope.viewprofile=function(){$window.open("#/dmeProfile")},$scope.viewProfileTemplate=function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/common/partials/Profile_Model_Form.html",controller:"ProfileModelCtrl",size:"lg",resolve:{}},$scope.uconfig.token)},$interval(function(){$scope.msgcount=JSON.parse(sessionStorage.getItem("msgcount"))},1e3),$scope.logout=function(){sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage},$scope.uconfig.token)),$window.sessionStorage.clear(),$state.go("app")},$scope.init()}]),angular.module("app.lme").controller("InvestigationCtrl",["$scope","$rootScope","$state","APIS","$uibModal","DataManager","$window","ModalService","$log","$timeout",function($scope,$rootScope,$state,APIS,$uibModal,DataManager,$window,ModalService,$log,$timeout){function colorCodeTransformation(){angular.forEach($scope.investigation.bloodTests.diabetes[0].data,function(value,index){$scope.watchField(value.fastingBloodGlucose,"fastingBloodGlucose",index),$scope.watchField(value.hba1c,"hba1c",index)}),angular.forEach($scope.investigation.bloodTests.thyroid,function(value,index){$scope.watchField(value.tsh,"tsh",index),$scope.watchField(value.ft4,"ft4",index),$scope.watchField(value.ft3,"ft3",index)}),angular.forEach($scope.investigation.bloodTests.lipidProfile[0].data,function(value,index){$scope.watchField(value.tci,"tci",index),$scope.watchField(value.hdl,"hdl",index),$scope.watchField(value.ldl,"ldl",index),$scope.watchField(value.tg,"tg",index),$scope.watchField(value.cratio,"cratio",index)}),angular.forEach($scope.investigation.bloodTests.hsCRP,function(value,index){$scope.watchField(value.hsCrp,"hscrp",index)}),angular.forEach($scope.investigation.bloodTests.bloodCount,function(value,index){$scope.watchField(value.hb,"hb",index),$scope.watchField(value.rbc,"rbc",index),$scope.watchField(value.wbc,"wbc",index),$scope.watchField(value.platelets,"platelets",index),$scope.watchField(value.htc,"hct",index)}),angular.forEach($scope.investigation.liverPanel[0].data,function(value,index){$scope.watchField(value.ast,"ast",index),$scope.watchField(value.alt,"alt",index),$scope.watchField(value.ggt,"ggt",index)}),angular.forEach($scope.investigation.renalPanel[0].data,function(value,index){$scope.watchField(value.u,"u",index),$scope.watchField(value.cr,"cr",index),$scope.watchField(value.na,"na",index),$scope.watchField(value.k,"k",index),$scope.watchField(value.cl,"cl",index),$scope.watchField(value.egfr,"egfr",index)}),angular.forEach($scope.investigation.spotUACR,function(value,index){$scope.watchField(value.spotUacr,"spotuacr",index)})}function getUploadedDocument(){"DMF"==$scope.visittype||"PR"==$scope.visittype?$scope.referencetype="AR_VISITS":$scope.referencetype="LME_VISITS",APIS.LME_ATTACH_DOC_GRID.data={applicantId:$scope.applicantid,referencetype:$scope.referencetype},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?response.dataBean&&($scope.isDocumentUploaded=response.dataBean.length>0):console.log(response.errorMessage)},$scope.uconfig.token)}$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visittype=$scope.visitDetails.visitType,$scope.visitid=$scope.visitDetails.visitId,$scope.applicantid=$scope.visitDetails.applicantId,$scope.measurementWeight=JSON.parse($window.sessionStorage.getItem("measurement_weight")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$window.sessionStorage.setItem("hedpage","clickhed"),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.bloodlist=[],$scope.fbgcreated_ON=[],$scope.fbgMonth=[],$scope.hba1clist=[],$scope.hba1ccreated_ON=[],$scope.hba1cMonth=[],$scope.ggtlist=[],$scope.ggtMonth=[],$scope.ggtcreated_ON=[],$scope.cratioCharts=[],$scope.cratiodate=[],$scope.cratiovalueMonth=[],$scope.egfrCharts=[],$scope.egfrdate=[],$scope.efgrvalueMonth=[],$scope.frmSubmitted=!1,$scope.frmInvalid=!1,$scope.weightvalue=0,$scope.validlist=[],$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.$on("examLoad",function(event,data){"DMF"==$scope.visittype||"PR"==$scope.visittype?($scope.arloadData(),$scope.arloadCombo()):"CR"==$scope.visittype?($scope.crloadData(),$scope.crloadCombo()):($scope.loadData(),$scope.loadCombo(),$scope.myreq=!0)}),$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.selectedclinic=!0,$scope.measureFollowData=[],$scope.validation=!0,$scope.isDocumentUploaded=!1,$scope.investigation={formInvalid:"N",visitId:"",applicantWeight:"",pageId:"",roleName:"",ecg:{status:"",remarks:""},cxr:{status:"",remarks:""},tmx:{status:"",remarks:""},cardiac:{status:"",remarks:""},drp:{status:"",remarks:""},ctkidney:{status:"",remarks:""},urineLabstix:[{blood:"",bloodFlag:"N",glucose:"",glucoseFlag:"N",albumin:"",albuminFlag:"N",ketone:"",ketoneFlag:"N"}],urineMicrocsopy:[{unit:"",data:[{crystals:"",crystalsFlag:"N",wbc:"",wbcFlag:"N",rbc:"",rbcFlag:"N",epithcells:"",epithcellsFlag:"N",casts:"",castsFlag:"N"}]}],bloodTests:{diabetes:[{unit:"mmol/l",data:[{fastingBloodGlucose:"",fastingBloodGlucoseFlag:"N",hba1c:"",hba1cFlag:"N"}]}],thyroid:[{tsh:"",ft4:"",ft3:"",tshFlag:"N",ft4Flag:"N",ft3Flag:"N"}],lipidProfile:[{unit:"",data:[{tci:"",hdl:"",ldl:"",tg:"",cratio:"",cratioFlag:"N",tciFlag:"N",hdlFlag:"N",ldlFlag:"N",tgFlag:"N"}]}],hsCRP:[{hsCrp:"",hsCrpFlag:"N"}],bloodCount:[{hb:"",rbc:"",wbc:"",platelets:"",htc:"",hbFlag:"N",rbcFlag:"N",wbcFlag:"N",plateletsFlag:"N",htcFlag:"N"}]},liverPanel:[{unit:"",data:[{ast:"",alt:"",ggt:"",astFlag:"N",altFlag:"N",ggtFlag:"N"}]}],renalPanel:[{unit:"",data:[{u:"",cr:"",na:"",k:"",cl:"",egfr:"",egfrFlag:"N",uFlag:"N",crFlag:"N",naFlag:"N",kFlag:"N",clFlag:"N"}]}],spotUACR:[{spotUacr:"",spotUacrFlag:"N"}]},$scope.toDoSave={measurement:{status:!1,alertShown:!1},investigation:{status:!1,alertShown:!1},examination:{status:!1,alertShown:!1},audiometry:{status:!1,alertShown:!1},recomendaion:{status:!1,alertShown:!1}},$scope.dataBind()},$scope.dataBind=function(){$scope.getValidationRules(),"DMF"==$scope.visittype||"PR"==$scope.visittype?($scope.arloadData(),$scope.arloadCombo()):"CR"==$scope.visittype?($scope.crloadData(),$scope.crloadCombo()):($scope.loadData(),$scope.loadCombo(),$scope.myreq=!0),$scope.newform=!0,$scope.measurefollowLoadCombo(),$scope.getMandatoryFields(),$scope.enablenext=!0,$scope.removeRequiredColor(),$scope.$on("measurementWeight",function(event,args){$scope.weightvalue=args.weight}),$scope.$on("ValidationRequestLmeSubmission",function(event,args){$scope.frmSubmitted=!0,$timeout(function(){$scope.form.$invalid||!$scope.validation?$scope.frmInvalid=!0:$scope.frmInvalid=!1,$scope.$root.$broadcast("ValidationStatusInvestigation",{stauts:$scope.frmInvalid})},1e3)}),"Clinic Assistant"==$scope.rolename?$scope.myval=!0:$scope.myval=!1,getUploadedDocument(),$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1}),$scope.$watch("investigation.bloodTests.lipidProfile[0].data",function(newNames,oldNames){});var isFormAlreadyModified=!1;$scope.$watch("form.$dirty",function(newval,old){newval&&($scope.toDoSave.investigation.status=!0,isFormAlreadyModified||$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),isFormAlreadyModified=!0)})},$scope.reqfieldecg=function(val){2==val?$scope.reqstatusecg=!0:$scope.reqstatusecg=!1},$scope.valuecolorchangerbc=function(value,index){var rbcselectedId="#rbc"+index,rbcoptionId="#rbc"+index+" option";$(rbcselectedId).removeClass("textcolorgreen"),$(rbcselectedId).removeClass("textcolorred"),$(rbcselectedId).removeClass("textcolororange"),1==value&&($(rbcselectedId).addClass("textcolorgreen"),$(rbcoptionId).css("color","black")),3!=value&&4!=value&&5!=value||($(rbcselectedId).addClass("textcolorred"),$(rbcoptionId).css("color","black")),2==value&&($(rbcselectedId).addClass("textcolororange"),$(rbcoptionId).css("color","black"))},$scope.valuecolorchangewbc=function(value,index){var wbcselectedId="#wbc"+index,wbcoptionId="#wbc"+index+" option";$(wbcselectedId).removeClass("textcolorgreen"),$(wbcselectedId).removeClass("textcolorred"),$(wbcselectedId).removeClass("textcolororange"),1==value&&($(wbcselectedId).addClass("textcolorgreen"),$(wbcoptionId).css("color","black")),4!=value&&3!=value||($(wbcselectedId).addClass("textcolorred"),$(wbcoptionId).css("color","black")),2==value&&($(wbcselectedId).addClass("textcolororange"),$(wbcoptionId).css("color","black"))},$scope.valuecolorchangeepith=function(value,index){var epithselectedId="#epithcells"+index,epithoptionId="#epithcells"+index+" option";$(epithselectedId).removeClass("textcolorgreen"),$(epithselectedId).removeClass("textcolorred"),$(epithselectedId).removeClass("textcolororange"),1==value&&($(epithselectedId).addClass("textcolorgreen"),$(epithoptionId).css("color","black")),2==value&&($(epithselectedId).addClass("textcolororange"),$(epithoptionId).css("color","black"))},$scope.valuecolorchangeblood=function(value,index){var bloodselectedId="#blood"+index,bloodoptionId="#blood"+index+" option";$(bloodselectedId).removeClass("textcolorgreen"),$(bloodselectedId).removeClass("textcolorred"),$(bloodselectedId).removeClass("textcolororange"),1!=value&&2!=value||($(bloodselectedId).addClass("textcolorgreen"),$(bloodoptionId).css("color","black")),4!=value&&5!=value&&6!=value||($(bloodselectedId).addClass("textcolorred"),$(bloodoptionId).css("color","black")),3==value&&($(bloodselectedId).addClass("textcolororange"),$(bloodoptionId).css("color","black"))},$scope.valuecolorchangealbumin=function(value,index){var albuminselectedId="#albumin"+index,albuminoptionId="#albumin"+index+" option";$(albuminselectedId).removeClass("textcolorgreen"),$(albuminselectedId).removeClass("textcolorred"),$(albuminselectedId).removeClass("textcolororange"),1!=value&&2!=value||($(albuminselectedId).addClass("textcolorgreen"),$(albuminoptionId).css("color","black")),4!=value&&5!=value&&6!=value||($(albuminselectedId).addClass("textcolorred"),$(albuminoptionId).css("color","black")),3==value&&($(albuminselectedId).addClass("textcolororange"),$(albuminoptionId).css("color","black"))},$scope.valuecolorchangeglucose=function(value,index){var glucoseselectedId="#glucose"+index,glucoseoptionId="#glucose"+index+" option";$(glucoseselectedId).removeClass("textcolorgreen"),$(glucoseselectedId).removeClass("textcolorred"),$(glucoseselectedId).removeClass("textcolororange"),1==value&&($(glucoseselectedId).addClass("textcolorgreen"),$(glucoseoptionId).css("color","black")),3!=value&&4!=value&&5!=value&&6!=value||($(glucoseselectedId).addClass("textcolorred"),$(glucoseoptionId).css("color","black")),2==value&&($(glucoseselectedId).addClass("textcolororange"),$(glucoseoptionId).css("color","black"))},$scope.valuecolorchangeketone=function(value,index){var ketoneselectedId="#ketone"+index,ketoneoptionId="#ketone"+index+" option";$(ketoneselectedId).removeClass("textcolorgreen"),$(ketoneselectedId).removeClass("textcolorred"),$(ketoneselectedId).removeClass("textcolororange"),1==value&&($(ketoneselectedId).addClass("textcolorgreen"),$(ketoneoptionId).css("color","black")),3!=value&&4!=value&&5!=value&&6!=value||($(ketoneselectedId).addClass("textcolorred"),$(ketoneoptionId).css("color","black")),2==value&&($(ketoneselectedId).addClass("textcolororange"),$(ketoneoptionId).css("color","black"))},$scope.reqfieldcxr=function(val){2==val?$scope.reqstatuscxr=!0:$scope.reqstatuscxr=!1},$scope.reqfieldtmx=function(val){2==val?$scope.reqstatustmx=!0:$scope.reqstatustmx=!1},$scope.reqfieldcardiac=function(val){2==val?$scope.reqstatuscardiac=!0:$scope.reqstatuscardiac=!1},$scope.reqfielddrp=function(val){2==val?$scope.reqstatusdrp=!0:$scope.reqstatusdrp=!1},$scope.reqfieldctkidney=function(val){2==val?$scope.reqstatusctkidney=!0:$scope.reqstatusctkidney=!1},$scope.$watch("investigation.bloodTests.lipidProfile[0].data",function(newValue,oldValue){angular.forEach(newValue,function(value,key){if(value.cratio){var fieldname="cratio";value.cratioFlag=$scope.watchField(value.cratio,fieldname,key)}})},!0),$scope.$watch("investigation.renalPanel[0].data",function(newValue,oldValue){angular.forEach(newValue,function(value,key){if(value.egfr){var fieldname="egfr";value.egfrFlag=$scope.watchField(value.egfr,fieldname,key)}})},!0),$scope.getValidationRules=function(){$scope.ruleParam={pageCode:"INVEST"},APIS.GET_MEDICAL_TEMP_RULES.data=$scope.ruleParam,DataManager.sendRestRequest(null,APIS.GET_MEDICAL_TEMP_RULES,function(response){response.success?$scope.splitFields(response.dataBean):$log.error("Validation Rules:"+response.errorMessage)},$scope.uconfig.token)},$scope.splitFields=function(fields){$scope.fields={fastingBloodGlucose:null,tci:null,hdl:null,ldl:null,tg:null,cratio:null,hba1c:null,hscrp:null,hb:null,rbc:null,wbc:null,platelets:null,hct:null,ast:null,alt:null,ggt:null,u:null,cr:null,na:null,k:null,cl:null,egfr:null,spotuacr:null},angular.forEach(fields,function(value,key){switch(value.uiFieldName){case"Fasting glucose":$scope.fields.fastingBloodGlucose=value;break;case"HbA1C":$scope.fields.hba1c=value;break;case"TCI":$scope.fields.tci=value;break;case"HDL":$scope.fields.hdl=value;break;case"LDL":$scope.fields.ldl=value;break;case"TSH":$scope.fields.tsh=value;break;case"FT4":$scope.fields.ft4=value;break;case"FT3":$scope.fields.ft3=value;break;case"TG":$scope.fields.tg=value;break;case"HB":$scope.fields.hb=value;break;case"hs-CRP":$scope.fields.hscrp=value;break;case"RBC":$scope.fields.rbc=value;break;
case"WBC":$scope.fields.wbc=value;break;case"PLATELETS":$scope.fields.platelets=value;break;case"HTC":$scope.fields.hct=value;break;case"AST":$scope.fields.ast=value;break;case"ALT":$scope.fields.alt=value;break;case"GGT":$scope.fields.ggt=value;break;case"U":$scope.fields.u=value;break;case"CR":$scope.fields.cr=value;break;case"NA":$scope.fields.na=value;break;case"K":$scope.fields.k=value;break;case"CL":$scope.fields.cl=value;break;case"eGFR":$scope.fields.egfr=value;break;case"Spot UACR":$scope.fields.spotuacr=value;break;case"CRATIO":$scope.fields.cratio=value}})},$scope.diabetesUnitconversion=function(value){"mg/dl"==value?$scope.diabetesUnit2():$scope.diabetesUnit1()},$scope.diabetesUnit2=function(){for(var i=0;i<$scope.investigation.bloodTests.diabetes[0].data.length;i++)""!=$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose&&null!=$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose&&($scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose=parseFloat(18*$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose).toFixed(2))},$scope.diabetesUnit1=function(){for(var i=0;i<$scope.investigation.bloodTests.diabetes[0].data.length;i++)""!=$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose&&null!=$scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose&&($scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose=parseFloat($scope.investigation.bloodTests.diabetes[0].data[i].fastingBloodGlucose/18).toFixed(2))},$scope.lipidprofileUnitconversion=function(value){"mg/dl"==value?$scope.lipidprofileunit2():$scope.lipidprofileunit1()},$scope.lipidprofileunit2=function(){for(var i=0;i<$scope.investigation.bloodTests.lipidProfile[0].data.length;i++)""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tci&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tci&&($scope.investigation.bloodTests.lipidProfile[0].data[i].tci=(38.61*$scope.investigation.bloodTests.lipidProfile[0].data[i].tci).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl&&($scope.investigation.bloodTests.lipidProfile[0].data[i].hdl=(38.61*$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl&&($scope.investigation.bloodTests.lipidProfile[0].data[i].ldl=(38.61*$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tg&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tg&&($scope.investigation.bloodTests.lipidProfile[0].data[i].tg=(88.5*$scope.investigation.bloodTests.lipidProfile[0].data[i].tg).toFixed(2))},$scope.lipidprofileunit1=function(){for(var i=0;i<$scope.investigation.bloodTests.lipidProfile[0].data.length;i++)""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tci&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tci&&($scope.investigation.bloodTests.lipidProfile[0].data[i].tci=($scope.investigation.bloodTests.lipidProfile[0].data[i].tci/38.61).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].hdl&&($scope.investigation.bloodTests.lipidProfile[0].data[i].hdl=($scope.investigation.bloodTests.lipidProfile[0].data[i].hdl/38.61).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].ldl&&($scope.investigation.bloodTests.lipidProfile[0].data[i].ldl=($scope.investigation.bloodTests.lipidProfile[0].data[i].ldl/38.61).toFixed(2)),""!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tg&&null!=$scope.investigation.bloodTests.lipidProfile[0].data[i].tg&&($scope.investigation.bloodTests.lipidProfile[0].data[i].tg=($scope.investigation.bloodTests.lipidProfile[0].data[i].tg/88.5).toFixed(2))},$scope.renalUnitconversion=function(value){"mg/dl"==value?$scope.renalpanelunit2():$scope.renalpanelunit1()},$scope.renalpanelunit2=function(){for(var i=0;i<$scope.investigation.renalPanel[0].data.length;i++)""!=$scope.investigation.renalPanel[0].data[i].u&&null!=$scope.investigation.renalPanel[0].data[i].u&&($scope.investigation.renalPanel[0].data[i].u=(2.808*$scope.investigation.renalPanel[0].data[i].u).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].cr&&null!=$scope.investigation.renalPanel[0].data[i].cr&&($scope.investigation.renalPanel[0].data[i].cr=(11.3*$scope.investigation.renalPanel[0].data[i].cr).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].na&&null!=$scope.investigation.renalPanel[0].data[i].na&&($scope.investigation.renalPanel[0].data[i].na=(2.2989*$scope.investigation.renalPanel[0].data[i].na).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].k&&null!=$scope.investigation.renalPanel[0].data[i].k&&($scope.investigation.renalPanel[0].data[i].k=(3.9102*$scope.investigation.renalPanel[0].data[i].k).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].cl&&null!=$scope.investigation.renalPanel[0].data[i].cl&&($scope.investigation.renalPanel[0].data[i].cl=(3.5453*$scope.investigation.renalPanel[0].data[i].cl).toFixed(2))},$scope.renalpanelunit1=function(){for(var i=0;i<$scope.investigation.renalPanel[0].data.length;i++)""!=$scope.investigation.renalPanel[0].data[i].u&&null!=$scope.investigation.renalPanel[0].data[i].u&&($scope.investigation.renalPanel[0].data[i].u=($scope.investigation.renalPanel[0].data[i].u/2.808).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].cr&&null!=$scope.investigation.renalPanel[0].data[i].cr&&($scope.investigation.renalPanel[0].data[i].cr=($scope.investigation.renalPanel[0].data[i].cr/11.3).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].na&&null!=$scope.investigation.renalPanel[0].data[i].na&&($scope.investigation.renalPanel[0].data[i].na=($scope.investigation.renalPanel[0].data[i].na/2.2989).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].k&&null!=$scope.investigation.renalPanel[0].data[i].k&&($scope.investigation.renalPanel[0].data[i].k=($scope.investigation.renalPanel[0].data[i].k/3.9102).toFixed(2)),""!=$scope.investigation.renalPanel[0].data[i].cl&&null!=$scope.investigation.renalPanel[0].data[i].cl&&($scope.investigation.renalPanel[0].data[i].cl=($scope.investigation.renalPanel[0].data[i].cl/3.5453).toFixed(2))},$scope.liverUnitconversion=function(value){"U/L"==value?$scope.liverUnit1():$scope.liverUnit2()},$scope.liverUnit2=function(){for(var i=0;i<$scope.investigation.liverPanel[0].data.length;i++)""!=$scope.investigation.liverPanel[0].data[i].ast&&null!=$scope.investigation.liverPanel[0].data[i].ast&&($scope.investigation.liverPanel[0].data[i].ast=($scope.investigation.liverPanel[0].data[i].ast/58.823).toFixed(2)),""!=$scope.investigation.liverPanel[0].data[i].alt&&null!=$scope.investigation.liverPanel[0].data[i].alt&&($scope.investigation.liverPanel[0].data[i].alt=($scope.investigation.liverPanel[0].data[i].alt/58.823).toFixed(2)),""!=$scope.investigation.liverPanel[0].data[i].ggt&&null!=$scope.investigation.liverPanel[0].data[i].ggt&&($scope.investigation.liverPanel[0].data[i].ggt=($scope.investigation.liverPanel[0].data[i].ggt/58.823).toFixed(2))},$scope.liverUnit1=function(){for(var i=0;i<$scope.investigation.liverPanel[0].data.length;i++)""!=$scope.investigation.liverPanel[0].data[i].ast&&null!=$scope.investigation.liverPanel[0].data[i].ast&&($scope.investigation.liverPanel[0].data[i].ast=(58.823*$scope.investigation.liverPanel[0].data[i].ast).toFixed(2)),""!=$scope.investigation.liverPanel[0].data[i].alt&&null!=$scope.investigation.liverPanel[0].data[i].alt&&($scope.investigation.liverPanel[0].data[i].alt=(58.823*$scope.investigation.liverPanel[0].data[i].alt).toFixed(2)),""!=$scope.investigation.liverPanel[0].data[i].ggt&&null!=$scope.investigation.liverPanel[0].data[i].ggt&&($scope.investigation.liverPanel[0].data[i].ggt=(58.823*$scope.investigation.liverPanel[0].data[i].ggt).toFixed(2))},$scope.cratio=function(index,tci,hdl){return tci&&hdl?void($scope.investigation.bloodTests.lipidProfile[0].data[index].cratio=($scope.investigation.bloodTests.lipidProfile[0].data[index].tci/$scope.investigation.bloodTests.lipidProfile[0].data[index].hdl).toFixed(2)):($scope.investigation.bloodTests.lipidProfile[0].data[index].cratio=null,!1)},$scope.egfr=function(index,cr){return $scope.investigation.renalPanel[0].data[index].cr||$scope.weightvalue?void("M"==$scope.visitDetails.applicantDetails.gender?$scope.investigation.renalPanel[0].data[index].egfr=((140-$scope.visitDetails.applicantDetails.age)*$scope.weightvalue*1/(72*$scope.investigation.renalPanel[0].data[index].cr)).toFixed(2):$scope.investigation.renalPanel[0].data[index].egfr=((140-$scope.visitDetails.applicantDetails.age)*$scope.weightvalue*.85/(72*$scope.investigation.renalPanel[0].data[index].cr)).toFixed(2)):($scope.investigation.renalPanel[0].data[index].egfr="",!1)},$scope.addlabtix=function(){$scope.labtixdata={blood:"",bloodFlag:"N",glucose:"",glucoseFlag:"N",albumin:"",albuminFlag:"N",ketone:"",ketoneFlag:"N"},$scope.investigation.urineLabstix.push($scope.labtixdata)},$scope.removelabstix=function(index){$scope.investigation.urineLabstix.length>1&&$scope.investigation.urineLabstix.splice(index,1)},$scope.addmicroscopy=function(){$scope.microscopydata={crystals:"",crystalsFlag:"N",wbc:"",wbcFlag:"N",rbc:"",rbcFlag:"N",epithcells:"",epithcellsFlag:"N",casts:"",castsFlag:"N"},$scope.investigation.urineMicrocsopy[0].data.push($scope.microscopydata)},$scope.removemicroscopy=function(index){$scope.investigation.urineMicrocsopy[0].data.length>1&&$scope.investigation.urineMicrocsopy[0].data.splice(index,1)},$scope.adddiabetes=function(){$scope.adddiabetesdata={fastingBloodGlucose:"",fastingBloodGlucoseFlag:"N",hba1c:"",hba1cFlag:"N"},$scope.investigation.bloodTests.diabetes[0].data.push($scope.adddiabetesdata)},$scope.removediabetes=function(index){$scope.investigation.bloodTests.diabetes[0].data.length>1&&$scope.investigation.bloodTests.diabetes[0].data.splice(index,1)},$scope.addthyroid=function(){$scope.addthyroiddata={tsh:"",ft4:"",ft3:"",tshFlag:"N",ft4Flag:"N",ft3Flag:"N"},$scope.investigation.bloodTests.thyroid.push($scope.addthyroiddata)},$scope.removethyroid=function(index){$scope.investigation.bloodTests.thyroid.length>1&&$scope.investigation.bloodTests.thyroid.splice(index,1)},$scope.addlipidprofile=function(){$scope.addlipidprofiledata={tci:"",hdl:"",ldl:"",tg:"",cratio:"",cratioFlag:"N",tciFlag:"N",hdlFlag:"N",ldlFlag:"N",tgFlag:"N"},$scope.investigation.bloodTests.lipidProfile[0].data.push($scope.addlipidprofiledata)},$scope.removelipidprofile=function(index){$scope.investigation.bloodTests.lipidProfile[0].data.length>1&&$scope.investigation.bloodTests.lipidProfile[0].data.splice(index,1)},$scope.addhscrp=function(){$scope.addhscrpdata={hsCrp:"",hsCrpFlag:"N"},$scope.investigation.bloodTests.hsCRP.push($scope.addhscrpdata)},$scope.removehscrp=function(index){$scope.investigation.bloodTests.hsCRP.length>1&&$scope.investigation.bloodTests.hsCRP.splice(index,1)},$scope.addbloodcount=function(){$scope.addbloodcountdata={hb:"",rbc:"",wbc:"",platelets:"",htc:"",hbFlag:"N",rbcFlag:"N",wbcFlag:"N",plateletsFlag:"N",htcFlag:"N"},$scope.investigation.bloodTests.bloodCount.push($scope.addbloodcountdata)},$scope.removebloodcount=function(index){$scope.investigation.bloodTests.bloodCount.length>1&&$scope.investigation.bloodTests.bloodCount.splice(index,1)},$scope.addliverpanel=function(){$scope.addliverpaneldata={ast:"",alt:"",ggt:"",astFlag:"N",altFlag:"N",ggtFlag:"N"},$scope.investigation.liverPanel[0].data.push($scope.addliverpaneldata)},$scope.removeliverpanel=function(index){$scope.investigation.liverPanel[0].data.length>1&&$scope.investigation.liverPanel[0].data.splice(index,1)},$scope.addrenalpanel=function(){$scope.addrenalpaneldata={u:"",cr:"",na:"",k:"",cl:"",egfr:"",egfrFlag:"N",uFlag:"N",crFlag:"N",naFlag:"N",kFlag:"N",clFlag:"N"},$scope.investigation.renalPanel[0].data.push($scope.addrenalpaneldata)},$scope.removerenalpanel=function(index){$scope.investigation.renalPanel[0].data.length>1&&$scope.investigation.renalPanel[0].data.splice(index,1)},$scope.addspotuacr=function(){$scope.addspotuacrdata={spotUacr:"",spotUacrFlag:"N"},$scope.investigation.spotUACR.push($scope.addspotuacrdata)},$scope.removespotuacr=function(index){$scope.investigation.spotUACR.length>1&&$scope.investigation.spotUACR.splice(index,1)},$scope.loadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LME_COMBO,function(response){response.success?$scope.investigationdata=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.crloadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_CR_COMBO,function(response){response.success?$scope.investigationdata=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.arloadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_AR_COMBO,function(response){response.success?$scope.investigationdata=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.saveData=function(param){return $scope.toDoSave.investigation.status=!1,$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),$scope.frmSubmitted=!0,$scope.validlist.length?$scope.validation=!1:$scope.validation=!0,$scope.validation?($scope.frmInvalid=!1,$scope.form.$invalid||!$scope.validation?$scope.investigation.formInvalid="Y":$scope.investigation.formInvalid="N",$scope.investigation.visitId=$scope.visitid,"mg/dl"==$scope.investigation.bloodTests.diabetes[0].unit&&("mmol/l"==$scope.investigation.bloodTests.diabetes[0].unit,$scope.diabetesUnit1()),"mg/dl"==$scope.investigation.bloodTests.lipidProfile[0].unit&&("mmol/l"==$scope.investigation.bloodTests.lipidProfile[0].unit,$scope.lipidprofileunit1()),"mg/dl"==$scope.investigation.renalPanel[0].unit&&("mmol/l"==$scope.investigation.renalPanel[0].unit,$scope.renalpanelunit1()),"ukat/l"==$scope.investigation.liverPanel[0].unit&&("U/L"==$scope.investigation.liverPanel[0].unit,$scope.liverUnit1()),$scope.investigation.roleName=$scope.rolename,APIS.LME_INVESTIGATION_SAVE.data=$scope.investigation,void DataManager.sendRestRequest(null,APIS.LME_INVESTIGATION_SAVE,function(response){$scope.status=response,response.success?(ModalService.openAlert("alert","Investigation",response.successMessage,"null","null"),"next"==param&&$state.go("physicalexamination"),$scope.myreq=!1,$scope.$root.$broadcast("examinationONload",!0)):("LOCKED"==response.errorMessage&&(ModalService.openAlert("alert","Investigation","DME has started working on the applicant LME. You will be navigated to Queue."),$state.go("queue")),console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages))},$scope.uconfig.token)):($scope.frmInvalid=!0,ModalService.openAlert("alert","Investigation","Please enter correct values in fields"),!1)},$scope.arsaveData=function(){return $scope.toDoSave.investigation.status=!1,$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),$scope.frmSubmitted=!0,$scope.validlist.length?$scope.validation=!1:$scope.validation=!0,$scope.validation?($scope.frmInvalid=!1,$scope.investigation.visitId=$scope.visitid,"mg/dl"==$scope.investigation.bloodTests.diabetes[0].unit&&("mmol/l"==$scope.investigation.bloodTests.diabetes[0].unit,$scope.diabetesUnit1()),"mg/dl"==$scope.investigation.bloodTests.lipidProfile[0].unit&&("mmol/l"==$scope.investigation.bloodTests.lipidProfile[0].unit,$scope.lipidprofileunit1()),"mg/dl"==$scope.investigation.renalPanel[0].unit&&("mmol/l"==$scope.investigation.renalPanel[0].unit,$scope.renalpanelunit1()),"ukat/l"==$scope.investigation.liverPanel[0].unit&&("U/L"==$scope.investigation.liverPanel[0].unit,$scope.liverUnit1()),$scope.investigation.roleName=$scope.rolename,APIS.AR_INVESTIGATION_SAVE.data=$scope.investigation,void DataManager.sendRestRequest(null,APIS.AR_INVESTIGATION_SAVE,function(response){$scope.status=response,response.success?(ModalService.openAlert("alert","success",response.successMessage,"null","null"),$scope.enablenext=!1,$scope.$root.$broadcast("examinationONload",!0)):("LOCKED"==response.errorMessage&&(ModalService.openAlert("alert","Investigation","DME has started working on the applicant AR. You will be navigated to Queue."),$state.go("queue")),console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages))},$scope.uconfig.token)):($scope.frmInvalid=!0,ModalService.openAlert("alert","Investigation","Please enter correct values in fields"),!1)},$scope.crsaveData=function(){return $scope.frmSubmitted=!0,$scope.form.$invalid||!$scope.validation?($scope.frmInvalid=!0,ModalService.openAlert("alert","Investigation","Please fill all mandatory fields"),!1):($scope.frmInvalid=!1,$scope.frmSubmitted=!1,$scope.frmInvalid=!1,$scope.investigation.visitId=$scope.visitid,"mg/dl"==$scope.investigation.bloodTests.diabetes[0].unit&&("mmol/l"==$scope.investigation.bloodTests.diabetes[0].unit,$scope.diabetesUnit1()),"mg/dl"==$scope.investigation.bloodTests.lipidProfile[0].unit&&("mmol/l"==$scope.investigation.bloodTests.lipidProfile[0].unit,$scope.lipidprofileunit1()),"mg/dl"==$scope.investigation.renalPanel[0].unit&&("mmol/l"==$scope.investigation.renalPanel[0].unit,$scope.renalpanelunit1()),"ukat/l"==$scope.investigation.liverPanel[0].unit&&("U/L"==$scope.investigation.liverPanel[0].unit,$scope.liverUnit1()),$scope.investigation.roleName=$scope.uconfig.userFacilities[0].roles[0].roleName,APIS.CR_INVESTIGATION_SAVE.data=$scope.investigation,void DataManager.sendRestRequest(null,APIS.CR_INVESTIGATION_SAVE,function(response){$scope.status=response,response.success?(ModalService.openAlert("alert","success",response.successMessage,"null","null"),$scope.enablenext=!1):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token))},$scope.loadData=function(){$scope.investigation={},APIS.GET_LME_INVESTIGATION_DATA.data={visitId:$scope.visitid,applicantId:$scope.applicantid},DataManager.sendRestRequest(null,APIS.GET_LME_INVESTIGATION_DATA,function(response){if(response.success){if($scope.investigation=response.dataBean,$timeout(function(){angular.forEach($scope.investigation.urineLabstix,function(value,key){$scope.valuecolorchangeblood(value.blood,key),$scope.valuecolorchangeglucose(value.glucose,key),$scope.valuecolorchangealbumin(value.albumin,key),$scope.valuecolorchangeketone(value.ketone,key)}),angular.forEach($scope.investigation.urineMicrocsopy[0].data,function(value,key){$scope.valuecolorchangewbc(value.wbc,key),$scope.valuecolorchangerbc(value.rbc,key),$scope.valuecolorchangeepith(value.epithcells,key)})},4e3),$scope.investigation.urineLabstix&&0!=$scope.investigation.urineLabstix.length||$scope.urinelabstix(),$scope.investigation.urineMicrocsopy&&0!=$scope.investigation.urineMicrocsopy.length||$scope.urineMicrocsopy(),$scope.investigation.bloodTests.diabetes?$scope.investigation.bloodTests.diabetes[0].data||$scope.diabetes():$scope.diabetes(),$scope.investigation.bloodTests.thyroid||$scope.thyroid(),$scope.investigation.bloodTests.lipidProfile?$scope.investigation.bloodTests.lipidProfile[0].data||$scope.lipidprofile():$scope.lipidprofile(),$scope.investigation.bloodTests.hsCRP||$scope.hscrp(),$scope.investigation.bloodTests.bloodCount||$scope.bloodcount(),$scope.investigation.liverPanel?$scope.investigation.liverPanel[0].data||$scope.liverpanel():$scope.liverpanel(),$scope.investigation.renalPanel?$scope.investigation.renalPanel[0].data||$scope.renalpanel():$scope.renalpanel(),$scope.investigation.spotUACR||$scope.spotuacr(),$scope.investigation.urineMicrocsopy[0].unit||($scope.investigation.urineMicrocsopy[0].unit="ul"),$scope.investigation.bloodTests.diabetes[0].unit||($scope.investigation.bloodTests.diabetes[0].unit="mmol/l"),$scope.investigation.bloodTests.lipidProfile[0].unit||($scope.investigation.bloodTests.lipidProfile[0].unit="mmol/l"),$scope.investigation.renalPanel[0].unit||($scope.investigation.renalPanel[0].unit="mmol/l"),$scope.investigation.liverPanel[0].unit||($scope.investigation.liverPanel[0].unit="U/L"),angular.forEach($scope.investigation.bloodTests.lipidProfile,function(value,key){angular.forEach(value.data,function(val,index){""!=val.tci&&null!=val.tci&&""!=val.hdl&&null!=val.hdl&&(val.cratio=isNaN((val.tci/val.hdl).toFixed(2))?" ":(val.tci/val.hdl).toFixed(2))})}),angular.forEach($scope.investigation.renalPanel,function(value,key){angular.forEach(value.data,function(val,index){""!=$scope.visitDetails.applicantDetails.age&&""!=$scope.investigation.applicantWeight&&""!=val.cr&&null!=$scope.visitDetails.applicantDetails.age&&null!=$scope.investigation.applicantWeight&&null!=val.cr&&("M"==$scope.visitDetails.applicantDetails.gender?val.egfr=isNaN(((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*val.cr)).toFixed(2))?" ":((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*val.cr)).toFixed(2):val.egfr=isNaN(((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*val.cr)).toFixed(2))?" ":((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*val.cr)).toFixed(2))})}),colorCodeTransformation(),$scope.fastingglucose=$scope.investigation.bloodTests.diabetes[0].previousData,null!=$scope.fastingglucose&&$scope.fastingglucose.length>0)for(var b=0;b<$scope.fastingglucose.length;b++)$scope.fastingbloodchart($scope.fastingglucose[b].fastingBloodGlucose,$scope.fastingglucose[b].entryDate),$scope.hba1c($scope.fastingglucose[b].hba1c,$scope.fastingglucose[b].entryDate);if($scope.ggtdata=$scope.investigation.liverPanel[0].previousData,null!=$scope.ggtdata&&$scope.ggtdata.length>0)for(var b=0;b<$scope.ggtdata.length;b++)$scope.ggt($scope.ggtdata[b].ggt,$scope.ggtdata[b].entryDate);if($scope.cratiodata=$scope.investigation.bloodTests.lipidProfile[0].previousData,null!=$scope.cratiodata&&$scope.cratiodata.length>0)for(var b=0;b<$scope.cratiodata.length;b++)$scope.cratiographfn($scope.cratiodata[b].tci,$scope.cratiodata[b].hdl,$scope.cratiodata[b].entryDate);if($scope.egfrdata=$scope.investigation.renalPanel[0].previousData,null!=$scope.egfrdata&&$scope.egfrdata.length>0)for(var b=0;b<$scope.egfrdata.length;b++)$scope.egfrgraphfn($scope.egfrdata[b].cr,$scope.ggtdata[b].entryDate)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.crloadData=function(){APIS.GET_CR_INVESTIGATION_DATA.data={visitId:$scope.visitid,applicantId:$scope.applicantid},DataManager.sendRestRequest(null,APIS.GET_CR_INVESTIGATION_DATA,function(response){response.success?($scope.enableNext=!0,$scope.investigation=response.dataBean,$scope.investigation.urineLabstix&&0!=$scope.investigation.urineLabstix.length||$scope.urinelabstix(),$scope.investigation.urineMicrocsopy&&0!=$scope.investigation.urineMicrocsopy.length||$scope.urineMicrocsopy(),$scope.investigation.bloodTests.diabetes&&$scope.investigation.bloodTests.diabetes[0].data||$scope.diabetes(),$scope.investigation.bloodTests.lipidProfile&&$scope.investigation.bloodTests.lipidProfile[0].data||$scope.lipidprofile(),$scope.investigation.bloodTests.hsCRP&&0!=$scope.investigation.bloodTests.hsCRP.length||$scope.hscrp(),$scope.investigation.bloodTests.bloodCount||$scope.bloodcount(),$scope.investigation.liverPanel&&0!=$scope.investigation.liverPanel.length||$scope.liverpanel(),$scope.investigation.renalPanel&&0!=$scope.investigation.renalPanel.length||$scope.renalpanel(),$scope.investigation.spotUACR&&0!=$scope.investigation.spotUACR.length||$scope.spotuacr(),$scope.investigation.urineMicrocsopy[0].unit||($scope.investigation.urineMicrocsopy[0].unit="ul"),$scope.investigation.bloodTests.diabetes[0].unit||($scope.investigation.bloodTests.diabetes[0].unit="mmol/l"),$scope.investigation.bloodTests.lipidProfile[0].unit||($scope.investigation.bloodTests.lipidProfile[0].unit="mmol/l"),$scope.investigation.renalPanel[0].unit||($scope.investigation.renalPanel[0].unit="mmol/l"),$scope.investigation.liverPanel[0].unit||($scope.investigation.liverPanel[0].unit="U/L"),angular.forEach($scope.investigation.bloodTests.lipidProfile,function(value,key){angular.forEach(value.data,function(val,index){""!=val.tci&&""!=val.hdl&&null!=val.tci&&null!=val.hdl&&(val.cratio=(val.tci/val.hdl).toFixed(2))})}),angular.forEach($scope.investigation.renalPanel,function(value,key){angular.forEach(value.data,function(val,index){""!=$scope.visitDetails.applicantDetails.age&&""!=$scope.measurementWeight&&""!=val.cr&&null!=$scope.visitDetails.applicantDetails.age&&null!=$scope.measurementWeight&&null!=val.cr&&("M"==$scope.visitDetails.applicantDetails.gender?val.egfr=((140-$scope.visitDetails.applicantDetails.age)*$scope.measurementWeight*1/(72*val.cr)).toFixed(2):val.egfr=((140-$scope.visitDetails.applicantDetails.age)*$scope.measurementWeight*.85/(72*val.cr)).toFixed(2))})})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.arloadData=function(){APIS.GET_AR_INVESTIGATION_DATA.data={visitId:$scope.visitid,applicantId:$scope.applicantid},DataManager.sendRestRequest(null,APIS.GET_AR_INVESTIGATION_DATA,function(response){if(response.success){if($scope.investigation=response.dataBean,$timeout(function(){angular.forEach($scope.investigation.urineLabstix,function(value,key){$scope.valuecolorchangeblood(value.blood,key),$scope.valuecolorchangeglucose(value.glucose,key),$scope.valuecolorchangealbumin(value.albumin,key),$scope.valuecolorchangeketone(value.ketone,key)}),angular.forEach($scope.investigation.urineMicrocsopy[0].data,function(value,key){$scope.valuecolorchangewbc(value.wbc,key),$scope.valuecolorchangerbc(value.rbc,key),$scope.valuecolorchangeepith(value.epithcells,key)})},4e3),$scope.investigation.urineLabstix&&0!=$scope.investigation.urineLabstix.length||$scope.urinelabstix(),$scope.investigation.urineMicrocsopy&&0!=$scope.investigation.urineMicrocsopy.length||$scope.urineMicrocsopy(),$scope.investigation.bloodTests.diabetes?$scope.investigation.bloodTests.diabetes[0].data||$scope.diabetes():$scope.diabetes(),$scope.investigation.bloodTests.thyroid||$scope.thyroid(),$scope.investigation.bloodTests.lipidProfile?$scope.investigation.bloodTests.lipidProfile[0].data||$scope.lipidprofile():$scope.lipidprofile(),$scope.investigation.bloodTests.hsCRP||$scope.hscrp(),$scope.investigation.bloodTests.bloodCount||$scope.bloodcount(),$scope.investigation.liverPanel?$scope.investigation.liverPanel[0].data||$scope.liverpanel():$scope.liverpanel(),$scope.investigation.renalPanel?$scope.investigation.renalPanel[0].data||$scope.renalpanel():$scope.renalpanel(),$scope.investigation.spotUACR||$scope.spotuacr(),$scope.investigation.urineMicrocsopy[0].unit||($scope.investigation.urineMicrocsopy[0].unit="ul"),$scope.investigation.bloodTests.diabetes[0].unit||($scope.investigation.bloodTests.diabetes[0].unit="mmol/l"),$scope.investigation.bloodTests.lipidProfile[0].unit||($scope.investigation.bloodTests.lipidProfile[0].unit="mmol/l"),$scope.investigation.renalPanel[0].unit||($scope.investigation.renalPanel[0].unit="mmol/l"),$scope.investigation.liverPanel[0].unit||($scope.investigation.liverPanel[0].unit="U/L"),angular.forEach($scope.investigation.bloodTests.lipidProfile,function(value,key){angular.forEach(value.data,function(val,index){""!=val.tci&&""!=val.hdl&&null!=val.tci&&null!=val.hdl&&(val.cratio=isNaN((val.tci/val.hdl).toFixed(2))?" ":(val.tci/val.hdl).toFixed(2))})}),angular.forEach($scope.investigation.renalPanel,function(value,key){angular.forEach(value.data,function(val,index){""!=$scope.visitDetails.applicantDetails.age&&""!=$scope.investigation.applicantWeight&&""!=val.cr&&null!=$scope.visitDetails.applicantDetails.age&&null!=$scope.investigation.applicantWeight&&null!=val.cr&&("M"==$scope.visitDetails.applicantDetails.gender?val.egfr=isNaN(((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*val.cr)).toFixed(2))?" ":((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*val.cr)).toFixed(2):val.egfr=isNaN(((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*val.cr)).toFixed(2))?" ":((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*val.cr)).toFixed(2))})}),colorCodeTransformation(),$scope.fastingglucose=$scope.investigation.bloodTests.diabetes[0].previousData,null!=$scope.fastingglucose&&$scope.fastingglucose.length>0)for(var b=0;b<$scope.fastingglucose.length;b++)$scope.fastingbloodchart($scope.fastingglucose[b].fastingBloodGlucose,$scope.fastingglucose[b].entryDate),$scope.hba1c($scope.fastingglucose[b].hba1c,$scope.fastingglucose[b].entryDate);if($scope.ggtdata=$scope.investigation.liverPanel[0].previousData,null!=$scope.ggtdata&&$scope.ggtdata.length>0)for(var b=0;b<$scope.ggtdata.length;b++)$scope.ggt($scope.ggtdata[b].ggt,$scope.ggtdata[b].entryDate);if($scope.cratiodata=$scope.investigation.bloodTests.lipidProfile[0].previousData,null!=$scope.cratiodata&&$scope.cratiodata.length>0)for(var b=0;b<$scope.cratiodata.length;b++)$scope.cratiographfn($scope.cratiodata[b].tci,$scope.cratiodata[b].hdl,$scope.cratiodata[b].entryDate);if($scope.egfrdata=$scope.investigation.renalPanel[0].previousData,null!=$scope.egfrdata&&$scope.egfrdata.length>0)for(var b=0;b<$scope.egfrdata.length;b++)$scope.egfrgraphfn($scope.egfrdata[b].cr,$scope.ggtdata[b].entryDate)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.measurefollowLoadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LME_FOLLOWUP_COMBO,function(response){response.success?$scope.measureFollowData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupdoAction=function(){$uibModal.open({animation:!0,templateUrl:"invFollowUp",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.dmfdoAction=function(){$uibModal.open({animation:!0,templateUrl:"invDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.AbortdoAction=function(){$uibModal.open({animation:!0,templateUrl:"invAbort",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.doAction=function(){$uibModal.open({animation:!0,templateUrl:"asthmacontrol",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.doattachAction=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/attachmentmodel.html",controller:"ActionCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.urinelabstix=function(){var temp=[{blood:null,bloodFlag:"N",glucose:null,glucoseFlag:"N",albumin:null,albuminFlag:"N",ketone:null,ketoneFlag:"N"}];$scope.investigation.urineLabstix=temp},$scope.urineMicrocsopy=function(){var temp={data:[{crystals:null,crystalsFlag:"N",wbc:null,wbcFlag:"N",rbc:null,rbcFlag:"N",epithcells:null,epithcellsFlag:"N",casts:null,
castsFlag:"N"}]};$scope.investigation.urineMicrocsopy.push(temp)},$scope.diabetes=function(){var temp=[{data:[{fastingBloodGlucose:null,fastingBloodGlucoseFlag:"N",hba1c:null,hba1cFlag:"N"}]}];$scope.investigation.bloodTests.diabetes=temp},$scope.thyroid=function(){var temp=[{tsh:null,ft4:null,ft3:null,tshFlag:"N",ft4Flag:"N",ft3Flag:"N"}];$scope.investigation.bloodTests.thyroid=temp},$scope.lipidprofile=function(){var temp=[{data:[{tci:null,hdl:null,ldl:null,tg:null,cratio:null,cratioFlag:"N",tciFlag:"N",hdlFlag:"N",ldlFlag:"N",tgFlag:"N"}]}];$scope.investigation.bloodTests.lipidProfile=temp},$scope.hscrp=function(){var temp=[{hsCrp:null,hsCrpFlag:"N"}];$scope.investigation.bloodTests.hsCRP=temp},$scope.bloodcount=function(){var temp=[{hb:null,rbc:null,wbc:null,platelets:null,htc:null,hbFlag:"N",rbcFlag:"N",wbcFlag:"N",plateletsFlag:"N",htcFlag:"N"}];$scope.investigation.bloodTests.bloodCount=temp},$scope.liverpanel=function(){var temp=[{data:[{ast:null,alt:null,ggt:null,astFlag:"N",altFlag:"N",ggtFlag:"N"}]}];$scope.investigation.liverPanel=temp},$scope.renalpanel=function(){var temp=[{data:[{u:null,cr:null,na:null,k:null,cl:null,egfr:null,egfrFlag:"N",uFlag:"N",crFlag:"N",naFlag:"N",kFlag:"N",clFlag:"N"}]}];$scope.investigation.renalPanel=temp},$scope.goPreview=function(){$window.open("#/viewhed?preview=2")},$scope.spotuacr=function(){var temp=[{spotUacr:null,spotUacrFlag:"N"}];$scope.investigation.spotUACR=temp},$scope.removeRequiredColor=function(gtId,value,reqfield,index){value?$("#"+gtId).removeClass("showcolor"):reqfield&&$("#"+gtId).addClass("showcolor")},$scope.checkNumber=function(fieldName,givenVal,min,max){if(isNaN(givenVal))return $scope.validlistCheck1=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck1.length&&$scope.validlist.push(fieldName),!1;var fieldMin=fieldName+"Min",fieldMax=fieldName+"Max";if(""==givenVal||null==givenVal){$scope[fieldMin]=!1,$scope[fieldMax]=!1,$scope.validation=!0;var temp=$scope.validlist.indexOf(fieldName);return temp!=-1&&$scope.validlist.splice(temp,1),!1}if(!min||!max){if(givenVal.toString().length>12)$scope.validlistCheck1=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck1.length&&$scope.validlist.push(fieldName);else{var temp=$scope.validlist.indexOf(fieldName);temp!=-1&&$scope.validlist.splice(temp,1)}return!1}if(Number(givenVal)<min)return $scope.validlistCheck=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck.length&&$scope.validlist.push(fieldName),$scope[fieldMin]=!0,$scope[fieldMax]=!1,!1;var temp=$scope.validlist.indexOf(fieldName);if(temp!=-1&&$scope.validlist.splice(temp,1),$scope[fieldMin]=!1,Number(givenVal)>max)return $scope.validlistCheck=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck.length&&$scope.validlist.push(fieldName),$scope[fieldMin]=!1,$scope[fieldMax]=!0,!1;var temp=$scope.validlist.indexOf(fieldName);temp!=-1&&$scope.validlist.splice(temp,1),$scope[fieldMax]=!1},$scope.getMandatoryFields=function(){$scope.ruleParam={pageCode:"INVEST",applicationId:$scope.visitDetails.applicantDetails.applicationId,visitId:$scope.visitid},APIS.GET_MANDATORY_FIELDS.data=$scope.ruleParam,DataManager.sendRestRequest(null,APIS.GET_MANDATORY_FIELDS,function(response){response.success?$scope.splitMantotoryFields(response.dataBean):$log.error("Mandatory Fields:"+response.errorMessage)},$scope.uconfig.token)},$scope.splitMantotoryFields=function(fields){$scope.requiedFields={ecg:!1,cxr:!1,tmx:!1,cardiac:!1,drp:!1,ctkidney:!1,labstix:!1,blood:!1,glucose:!1,albumin:!1,ketone:!1,microscopy:!1,crystals:!1,microwbc:!1,microrbc:!1,epithcells:!1,casts:!1,bloodtests:!1,diabetes:!1,fastingBloodGlucose:!1,hba1c:!1,lipidProfile:!1,tci:!1,hdl:!1,ldl:!1,tg:!1,cratio:!1,hscrp:!1,bloodcount:!1,hb:!1,rbc:!1,wbc:!1,platelets:!1,hct:!1,liverpanel:!1,ast:!1,alt:!1,ggt:!1,renalPanel:!1,u:!1,cr:!1,na:!1,k:!1,cl:!1,egfr:!1,spotuacr:!1,tsh:!1,ft4:!1,ft3:!1};var fieldsArray=null;fields.length>0&&(fieldsArray=fields[0].split(","),angular.forEach(fieldsArray,function(value,key){switch(value){case"ECG":$scope.requiedFields.ecg=!0;break;case"CXR":$scope.requiedFields.cxr=!0;break;case"TMX":$scope.requiedFields.tmx=!0;break;case"CARDIAC":$scope.requiedFields.cardiac=!0;break;case"DRP":$scope.requiedFields.drp=!0;break;case"CT Kidney":$scope.requiedFields.ctkidney=!0;break;case"LABSTIX":$scope.requiedFields.labstix=!0,$scope.requiedFields.blood=!0,$scope.requiedFields.glucose=!0,$scope.requiedFields.albumin=!0,$scope.requiedFields.ketone=!0;break;case"BLOOD":$scope.requiedFields.blood=!0;break;case"GLUCOSE":$scope.requiedFields.glucose=!0;break;case"ALBUMIN":$scope.requiedFields.albumin=!0;break;case"KETONE":$scope.requiedFields.ketone=!0;break;case"MICROSCOPY":$scope.requiedFields.microscopy=!0,$scope.requiedFields.crystals=!0,$scope.requiedFields.microwbc=!0,$scope.requiedFields.microrbc=!0,$scope.requiedFields.epithcells=!0,$scope.requiedFields.casts=!0;break;case"CRYSTALS(/UL)":$scope.requiedFields.crystals=!0;break;case"MICROWBC":$scope.requiedFields.microwbc=!0;break;case"MICRORBC":$scope.requiedFields.microrbc=!0;break;case"EPITHCELLS":$scope.requiedFields.epithcells=!0;break;case"CASTS":$scope.requiedFields.casts=!0;break;case"DIABETES":$scope.requiedFields.diabetes=!0,$scope.requiedFields.fastingBloodGlucose=!0,$scope.requiedFields.hba1c=!0;break;case"Fasting glucose":$scope.requiedFields.fastingBloodGlucose=!0;break;case"HbA1C":$scope.requiedFields.hba1c=!0;break;case"lipids":$scope.requiedFields.lipidProfile=!0,$scope.requiedFields.tci=!0,$scope.requiedFields.hdl=!0,$scope.requiedFields.ldl=!0,$scope.requiedFields.tg=!0;break;case"TCI":$scope.requiedFields.tci=!0;break;case"HDL":$scope.requiedFields.hdl=!0;break;case"LDL":$scope.requiedFields.ldl=!0;break;case"TG":$scope.requiedFields.tg=!0;break;case"CRATIO":$scope.requiedFields.cratio=!0;break;case"hs-CRP":$scope.requiedFields.hscrp=!0;break;case"BLOODCOUNT":$scope.requiedFields.bloodcount=!0,$scope.requiedFields.hb=!0,$scope.requiedFields.rbc=!0,$scope.requiedFields.wbc=!0,$scope.requiedFields.platelets=!0,$scope.requiedFields.hct=!0;break;case"HB":$scope.requiedFields.hb=!0;break;case"RBC":$scope.requiedFields.rbc=!0;break;case"WBC":$scope.requiedFields.wbc=!0;break;case"PLATELETS":$scope.requiedFields.platelets=!0;break;case"HTC":$scope.requiedFields.hct=!0;break;case"LIVER":$scope.requiedFields.ast=!0,$scope.requiedFields.alt=!0,$scope.requiedFields.ggt=!0;break;case"AST":$scope.requiedFields.ast=!0;break;case"ALT":$scope.requiedFields.alt=!0;break;case"GGT":$scope.requiedFields.ggt=!0;break;case"RENAL":$scope.requiedFields.renalPanel=!0,$scope.requiedFields.u=!0,$scope.requiedFields.cr=!0,$scope.requiedFields.na=!0,$scope.requiedFields.k=!0,$scope.requiedFields.cl=!0;break;case"U":$scope.requiedFields.u=!0;break;case"CR":$scope.requiedFields.cr=!0;break;case"NA":$scope.requiedFields.na=!0;break;case"K":$scope.requiedFields.k=!0;break;case"CL":$scope.requiedFields.cl=!0;break;case"eGFR":$scope.requiedFields.egfr=!0;break;case"Spot UACR":$scope.requiedFields.spotuacr=!0;break;case"TSH":$scope.requiedFields.tsh=!0;break;case"FT4":$scope.requiedFields.ft4=!0;break;case"FT3":$scope.requiedFields.ft3=!0}}))},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.applicantid,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"invDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})})}else $scope.dmfdoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.bloodglucosepop=function(){$uibModal.open({animation:!0,templateUrl:"fbgchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.fastingbloodchart=function(value,date){$scope.bloodlist.push(parseFloat(value)),$scope.fbgcreated_ON.push(date),$scope.fbgchartData()},$scope.fbgchartData=function(){$scope.bloodvalue=$scope.bloodlist,$scope.dateFormat($scope.fbgcreated_ON),$scope.loadfbgChart()},$scope.dateFormat=function(fbgvalue){for(var i=0;i<fbgvalue.length;i++)$scope.datecalc=new Date(fbgvalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.fbgMonth.push($scope.monthrep)},$scope.loadfbgChart=function(){$("#fbggraph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"FBG Measurements"}},xAxis:{categories:$scope.fbgMonth},series:[{name:"Fasting Blood Glucose Value",data:$scope.bloodlist}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.hba1cpop=function(){$uibModal.open({animation:!0,templateUrl:"hba1cchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.hba1c=function(value,date){$scope.hba1clist.push(parseFloat(value)),$scope.hba1ccreated_ON.push(date),$scope.hba1cchartData()},$scope.hba1cchartData=function(){$scope.datavlue=[],$scope.hba1cvalue=$scope.hba1clist,$scope.date($scope.hba1ccreated_ON),$scope.loadhba1cChart()},$scope.date=function(hba1cvalue){$scope.dateParts=[];for(var i=0;i<hba1cvalue.length;i++)$scope.datecalc=new Date(hba1cvalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.hba1cMonth.push($scope.monthrep)},$scope.loadhba1cChart=function(){$("#hba1cgraph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"HBA1C Measurements"}},xAxis:{categories:$scope.fbgMonth},series:[{name:"HBA1C Value",data:$scope.hba1cvalue}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.ggtcpop=function(){$uibModal.open({animation:!0,templateUrl:"ggtchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.ggt=function(value,date){$scope.ggtlist.push(parseFloat(value)),$scope.ggtcreated_ON.push(date),$scope.ggtchartData()},$scope.ggtchartData=function(){$scope.ggtvalue=$scope.ggtlist,$scope.date($scope.ggtcreated_ON),$scope.loadggtChart()},$scope.date=function(ggtvalue){$scope.dateParts=[];for(var i=0;i<ggtvalue.length;i++)$scope.datecalc=new Date(ggtvalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.ggtMonth.push($scope.monthrep)},$scope.loadggtChart=function(){$("#ggtgraph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"GGT Measurements"}},xAxis:{categories:$scope.ggtMonth},series:[{name:"GGT Value",data:$scope.ggtvalue}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.cratiopop=function(){$uibModal.open({animation:!0,templateUrl:"cratiochart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.cratiographfn=function(tci,hdl,date){$scope.cratiocalculation=(tci/hdl).toFixed(2),$scope.cratioCharts.push(parseFloat($scope.cratiocalculation)),$scope.cratiodate.push(date),$scope.cratiographData()},$scope.cratiographData=function(){$scope.cratiocalvalue=$scope.cratioCharts,$scope.date($scope.cratiodate),$scope.loadcratioChart()},$scope.date=function(cratiovalue){$scope.dateParts=[];for(var i=0;i<cratiovalue.length;i++)$scope.datecalc=new Date(cratiovalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.cratiovalueMonth.push($scope.monthrep)},$scope.loadcratioChart=function(){$("#cratiograph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"CRatio Records"}},xAxis:{categories:$scope.cratiovalueMonth},series:[{name:"C-Ratio Value",data:$scope.cratiocalvalue}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.egfrpop=function(){$uibModal.open({animation:!0,templateUrl:"egfrchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.egfrgraphfn=function(cr,entryDate){"M"==$scope.visitDetails.applicantDetails.gender?($scope.egfrcalculation=((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*1/(72*cr)).toFixed(2),$scope.egfrCharts.push(parseFloat($scope.egfrcalculation))):($scope.egfrcalculation=((140-$scope.visitDetails.applicantDetails.age)*$scope.investigation.applicantWeight*.85/(72*cr)).toFixed(2),$scope.egfrCharts.push(parseFloat($scope.egfrcalculation))),$scope.egfrdate.push(entryDate),$scope.egfrgraphData()},$scope.egfrgraphData=function(){$scope.egfrcalvalue=$scope.egfrCharts,$scope.date($scope.egfrdate),$scope.loadefgrChart()},$scope.date=function(efgrvalue){$scope.dateParts=[];for(var i=0;i<efgrvalue.length;i++)$scope.datecalc=new Date(efgrvalue[i]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.efgrvalueMonth.push($scope.monthrep)},$scope.loadefgrChart=function(){$("#efgrgraph").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"Previous eGFR Records"}},xAxis:{categories:$scope.efgrvalueMonth},series:[{name:"eGFR Value",data:$scope.egfrcalvalue}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.getColorCode=function(givenValue,fields){if(!givenValue||!$scope.fields[fields].highValue||!$scope.fields[fields].normalValue)return!1;if(" "==$scope.fields[fields].highValue&&" "==$scope.fields[fields].normalValue)return!1;var highValue=$scope.fields[fields].highValue,source=highValue.split(" "),highSym=source[0],highVal=parseFloat(source[1]),normalValue=$scope.fields[fields].normalValue,sourcen=normalValue.split(" "),normalSym=sourcen[0],normalVal=parseFloat(sourcen[1]),color="orange";return">"==highSym&&givenValue>highVal&&(color="red"),">="==highSym&&givenValue>=highVal&&(color="red"),"<"==highSym&&givenValue<highVal&&(color="red"),"<="==highSym&&givenValue<=highVal&&(color="red"),"!="==highSym&&givenValue!=highVal&&(color="red"),"=="==highSym&&givenValue==highVal&&(color="red"),">"==normalSym&&givenValue>normalVal&&(color="green"),">="==normalSym&&givenValue>=normalVal&&(color="green"),"<"==normalSym&&givenValue<normalVal&&(color="green"),"<="==normalSym&&givenValue<=normalVal&&(color="green"),"!="==normalSym&&givenValue!=normalVal&&(color="green"),"=="==normalSym&&givenValue==normalVal&&(color="green"),color},$scope.watchField=function(value,fieldName,index){var temp=void 0===index?fieldName+"Color":fieldName+index+"Color";return value&&null!=$scope.fields[fieldName]&&($scope[temp]=$scope.getColorCode(value,fieldName)),$scope[temp]},$scope.clickNext=function(){$scope.frmSubmitted=!0,$timeout(function(){return $scope.form.$invalid||!$scope.validation?($scope.frmInvalid=!0,ModalService.openAlert("alert","Investigation","Please fill all mandatory fields or There was an error with your submission."),!1):($scope.frmInvalid=!1,void $scope.saveData("next"))},500)},$scope.getColor=function(fieldname){return $scope[fieldname]},$scope.init()}]),$(document).ready(function(){$("body").on("keydown","input",function(event){var url=window.location.href;if(url.indexOf("measurement")>0&&13==event.keyCode)return!1})}),angular.module("app.lme").controller("LmeCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","$log","CAASConfig","ResourceManager","ModalService",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,$log,CAASConfig,regRM,ModalService){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userSeqId=$scope.uconfig.userSeqId,$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.regRM=regRM,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.uconfig||$state.go("login"),$scope.statusPage=[],$scope.nCases=[],$scope.statusdetails=[],$scope.statusdetail=[],$scope.getTransferdatas=[],$scope.transferaccept={refType:"",status:"",tranreqId:"",notificationsId:"",visitId:"",transtoId:""},$scope.dataBind()},$scope.dataBind=function(){$scope.loadData(),$scope.visitList(),$scope.notificationdata()},$scope.loadChart=function(){Highcharts.chart("container",{chart:{type:"column"},title:{text:null},subtitle:{text:"Assesment Status"},yAxis:{min:0,title:{text:"No of Cases"}},xAxis:{categories:$scope.statusdetails},series:[{name:"Assesment Status",data:$scope.nCases}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"top",floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.visitList=function(){DataManager.sendRestRequest(null,APIS.LME_VISITLIST,function(response){response.success?sessionStorage.setItem("VisitRecords",JSON.stringify(response.dataBean)):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.loadData=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_LME_WORKLIST.URL,url=tempUrl+"/"+$scope.uconfig.userSeqId+"/"+$scope.roleid,APIS.GET_LME_WORKLIST.URL=url,DataManager.sendRestRequest(null,APIS.GET_LME_WORKLIST,function(response){response.success?($scope.loadpageData=response.dataBean,angular.forEach($scope.loadpageData.graphDetialsDTO,function(value,key){$scope.statusPage.push(value.status_page_name),$scope.nCases.push(value.no_of_Cases),$scope.statusdetail=value.status_page_name+"<br>"+value.no_of_Cases,$scope.statusdetails.push($scope.statusdetail)}),$scope.loadChart()):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.GET_LME_WORKLIST.URL=tempUrl},$scope.notificationdata=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_NOTIFICATION.URL,url=tempUrl+"/"+$scope.userInfo.personId,APIS.LME_NOTIFICATION.URL=url,DataManager.sendRestRequest(null,APIS.LME_NOTIFICATION,function(response){response.success?($scope.pageData=response.dataBean,console.log($scope.pageData),sessionStorage.setItem("msgcount",JSON.stringify($scope.pageData))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_NOTIFICATION.URL=tempUrl},$scope.requestUnlocknoti=function(unlockparam){$scope.unlockpapplicant=unlockparam,$scope.unlockDetails={reftype:$scope.unlockpapplicant.reftype,transferRequestId:$scope.unlockpapplicant.transferRequestId,refId:$scope.unlockpapplicant.refId,notificationsId:$scope.unlockpapplicant.notificationsId},APIS.LME_NOTIFI_UNLOCK.data=$scope.unlockDetails,DataManager.sendRestRequest(null,APIS.LME_NOTIFI_UNLOCK,function(response){response.success?($scope.unlockreq=response.dataBean,$scope.loadData()):console.log(response)},$scope.uconfig.token)},$scope.doCAAction=function(tablerecord){$scope.deferredtab=!1,sessionStorage.setItem("DefferedPage",JSON.stringify($scope.deferredtab)),$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.personId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.resumeca(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))},$scope.callapplicant=function(tablerecord){sessionStorage.removeItem("underDMF"),$scope.deferredtab=!1,sessionStorage.setItem("DefferedPage",JSON.stringify($scope.deferredtab)),$scope.callapplicant={applicationId:tablerecord.applicationId,visitId:tablerecord.visitId,type:tablerecord.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.callapplicant,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&($scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.personId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),"hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?(sessionStorage.removeItem("hed"),$state.go("hed")):$state.go("measurement"))},$scope.uconfig.token),"DMF"==tablerecord.visitType[0].lmetype||"PR"==tablerecord.visitType[0].lmetype?($scope.targeted_bean=[],$scope.targeted_beanData=sessionStorage.setItem("targeted_beanData",JSON.stringify($scope.targeted_bean))):($scope.targetedparam={applicationid:tablerecord.applicationId},APIS.LME_PHYSICALEXAMINATION_TARGETED.data=$scope.targetedparam,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_TARGETED,function(response){response.success?($scope.targeted_bean=response.dataBean.listLME_SendToUI_DTO,$scope.targeted_beanData=sessionStorage.setItem("targeted_beanData",JSON.stringify($scope.targeted_bean))):console.log(response.errorMessage)},$scope.uconfig.token))},$scope.resumeca=function(worklistSelected){$scope.resumeca={applicationId:worklistSelected.applicationId,visitId:worklistSelected.visitId,type:worklistSelected.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.resumeca,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?$state.go("hed"):$state.go("measurement"))},$scope.uconfig.token)},$scope.doresumeAction=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.personId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.resume(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect)),$scope.setupdatetrue=!1,sessionStorage.setItem("LME_Updatecheck",JSON.stringify($scope.setupdatetrue))},$scope.resume=function(worklistSelected){ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"resume",function(){}),$scope.$on("resumeOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RESUME.URL,url=tempUrl+"/"+worklistSelected.visitId+"/"+worklistSelected.type,APIS.LME_DME_RESUME.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RESUME,function(response){response.success?$state.go("measurement"):console.log(response)},$scope.uconfig.token),APIS.LME_DME_RESUME.URL=tempUrl}),$scope.$on("resumecancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.requestunlock=function(worklistSelected){$scope.requestSend=!1,ModalService.openAlert("confirm","info","Do you want to send request for unlock?",$scope,"unlock",function(){$scope.$on("unlockOk",function(){0==$scope.requestSend&&($scope.requnlock={visitId:worklistSelected.visitId,applicantname:worklistSelected.applicantname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId,type:worklistSelected.type},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(){return!0},$scope.uconfig.token),$scope.requestSend=!0)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")})})},$scope.unlock=function(worklistSelected){ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+worklistSelected.visitId+"/"+worklistSelected.statuspage,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?ModalService.openAlert("alert","Unlock","Unlock Done","","",function(){$window.location.reload()}):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.dorecallAction=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.personId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.recall(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))},$scope.recall=function(worklistSelected){ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+worklistSelected.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.dorequestrecallAction=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.personId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.requestrecall(tablerecord),$scope.lmehomedirect=!0,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))},$scope.requestrecall=function(worklistSelected){ModalService.openAlert("confirm","warning","Do you want to request for recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:worklistSelected.applicantname,dmename:worklistSelected.doctorname,applicantid:worklistSelected.topersonId,visitId:worklistSelected.visitId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})},$scope.msg=function(param){$scope.showMsg=param;var url=null,tempUrl=null;tempUrl=APIS.LME_UPDATENOTIFICATIONS.URL,url=tempUrl+"/"+$scope.showMsg.notificationsId,APIS.LME_UPDATENOTIFICATIONS.URL=url,DataManager.sendRestRequest(null,APIS.LME_UPDATENOTIFICATIONS,function(response){response.success?($scope.pageData1=response.dataBean,sessionStorage.setItem("msgcount",JSON.stringify($scope.pageData1))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_UPDATENOTIFICATIONS.URL=tempUrl},$scope.getTransfer=function(notificationSelected){APIS.GET_LME_TRANSFER_VIEW.data={notificationsId:notificationSelected.notificationsId,tranreqId:notificationSelected.transferRequestId,refType:notificationSelected.reftype},DataManager.sendRestRequest(null,APIS.GET_LME_TRANSFER_VIEW,function(response){response.success?($scope.getTransferdatas=response.dataBean,$scope.notificationsId=notificationSelected.notificationsId,""!=$scope.getTransferdatas&&($scope.notifydateFormate=function(param){return new Date(param)})):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.acceptTransfer=function(transferDetails,notificationsId){$scope.transferAcceptReject={appName:transferDetails.appName,notificationsId:notificationsId,refType:transferDetails.refType,status:"Accept",tranreqId:transferDetails.tranreqId,transtoId:transferDetails.transtoId,
visitId:transferDetails.refId},APIS.LME_TRANSFER_ACCEPT_REJECT.data=$scope.transferAcceptReject,DataManager.sendRestRequest(null,APIS.LME_TRANSFER_ACCEPT_REJECT,function(response){response.success?$window.location.reload():$log.error("Transfer Accept Model: "+response.errorMessages)},$scope.uconfig.token)},$scope.rejectTransfer=function(transferDetails,notificationsId){$scope.transferAcceptReject={appName:transferDetails.appName,notificationsId:notificationsId,refType:transferDetails.refType,status:"Reject",tranreqId:transferDetails.tranreqId,transformId:transferDetails.transformId,transtoId:transferDetails.transtoId,visitId:transferDetails.refId},APIS.LME_TRANSFER_ACCEPT_REJECT.data=$scope.transferAcceptReject,DataManager.sendRestRequest(null,APIS.LME_TRANSFER_ACCEPT_REJECT,function(response){response.success?$window.location.reload():$log.error("Transfer Reject Model: "+response.errorMessages)},$scope.uconfig.token)},$scope.deleteNotification=function(notificationsId){var url=null,tempUrl=null;tempUrl=APIS.LME_NOTIFICATION_DELETE.URL,url=tempUrl+"/"+notificationsId,APIS.LME_NOTIFICATION_DELETE.URL=url,DataManager.sendRestRequest(null,APIS.LME_NOTIFICATION_DELETE,function(response){response.success?$window.location.reload():$log.error("Notification Delete: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_NOTIFICATION_DELETE.URL=tempUrl},$scope.dateFormate=function(param){var date=param.split("/"),newDate=date[2]+"-"+date[1]+"-"+date[0];return new Date(newDate)},$scope.goToPofile=function(tablerecord){$scope.visitDetails={},$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.personId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$window.open("#/profile")},$scope.init()}]),angular.module("app.lme").controller("LmeapplicantprofileCtrl",["$scope","$state","APIS","$window",function($scope,$state,APIS,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.showTab="profile"},$scope.init()}]),angular.module("app.lme").controller("LmeappprofileCtrl",["$scope","$state","APIS","$rootScope","DataManager","$window",function($scope,$state,APIS,$rootScope,DataManager,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),console.log($scope.visitInfo.applicantDetails.personId),$scope.personId=$scope.visitInfo.applicantDetails.personId,$scope.applicantid=$scope.visitInfo.applicantId,$scope.applicantuserId=$scope.visitInfo.applicantuserId,$scope.uconfig||$state.go("login"),$scope.appliprodet(),$scope.applicantmac(),$scope.applicanttype()},$scope.appliprodet=function(){if("yes"!=$scope.visitInfo.applicantDetails.E1status){var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.applicantuserId,APIS.GET_PROFILE.URL=url,APIS.GET_PROFILE.data={},DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success?($scope.getappliprofdet=response.dataBean,angular.forEach($scope.getappliprofdet.address,function(value,key){$scope.getappliprofdet.address[key].postalCode&&(5==$scope.getappliprofdet.address[key].postalCode.toString().length?$scope.getappliprofdet.address[key].postalCode="0"+$scope.getappliprofdet.address[key].postalCode:$scope.getappliprofdet.address[key].postalCode=$scope.getappliprofdet.address[key].postalCode)}),$scope.getappliprofdet.photo&&angular.element(".profilePic").attr("src","data:image/jpeg;base64,"+$scope.getappliprofdet.photo)):console.log(response.errorMessages)},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl}else{var url=null,tempUrl=null;tempUrl=APIS.CAMB_GET_E1PROFILE.URL,APIS.CAMB_GET_E1PROFILE.URL=tempUrl,APIS.CAMB_GET_E1PROFILE.data=$scope.personId,DataManager.sendRestRequest(null,APIS.CAMB_GET_E1PROFILE,function(response){response.success?($scope.getappliprofdet=response.dataBean,console.log($scope.getappliprofdet),$scope.getappliprofdet.photo&&angular.element(".profilePic").attr("src","data:image/jpeg;base64,"+$scope.getappliprofdet.photo)):console.log(response.errorMessages)},$scope.uconfig.token),APIS.CAMB_GET_E1PROFILE.URL=tempUrl}},$scope.applicantmac=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_APPLICANTMACS.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_APPLICANTMACS.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_APPLICANTMACS,function(response){response.success?$scope.appliminimac=response.dataBean:console.log(response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_APPLICANTMACS.URL=tempUrl},$scope.applicanttype=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_APPLICANTTYPE.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_APPLICANTTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_APPLICANTTYPE,function(response){response.success?$scope.appliminitype=response.dataBean:console.log(response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_APPLICANTTYPE.URL=tempUrl},$scope.init()}]),angular.module("app.lme").controller("LmeinprogressCtrl",["$scope","$state","APIS","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter",function($scope,$state,APIS,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userSeqId=$scope.uconfig.userSeqId,$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.personId=$scope.userInfo.personId,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visittypeRecord=JSON.parse(sessionStorage.getItem("VisitRecords")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.visitType={I:!1,R:!1,B:!1,60:!1,DMF:!1,PR:!1,EVERY:!1},$scope.visitData=[],$scope.selectedAction={selectedObject:{}},$scope.keys={idno:"",applicantname:"",doctorname:"",visitType:{lmetype:""}},$scope.keyvalue=[{lmetype:null}],$scope.selectedclinic=!0,$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.visiList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20,30],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.clinicdata=[],$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas(),$scope.visitList(),$scope.visitInfo&&($scope.loaddme($scope.visitInfo.applicantDetails.applicationId),$scope.loadclinic($scope.visitInfo.applicantDetails.applicationId))},$scope.tabledatas=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_INPROGRESS.URL,url=tempUrl+$scope.roleid+"/"+$scope.userSeqId,APIS.LME_INPROGRESS.URL=url,DataManager.sendRestRequest(null,APIS.LME_INPROGRESS,function(response){response.success&&($scope.mrfilteredStores=response.dataBean,$scope.temp=response.dataBean,console.log($scope.mrfilteredStores),$scope.$emit("lmeInprogressCount",{count:response.dataBean.length}),$scope.visitList(),$scope.drList=$scope.groupDr(),$scope.select($scope.currentPage,$scope.mrfilteredStores))},$scope.uconfig.token),APIS.LME_INPROGRESS.URL=tempUrl},$scope.visitList=function(){$scope.visittypeRecord&&$scope.groupVisit($scope.visittypeRecord)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.currentPage=1,$scope.select(1,data),$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){if($scope.keys.idno||$scope.keys.applicantname||$scope.keys.doctorname||$scope.keys.visitType.lmetype){$scope.mrfilteredStores=$scope.temp;var data=$scope.mrfilteredStores;return null==$scope.keys.doctorname&&($scope.keys.doctorname=""),null==$scope.keys.visitType.lmetype&&($scope.keys.visitType.lmetype=""),data=$filter("filter")(data,$scope.keys),$scope.mrfilteredStores=data,$scope.onFilterChange(data)}$scope.mrfilteredStores=$scope.temp,$scope.mrcurrentPageStores=$scope.select($scope.currentPage,$scope.mrfilteredStores)},$scope.doAction=function(actionParam,applicantParam,tablerecord){$scope.visitDetails=null,$scope.applicantid=null,$scope.applicantid=tablerecord.applicantId,$scope.deferredtab=!1,sessionStorage.setItem("DefferedPage",JSON.stringify($scope.deferredtab)),$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.triggerAction(actionParam,applicantParam,tablerecord),$scope.lmehomedirect=!1,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect)),$scope.targetedparam={applicationid:tablerecord.applicationId},APIS.LME_PHYSICALEXAMINATION_TARGETED.data=$scope.targetedparam,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_TARGETED,function(response){response.success?($scope.targeted_bean=response.dataBean.listLME_SendToUI_DTO,$scope.targeted_beanData=sessionStorage.setItem("targeted_beanData",JSON.stringify($scope.targeted_bean))):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.triggerAction=function(actionParam,applicantParam,tablerecord){switch(sessionStorage.removeItem("LME_Updatecheck"),$scope.swichModel="",actionParam.actionName){case"Abort":$scope.swichModel="lmeinprogressabort";break;case"Accept Transfer Request":break;case"Attach Documents":break;case"CAMB Instructions":break;case"Call Applicant":return $scope.callapplicant={applicationId:tablerecord.applicationId,visitId:tablerecord.visitId,type:tablerecord.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.callapplicant,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?(sessionStorage.removeItem("hed"),$state.go("hed")):$state.go("measurement"))},$scope.uconfig.token),!1;case"Create AR Visit":break;case"DMF":$scope.val="";var url=null,tempUrl=null;return tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+tablerecord.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"lmeinprogressdmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})})}else $scope.dmf(tablerecord)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl,!1;case"Follow Up":break;case"HED":break;case"Preview":break;case"VIEW DMF":$scope.swichModel="lmeinprogressdmf";break;case"Recall":return ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Recall":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:tablerecord.applicantname,dmename:tablerecord.doctorname,applicantid:tablerecord.applicantId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Unlock":return $scope.selectedAction.selectedObject={},ModalService.openAlert("confirm","warning","Do you want to send the request for unlock?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){$scope.requnlock={visitId:tablerecord.visitId,applicantname:tablerecord.applicantname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId,type:tablerecord.type},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(response){response.success},$scope.uconfig.token)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Resume":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"resume",function(){}),$scope.$on("resumeOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RESUME.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RESUME.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RESUME,function(response){response.success?$state.go("measurement"):console.log(response)},$scope.uconfig.token),APIS.LME_DME_RESUME.URL=tempUrl}),$scope.$on("resumecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Transfer":"AR"==tablerecord.type?$scope.swichModel="arlmeinprogresstransfer":$scope.swichModel="lmeinprogrestransfer";break;case"Unlock":return $scope.selectedAction.selectedObject={},ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+tablerecord.visitId+"/"+tablerecord.statuspageName,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?ModalService.openAlert("alert","Unlock","Unlock Done","","",function(){$window.location.reload()}):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Update":return ModalService.openAlert("confirm","warning","Are you sure you want to update the selected record?",$scope,"update",function(){}),$scope.$on("updateOk",function(){$state.go("measurement")}),$scope.$on("updatecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"View Submission":break;case"Create LME Visit":break;case"Next":break;case"Request CAMB Review":break;case"Review Capel Export":break;case"Review Aris Export":break;case"Publish LMAB":break;case"Publish Letters":break;case"Referral":break;case"Send":break;case"View LMF Comments":break;case"Review Assessment Changes":break;case"Close":break;case"Return to LMAB":break;case"Circulate":break;case"Commence":break;case"Submit":break;case"View  Only":break;default:$scope.swichModel="noAction"}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:tablerecord,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.groupDr=function(){var drlist=[];return angular.forEach($scope.mrfilteredStores,function(value,key){var temp={doctorId:value.doctorId,doctorname:value.doctorname};drlist.push(temp)}),drlist},$scope.removeVisit=function(){angular.forEach($scope.mrfilteredStores,function(combo,index){visitType[combo.code]&&tempArray.push(combo)})},$scope.groupVisit=function(visitCombo){angular.forEach($scope.mrfilteredStores,function(value,key){angular.forEach(value.visitType,function(visit,index){switch(visit.lmetype){case"I":$scope.visitType.I=!0;break;case"R":$scope.visitType.R=!0;break;case"B":$scope.visitType.B=!0;break;case"60":$scope.visitType[60]=!0;break;case"DMF":$scope.visitType.DMF=!0;break;case"PR":$scope.visitType.PR=!0;break;case"EVERY":$scope.visitType.EVERY=!0}})});var tempArray=[];angular.forEach(visitCombo,function(combo,index){$scope.visitType[combo.code]&&tempArray.push(combo)}),$scope.visitData=tempArray},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.loaddme=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.DOCTOR_LIST.URL,url=tempUrl+"/"+applicationId,APIS.DOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.DOCTOR_LIST,function(response){response.success?($scope.doctordata=response.dataBean,angular.forEach($scope.doctordata,function(value,key){$scope.userSeqId==value.dmeuserId&&$scope.doctordata.splice(key,1)}),$window.sessionStorage.setItem("doctorDetails",JSON.stringify($scope.doctordata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.DOCTOR_LIST.URL=tempUrl},$scope.loadclinic=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.CLINIC_LOCATION.URL,url=tempUrl+"/"+applicationId,APIS.CLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.CLINIC_LOCATION,function(response){response.success?$scope.clinicdata=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CLINIC_LOCATION.URL=tempUrl},$scope.dmf=function(param){$uibModal.open({animation:!0,templateUrl:"lmeinprogressdmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.init()}]),angular.module("app.lme").controller("MeasurementsCtrl",["$scope","$state","$filter","APIS","DataManager","$timeout","$window","$rootScope","$uibModal","$log","ModalService","$stateParams",function($scope,$state,$filter,APIS,DataManager,$timeout,$window,$rootScope,$uibModal,$log,ModalService,$stateParams){function colorCodeTransformation(){$scope.watchField($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.pd,"pdeso","null",$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId),angular.forEach($scope.mesurementData.generalDTO.suspineDataDTO,function(value,index){$scope.watchField(value.suspineDTO.sys,"suspineSys",index),$scope.watchField(value.suspineDTO.dia,"suspineDia",index),$scope.watchField(value.standingDTO.sys,"standingSys",index),$scope.watchField(value.standingDTO.dia,"standingDia",index),$scope.watchField(value.pulseRate,"pulseRate",index),value.posturalDrop>20?$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDropColor=!0:$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDropColor=!1}),angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,index){$scope.watchField(value.pefr,"pefr",index),$scope.watchField(value.actscore,"actScore",index)}),$scope.watchField($scope.mesurementData.generalDTO.height,"height"),$scope.watchField($scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight,"weight"),$scope.watchField($scope.mesurementData.generalDTO.waistRatioDTO.waist,"waist"),$scope.watchField($scope.mesurementData.generalDTO.waistRatioDTO.hip,"hip"),$scope.watchField($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.convergenceLimit,"convergenceLimit"),$scope.watchField($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.pd,"pdeso","null",$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId),$scope.watchField($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.pd,"pdhypo","null",$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId),$scope.watchField($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.pd,"madrodpdeso","null",$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId),$scope.watchField($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.pd,"madrodpdhyper","null",$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId)}function isRequiredAudogram(){$scope.isInvalidAudiometry={left:!0,right:!0};var tempArray=[],leftgraphInvalid=[],rightgraphInvalid=[],bothLRInvalid=[],required=!1,withoutAid={airSelected:!1,boneSelected:!1};return angular.forEach($scope.audioData.audiometry,function(value,key){var isWithAid=!1;"withoutAid"==value.hearingAid&&"air"==value.type||"withoutAid"==value.hearingAid&&"bone"==value.type?(isWithAid=!1,"air"==value.type?withoutAid.airSelected=!0:withoutAid.boneSelected=!0,value.left.length?$scope.isInvalidAudiometry.left=!1:$scope.isInvalidAudiometry.left=!0,value.right.length?$scope.isInvalidAudiometry.right=!1:$scope.isInvalidAudiometry.right=!0):isWithAid=!0;var temp={left:$scope.isInvalidAudiometry.left,right:$scope.isInvalidAudiometry.right};isWithAid||tempArray.push(temp)}),leftgraphInvalid=$filter("filter")(tempArray,{left:!0,right:!1}),rightgraphInvalid=$filter("filter")(tempArray,{left:!1,right:!0}),bothLRInvalid=$filter("filter")(tempArray,{left:!0,right:!0}),leftgraphInvalid.length&&rightgraphInvalid.length&&bothLRInvalid.length&&!withoutAid.airSelected&&!withoutAid.boneSelected&&(required=!0),$scope.requiedFields.audiogram&&required&&(required=!0),required}$scope.init=function(){$scope.showColorPalletMsg=!0,$scope.isSubmitted=!1,$scope.onlyNumbers=/^\d+$/,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$window.sessionStorage.setItem("hedpage","clickhed"),$scope.measureFollowData=[],$scope.visittype=$scope.visitInfo.visitType,$scope.validlist=[],$scope.isLenseUsed=null,"DMF"==$scope.visitInfo.visitType||"PR"==$scope.visitInfo.visitType?$scope.lmearaudiomerty=!0:$scope.lmeaudiomerty=!0,$scope.airbone="air",$scope.audioaid="withoutAid",$scope.colorPlatesValid=!0,$scope.audiogramData=[],$scope.frmSubmitted=!1,$scope.setRequriedField=!0,$scope.setaudioField={},$scope.frmInvalid=!1,$scope.slectedVison=null,$scope.paramVison=[],$scope.isVisionNear=!1,$scope.isVisionDistant=!1,$scope.validation=!0,$scope.enableNext=!1,$scope.bmiCharts=[],$scope.bmivalue=[],$scope.datevlue=[],$scope.datevle=[],$scope.sysMonth=[],$scope.weightcreated_ON=[],$scope.bmicreated_ON=[],$scope.weightlist=[],$scope.prewaistsRatio=[],$scope.waistcreated_ON=[],$scope.WaistMonth=[],$scope.syslist=[],$scope.dialist=[],$scope.syscreated_ON=[],$scope.audioData={visitID:$scope.visitInfo.visitId,remarks:"",audiometry:[{hearingAid:"",type:"",leftColorFlag:"N",rightColorFlag:"N",left:[],right:[]}]},$scope.uconfig||$state.go("login"),$scope.colorPlates=[{plateNo:1,platestatus:"a"},{plateNo:2,platestatus:"a"},{plateNo:3,platestatus:"a"},{plateNo:4,platestatus:"a"},{plateNo:5,platestatus:"a"},{plateNo:6,platestatus:"a"},{plateNo:7,platestatus:"a"},{plateNo:8,platestatus:"a"},{plateNo:9,platestatus:"a"},{plateNo:10,platestatus:"a"},{plateNo:11,platestatus:"a"},{plateNo:12,platestatus:"a"},{plateNo:13,platestatus:"a"},{plateNo:14,platestatus:"a"},{plateNo:15,platestatus:"a"},{plateNo:16,platestatus:"a"},{plateNo:17,platestatus:"a"},{plateNo:18,platestatus:"a"},{plateNo:19,platestatus:"a"},{plateNo:20,platestatus:"a"},{plateNo:21,platestatus:"a"},{plateNo:22,platestatus:"a"},{plateNo:23,platestatus:"a"},{plateNo:24,platestatus:"a"},{plateNo:25,platestatus:"a"}],$scope.mesurementData={formInvalid:"N",visitID:$scope.visitInfo.visitId,generalDTO:{height:null,heightFlag:"N",curentBmiDTO:{weightDTO:{currentWaight:null,waightFlag:"N"},bmiChartDTO:{currentBMI:null,bMIFlag:"N"}},waistRatioDTO:{waist:null,waistFlag:"N",hip:null,hipFlag:"N",ratioDTO:{currentReading:null,waistHipRatioFlag:"N"}},suspineDataDTO:[{suspineDTO:{sysFlag:"N",diaFlag:"N",sys:null,dia:null},standingDTO:{standingSysFlag:"N",standingDiaFlag:"N",sys:null,dia:null},posturalDrop:"",posturalDropFlag:"N",pulseRateFlag:"N",pulseRate:"",remarks:null}],actScoreDTOList:[{pefr:null,pefrFlag:"N",remarks:null,asthmacontrol:{actQn1Score:null,actQn2Score:null,actQn3Score:null,actQn4Score:null,actQn5Score:null},actScoreFlag:"N"}]},visionCorrection:{visionRequired:"N",visionType:"",contactLense:"",spectacles:"",correctiveyepower:null,metricsLeftDTO:{ltSphere:null,ltSphereFlag:"N",ltCylinder:null,ltCylinderFlag:"N",ltAxis:null,ltAxisFlag:"N",ltIntermediate:null,ltIntermediateFlag:"N",ltNear:null,ltNearFlag:"N"},metricsRightDTO:{rtSphere:null,rtSphereFlag:"N",rtCylinder:null,rtCylinderFlag:"N",rtAxis:null,rtAxisFlag:"N",rtIntermediate:null,rtIntermediateFlag:"N",rtNear:null,rtNearFlag:"N"},visualActivityDTO:{distantVisualAcutiyDTO:{unaidedDTO:{unaidedRT:null,unaidedRTFlag:"N",unaidedLT:null,unaidedLTFlag:"N",unaidedBI:null,unaidedBIFlag:"N"},aidedDTO:{aidedRT:null,aidedRTFlag:"N",aidedLT:null,aidedLTFlag:"N",aidedBI:null,aidedBIFlag:"N"}},spectacleDetailsDTO:{ableToReadN5DTO:{ableReadN5RT:null,ableReadN5LT:null,ableReadN5BI:null},ableToReadN14DTO:{ableReadN14RT:null,ableReadN14LT:null,ableReadN14BI:null}}}},colourPerceptionDTO:{paletStatusDTO:[],lmeMeaEyeOthersDTO:{colourLantern:null,cadTest:null,deficiency:null,convergenceLimit:null,convergenceLimitFlag:"N",ishiharaFlag:"N",stereopsis:null,remarks:"null",maddoxWingDTO:{esoDTO:{pd:null,pdEsoFlag:"N",pdExoFlag:"N",esoId:null},hypoDTO:{pd:null,pdHyperFlag:"N",pdHypoFlag:"N",esoId:null}},maddoxRodDTO:{esoDTO:{pd:null,pdEsoFlag:"N",pdExoFlag:"N",esoId:null},hyperDTO:{pd:null,pdHyperFlag:"N",pdHypoFlag:"N",esoId:null}}}}},$scope.Act={ACTScore:[{PEFR:"rr",ACT:"gg"}]},$scope.comboData={},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.toDoSave={measurement:{status:!1,alertShown:!1},investigation:{status:!1,alertShown:!1},examination:{status:!1,alertShown:!1},audiometry:{status:!1,alertShown:!1},recomendaion:{status:!1,alertShown:!1}},$scope.selectedclinic=!0,$scope.MonthDa=[],$scope.WeightMonth=[],$scope.audiogramLeftPointsRequied=!1,$scope.audiogramRightPointsRequied=!1,$scope.$on("examLoad",function(event,data){"DMF"==$scope.visittype||"PR"==$scope.visittype?($scope.arpreloadData(),$scope.preloadArAudio()):($scope.preloadaudio(),$scope.preloadData(),$scope.audioData.remarks=" ")}),$scope.dataBind()},$scope.dataBind=function(){$scope.getValidationRules(),$scope.measurefollowLoadCombo(),$scope.getMandatoryFields(),$scope.getFieldsRule(),$scope.newform=!0,$scope.loadData(),$scope.getUploadedDocument(),$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1}),$scope.$on("audogrameLeftCount",function(event,args){args.count>0&&args.count<7?$scope.audiogramLeftPointsRequied=!0:$scope.audiogramLeftPointsRequied=!1}),$scope.$on("audogrameRightCount",function(event,args){args.count>0&&args.count<7?$scope.audiogramRightPointsRequied=!0:$scope.audiogramRightPointsRequied=!1}),$scope.$on("ValidationRequestLmeSubmission",function(event,args){$scope.setRequriedField=!0,$scope.frmSubmitted=!0,console.log("Request received from Measurement"),$timeout(function(){$scope.form.$invalid||!$scope.validation?$scope.frmInvalid=!0:$scope.frmInvalid=!1,$scope.$root.$broadcast("ValidationStatusMeasurement",{stauts:$scope.frmInvalid})},3e3)}),"DMF"==$scope.visittype||"PR"==$scope.visittype?($scope.arpreloadData(),$scope.preloadArAudio()):($scope.preloadaudio(),$scope.preloadData()),$scope.pal_status="a",$scope.$watch("colourperception",function(newValue,oldValue){"Normal"==newValue&&(angular.forEach($scope.colorPlates,function(value,key){$scope.colorPlates[key].platestatus="g"}),$scope.requiedFields.colorPlates=!0,$scope.invalidPalets=$filter("filter")($scope.colorPlates,{platestatus:"a"}),$scope.showColorPalletMsg=!!$scope.invalidPalets.length),"Clear"==newValue&&angular.forEach($scope.colorPlates,function(value,key){$scope.colorPlates[key].platestatus="a"})}),$scope.$watch("isLenseUsed",function(val,old){val&&($scope.mesurementData.visionCorrection.spectacles="spectacles"==val?"Y":"N",$scope.mesurementData.visionCorrection.contactLense="contactLense"==val?"Y":"N")}),$scope.$watch("mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight",function(val,old){$scope.$root.$broadcast("measurementWeight",{weight:val})}),$scope.$watch("bmiRatio",function(val,old){val&&($scope.bmiColor=$scope.getColorCode(val,"bmi"),$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.bMIFlag=$scope.bmiColor)}),$scope.$watch("waistRatio",function(val,old){val&&($scope.waistRatioColor=$scope.getColorCode(val,"waist_hip"),$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.waistHipRatioFlag=$scope.waistRatioColor)}),$scope.$watch("mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.pd",function(newValue,oldValue){"0"==newValue?($scope.maddoxWingDTO_esoDTO=!1,$('#selDiv1 option[value="string:NA"]').prop("selected",!0),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId="NA",$scope.maddoxWingDTO_esoDTO=!0):"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId&&$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId?($('#selDiv1 option[value="string:ESO"]').removeAttr("selected"),$('#selDiv1 option[value="string:EXO"]').removeAttr("selected"),$scope.maddoxWingDTO_esoDTO=!1):$scope.maddoxWingDTO_esoDTO=!1}),$scope.$watch("mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.pd",function(newValue,oldValue){"0"==newValue?($scope.maddoxWingDTO_hypoDTO=!1,$('#selDiv2 option[value="string:NA"]').prop("selected",!0),$scope.maddoxWingDTO_hypoDTO=!0,
$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId="NA"):"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId&&$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId?($('#selDiv2 option[value="string:HYPO"]').removeAttr("selected"),$('#selDiv2 option[value="string:HYPER"]').removeAttr("selected"),$scope.maddoxWingDTO_hypoDTO=!1):$scope.maddoxWingDTO_esoDTO=!1}),$scope.$watch("mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.pd",function(newValue,oldValue){"0"==newValue?($scope.maddoxRodDTO_esoDTO=!1,$('#selDiv3 option[value="string:NA"]').prop("selected",!0),$scope.maddoxRodDTO_esoDTO=!0,$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId="NA"):"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId&&$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId?($('#selDiv3 option[value="string:ESO"]').removeAttr("selected"),$('#selDiv3 option[value="string:EXO"]').removeAttr("selected"),$scope.maddoxRodDTO_esoDTO=!1):$scope.maddoxRodDTO_esoDTO=!1}),$scope.$watch("mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.pd",function(newValue,oldValue){"0"==newValue?($scope.maddoxRodDTO_hyperDTO=!1,$('#selDiv4 option[value="string:NA"]').prop("selected",!0),$scope.maddoxRodDTO_hyperDTO=!0,$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId="NA"):"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId&&$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId?($('#selDiv4 option[value="string:HYPO"]').removeAttr("selected"),$('#selDiv4 option[value="string:HYPER"]').removeAttr("selected"),$scope.maddoxRodDTO_hyperDTO=!1):$scope.maddoxRodDTO_hyperDTO=!1}),$scope.$watch("mesurementData.visionCorrection.visionRequired",function(newValue,oldValue){if("N"==newValue){$("#correctLens option").removeAttr("selected");var mySelVal=$("#correctLens option").length;mySelVal<4&&$("#correctLens").prepend('<option value="?" selected="selected"></option>'),$(".hed_eye_test option").removeAttr("selected"),$scope.mesurementData.visionCorrection.correctiveyepower="A",$scope.isLenseUsed=null}});var isFormAlreadyModified=!1;$scope.$watch("form.$dirty",function(newval,old){newval&&($scope.toDoSave.measurement.status=!0,isFormAlreadyModified||$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),isFormAlreadyModified=!0)})},$scope.valuecolorchangeUALR=function(getId,value){var ualrselectedId="#"+getId,ualroptionId="#"+getId+" option";$(ualrselectedId).removeClass("textcolorgreen"),$(ualrselectedId).removeClass("textcolorred"),$(ualrselectedId).removeClass("textcolororange"),2!=value&&3!=value&&4!=value||($(ualrselectedId).addClass("textcolorgreen"),$(ualroptionId).css("color","black")),10==value&&($(ualrselectedId).addClass("textcolorred"),$(ualroptionId).css("color","black")),5!=value&&6!=value&&7!=value&&8!=value&&9!=value||($(ualrselectedId).addClass("textcolororange"),$(ualroptionId).css("color","black"))},$scope.valuecolorchangeALR=function(getId,value){var alrselectedId="#"+getId,alroptionId="#"+getId+" option";$(alrselectedId).removeClass("textcolorgreen"),$(alrselectedId).removeClass("textcolorred"),$(alrselectedId).removeClass("textcolororange"),2!=value&&3!=value&&4!=value||($(alrselectedId).addClass("textcolorgreen"),$(alroptionId).css("color","black")),5!=value&&6!=value&&7!=value&&8!=value&&9!=value&&10!=value||($(alrselectedId).addClass("textcolorred"),$(alroptionId).css("color","black"))},$scope.valuecolorchangeUABino=function(getId,value){var UaBinoselectedId="#"+getId,UaBinooptionId="#"+getId+" option";$(UaBinoselectedId).removeClass("textcolorgreen"),$(UaBinoselectedId).removeClass("textcolorred"),$(UaBinoselectedId).removeClass("textcolororange"),2!=value&&3!=value||($(UaBinoselectedId).addClass("textcolorgreen"),$(UaBinooptionId).css("color","black")),4==value&&($(UaBinoselectedId).addClass("textcolororange"),$(UaBinooptionId).css("color","black")),5!=value&&6!=value&&7!=value&&8!=value&&9!=value&&10!=value||($(UaBinoselectedId).addClass("textcolorred"),$(UaBinooptionId).css("color","black"))},$scope.valuecolorchangeABino=function(getId,value){var ABinoselectedId="#"+getId,ABinooptionId="#"+getId+" option";$(ABinoselectedId).removeClass("textcolorgreen"),$(ABinoselectedId).removeClass("textcolorred"),$(ABinoselectedId).removeClass("textcolororange"),2!=value&&3!=value||($(ABinoselectedId).addClass("textcolorgreen"),$(ABinooptionId).css("color","black")),4==value&&($(ABinoselectedId).addClass("textcolororange"),$(ABinooptionId).css("color","black")),5!=value&&6!=value&&7!=value&&8!=value&&9!=value&&10!=value||($(ABinoselectedId).addClass("textcolorred"),$(ABinooptionId).css("color","black"))},$scope.valuecolorchangeSphere=function(getId,value){var sphereSelectedId="#"+getId,sphereOptionId="#"+getId+" option";$(sphereSelectedId).removeClass("textcolorgreen"),$(sphereSelectedId).removeClass("textcolorred"),$(sphereSelectedId).removeClass("textcolororange"),value>=25&&value<=49&&($(sphereSelectedId).addClass("textcolorred"),$(sphereOptionId).css("color","black")),value>=2&&value<=24&&($(sphereSelectedId).addClass("textcolorgreen"),$(sphereOptionId).css("color","black"))},$scope.valuecolorchangeCylinder=function(getId,value){var cylinderSelectedId="#"+getId,cylinderOptionId="#"+getId+" option";$(cylinderSelectedId).removeClass("textcolorgreen"),$(cylinderSelectedId).removeClass("textcolorred"),$(cylinderSelectedId).removeClass("textcolororange"),value>=9&&value<=28&&($(cylinderSelectedId).addClass("textcolorred"),$(cylinderOptionId).css("color","black")),value>=2&&value<=8&&($(cylinderSelectedId).addClass("textcolorgreen"),$(cylinderOptionId).css("color","black"))},$scope.MaddoxNACheck=function(flag){"MaddoxWingleft"==flag&&$("#maddox1").val()>=1&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.esoId&&(ModalService.openAlert("alert","Alert","Select from ESO or EXO"),$scope.maddoxWingDTO_esoDTO=!1),"MaddoxWingright"==flag&&$("#maddox2").val()>=1&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.esoId&&(ModalService.openAlert("alert","Alert","Select from HYPO or HYPER"),$scope.maddoxWingDTO_hypoDTO=!1),"MaddoxWing2left"==flag&&$("#maddox3").val()>=1&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.esoId&&(ModalService.openAlert("alert","Alert","Select from ESO or EXO"),$scope.maddoxRodDTO_esoDTO=!1),"MaddoxWing2right"==flag&&$("#maddox4").val()>=1&&"NA"==$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.esoId&&(ModalService.openAlert("alert","Alert","Select from HYPO or HYPER"),$scope.maddoxRodDTO_hyperDTO=!1)},$scope.watchField=function(value,fieldName,index,deficiencyFieldVal){var value=parseInt(value),temp=void 0===index||"null"==index?fieldName+"Color":fieldName+index+"Color";return!angular.isNumber(value)||isNaN(value)?($scope[temp]=null,!1):void(value&&($scope[temp]=$scope.getColorCode(value,fieldName,deficiencyFieldVal)))},$scope.uncheck=function(event){$scope.colourperception==event.target.value&&($scope.colourperception=!1)},$scope.changeColor=function(index){switch($scope.requiedFields.colorPlates=!1,null!=$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO&&($scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.ishiharaFlag="green"),$scope.showColorPalletMsg=!1,$scope.colorPlates[index].platestatus){case"a":$scope.colorPlates[index].platestatus="g";break;case"g":$scope.colorPlates[index].platestatus="r",$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.ishiharaFlag="red",$scope.colourperception=null;break;case"r":$scope.colorPlates[index].platestatus="a"}$scope.colorPlatesClearCount=0,$scope.colorPlatesNormalCount=0,$scope.colorPlatesRedCount=0,angular.forEach($scope.colorPlates,function(value,index){"a"==value.platestatus&&$scope.colorPlatesClearCount++,"g"==value.platestatus&&$scope.colorPlatesNormalCount++,"r"==value.platestatus&&$scope.colorPlatesRedCount++}),$scope.colorPlatesClearCount>0&&($scope.colorPlatesClearCount==$scope.colorPlates.length?$scope.colourperception="Clear":$scope.colourperception=null),$scope.colorPlatesRedCount>0&&$scope.colorPlatesRedCount!=$scope.colorPlates.length&&($scope.invalidPalets=$filter("filter")($scope.colorPlates,{platestatus:"a"}),$scope.requiedFields.colorPlates=!0,$scope.showColorPalletMsg=!!$scope.invalidPalets.length),$scope.colorPlatesNormalCount>0&&($scope.colorPlatesNormalCount==$scope.colorPlates.length?($scope.colourperception="Normal",$scope.requiedFields.colorPlates=!1):$scope.requiedFields.colorPlates=!0,$scope.invalidPalets=$filter("filter")($scope.colorPlates,{platestatus:"a"}),$scope.showColorPalletMsg=!!$scope.invalidPalets.length)},$scope.loadData=function(){DataManager.sendRestRequest(null,APIS.GET_MEASUREMENT,function(response){response.success?$scope.comboData=response.dataBean:console.log("GET_MEASUREMENT: "+response.errorMessage)},$scope.uconfig.token)},$scope.removeRequiredColormeasure=function(gtId,value,reqfield,index){"DMF"!=$scope.visittype&&"PR"!=$scope.visittype&&(value?$("#"+gtId).removeClass("showcolor"):reqfield&&$("#"+gtId).addClass("showcolor"))},$scope.removestaticColormeasure=function(gtId,value,reqfield,index){"DMF"!=$scope.visittype&&"PR"!=$scope.visittype&&(value?$("#"+gtId).removeClass("showcolor"):$("#"+gtId).addClass("showcolor"))},$scope.saveData=function(param){return $scope.toDoSave.measurement.status=!1,$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),$scope.invalidPalets=$filter("filter")($scope.colorPlates,{platestatus:"a"}),$scope.isRedCell=$filter("filter")($scope.colorPlates,{platestatus:"r"}),$scope.isGreenCell=$filter("filter")($scope.colorPlates,{platestatus:"g"}),$scope.isInvalidAuiogram=isRequiredAudogram(),$scope.requiedFields.colorPlates&&$scope.invalidPalets.length||!$scope.requiedFields.colorPlates&&$scope.invalidPalets.length&&($scope.isRedCell.length||$scope.isGreenCell.length)?($scope.colorPlatesValid=!1,$scope.showColorPalletMsg=!0):($scope.showColorPalletMsg=!1,$scope.colorPlatesValid=!0),$scope.validlist.length?$scope.validation=!1:$scope.validation=!0,$scope.validation?($scope.frmInvalid=!1,$scope.form.$invalid||!$scope.validation||!$scope.colorPlatesValid||$scope.isInvalidAuiogram?$scope.mesurementData.formInvalid="Y":$scope.mesurementData.formInvalid="N",$scope.audiogramLeftPointsRequied||$scope.audiogramRightPointsRequied?(ModalService.openAlert("alert","Audiogram","Invalid points please click all 8 points to save audiometry either left or right."),!1):(angular.forEach($scope.audioData.audiometry,function(value,key){delete $scope.audioData.audiometry[key].active}),angular.forEach($scope.audioData.audiometry,function(value,key){var leftColorFlag="N",rightColorFlag="N",left={};angular.forEach(value.left,function(leftAudio,leftIndex){leftAudio&&(leftAudio.sound>185||leftAudio.sound>160&&leftAudio.freq<250?(leftColorFlag="red",$scope.audioData.audiometry[key].leftColorFlag="red"):(leftAudio.sound<186||leftAudio.sound<161&&leftAudio.freq>249)&&($scope.audioData.audiometry[key].leftColorFlag="red"==leftColorFlag?"red":"green"));var index=leftIndex+1,temp="sound"+index;null!=leftAudio&&leftAudio.hasOwnProperty("freq")&&(left[temp]=leftAudio.sound)}),left.hasOwnProperty("sound1")||(Array.isArray(value.left)&&(value.left={}),left=value.left),$scope.audioData.audiometry[key].left=left;var right={};angular.forEach(value.right,function(rightAudio,rightIndex){var index=rightIndex+1,temp="sound"+index;rightAudio&&(rightAudio.sound>185||rightAudio.sound>160&&rightAudio.freq<250?(rightColorFlag="red",$scope.audioData.audiometry[key].rightColorFlag="red"):(rightAudio.sound<186||rightAudio.sound<161&&rightAudio.freq>249)&&($scope.audioData.audiometry[key].rightColorFlag="red"==rightColorFlag?"red":"green")),null!=rightAudio&&rightAudio.hasOwnProperty("freq")&&(right[temp]=rightAudio.sound)}),right.hasOwnProperty("sound1")||(Array.isArray(value.right)&&(value.right={}),right=value.right),$scope.audioData.audiometry[key].right=right}),$scope.audioData.roleName=$scope.rolename,APIS.SAVE_AUDIOMETROY.data=$scope.audioData,$scope.audiometryresult=DataManager.sendRestRequest(null,APIS.SAVE_AUDIOMETROY,null,$scope.uconfig.token),void $timeout(function(){1==$scope.audiometryresult.$$state.value.success?($scope.mesurementData.colourPerceptionDTO.paletStatusDTO=$scope.colorPlates,$scope.mesurementData.roleName=$scope.rolename,APIS.SAVE_MEASUREMENT.data=$scope.mesurementData,DataManager.sendRestRequest(null,APIS.SAVE_MEASUREMENT,function(response){if(response.success){var temp={weight:0};$scope.mesurementData.generalDTO.curentBmiDTO&&(temp.weight=$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight?$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight:0),sessionStorage.setItem("measurement_weight",JSON.stringify(temp)),ModalService.openAlert("alert","Measurement",response.successMessage),"next"==param&&$state.go("physicalexamination"),$scope.enableNext=!0,$scope.$root.$broadcast("examinationONload",!0)}else"LOCKED"==response.errorMessage&&(ModalService.openAlert("alert","Measurement","DME has started working on the applicant LME. You will be navigated to Queue."),$state.go("queue"))},$scope.uconfig.token)):console.log("failure")},12e3))):($scope.frmInvalid=!0,ModalService.openAlert("alert","Measurement","Please enter correct values in fields"),!1)},$scope.arsaveData=function(){for(var i=0;i<$scope.audioData.audiometry.length;i++)if((Object.keys($scope.audioData.audiometry[i].left).length||Object.keys($scope.audioData.audiometry[i].right).length)&&(!$scope.audioData.audiometry[i].hearingAid||!$scope.audioData.audiometry[i].type))return ModalService.openAlert("alert","Measurement","Please select audiogram type."),!1;return $scope.toDoSave.measurement.status=!1,$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),$scope.setRequriedField=!0,$scope.validlist.length?$scope.validation=!1:$scope.validation=!0,$scope.validation?($scope.frmInvalid=!1,$scope.mesurementData.colourPerceptionDTO.paletStatusDTO=$scope.colorPlates,delete $scope.mesurementData.pageId,$scope.audiogramLeftPointsRequied||$scope.audiogramRightPointsRequied?(ModalService.openAlert("alert","Audiogram","Invalid points please click all 8 points to save audiometry either left or right."),!1):(angular.forEach($scope.audioData.audiometry,function(value,key){delete $scope.audioData.audiometry[key].active}),angular.forEach($scope.audioData.audiometry,function(value,key){var leftColorFlag="N",rightColorFlag="N",left={};angular.forEach(value.left,function(leftAudio,leftIndex){var index=leftIndex+1,temp="sound"+index;leftAudio&&(leftAudio.sound>185||leftAudio.sound>160&&leftAudio.freq<250?(leftColorFlag="red",$scope.audioData.audiometry[key].leftColorFlag="red"):(leftAudio.sound<186||leftAudio.sound<161&&leftAudio.freq>249)&&($scope.audioData.audiometry[key].leftColorFlag="red"==leftColorFlag?"red":"green")),null!=leftAudio&&leftAudio.hasOwnProperty("freq")&&(left[temp]=leftAudio.sound)}),left.hasOwnProperty("sound1")||(Array.isArray(value.left)&&(value.left={}),left=value.left),$scope.audioData.audiometry[key].left=left;var right={};angular.forEach(value.right,function(rightAudio,rightIndex){var index=rightIndex+1,temp="sound"+index;rightAudio&&(rightAudio.sound>185||rightAudio.sound>160&&rightAudio.freq<250?(rightColorFlag="red",$scope.audioData.audiometry[key].rightColorFlag="red"):(rightAudio.sound<186||rightAudio.sound<161&&rightAudio.freq>249)&&($scope.audioData.audiometry[key].rightColorFlag="red"==rightColorFlag?"red":"green")),null!=rightAudio&&rightAudio.hasOwnProperty("freq")&&(right[temp]=rightAudio.sound)}),right.hasOwnProperty("sound1")||(Array.isArray(value.right)&&(value.right={}),right=value.right),$scope.audioData.audiometry[key].right=right}),$scope.audioData.roleName=$scope.rolename,APIS.SAVE_AR_AUDIOMETROY.data=$scope.audioData,$scope.audiometryresult=DataManager.sendRestRequest(null,APIS.SAVE_AR_AUDIOMETROY,null,$scope.uconfig.token),void $timeout(function(){1==$scope.audiometryresult.$$state.value.success&&($scope.mesurementData.roleName=$scope.rolename,APIS.AR_SAVE_MEASUREMENT.data=$scope.mesurementData,DataManager.sendRestRequest(null,APIS.AR_SAVE_MEASUREMENT,function(response){if(response.success){var temp={weight:0};$scope.mesurementData.generalDTO.curentBmiDTO&&(temp.weight=$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight?$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight:0),sessionStorage.setItem("measurement_weight",JSON.stringify(temp)),ModalService.openAlert("alert","Measurement",response.successMessage),$scope.enableNext=!0,$scope.$root.$broadcast("examinationONload",!0)}else"LOCKED"==response.errorMessage&&(ModalService.openAlert("alert","Measurement","DME has started working on the applicant AR. You will be navigated to Queue."),$state.go("queue"))},$scope.uconfig.token))},12e3))):($scope.frmInvalid=!0,ModalService.openAlert("alert","Measurement","Please enter correct values in fields"),!1)},$scope.preloadData=function(){var url=null,tempUrl=null;tempUrl=APIS.PRELOAD_MEASUREMENT.URL,console.log($scope.visitInfo),url=tempUrl+"/"+$scope.visitInfo.visitId+"/"+$scope.visitInfo.applicantId+"/"+$scope.visitInfo.applicantDetails.applicationId,APIS.PRELOAD_MEASUREMENT.URL=url,DataManager.sendRestRequest(null,APIS.PRELOAD_MEASUREMENT,function(response){if(console.log(response),response.success){if($scope.enableNext=!0,$scope.mesurementData=response.dataBean[0],$timeout(function(){$scope.valuecolorchangeALR("aidedRT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedRT),$scope.valuecolorchangeALR("aidedLT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedLT),$scope.valuecolorchangeABino("aidedBinocular",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedBI),$scope.valuecolorchangeUALR("unaidedRT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedRT),$scope.valuecolorchangeUALR("unaidedLT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedLT),$scope.valuecolorchangeUABino("unAidedBinocular",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedBI),$scope.valuecolorchangeSphere("ltSphere",$scope.mesurementData.visionCorrection.metricsLeftDTO.ltSphere),$scope.valuecolorchangeCylinder("ltCylinder",$scope.mesurementData.visionCorrection.metricsLeftDTO.ltCylinder),$scope.valuecolorchangeSphere("rtSphere",$scope.mesurementData.visionCorrection.metricsRightDTO.rtSphere),$scope.valuecolorchangeCylinder("rtCylinder",$scope.mesurementData.visionCorrection.metricsRightDTO.rtCylinder)},4e3),$scope.mesurementData.generalDTO&&$scope.mesurementData.generalDTO.height){var height="height",value=$scope.mesurementData.generalDTO.height;$scope.removestaticColormeasure(height,value,null,null)}if($scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight){var weight="weight",value=$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight;$scope.removestaticColormeasure(weight,value,null,null)}if($scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO.waist){var waist="waist",value=$scope.mesurementData.generalDTO.waistRatioDTO.waist;$scope.removestaticColormeasure(waist,value,null,null)}if($scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO.hip){var hip="hip",value=$scope.mesurementData.generalDTO.waistRatioDTO.hip;$scope.removestaticColormeasure(hip,value,null,null)}if($scope.mesurementData.generalDTO.suspineDataDTO.length>0){var value=[],sup=$scope.mesurementData.generalDTO.suspineDataDTO;angular.forEach(sup,function(value,key){var index=key,value=sup[key].suspineDTO.sys,temp="suspinSys"+index;$scope.removestaticColormeasure(temp,value,null,index)})}if($scope.mesurementData.generalDTO.suspineDataDTO.length>0){var value=[],pulse=$scope.mesurementData.generalDTO.suspineDataDTO;angular.forEach(pulse,function(value,key){var index=key,value=pulse[key].pulseRate,temp="pulseRate"+index;$scope.removestaticColormeasure(temp,value,null,index)})}if($scope.mesurementData.generalDTO.suspineDataDTO.length>0){var value=[],dia=$scope.mesurementData.generalDTO.suspineDataDTO;angular.forEach(dia,function(value,key){var index=key,value=dia[key].suspineDTO.dia,temp="suspinDia"+index;$scope.removestaticColormeasure(temp,value,null,index)})}if($scope.mesurementData.generalDTO.suspineDataDTO.length>0){var value=[],standingDTO=$scope.mesurementData.generalDTO.suspineDataDTO;angular.forEach(standingDTO,function(value,key){var index=key,value1=standingDTO[key].standingDTO.sys,value2=standingDTO[key].standingDTO.dia,temp1="standingSys"+index,temp2="standingDia"+index;$scope.removestaticColormeasure(temp1,value1,null,index),$scope.removestaticColormeasure(temp2,value2,null,index)})}if("Y"==response.dataBean[0].visionCorrection.spectacles&&($scope.isLenseUsed="spectacles"),"Y"==response.dataBean[0].visionCorrection.contactLense&&($scope.isLenseUsed="contactLense"),$scope.slectedVison=$scope.mesurementData.visionCorrection.visionType,$timeout(function(){$scope.changeVision($scope.slectedVison)},4e3),$scope.colorPlates=response.dataBean[0].colourPerceptionDTO.paletStatusDTO?response.dataBean[0].colourPerceptionDTO.paletStatusDTO:$scope.colorPlates,$scope.colorPlatesClearCount=0,$scope.colorPlatesNormalCount=0,angular.forEach($scope.colorPlates,function(value,index){"a"==value.platestatus&&$scope.colorPlatesClearCount++,"g"==value.platestatus&&$scope.colorPlatesNormalCount++}),$scope.colorPlatesClearCount==$scope.colorPlates.length&&($scope.colourperception="Clear",$scope.requiedFields.colorPlates=!1),$scope.colorPlatesNormalCount==$scope.colorPlates.length&&($scope.colourperception="Normal",$scope.requiedFields.colorPlates=!1),$scope.invalidPalets=$filter("filter")($scope.colorPlates,{platestatus:"a"}),$scope.showColorPalletMsg=!!$scope.invalidPalets.length,0==$scope.mesurementData.generalDTO.suspineDataDTO.length?$scope.addSupinenew():$scope.postalDropTransformation($scope.mesurementData.generalDTO.suspineDataDTO),0==$scope.mesurementData.generalDTO.actScoreDTOList.length?$scope.actscore():$scope.actscroeTransformation($scope.mesurementData.generalDTO.actScoreDTOList),!$scope.mesurementData.visionCorrection.metricsLeftDTO){var metricsLeft={ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null};$scope.mesurementData.visionCorrection.metricsLeftDTO=metricsLeft}if(!$scope.mesurementData.visionCorrection.metricsRightDTO){var metricsRight={rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null};$scope.mesurementData.visionCorrection.metricsRightDTO=metricsRight}if($scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight&&$scope.bmiCalculation($scope.mesurementData.generalDTO.height,$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight),$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip),colorCodeTransformation(),null!=$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO.length>0)for(var b=0;b<$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO.length;b++)$scope.prebmiCalculation($scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].height,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].waight,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].created_ON),$scope.preweight($scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].waight,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].created_ON);if(null!=$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip&&$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip.length>0)for(var b=0;b<$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip.length;b++)$scope.prewaisthipCalculation($scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].waist,$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].hip,$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].created_ON);if($scope.checksup=$scope.mesurementData.generalDTO.suspineDataDTO[0].suspineDTO,$scope.checksup.previousSuspine&&$scope.checksup.previousSuspine.length>0)for(var i=0;i<$scope.checksup.previousSuspine.length>0;i++)$scope.previousSuspine($scope.checksup.previousSuspine[i].sys,$scope.checksup.previousSuspine[i].dia,$scope.checksup.previousSuspine[i].created_ON);$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip),$scope.mesurementData.visionCorrection.metricsLeftDTO.ltSphere&&$("#ltSphere").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsLeftDTO.ltCylinder&&$("#ltCylinder").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsLeftDTO.ltAxis&&$("#ltAxis").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsLeftDTO.ltIntermediate&&$("#ltIntermediate").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsLeftDTO.ltNear&&$("#ltNear").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsRightDTO.rtSphere&&$("#rtSphere").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsRightDTO.rtCylinder&&$("#rtCylinder").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsRightDTO.rtAxis&&$("#rtAxis").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsRightDTO.rtIntermediate&&$("#rtIntermediate").removeClass("showcolor"),$scope.mesurementData.visionCorrection.metricsRightDTO.rtNear&&$("#rtNear").removeClass("showcolor"),$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedRT&&$("#unaidedRT").removeClass("showcolor"),$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedLT&&$("#unaidedLT").removeClass("showcolor"),$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedBI&&$("#unAidedBinocular").removeClass("showcolor"),$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedRT&&$("#aidedRT").removeClass("showcolor"),$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedLT&&$("#aidedLT").removeClass("showcolor"),$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedBI&&$("#aidedBinocular").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.colourLantern&&$("#colourLantern").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.cadTest&&$("#cadtest").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.deficiency&&$("#deficiency").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.convergenceLimit&&$("#convergencelimit").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.stereopsis&&$("#stereopsis").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.esoDTO.pd&&$("#maddox1").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxWingDTO.hypoDTO.pd&&$("#maddox2").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.esoDTO.pd&&$("#maddox3").removeClass("showcolor"),$scope.mesurementData.colourPerceptionDTO.lmeMeaEyeOthersDTO.maddoxRodDTO.hyperDTO.pd&&$("#maddox4").removeClass("showcolor")}else console.log("PRELOAD_MEASUREMENT: "+response.errorMessage)},$scope.uconfig.token),APIS.PRELOAD_MEASUREMENT.URL=tempUrl},$scope.arpreloadData=function(){$scope.enableNext=!0;var url=null,tempUrl=null;tempUrl=APIS.AR_PRELOAD_MEASUREMENT.URL,url=tempUrl+"/"+$scope.visitInfo.visitId+"/"+$scope.visitInfo.applicantId,APIS.AR_PRELOAD_MEASUREMENT.URL=url,DataManager.sendRestRequest(null,APIS.AR_PRELOAD_MEASUREMENT,function(response){if(response.success){if($scope.enableNext=!0,$scope.mesurementData=response.dataBean[0],$timeout(function(){$scope.valuecolorchangeALR("aidedRT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedRT),$scope.valuecolorchangeALR("aidedLT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedLT),$scope.valuecolorchangeABino("aidedBinocular",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.aidedDTO.aidedBI),$scope.valuecolorchangeUALR("unaidedRT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedRT),$scope.valuecolorchangeUALR("unaidedLT",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedLT),$scope.valuecolorchangeUABino("unAidedBinocular",$scope.mesurementData.visionCorrection.visualActivityDTO.distantVisualAcutiyDTO.unaidedDTO.unaidedBI),$scope.valuecolorchangeSphere("ltSphere",$scope.mesurementData.visionCorrection.metricsLeftDTO.ltSphere),$scope.valuecolorchangeCylinder("ltCylinder",$scope.mesurementData.visionCorrection.metricsLeftDTO.ltCylinder),$scope.valuecolorchangeSphere("rtSphere",$scope.mesurementData.visionCorrection.metricsRightDTO.rtSphere),$scope.valuecolorchangeCylinder("rtCylinder",$scope.mesurementData.visionCorrection.metricsRightDTO.rtCylinder)},4e3),"Y"==response.dataBean[0].visionCorrection.spectacles&&($scope.isLenseUsed="spectacles"),"Y"==response.dataBean[0].visionCorrection.contactLense&&($scope.isLenseUsed="contactLense"),$scope.colorPlates=response.dataBean[0].colourPerceptionDTO.paletStatusDTO?response.dataBean[0].colourPerceptionDTO.paletStatusDTO:$scope.colorPlates,$scope.colorPlatesClearCount=0,$scope.colorPlatesNormalCount=0,angular.forEach($scope.colorPlates,function(value,index){"a"==value.platestatus&&$scope.colorPlatesClearCount++,"g"==value.platestatus&&$scope.colorPlatesNormalCount++}),$scope.colorPlatesClearCount==$scope.colorPlates.length&&($scope.colourperception="Clear",$scope.requiedFields.colorPlates=!1),$scope.colorPlatesNormalCount==$scope.colorPlates.length&&($scope.colourperception="Normal",$scope.requiedFields.colorPlates=!1),$scope.invalidPalets=$filter("filter")($scope.colorPlates,{platestatus:"a"}),$scope.showColorPalletMsg=!!$scope.invalidPalets.length,0==$scope.mesurementData.generalDTO.suspineDataDTO.length?$scope.addSupinenew():$scope.postalDropTransformation($scope.mesurementData.generalDTO.suspineDataDTO),0==$scope.mesurementData.generalDTO.actScoreDTOList.length?$scope.actscore():$scope.actscroeTransformation($scope.mesurementData.generalDTO.actScoreDTOList),$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight&&$scope.bmiCalculation($scope.mesurementData.generalDTO.height,$scope.mesurementData.generalDTO.curentBmiDTO.weightDTO.currentWaight),
$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip),$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.waistCalculation($scope.mesurementData.generalDTO.waistRatioDTO.waist,$scope.mesurementData.generalDTO.waistRatioDTO.hip),!$scope.mesurementData.visionCorrection.metricsLeftDTO){var metricsLeft={ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null};$scope.mesurementData.visionCorrection.metricsLeftDTO=metricsLeft}if(!$scope.mesurementData.visionCorrection.metricsRightDTO){var metricsRight={rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null};$scope.mesurementData.visionCorrection.metricsRightDTO=metricsRight}if($scope.slectedVison=$scope.mesurementData.visionCorrection.visionType,$timeout(function(){$scope.changeVision($scope.slectedVison)},2e3),colorCodeTransformation(),null!=$scope.mesurementData.generalDTO.curentBmiDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO&&$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO.length>0)for(var b=0;b<$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO.length;b++)$scope.prebmiCalculation($scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].height,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].waight,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].created_ON),$scope.preweight($scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].waight,$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.previousDataDTO[b].created_ON);if(null!=$scope.mesurementData.generalDTO.waistRatioDTO&&$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip&&$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip.length>0)for(var b=0;b<$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip.length;b++)$scope.prewaisthipCalculation($scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].waist,$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].hip,$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.previousWestHip[b].created_ON);if($scope.checksup=$scope.mesurementData.generalDTO.suspineDataDTO[0].suspineDTO,$scope.checksup.previousSuspine&&$scope.checksup.previousSuspine.length>0)for(var i=0;i<$scope.checksup.previousSuspine.length>0;i++)$scope.previousSuspine($scope.checksup.previousSuspine[i].sys,$scope.checksup.previousSuspine[i].dia,$scope.checksup.previousSuspine[i].created_ON)}else console.log("AR_PRELOAD_MEASUREMENT: "+response.errorMessage)},$scope.uconfig.token),APIS.AR_PRELOAD_MEASUREMENT.URL=tempUrl},$scope.addSupine=function(){var temp={suspineDTO:{sys:null,dia:null},standingDTO:{sys:null,dia:null},posturalDrop:"",pulseRate:""};$scope.mesurementData.generalDTO.suspineDataDTO.push(temp)},$scope.DeleteSupine=function(index){$scope.mesurementData.generalDTO.suspineDataDTO.length>1&&$scope.mesurementData.generalDTO.suspineDataDTO.splice(index,1)},$scope.addActscore=function(){var temp={pefr:null,actscore:null,asthmacontrol:{actQn1Score:null,actQn2Score:null,actQn3Score:null,actQn4Score:null,actQn5Score:null}};$scope.mesurementData.generalDTO.actScoreDTOList.push(temp)},$scope.DeleteActscore=function(index){$scope.mesurementData.generalDTO.actScoreDTOList.length>1&&$scope.mesurementData.generalDTO.actScoreDTOList.splice(index,1)},$scope.measurefollowLoadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LME_FOLLOWUP_COMBO,function(response){response.success?$scope.measureFollowData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.followupdoAction=function(){$uibModal.open({animation:!0,templateUrl:"measureFollowUp",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.chartpop=function(){$uibModal.open({animation:!0,templateUrl:"meschart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.waisthippop=function(){$uibModal.open({animation:!0,templateUrl:"waistchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.weightpop=function(){$uibModal.open({animation:!0,templateUrl:"weightchart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.syspop=function(){$uibModal.open({animation:!0,templateUrl:"syschart",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.doattach=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/attachmentmodel.html",controller:"ActionCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"mesureDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.AbortdoAction=function(){$uibModal.open({animation:!0,templateUrl:"mesureAbort",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.redirect=function(){window.location="#/app/lme/partials/physicalexamination.html"},$scope.addSupinenew=function(){var temp=[{suspineDTO:{sys:null,dia:null},standingDTO:{sys:null,dia:null},posturalDrop:"",pulseRate:""}];$scope.mesurementData.generalDTO.suspineDataDTO=temp},$scope.actscore=function(){var temp1=[{pefr:null,actscore:null,asthmacontrol:{actQn1Score:null,actQn2Score:null,actQn3Score:null,actQn4Score:null,actQn5Score:null}}];$scope.mesurementData.generalDTO.actScoreDTOList=temp1},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.openAsthmaModal=function(param,data){var modalInstance=$uibModal.open({animation:!0,templateUrl:"asthmacontrol",controller:"AsthmaCtrl",size:"modal-newsize",resolve:{modalParam:function(){var temp={index:param,data:data};return temp}}});modalInstance.result.then(function(response){$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn1Score=response.score.score1,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn2Score=response.score.score2,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn3Score=response.score.score3,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn4Score=response.score.score4,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].asthmacontrol.actQn5Score=response.score.score5,$scope.mesurementData.generalDTO.actScoreDTOList[response.index].actscore=response.total},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.saveAudioMetry=function(){return $scope.audiogramLeftPointsRequied||$scope.audiogramRightPointsRequied?(ModalService.openAlert("alert","Audiogram","Invalid points please click  at least 7 points to save audiometry either left or right."),!1):(angular.forEach($scope.audioData.audiometry,function(value,key){delete $scope.audioData.audiometry[key].active}),angular.forEach($scope.audioData.audiometry,function(value,key){var leftColorFlag="N",rightColorFlag="N";if(Array.isArray(value.left))var left={sound1:null,sound2:null,sound3:null,sound4:null,sound5:null,sound6:null,sound7:null,sound8:null};else var left=value.left;if(angular.forEach(value.left,function(leftAudio,leftIndex){if(leftAudio&&(leftAudio.sound>185||leftAudio.sound>160&&leftAudio.freq<250?(leftColorFlag="red",$scope.audioData.audiometry[key].leftColorFlag="red"):(leftAudio.sound<186||leftAudio.sound<161&&leftAudio.freq>249)&&($scope.audioData.audiometry[key].leftColorFlag="red"==leftColorFlag?"red":"green"),leftAudio.hasOwnProperty("freq")))switch(leftAudio.freq){case 75:left.sound1=leftAudio.sound;break;case 132:left.sound2=leftAudio.sound;break;case 190:left.sound3=leftAudio.sound;break;case 246:left.sound4=leftAudio.sound;break;case 275:left.sound5=leftAudio.sound;break;case 304:left.sound6=leftAudio.sound;break;case 334:left.sound7=leftAudio.sound;break;case 361:left.sound8=leftAudio.sound}}),$scope.audioData.audiometry[key].left=left,Array.isArray(value.right))var right={sound1:null,sound2:null,sound3:null,sound4:null,sound5:null,sound6:null,sound7:null,sound8:null};else var right=value.right;angular.forEach(value.right,function(rightAudio,rightIndex){if(rightAudio&&(rightAudio.sound>185||rightAudio.sound>160&&rightAudio.freq<250?(rightColorFlag="red",$scope.audioData.audiometry[key].rightColorFlag="red"):(rightAudio.sound<186||rightAudio.sound<161&&rightAudio.freq>249)&&($scope.audioData.audiometry[key].rightColorFlag="red"==rightColorFlag?"red":"green"),rightAudio.hasOwnProperty("freq")))switch(rightAudio.freq){case 75:right.sound1=rightAudio.sound;break;case 132:right.sound2=rightAudio.sound;break;case 190:right.sound3=rightAudio.sound;break;case 246:right.sound4=rightAudio.sound;break;case 275:right.sound5=rightAudio.sound;break;case 304:right.sound6=rightAudio.sound;break;case 334:right.sound7=rightAudio.sound;break;case 361:right.sound8=rightAudio.sound}}),$scope.audioData.audiometry[key].right=right}),$scope.audioData.roleName=$scope.rolename,void $scope.saveAudio($scope.audioData))},$scope.saveAudio=function(threashold){APIS.SAVE_AUDIOMETROY.data=threashold,DataManager.sendRestRequest(null,APIS.SAVE_AUDIOMETROY,function(response){response.success?($scope.setaudioField=response.data,ModalService.openAlert("alert","Audiogram","Audiometry saved successfully")):$log.error("Audiogram Save: "+response.errorMessage)},$scope.uconfig.token)},$scope.preloadaudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.visitInfo.visitId,APIS.GET_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_AUDIOMETROY,function(response){response.success?response.dataBean&&(response.dataBean.audiometry.length>0&&response.dataBean.audiometry[0].hearingAid&&response.dataBean.audiometry[0].type?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.showCanvas=!0),$scope.isInvalidAuiogram=isRequiredAudogram()):$log.error("Audiogram Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_AUDIOMETROY.URL=tempUrl},$scope.getValidationRules=function(){$scope.ruleParam={pageCode:"MEASURE"},APIS.GET_MEDICAL_TEMP_RULES.data=$scope.ruleParam,DataManager.sendRestRequest(null,APIS.GET_MEDICAL_TEMP_RULES,function(response){response.success?($log.info("rules"),$log.log(response.dataBean),$scope.splitFields(response.dataBean)):$log.error("Validation Rules:"+response.errorMessage)},$scope.uconfig.token)},$scope.bmiCalculation=function(height,weight){if(!height||!weight)return height||weight||($scope.bmiRatio=null),!1;var height=height/100,ratio=weight/(height*height);$scope.bmiRatio=ratio.toFixed(2),$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.currentBMI=$scope.bmiRatio},$scope.waistCalculation=function(waist,hip){if(!waist||!hip)return waist||hip||($scope.waistRatio=null),!1;var ratio=waist/hip;$scope.waistRatio=ratio.toFixed(2),$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.waistHipRatio=$scope.waistRatio},$scope.prebmiCalculation=function(height,weight,created_ON){if(!height||!weight)return!1;var height=height/100,ratio=weight/(height*height);$scope.prebmiRatio=ratio.toFixed(2),$scope.bmiCharts.push(parseFloat($scope.prebmiRatio)),$scope.bmicreated_ON.push(created_ON),$scope.chartData(),$scope.mesurementData.generalDTO.curentBmiDTO.bmiChartDTO.currentBMI=$scope.prebmiRatio},$scope.prewaisthipCalculation=function(waist,hip,created_ON){var ratio=waist/hip;$scope.prewaistRatio=ratio.toFixed(2),$scope.prewaistsRatio.push(parseFloat($scope.prewaistRatio)),$scope.waistcreated_ON.push(created_ON),$scope.waistchartData(),$scope.mesurementData.generalDTO.waistRatioDTO.ratioDTO.waistHipRatio=$scope.prewaistRatio},$scope.preweight=function(weight,created_ON){$scope.weightlist.push(weight),$scope.weightcreated_ON.push(created_ON),$scope.weightchartData()},$scope.previousSuspine=function(sysval,diaval,created_ON){$scope.syslist.push(sysval),$scope.dialist.push(diaval),$scope.syscreated_ON.push(created_ON),$scope.syschartData()},$scope.getColorCode=function(givenValue,fields,deficiencyFieldVal){if("pdeso"==fields||"madrodpdeso"==fields||"pdhypo"==fields||"madrodpdhyper"==fields){var fieldName=null;switch(console.log(deficiencyFieldVal),deficiencyFieldVal){case"ESO":"pdeso"==fields?fieldName="maddoxwgpdeso":"madrodpdeso"==fields&&(fieldName="maddoxrodpdeso");break;case"EXO":"pdeso"==fields?fieldName="maddoxwgpdexo":"madrodpdeso"==fields&&(fieldName="maddoxrodpdexo");break;case"HYPO":"pdhypo"==fields?fieldName="maddoxwgpdhypo":"madrodpdhyper"==fields&&(fieldName="maddoxrodpdhypo");break;case"HYPER":"pdhypo"==fields?fieldName="maddoxwgpdhyper":"madrodpdhyper"==fields&&(fieldName="maddoxrodpdhyper")}fields=fieldName}if(givenValue&&null==$scope.fields[fields])return!1;var highValue=$scope.fields[fields].highValue,source=highValue.split(" "),highSym=source[0],highVal=parseFloat(source[1]),normalValue=$scope.fields[fields].normalValue,sourcen=normalValue.split(" "),normalSym=sourcen[0],normalVal=parseFloat(sourcen[1]);if(!givenValue||!highVal||!normalVal)return!1;var color="orange";return">"==highSym&&givenValue>highVal&&(color="red"),">="==highSym&&givenValue>=highVal&&(color="red"),"<"==highSym&&givenValue<highVal&&(color="red"),"<="==highSym&&givenValue<=highVal&&(color="red"),"!="==highSym&&givenValue!=highVal&&(color="red"),"=="==highSym&&givenValue==highVal&&(color="red"),">"==normalSym&&givenValue>normalVal&&(color="green"),">="==normalSym&&givenValue>=normalVal&&(color="green"),"<"==normalSym&&givenValue<normalVal&&(color="green"),"<="==normalSym&&givenValue<=normalVal&&(color="green"),"!="==normalSym&&givenValue!=normalVal&&(color="green"),"=="==normalSym&&givenValue==normalVal&&(color="green"),color},$scope.splitFields=function(fields){$scope.fields={height:null,weight:null,bmi:null,waist:null,hip:null,waist_hip:null,suspineSys:null,suspineDia:null,standingSys:null,standingDia:null,posturalDrop:null,pulseRate:null,pefr:null,actScore:null,ltSphere:null,ltCylinder:null,ltAxis:null,ltIntermediate:null,ltNear:null,rtSphere:null,rtCylinder:null,rtAxis:null,rtIntermediate:null,rtNear:null,unaidedRT:null,unaidedLT:null,unAidedBinocular:null,aidedRT:null,aidedLT:null,aidedBinocular:null,convergenceLimit:null,maddoxrodpdexo:null,maddoxrodpdeso:null,maddoxrodpdhypo:null,maddoxrodpdhyper:null,maddoxwgpdexo:null,maddoxwgpdeso:null,maddoxwgpdhypo:null,maddoxwgpdhyper:null},angular.forEach(fields,function(value,key){switch(value.uiFieldName){case"HEIGHT":$scope.fields.height=value;break;case"WEIGHT":$scope.fields.weight=value;break;case"BMI":$scope.fields.bmi=value;break;case"WAIST":$scope.fields.waist=value;break;case"HIP":$scope.fields.hip=value;break;case"WHRatio":$scope.fields.waist_hip=value;break;case"Supine Sys":$scope.fields.suspineSys=value;break;case"Supine Dia":$scope.fields.suspineDia=value;break;case"Standing Sys":$scope.fields.standingSys=value;break;case"Standing Dia":$scope.fields.standingDia=value;break;case"Postural Drop":$scope.fields.posturalDrop=value;break;case"Pulse Rate":$scope.fields.pulseRate=value;break;case"PEFR":$scope.fields.pefr=value;break;case"ACT Score":$scope.fields.actScore=value;break;case"LTSPHERE":$scope.fields.ltSphere=value;break;case"LTCYLINDER":$scope.fields.ltCylinder=value;break;case"LTAXIS":$scope.fields.ltAxis=value;break;case"LTINTERMEDIATE":$scope.fields.ltIntermediate=value;break;case"LTNEAR":$scope.fields.ltNear=value;break;case"RTSPHERE":$scope.fields.rtSphere=value;break;case"RTCYLINDER":$scope.fields.rtCylinder=value;break;case"RTAXIS":$scope.fields.rtAxis=value;break;case"RTINTERMEDIATE":$scope.fields.rtIntermediate=value;break;case"RTNEAR":$scope.fields.rtNear=value;break;case"DVAUNAIDEDRT":$scope.fields.unaidedRT=value;break;case"DVAUNAIDEDLT":$scope.fields.unaidedLT=value;break;case"DVAUNAIDEDBIN":$scope.fields.unAidedBinocular=value;break;case"DVAAIDEDRT":$scope.fields.aidedRT=value;break;case"DEVAAIDEDLT":$scope.fields.aidedLT=value;break;case"DVAAIDEDBIN":$scope.fields.aidedBinocular=value;break;case"Convergence Limit":$scope.fields.convergenceLimit=value;break;case"MADDOX_ROD_EXO":$scope.fields.maddoxrodpdexo=value;break;case"MADDOX_ROD_ESO":$scope.fields.maddoxrodpdeso=value;break;case"MADDOX_ROD_HYPO":$scope.fields.maddoxrodpdhypo=value;break;case"MADDOX_ROD_HYEPR":$scope.fields.maddoxrodpdhyper=value;break;case"MADDOX_WG_EXO":$scope.fields.maddoxwgpdexo=value;break;case"MADDOX_WG_ESO":$scope.fields.maddoxwgpdeso=value;break;case"MADDOX_WG_HYPO":$scope.fields.maddoxwgpdhypo=value;break;case"MADDOX_WG_HYPER":$scope.fields.maddoxwgpdhyper=value}}),$log.info("minmax value"),$log.log($scope.fields)},$scope.posturalDrop=function(index,supSys,supDia,standSys,standDia){if(!supSys||!standSys)return $scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop="",!1;var suspine=parseInt(supSys)-parseInt(standSys),posturalDrop=suspine;posturalDrop>20?$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDropColor=!0:$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDropColor=!1,$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop=posturalDrop},$scope.getFieldsRule=function(){DataManager.sendRestRequest(null,APIS.GET_FIELDS_VALIDATION,function(response){response.success?($log.info("Validation Rules"),$log.log(response)):$log.error("Validation Rules:"+response.errorMessage)},$scope.uconfig.token)},$scope.checkMaxValue=function(givenValue,maxVal,fields){var highValue=$scope.fields[fields].highValue,highValue=parseInt(highValue);return!(!givenValue||!maxVal)&&(givenValue=parseInt(givenValue),maxVal=parseInt(maxVal),void(givenValue>maxVal&&ModalService.openAlert("alert","Validation","Please enter the value less than <b>"+maxVal+"</b>")))};var chkBk=[],parentChk=[],holder=[];$scope.deleteAu=function(obj,auName,parentDiv,cmbHolder){console.log(obj),chkBk.push(auName),parentChk.push(parentDiv),holder.push(cmbHolder),console.log(auName)},$scope.removeAudiometry=function(){$scope.audiogramLeftPointsRequied=!1,$scope.audiogramRightPointsRequied=!1,console.log($scope.audioData.audiometry);for(var chkBox,numberOfRows=$scope.audioData.audiometry.length,cnt=0,iscleared=!1,i=0;i<numberOfRows;i++)if(chkBox=$("#row-"+i).prop("checked"),1==chkBox){$("#row-"+i).attr("checked",!1),iscleared=!0;var leftCanvasId="#leftCan-"+i,rightCanvasId="#rightCan-"+i,lastItem=$scope.audioData.audiometry[i],index=$scope.audioData.audiometry.indexOf(lastItem);$scope.audioData.audiometry.splice(index,1),$scope.audioData=$scope.audioData;var leftcanvas=angular.element(document.querySelector(leftCanvasId)),leftcontext=leftcanvas[0].getContext("2d");leftcontext.clearRect(0,0,400,350);var rightcanvas=angular.element(document.querySelector(rightCanvasId)),rightcontext=rightcanvas[0].getContext("2d");rightcontext.clearRect(0,0,400,350),$scope.$broadcast("redraw",{data:$scope.audioData}),console.log($scope.audioData.audiometry),cnt+=1}else if(iscleared){var leftCanvasId="#leftCan-"+i,rightCanvasId="#rightCan-"+i,leftcanvas=angular.element(document.querySelector(leftCanvasId)),leftcontext=leftcanvas[0].getContext("2d");leftcontext.clearRect(0,0,400,350);var rightcanvas=angular.element(document.querySelector(rightCanvasId)),rightcontext=rightcanvas[0].getContext("2d");rightcontext.clearRect(0,0,400,350),$scope.$broadcast("redraw",{data:$scope.audioData})}0==cnt&&ModalService.openAlert("alert","Info","Please select Checkbox to delete audiogram")},$scope.addAudiometry=function(){var temp={hearingAid:"",type:"",leftColorFlag:"N",rightColorFlag:"N",left:[],right:[]};$scope.audioData.audiometry.push(temp)},$scope.preloadTransaction=function(data){var xAxis=[75,132,190,246,275,304,334,361];angular.forEach(data.audiometry,function(val,key){var i=0,leftData=[];angular.forEach(val.left,function(leftValue,leftKey){var temp={freq:xAxis[i],sound:leftValue};leftValue&&leftData.push(temp),i+=1}),data.audiometry[key].left=leftData;var j=0,rightData=[];angular.forEach(val.right,function(rightValue,rightKey){var temp={freq:xAxis[j],sound:rightValue};rightValue&&rightData.push(temp),j+=1}),data.audiometry[key].right=rightData}),$scope.audioData=data,$scope.showCanvas=!0},$scope.clearAudiometry=function(){},$scope.loadLineChart=function(){$("#bmiratio").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"BMI Measurements"}},xAxis:{categories:$scope.MonthDa},series:[{name:"BMI Value",data:$scope.bmivalue}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.chartData=function(){$scope.datavlue=[],$scope.bmivalue=$scope.bmiCharts,$scope.dateFormat($scope.bmicreated_ON),$scope.loadLineChart()},$scope.dateFormat=function(bmiReport){$scope.dateParts=[];for(var i=0;i<bmiReport.length;i++)$scope.dateParts=bmiReport[i].split("/"),$scope.dateObject=new Date($scope.dateParts[2]+"-"+$scope.dateParts[1]+"-"+$scope.dateParts[0]),$scope.datavlue=$scope.dateObject.getMonth().toString(),$scope.datavle=$scope.dateObject.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datavlue];$scope.monthr=$scope.monthreport+","+$scope.datavle,$scope.MonthDa.push($scope.monthr)},$scope.loadweightChart=function(){$("#weight").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"Weight Measurements"}},xAxis:{categories:$scope.WeightMonth},series:[{name:"Weight Value",data:$scope.weightvalue}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.weightchartData=function(){$scope.datavlue=[],$scope.weightvalue=$scope.weightlist,$scope.dateFormatee($scope.weightcreated_ON),$scope.loadweightChart()},$scope.dateFormatee=function(weightvalue){$scope.dateParts=[];for(var i=0;i<weightvalue.length;i++)$scope.date=weightvalue[i].split("/"),$scope.datecalc=new Date($scope.date[2]+"-"+$scope.date[1]+"-"+$scope.date[0]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.WeightMonth.push($scope.monthrep)},$scope.loadwaistChart=function(){$("#waist").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"Waist Measurements"}},xAxis:{categories:$scope.WaistMonth},series:[{name:"Waist Value",data:$scope.waistvalue}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.waistchartData=function(){$scope.datavlue=[],$scope.waistvalue=$scope.prewaistsRatio,$scope.dateFormats($scope.waistcreated_ON),$scope.loadwaistChart()},$scope.dateFormats=function(weightvalue){$scope.dateParts=[];for(var i=0;i<weightvalue.length;i++)$scope.date=weightvalue[i].split("/"),$scope.datecalc=new Date($scope.date[2]+"-"+$scope.date[1]+"-"+$scope.date[0]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.WaistMonth.push($scope.monthrep)},$scope.loadsyschart=function(){$("#syscontainer").highcharts({chart:{type:"column"},title:{text:null},subtitle:{text:"Month Details"},yAxis:{min:0,title:{text:"Previous Supine Records"}},xAxis:{categories:$scope.sysMonth},series:[{name:"SYS",data:$scope.diadata},{name:"DIA",data:$scope.syslist}],credits:{enabled:!1},legend:{enabled:!0,layout:"horizontal",align:"right",verticalAlign:"middle",x:-140,y:-12,floating:!0,borderWidth:1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",shadow:!0}})},$scope.syschartData=function(){$scope.sysdata=$scope.syslist,$scope.diadata=$scope.dialist,$scope.dateFormate($scope.weightcreated_ON),$scope.loadsyschart()},$scope.dateFormate=function(suspdata){$scope.dateParts=[];for(var i=0;i<suspdata.length;i++)$scope.date=suspdata[i].split("/"),$scope.datecalc=new Date($scope.date[2]+"-"+$scope.date[1]+"-"+$scope.date[0]),$scope.datevlue=$scope.datecalc.getMonth().toString(),$scope.datevle=$scope.datecalc.getFullYear(),$scope.month=new Array,$scope.month[0]="Jan",$scope.month[1]="Feb",$scope.month[2]="Mar",$scope.month[3]="Apr",$scope.month[4]="May",$scope.month[5]="Jun",$scope.month[6]="Jul",$scope.month[7]="Aug",$scope.month[8]="Sepr",$scope.month[9]="Oct",$scope.month[10]="Nov",$scope.month[11]="Dec",$scope.monthreport=$scope.month[$scope.datevlue];$scope.monthrep=$scope.monthreport+","+$scope.datevle,$scope.sysMonth.push($scope.monthrep)},$scope.changeVision=function(param){$scope.paramVison=$.grep($scope.comboData.visionsList,function(e){return e.visionsId==param})[0],$scope.mesurementData.visionCorrection.visionType=$scope.paramVison.visionsId,"DISTANT"==$scope.paramVison.code?($scope.isVisionNear=!1,$scope.isVisionDistant=!0):"NEAR"==$scope.paramVison.code?($scope.isVisionNear=!0,$scope.isVisionDistant=!1):($scope.isVisionNear=!1,$scope.isVisionDistant=!1)},$scope.removeActScore=function(){angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,key){delete $scope.mesurementData.generalDTO.actScoreDTOList[key].actscore})},$scope.checkNumber=function(fieldName,givenVal,min,max,deficiencyFieldVal){if(isNaN(givenVal))return $scope.validlistCheck1=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck1.length&&$scope.validlist.push(fieldName),!1;var fieldMin=fieldName+"Min",fieldMax=fieldName+"Max";if(""==givenVal||null==givenVal){$scope[fieldMin]=!1,$scope[fieldMax]=!1,$scope.validation=!0;var temp=$scope.validlist.indexOf(fieldName);return temp!=-1&&$scope.validlist.splice(temp,1),console.log($scope.validlist),!1}if(!min||!max){if(givenVal.toString().length>12)$scope.validlistCheck1=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck1.length&&$scope.validlist.push(fieldName);else{var temp=$scope.validlist.indexOf(fieldName);temp!=-1&&$scope.validlist.splice(temp,1)}return console.log($scope.validlist),!1}var fields=fieldName;if("pdeso"==fields||"madrodpdeso"==fields||"pdhypo"==fields||"madrodpdhyper"==fields){switch(console.log(deficiencyFieldVal),deficiencyFieldVal){case"ESO":"pdeso"==fields?fieldName="maddoxwgpdeso":"madrodpdeso"==fields&&(fieldName="maddoxrodpdeso");break;case"EXO":"pdeso"==fields?fieldName="maddoxwgpdexo":"madrodpdeso"==fields&&(fieldName="maddoxrodpdexo");break;case"HYPO":"pdhypo"==fields?fieldName="maddoxwgpdhypo":"madrodpdhyper"==fields&&(fieldName="maddoxrodpdhypo");break;case"HYPER":"pdhypo"==fields?fieldName="maddoxwgpdhyper":"madrodpdhyper"==fields&&(fieldName="maddoxrodpdhyper")}var rules=$scope.fields[fieldName];min=rules?rules.minValue:min,max=rules?rules.maxValue:max,$scope.medaxFiedName=fieldName}if(Number(givenVal)<min)return $scope.validlistCheck=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck.length&&$scope.validlist.push(fieldName),$scope[fieldMin]=!0,$scope[fieldMax]=!1,!1;var temp=$scope.validlist.indexOf(fieldName);if(temp!=-1&&$scope.validlist.splice(temp,1),$scope[fieldMin]=!1,Number(givenVal)>max)return $scope.validlistCheck=$.grep($scope.validlist,function(e){return e==fieldName}),0==$scope.validlistCheck.length&&$scope.validlist.push(fieldName),$scope[fieldMin]=!1,$scope[fieldMax]=!0,console.log($scope.validlist),!1;var temp=$scope.validlist.indexOf(fieldName);temp!=-1&&$scope.validlist.splice(temp,1),$scope[fieldMax]=!1},$scope.preloadArAudio=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_AR_AUDIOMETROY.URL,url=tempUrl+"/"+$scope.visitInfo.visitId,APIS.GET_AR_AUDIOMETROY.URL=url,DataManager.sendRestRequest(null,APIS.GET_AR_AUDIOMETROY,function(response){response.success?response.dataBean&&(response.dataBean.audiometry.length>0?response.dataBean.audiometry[0].hearingAid&&response.dataBean.audiometry[0].type?$scope.preloadTransaction(response.dataBean):($scope.audioData=$scope.audioData,$scope.audioData.remarks=response.dataBean.remarks,$scope.showCanvas=!0):($scope.audioData=$scope.audioData,$scope.showCanvas=!0)):$log.error("Audiogram Preload: "+response.errorMessage)},$scope.uconfig.token),APIS.GET_AR_AUDIOMETROY.URL=tempUrl},$scope.saveArAudio=function(threashold){APIS.SAVE_AR_AUDIOMETROY.data=threashold,DataManager.sendRestRequest(null,APIS.SAVE_AR_AUDIOMETROY,function(response){response.success?ModalService.openAlert("alert","Audiogram",response.successMessage):$log.error("Audiogram Save: "+response.errorMessage)},$scope.uconfig.token)},$scope.saveArAudiometry=function(){for(var i=0;i<$scope.audioData.audiometry.length;i++)if((Object.keys($scope.audioData.audiometry[i].left).length||Object.keys($scope.audioData.audiometry[i].right).length)&&(!$scope.audioData.audiometry[i].hearingAid||!$scope.audioData.audiometry[i].type))return ModalService.openAlert("alert","Measurement","Please select audiogram type."),!1;return $scope.audiogramLeftPointsRequied||$scope.audiogramRightPointsRequied?(ModalService.openAlert("alert","Audiogram","Invalid points please click all 8 points to save audiometry either left or right."),!1):(angular.forEach($scope.audioData.audiometry,function(value,key){delete $scope.audioData.audiometry[key].active}),angular.forEach($scope.audioData.audiometry,function(value,key){var leftColorFlag="N",rightColorFlag="N",left={};angular.forEach(value.left,function(leftAudio,leftIndex){leftAudio&&(leftAudio.sound>185||leftAudio.sound>160&&leftAudio.freq<250?(leftColorFlag="red",$scope.audioData.audiometry[key].leftColorFlag="red"):(leftAudio.sound<186||leftAudio.sound<161&&leftAudio.freq>249)&&($scope.audioData.audiometry[key].leftColorFlag="red"==leftColorFlag?"red":"green"));var index=leftIndex+1,temp="sound"+index;leftAudio.hasOwnProperty("freq")&&(left[temp]=leftAudio.sound)}),left.hasOwnProperty("sound1")||(Array.isArray(value.left)&&(value.left={}),left=value.left),$scope.audioData.audiometry[key].left=left;
var right={};angular.forEach(value.right,function(rightAudio,rightIndex){rightAudio&&(rightAudio.sound>185||rightAudio.sound>160&&rightAudio.freq<250?(rightColorFlag="red",$scope.audioData.audiometry[key].rightColorFlag="red"):(rightAudio.sound<186||rightAudio.sound<161&&rightAudio.freq>249)&&($scope.audioData.audiometry[key].rightColorFlag="red"==rightColorFlag?"red":"green"));var index=rightIndex+1,temp="sound"+index;rightAudio.hasOwnProperty("freq")&&(right[temp]=rightAudio.sound)}),right.hasOwnProperty("sound1")||(Array.isArray(value.right)&&(value.right={}),right=value.right),$scope.audioData.audiometry[key].right=right}),$scope.audioData.roleName=$scope.rolename,void $scope.saveArAudio($scope.audioData))},$scope.goPreview=function(){$window.open("#/viewhed?preview=2")},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitInfo.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"mesureDMF",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})})}else $scope.dmfDoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.actscroeTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.actScoreDTOList,function(value,index){$scope.mesurementData.generalDTO.actScoreDTOList[index].actscore=value.asthmacontrol.actQn1Score+value.asthmacontrol.actQn2Score+value.asthmacontrol.actQn3Score+value.asthmacontrol.actQn4Score+value.asthmacontrol.actQn5Score,0==$scope.mesurementData.generalDTO.actScoreDTOList[index].actscore&&($scope.mesurementData.generalDTO.actScoreDTOList[index].actscore=null)})},$scope.postalDropTransformation=function(){angular.forEach($scope.mesurementData.generalDTO.suspineDataDTO,function(value,index){$scope.mesurementData.generalDTO.suspineDataDTO[index].posturalDrop=parseInt(value.suspineDTO.sys)-parseInt(value.standingDTO.sys)})},$scope.clickNext=function(){$scope.setRequriedField=!0,$scope.frmSubmitted=!0,$timeout(function(){return $scope.form.$invalid||!$scope.validation?($scope.frmInvalid=!0,ModalService.openAlert("alert","Measurement","Please fill all mandatory fields or There was an error with your submission."),!1):void $scope.saveData("next")},2e3)},$scope.getMandatoryFields=function(){$scope.ruleParam={pageCode:"MEASURE",applicationId:$scope.visitInfo.applicantDetails.applicationId,visitId:$scope.visitInfo.visitId},APIS.GET_MANDATORY_FIELDS.data=$scope.ruleParam,DataManager.sendRestRequest(null,APIS.GET_MANDATORY_FIELDS,function(response){response.success?(console.log(response),$scope.splitMantotoryFields(response.dataBean),console.log($scope.splitMantotoryFields(response.dataBean))):$log.error("Mandatory Fields:"+response.errorMessage)},$scope.uconfig.token)},$scope.splitMantotoryFields=function(fields){$scope.requiedFields={height:null,weight:null,bmi:null,hip:null,waist:null,whratio:null,suspineSys:null,suspineDia:null,standingSys:null,standingDia:null,postraldrop:null,pulseRate:null,pefr:null,actScore:null,rtSphere:null,ltSphere:null,rtCylinder:null,ltCylinder:null,rtAxis:null,ltAxis:null,rtIntermediate:null,ltIntermediate:null,rtNear:null,ltNear:null,unaidedRT:null,unaidedLT:null,unAidedBinocular:null,aidedRT:null,aidedLT:null,aidedBinocular:null,colourLantern:null,cadtest:null,deficiency:null,stereopsis:null,convergencelimit:null,withleftair:null,withleftbone:null,withrightair:null,withrightbone:null,withoutleftair:null,withoutleftbone:null,withoutrightair:null,withoutrightbone:null,meddWingLeftesoId:null,meddWingRightesoId:null,meddRodLeftesoId:null,meddRodRightesoId:null,colorPlates:null,audiogram:null};var fieldsArray=null;fields.length>0&&(fieldsArray=fields[0].split(","),angular.forEach(fieldsArray,function(value,key){switch(value){case"HEIGHT":$scope.requiedFields.height=!0;break;case"WEIGHT":$scope.requiedFields.weight=!0;break;case"BMI":$scope.requiedFields.bmi=!0;break;case"WAIST":$scope.requiedFields.waist=!0;break;case"HIP":$scope.requiedFields.hip=!0;break;case"WHRatio":$scope.requiedFields.whratio=!0;break;case"Supine Sys":$scope.requiedFields.suspineSys=!0;break;case"Supine Dia":$scope.requiedFields.suspineDia=!0;break;case"Standing Sys":$scope.requiedFields.standingSys=!0;break;case"Standing Dia":$scope.requiedFields.standingDia=!0;break;case"Postural Drop":$scope.requiedFields.postraldrop=!0;break;case"Pulse Rate":$scope.requiedFields.pulseRate=!0;break;case"PEFR":$scope.requiedFields.pefr=!0;break;case"ACT Score":$scope.requiedFields.actScore=!0;break;case"RTSPHERE":$scope.requiedFields.rtSphere=!0;break;case"LTSPHERE":$scope.requiedFields.ltSphere=!0;break;case"RTAXIS":$scope.requiedFields.rtAxis=!0;break;case"LTAXIS":$scope.requiedFields.ltAxis=!0;break;case"RTCYLINDER":$scope.requiedFields.rtNear=!0;break;case"LTCYLINDER":$scope.requiedFields.ltNear=!0;break;case"RTINTERMEDIATE":$scope.requiedFields.rtIntermediate=!0;break;case"LTINTERMEDIATE":$scope.requiedFields.ltIntermediate=!0;break;case"RTNEAR":$scope.requiedFields.pefr=!0;break;case"LTNEAR":$scope.requiedFields.actScore=!0;break;case"DVAUNAIDEDRT":$scope.requiedFields.unaidedRT=!0;break;case"DVAUNAIDEDLT":$scope.requiedFields.unaidedLT=!0;break;case"DVAUNAIDEDBIN":$scope.requiedFields.unAidedBinocular=!0;break;case"DVAAIDEDRT":$scope.requiedFields.aidedRT=!0;break;case"DEVAAIDEDLT":$scope.requiedFields.aidedLT=!0;break;case"DVAAIDEDBIN":$scope.requiedFields.aidedBinocular=!0;break;case"CLATERNTEST":$scope.requiedFields.colourLantern=!0;break;case"CADTEST":$scope.requiedFields.cadtest=!0;break;case"DEFICIENCY":$scope.requiedFields.deficiency=!0;break;case"STEREOPSIS":$scope.requiedFields.stereopsis=!0;break;case"Convergence Limit":$scope.requiedFields.convergencelimit=!0;break;case"MADDOX_ROD_EXO":$scope.requiedFields.meddRodLeftesoId=!0;break;case"MADDOX_ROD_ESO":$scope.requiedFields.meddRodLeftesoId=!0;break;case"MADDOX_ROD_HYPO":$scope.requiedFields.meddRodRightesoId=!0;break;case"MADDOX_ROD_HYPER":$scope.requiedFields.meddRodRightesoId=!0;break;case"MADDOX_WG_ESO":$scope.requiedFields.meddWingLeftesoId=!0;break;case"MADDOX_WG_EXO":$scope.requiedFields.meddWingLeftesoId=!0;break;case"MADDOX_WG_HYPER":$scope.requiedFields.meddWingRightesoId=!0;break;case"MADDOX_WG_HYPO":$scope.requiedFields.meddWingRightesoId=!0;break;case"WITH_LEFT_AIR":$scope.requiedFields.withleftair=!0;break;case"WITH_LEFT_BONE":$scope.requiedFields.withleftbone=!0;break;case"WITH_RIGHT_AIR":$scope.requiedFields.withrightair=!0;break;case"WITH_RIGHT_BONE":$scope.requiedFields.withrightbone=!0;break;case"W/O_LEFT_AIR":$scope.requiedFields.withoutleftair=!0;break;case"W/O_LEFT_BONE":$scope.requiedFields.withoutleftbone=!0;break;case"W/O_RIGHT_AIR":$scope.requiedFields.withoutrightair=!0;break;case"W/O_RIGHT_BONE":$scope.requiedFields.withoutrightbone=!0;break;case"ISHIHARA_PLATES":$scope.requiedFields.colorPlates=!0;break;case"W/O_BOTH_AIR_BONE":$scope.requiedFields.audiogram=!0}}))},$scope.getUploadedDocument=function(){"DMF"==$scope.visittype||"PR"==$scope.visittype?$scope.referencetype="AR_VISITS":$scope.referencetype="LME_VISITS",APIS.LME_ATTACH_DOC_GRID.data={applicantId:$scope.visitInfo.applicantId,referencetype:$scope.referencetype},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?response.dataBean&&($scope.isDocumentUploaded=response.dataBean.length>0):console.log(response.errorMessage)},$scope.uconfig.token)};var lastClickedAudiograme=null;$scope.audiocheckbox=function(currentindex){var currentelement="#row-"+currentindex;return lastClickedAudiograme==currentindex?($(currentelement).attr("checked",!1),lastClickedAudiograme=null,!1):(angular.forEach($scope.audioData.audiometry,function(val,key){var element="#row-"+key;$(element).attr("checked",!1)}),$(currentelement).attr("checked",!0),void(lastClickedAudiograme=currentindex))},$scope.getColor=function(fieldname){return $scope[fieldname]},$scope.init()}]),angular.module("app.lme").controller("MeasurementtabCtrl",["$scope","$state","APIS","$rootScope","$window","ModalService",function($scope,$state,APIS,$rootScope,$window,ModalService){$scope.userConfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visitType=$scope.visitInfo.visitType,$scope.init=function(){$scope.showTab="measurements","DME"==$scope.rolename&&($scope.showTab="measurements",$scope.lmetap=!1),("DME"==$scope.rolename&&"DMF"==$scope.visitType||"DME"==$scope.rolename&&"PR"==$scope.visitType)&&($scope.showArTabs=!0,$scope.showTab="analysis",$scope.lmetap=!0),"CAMB Physician"==$scope.rolename&&($scope.showCambTabs=!0,$scope.showTab="cambanalysis"),"Clinic Assistant"==$scope.rolename&&($scope.showCambTabs=!1,$scope.showArTabs=!1,$scope.lmetap=!0,$scope.showTab="measurements"),$scope.toDoSave=null,$scope.dataBind()},$scope.dataBind=function(){$scope.$on("isDataSaved",function(events,args){$scope.toDoSave=args.data})},$scope.isUserModifed=function(){$scope.showSaveAlertMsg=null;var pageName=null;angular.forEach($scope.toDoSave,function(val,key){switch(key){case"measurement":pageName="Measurement";break;case"investigation":pageName="Investigation";break;case"examination":pageName="Examination";break;case"audiometry":pageName="Audiometry";break;case"recomendaion":pageName="Recomendaion"}val.status&&($scope.showSaveAlertMsg="You have modified data in "+pageName+", Please save.")}),$scope.showSaveAlertMsg&&ModalService.openAlert("alert","Alert",$scope.showSaveAlertMsg)},$scope.init()}]),angular.module("app.lme").controller("MedicalrecordCtrl",["$scope","$state","APIS","$rootScope","$filter","DataManager","$window","$log","ModalService","$uibModal",function($scope,$state,APIS,$rootScope,$filter,DataManager,$window,$log,ModalService,$uibModal){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.applicantid=$scope.visitDetails.applicantId,$scope.applicationId=$scope.visitDetails.applicantDetails.applicationId,$scope.uconfig||$state.go("login"),$scope.applimedrec=[],$scope.macData=[],$scope.donebyvalue=[],$scope.keys={recordType:null,mac:{classtype:null},doneBy:null},console.log($scope.keys),$scope.mrcurrentPageStores=[],$scope.medrectable=[],$scope.drListdata=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.applimeddet(),$scope.getmac(),$scope.doneBy(),$scope.applitabdet(),$scope.visitList(),$scope.MAC_combo()},$scope.applimeddet=function(){APIS.LME_APPLICANT_MEDREC_DD.data={applicantId:$scope.applicantid},DataManager.sendRestRequest(null,APIS.LME_APPLICANT_MEDREC_DD,function(response){response.success?($scope.applimedrec=response.dataBean,console.log($scope.applimedrec)):$log.error("Applicant Medical Record Combo:"+response.errorMessages)},$scope.uconfig.token)},$scope.MAC_combo=function(){APIS.ADMIN_GET_MRSEARCH_COMBO.data={applicantId:$scope.applicantid},DataManager.sendRestRequest(null,APIS.ADMIN_GET_MRSEARCH_COMBO,function(response){response.success&&($scope.dropdownData=response.dataBean,console.log($scope.dropdownData))},$scope.uconfig.token)},$scope.applitabdet=function(){APIS.LME_APPLICANT_MEDREC_TABLE.data={applicantId:$scope.applicantid},DataManager.sendRestRequest(null,APIS.LME_APPLICANT_MEDREC_TABLE,function(response){response.success?($scope.medrectable=response.dataBean,$scope.drListdata=$scope.groupDrlist(),console.log($scope.medrectable),$scope.select($scope.currentPage,$scope.medrectable)):$log.error("Applicant Medical Record Combo:"+response.errorMessages)},$scope.uconfig.token)},$scope.medicaldocumentView=function(medicalreportsId){var url=null,tempUrl=null;tempUrl=APIS.GET_MEDICAL_RECORDS_VIEW.URL,url=tempUrl+"/"+medicalreportsId,APIS.GET_MEDICAL_RECORDS_VIEW.URL=url,DataManager.sendRestRequest(null,APIS.GET_MEDICAL_RECORDS_VIEW,function(response){if(response.success){var innerContents=decodeURIComponent(escape(window.atob(response.dataBean.pdfFile))),popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no","location=no,enableviewportscale=yes");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()}else $log.error("Medical Record File:"+response.errorMessages)},$scope.uconfig.token),APIS.GET_MEDICAL_RECORDS_VIEW.URL=tempUrl},$scope.getmac=function(){APIS.ADMIN_GET_VAL_CONFIG_COMBOS.data={lookUpItemValue:"macs"},DataManager.sendRestRequest(null,APIS.ADMIN_GET_VAL_CONFIG_COMBOS,function(response){response.success?$scope.macData=response.dataBean:$log.error("MAC:"+response.errorMessages)},$scope.uconfig.token)},$scope.doneBy=function(){var url=null,tempUrl=null;tempUrl=APIS.GET_MEDICAL_RECORD_DONEBY_COMBO.URL,url=tempUrl+"/"+$scope.applicantid,APIS.GET_MEDICAL_RECORD_DONEBY_COMBO.URL=url,DataManager.sendRestRequest(null,APIS.GET_MEDICAL_RECORD_DONEBY_COMBO,function(response){response.success?($scope.donebyvalue=response.dataBean,console.log($scope.donebyvalue)):$log.error("Applicant Medical Record Combo:"+response.errorMessages)},$scope.uconfig.token),APIS.GET_MEDICAL_RECORD_DONEBY_COMBO.URL=tempUrl},$scope.medViewProviso=function(recDetails){$uibModal.open({animation:!0,templateUrl:"viewprovisio",controller:"ViewprovisioCtrl",backdrop:"static",resolve:{modalParam:function(){var datas={RecordsDet:recDetails,applicantdeteils:$scope.visitDetails.applicantDetails};return datas}}})},$scope.groupDrlist=function(){var drlist=[];return angular.forEach($scope.medrectable,function(value,key){var temp={recordType:value.recordType};drlist.push(temp)}),drlist},$scope.visitList=function(){DataManager.sendRestRequest(null,APIS.LME_VISITLIST,function(response){response.success?$scope.visitData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.select=function(page,data){data||(data=$scope.medrectable);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.medrectable=$filter("orderBy")($scope.medrectable,rowName),$scope.onOrderChange()},$scope.filter=function(){null==$scope.keys.recordType&&($scope.keys.recordType=""),null==$scope.keys.mac.classtype&&($scope.keys.mac.classtype=""),null==$scope.keys.doneBy&&($scope.keys.doneBy="");var data=$scope.medrectable;return data=$filter("filter")(data,$scope.keys),$scope.onFilterChange(data)},$scope.init()}]),angular.module("app").controller("MedicalrecordPDFDownloadCtrl",["$scope","$state","$window","$location",function($scope,$state,$window,$location){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.uconfig||$state.go("login"),$scope.databind()},$scope.mrData=$window.sessionStorage.getItem("medicalrecordPDFDownload"),$scope.mrData1=window.atob($scope.mrData),$scope.databind=function(){},$scope.downloadPDF=function(){var innerContents=document.getElementById("submission").innerHTML,popupWinindow=window.open("","_blank","width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no");popupWinindow.document.open(),popupWinindow.document.write('<html><head> <link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/styles.css" rel="stylesheet" media="all"/><link href="css/global.css" rel="stylesheet" media="all" /><link href="lib/bootstrap/css/bootstrap.min.css" media="all" rel="stylesheet"/><link href="css/print.css" rel="stylesheet" media="print" /></head><body onload="window.print()">'+innerContents+"</html>"),popupWinindow.document.close()},$scope.back=function(){$state.go("profile")},$scope.init()}]),angular.module("app.lme").controller("MinprofileCtrl",["$scope","$state","APIS",function($scope,$state,APIS){$scope.init=function(){},$scope.init()}]),angular.module("app.lme").controller("MrsearchCtrl",["$scope","$state","APIS","DataManager","$window","$uibModal","CAASConfig","ResourceManager","ModalService","$filter","$rootScope","$log",function($scope,$state,APIS,DataManager,$window,$uibModal,CAASConfig,regRM,ModalService,$filter,$rootScope,$log){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.doctorInfo=JSON.parse(sessionStorage.getItem("doctorDetails")),$scope.clinicInfo=JSON.parse(sessionStorage.getItem("ClinicDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userSeqId=$scope.uconfig.userSeqId,$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.selectedclinic=!0,$scope.selectedAction={selectedObject:{}},$scope.regRM=regRM,$scope.uconfig||$state.go("login"),$scope.Options1=[{actionId:"1",actionName:"Call applicant"},{actionId:"2",actionName:"Option B"},{actionId:"3",actionName:"Option C"}],$scope.init=function(){$scope.searchKeys={nricFin:null,receiptNo:null,applicantname:null,roleId:$scope.roleid,roleName:$scope.rolename},$scope.clinicdata=[],$scope.doctordata=[],$scope.visitDetails={visitId:"",applicantId:"",applicantuserId:""},$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas(),$scope.visitInfo&&$scope.loadclinic($scope.visitInfo.applicantDetails.applicationId)},$scope.select=function(page){var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=$scope.mrfilteredStores.slice(start,end)},$scope.onFilterChange=function(){return $scope.select(1),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.search=function(){APIS.MR_SEARCH.data=$scope.searchKeys,DataManager.sendRestRequest(null,APIS.MR_SEARCH,function(response){response.success&&(response.dataBean.length>0?($scope.mrfilteredStores=response.dataBean,console.log($scope.mrfilteredStores),$scope.select($scope.currentPage)):ModalService.openAlert("alert","Queued ","No data found for the search/Filter criteria ","null","null"))},$scope.uconfig.token)},$scope.tabledatas=function(){APIS.MR_SEARCH_TABLE.data=$scope.searchKeys,DataManager.sendRestRequest(null,APIS.MR_SEARCH_TABLE,function(response){response.success&&($scope.mrfilteredStores=response.dataBean,$scope.select($scope.currentPage))},$scope.uconfig.token)},$scope.popuptrigger=function(trigger){$scope.actionTrigger=trigger},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.doAction=function(actionParam,applicantParam){$scope.visitDetails=null,$scope.visitDetails={visitId:applicantParam.visitId,applicantId:applicantParam.applicantId,applicantuserId:applicantParam.applicantuserId,applicantDetails:applicantParam},$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$scope.triggerAction(actionParam,applicantParam)},$scope.triggerAction=function(actionParam,applicantParam){switch($scope.swichModel="",actionParam.actionName){case"Abort":$scope.swichModel="abort";break;case"Create LME Visit":if(applicantParam.visitId)return ModalService.openAlert("alert","LME Visit","LME Visit has been already created","null","null"),!1;$scope.swichModel="CreateLmeVisit";break;case"Create AR Visit":$scope.swichModel="ArVisit";break;case"Abort":$scope.swichModel="abort";break;case"Call Applicant":var url=null,tempUrl=null;return tempUrl=APIS.LME_CALLAPPLICANT.URL,url=tempUrl+"/"+applicantParam.applicantId+"/"+applicantParam.visitId+"/null",APIS.LME_CALLAPPLICANT.URL=url,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant?$state.go("hed"):$state.go("measurement"))},$scope.uconfig.token),APIS.LME_CALLAPPLICANT.URL=tempUrl,!1;case"DMF":$scope.val="";var url=null,tempUrl=null;return tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+applicantParam.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"dmfmodal",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$rootScope.visitDetails};return temp}}})})}else $scope.dmf(applicantParam)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl,!1;case"Follow Up":break;case"HED":break;case"Preview":break;case"VIEW DMF":$scope.swichModel="dmfmodal";break;case"Recall":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+applicantParam.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Recall":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:applicantParam.applicantname,dmename:applicantParam.doctorname,applicantid:applicantParam.applicantId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Unlock":return ModalService.openAlert("confirm","warning","Do you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){$scope.requnlock={visitId:tablerecord.visitId,applicantname:tablerecord.applicantname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(response){response.success?(ModalService.openAlert("alert","Unlock","Unlock Done","","",""),$window.location.reload()):ModalService.openAlert("alert","Unlock","Your request is not allowed","","","")},$scope.uconfig.token)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Resume":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"resume",function(){}),$scope.$on("resumeOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RESUME.URL,url=tempUrl+"/"+applicantParam.visitId,APIS.LME_DME_RESUME.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RESUME,function(response){response.success?$state.go("measurement"):console.log(response)},$scope.uconfig.token),APIS.LME_DME_RESUME.URL=tempUrl}),$scope.$on("resumecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Transfer":$scope.swichModel="mrtransfer";break;case"Unlock":return ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+applicantParam.visitId,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?(ModalService.openAlert("alert","Unlock","Unlock Done","","",""),$window.location.reload()):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Update":return ModalService.openAlert("confirm","warning","Are you sure you want to update the selected record?",$scope,"update",function(){}),$scope.$on("updateOk",function(){$state.go("measurement")}),$scope.$on("updatecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;default:$scope.swichModel="noAction"}var switchModal=$uibModal.open({animation:!0,backdrop:"static",keyboard:!1,templateUrl:$scope.swichModel,controller:"ActionCtrl",resolve:{modalParam:function(){var temp={applicantParam:applicantParam,visitDetails:$rootScope.visitDetails};return temp}}});switchModal.result.then(function(selectedItem){console.log("opdata",selectedItem)},function(){$scope.selectedAction.selectedObject={},console.log("Modal dismissed at: "+new Date)})},$scope.dateFormate=function(param){var date=param.split("/"),newDate=date[2]+"-"+date[1]+"-"+date[0];return new Date(newDate)},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,tablerecord.visitType?$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord}:$scope.visitDetails={visitId:tablerecord.visitId,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.loaddoctor=function(applicationId){$scope.cliniciddetails=JSON.parse(sessionStorage.getItem("clinicid"));var url=null,tempUrl=null;tempUrl=APIS.DOCTOR_LIST.URL,url=tempUrl+"/"+applicationId+"/"+$scope.cliniciddetails,APIS.DOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.DOCTOR_LIST,function(response){response.success&&($scope.doctordata=response.dataBean)},$scope.uconfig.token),APIS.DOCTOR_LIST.URL=tempUrl},$scope.loadclinic=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.CLINIC_LOCATION.URL,url=tempUrl+"/"+applicationId+"/"+$scope.uconfig.userSeqId,APIS.CLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.CLINIC_LOCATION,function(response){response.success&&($scope.clinicdata=response.dataBean)},$scope.uconfig.token),APIS.CLINIC_LOCATION.URL=tempUrl},$scope.selectclinicid=function(id){$scope.clinicid=id,sessionStorage.setItem("clinicid",JSON.stringify($scope.clinicid)),$scope.loaddoctor($scope.visitInfo.applicantDetails.applicationId)},$scope.dmf=function(param){$uibModal.open({animation:!0,templateUrl:"dmfmodal",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.init()}]),angular.module("app.lme").controller("MsitCtrl",["$scope","$state","APIS","$rootScope","DataManager","$window","ModalService",function($scope,$state,APIS,$rootScope,DataManager,$window,ModalService){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.currentrole=JSON.parse(sessionStorage.getItem("currentRole")),console.log($scope.currentrole),$scope.applicantid=$scope.visitDetails.applicantId,$scope.uconfig||$state.go("login"),$scope.applimsitdet(),"LMF Manager"!=$scope.currentrole.roleName&&"LMF"!=$scope.currentrole.roleName&&"CAMB Physician"!=$scope.currentrole.roleName||CKEDITOR.replace("msittxt"),$scope.msitsavedata={applicantId:$scope.applicantid,msit:"",primaryidentifier:""}},$scope.applimsitdet=function(){APIS.LME_APPLICANT_MSIT.data={applicantId:$scope.applicantid},DataManager.sendRestRequest(null,APIS.LME_APPLICANT_MSIT,function(response){response.success?($scope.applimsit=response.dataBean,console.log($scope.applimsit),""==!$scope.applimsit[0].msit||null==$scope.applimsit[0].msit,""!==$scope.applimsit[0].msit&&null!==$scope.applimsit[0].msit&&($scope.msit=$scope.applimsit[0].msit.replace(/<br>/g,"\n"),$scope.msit=$scope.applimsit[0].msit.replace(/<p>/g,""),$scope.msit=$scope.applimsit[0].msit.replace(/<\/p>/g,""),"LMF Manager"==$scope.currentrole.roleName||"LMF"==$scope.currentrole.roleName||"CAMB Physician"==$scope.currentrole.roleName?$scope.msit=$scope.applimsit[0].msit.$(msittxt).text():$scope.msit=$scope.applimsit[0].msit.$(msittxtnew).text(),console.log($scope.msit),$scope.msitsavedata={applicantId:$scope.applicantid,msit:$scope.msit,primaryidentifier:""})):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.msitsave=function(){$scope.msitsavedata.msit=CKEDITOR.instances.msittxt.getData($scope.msit),APIS.LME_APPLICANT_MSITSAVE.data=$scope.msitsavedata,DataManager.sendRestRequest(null,APIS.LME_APPLICANT_MSITSAVE,function(response){response.success?($scope.responcemsit=response.dataBean,ModalService.openAlert("alert","MSIT","Saved successfully","null","null")):console.log(response.errorMessages)},$scope.uconfig.token)},$scope.init()}]),angular.module("app.lme").controller("OperationalprovisosCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModalInstance","$rootScope","ModalService","modalParam",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModalInstance,$rootScope,ModalService,modalParam){
$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.requestScreenName=modalParam.screenName,$scope.existingOperationalprovisos=modalParam.existingOperationalprovisos,$scope.operationalprovisosChecked=[],$scope.operationalprovisosDisabled=[],$scope.operationalprovisosListAdd=[],$scope.dataBind()},$scope.dataBind=function(){$scope.operationalprovisosGridPopup()},$scope.cancel=function(){for(var c=0;c<$scope.operationalprovisosListAdd.length;c++)$scope.operationalprovisosListAdd.splice(c,1);$uibModalInstance.dismiss("cancel")},$scope.operationalprovisosGridPopup=function(){DataManager.sendRestRequest(null,APIS.GET_OPERATIONAL_PROVISO,function(response){if(response.success){$scope.operationalprovisosListFetch=response.dataBean;for(var o=0;o<$scope.operationalprovisosListFetch.length;o++)$scope.operationalprovisosCheck=[],$scope.operationalprovisosCheck=$.grep($scope.existingOperationalprovisos,function(e){return e.code==$scope.operationalprovisosListFetch[o].code}),$scope.operationalprovisosCheck.length>=1?($scope.operationalprovisosChecked[o]=!0,$scope.operationalprovisosDisabled[o]=!0):($scope.operationalprovisosChecked[o]=!1,$scope.operationalprovisosDisabled[o]=!1)}else console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.operationalprovisosSelected=function(operationalprovisos,index){1==operationalprovisos[index]?$scope.operationalprovisosListAdd.push({actionId:$scope.operationalprovisosListFetch[index].actionId,code:$scope.operationalprovisosListFetch[index].code,actionName:$scope.operationalprovisosListFetch[index].actionName}):$scope.operationalprovisosListAdd.splice($scope.operationalprovisosListFetch.map(function(e){return e.actionId}).indexOf($scope.operationalprovisosListFetch.actionId),1)},$scope.operationalprovisosGrid=function(){"LME Analysis"==$scope.requestScreenName&&($rootScope.dmfClearanceRecommendationData.existingOpertionalproviso=$scope.existingOperationalprovisos.concat($scope.operationalprovisosListAdd)),"LMAB Review"==$scope.requestScreenName&&($rootScope.lmabreviewData.operationProvisoList=$scope.existingOperationalprovisos.concat($scope.operationalprovisosListAdd)),$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app.lme").controller("PendingfollowupCtrl",["$scope","$state","APIS","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter",function($scope,$state,APIS,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.doctorInfo=JSON.parse(sessionStorage.getItem("doctorDetails")),$scope.clinicInfo=JSON.parse(sessionStorage.getItem("ClinicDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userSeqId=$scope.uconfig.userSeqId,$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.personId=$scope.userInfo.personId,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visittypeRecord=JSON.parse(sessionStorage.getItem("VisitRecords")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.visitType={I:!1,R:!1,B:!1,60:!1,DMF:!1,PR:!1,EVERY:!1},$scope.selectedAction={selectedObject:{}},$scope.visitData=[],$scope.keys={idno:"",applicantname:"",doctorname:"",visitType:{lmetype:""}},$scope.keyvalue=[{lmetype:null}],$scope.selectedclinic=!0,$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.visiList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.selectedclinic=!0,$scope.dataBind()},$scope.dataBind=function(){$scope.tabledatas(),$scope.visitList(),$scope.visitInfo&&($scope.loaddme($scope.visitInfo.applicantDetails.applicationId),$scope.loadclinic($scope.visitInfo.applicantDetails.applicationId))},$scope.tabledatas=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_PENDINGFOLLOWUP.URL,url=tempUrl+$scope.roleid,APIS.LME_PENDINGFOLLOWUP.URL=url,DataManager.sendRestRequest(null,APIS.LME_PENDINGFOLLOWUP,function(response){response.success&&($scope.mrfilteredStores=response.dataBean,$scope.temp=response.dataBean,$scope.$emit("pendingCount",{count:response.dataBean.length}),$scope.drList=$scope.groupDr(),$scope.select($scope.currentPage),$scope.visitList())},$scope.uconfig.token),APIS.LME_PENDINGFOLLOWUP.URL=tempUrl},$scope.visitList=function(){$scope.visittypeRecord&&$scope.groupVisit($scope.visittypeRecord)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){if($scope.keys.idno||$scope.keys.applicantname||$scope.keys.doctorname||$scope.keys.visitType.lmetype){$scope.mrfilteredStores=$scope.temp;var data=$scope.mrfilteredStores;return null==$scope.keys.doctorname&&($scope.keys.doctorname=""),null==$scope.keys.visitType.lmetype&&($scope.keys.visitType.lmetype=""),data=$filter("filter")(data,$scope.keys),$scope.mrfilteredStores=data,$scope.onFilterChange(data)}$scope.mrfilteredStores=$scope.temp,$scope.mrcurrentPageStores=$scope.select($scope.currentPage,$scope.mrfilteredStores)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerPopup={opened:!1},$scope.doAction=function(actionParam,applicantParam,tablerecord){$scope.visitDetails=null,$scope.deferredtab=!1,sessionStorage.setItem("DefferedPage",JSON.stringify($scope.deferredtab)),$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.triggerAction(actionParam,applicantParam,tablerecord)},$scope.triggerAction=function(actionParam,applicantParam,tablerecord){switch(sessionStorage.removeItem("LME_Updatecheck"),$scope.modifyvisitType=[],$scope.modifyvisitType=[{"class":"C1",classId:"1",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1},{"class":"C2",classId:"2",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1},{"class":"C3",classId:"3",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1}],angular.forEach(tablerecord.visitType,function(value,key){"C1"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[key].checked=!0),"C2"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[key].checked=!0),"C3"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[key].checked=!0)}),tablerecord.visitType=[],tablerecord.visitType=$scope.modifyvisitType,$scope.swichModel="",actionParam.actionName){case"Abort":$scope.swichModel="followupabort";break;case"Accept Transfer Request":break;case"Attach Documents":break;case"CAMB Instructions":break;case"Call Applicant":return $scope.callapplicant={applicationId:tablerecord.applicationId,visitId:tablerecord.visitId,type:tablerecord.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.callapplicant,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?$state.go("hed"):$state.go("measurement"))},$scope.uconfig.token),!1;case"Create AR Visit":break;case"DMF":$scope.val="";var url=null,tempUrl=null;return tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+tablerecord.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$scope.visitInfo};return $scope.selectedAction.selectedObject={},temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"followupdmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return $scope.selectedAction.selectedObject={},temp}}})})}else $scope.dmf(tablerecord)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl,!1;case"VIEW DMF":$scope.swichModel="followupdmf";break;case"Follow Up":break;case"HED":break;case"Preview":break;case"Recall":return ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Recall":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:tablerecord.applicantname,dmename:tablerecord.doctorname,applicantid:tablerecord.applicantId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Unlock":return ModalService.openAlert("confirm","warning","Do you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){$scope.requnlock={visitId:tablerecord.visitId,applicantname:tablerecord.applicantname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId,type:tablerecord.type},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(response){response.success?(ModalService.openAlert("alert","Unlock","Unlock Done","","",""),$window.location.reload()):ModalService.openAlert("alert","Unlock","Your request is not allowed","","","")},$scope.uconfig.token)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Resume":return $scope.truecheck=!0,sessionStorage.setItem("DME_Resume",JSON.stringify($scope.truecheck)),$scope.setupdatetrue=!1,$scope.selectedAction.selectedObject={},ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"resume",function(){}),$scope.$on("updateOk",function(){sessionStorage.setItem("LME_Updatecheck",JSON.stringify($scope.setupdatetrue)),$state.go("measurement")}),$scope.$on("resumeOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RESUME.URL,url=tempUrl+"/"+tablerecord.visitId+"/"+tablerecord.type,APIS.LME_DME_RESUME.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RESUME,function(response){response.success?$state.go("measurement"):console.log(response)},$scope.uconfig.token),APIS.LME_DME_RESUME.URL=tempUrl}),$scope.$on("resumecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Transfer":"AR"==tablerecord.type?$scope.swichModel="arfollowuptransfer":$scope.swichModel="followuptransfer";break;case"Unlock":return ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+tablerecord.visitId+"/"+tablerecord.statuspageName,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?(ModalService.openAlert("alert","Unlock","Unlock Done","","",""),$window.location.reload()):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Update":return $scope.selectedAction.selectedObject={},ModalService.openAlert("confirm","warning","Are you sure you want to update the selected record?",$scope,"update",function(){}),$scope.$on("updateOk",function(){$state.go("measurement"),$scope.setupdatetrue=!0,sessionStorage.setItem("LME_Updatecheck",JSON.stringify($scope.setupdatetrue))}),$scope.$on("updatecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"View DMF":break;case"View Submission":break;case"Create LME Visit":break;case"Next":break;case"Request CAMB Review":break;case"Review Capel Export":break;case"Review Aris Export":break;case"Publish LMAB":break;case"Publish Letters":break;case"Referral":break;case"Send":break;case"View LMF Comments":break;case"Review Assessment Changes":break;case"Close":break;case"Return to LMAB":break;case"Circulate":break;case"Commence":break;case"Submit":break;case"View  Only":break;default:$scope.swichModel="noAction"}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:tablerecord,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.groupDr=function(){var drlist=[];return angular.forEach($scope.mrfilteredStores,function(value,key){var temp={doctorId:value.doctorId,doctorname:value.doctorname};drlist.push(temp)}),drlist},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.loaddme=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.DOCTOR_LIST.URL,url=tempUrl+"/"+applicationId,APIS.DOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.DOCTOR_LIST,function(response){response.success?($scope.doctordata=response.dataBean,angular.forEach($scope.doctordata,function(value,key){$scope.userSeqId==value.dmeuserId&&$scope.doctordata.splice(key,1)}),$window.sessionStorage.setItem("doctorDetails",JSON.stringify($scope.doctordata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.DOCTOR_LIST.URL=tempUrl},$scope.loadclinic=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.CLINIC_LOCATION.URL,url=tempUrl+"/"+applicationId,APIS.CLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.CLINIC_LOCATION,function(response){response.success?($scope.clinicdata=response.dataBean,$window.sessionStorage.setItem("ClinicDetails",JSON.stringify($scope.clinicdata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CLINIC_LOCATION.URL=tempUrl},$scope.dateFormate=function(param){return new Date(param)},$scope.groupVisit=function(visitCombo){angular.forEach($scope.mrfilteredStores,function(value,key){angular.forEach(value.visitType,function(visit,index){switch(visit.lmetype){case"I":$scope.visitType.I=!0;break;case"R":$scope.visitType.R=!0;break;case"B":$scope.visitType.B=!0;break;case"60":$scope.visitType[60]=!0;break;case"DMF":$scope.visitType.DMF=!0;break;case"PR":$scope.visitType.PR=!0;break;case"EVERY":$scope.visitType.EVERY=!0}})});var tempArray=[];angular.forEach(visitCombo,function(combo,index){$scope.visitType[combo.code]&&tempArray.push(combo)}),$scope.visitData=tempArray},$scope.dmf=function(param){$uibModal.open({animation:!0,templateUrl:"dmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return $scope.selectedAction.selectedObject={},temp}}})},$scope.init()}]),angular.module("app.lme").controller("PhysicalexaminationCtrl",["$scope","$state","$stateParams","APIS","DataManager","$window","$uibModal","$rootScope","ModalService","$timeout",function($scope,$state,$stateParams,APIS,DataManager,$window,$uibModal,$rootScope,ModalService,$timeout){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.doctorInfo=JSON.parse(sessionStorage.getItem("doctorDetails")),$scope.clinicInfo=JSON.parse(sessionStorage.getItem("ClinicDetails")),$window.sessionStorage.setItem("hedpage","clickhed"),$scope.fromDate=null,$scope.fromdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:new Date,startingDay:1},$scope.phyFollowData={},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.fromdatepickerPopup={opened:!1},$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.phyUpLoadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LME_FOLLOWUP_COMBO,function(response){response.success?$scope.phyFollowData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.phyUpLoadCombo(),$scope.followupdoAction=function(){$uibModal.open({animation:!0,templateUrl:"phyfollowUp",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.dmfDoAction=function(){$uibModal.open({animation:!0,templateUrl:"phydmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.visitInfo.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"phydmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})})}else $scope.dmfDoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.AbortdoAction=function(){$uibModal.open({animation:!0,templateUrl:"phyAbort",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.doattachAction=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/attachmentmodel.html",controller:"ActionCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitInfo};return temp}}})},$scope.openFile=function(event){var input=event.target,reader=new FileReader;reader.onload=function(){var dataURL=reader.result;document.getElementById("mytext").value=dataURL},reader.readAsDataURL(input.files[0])},$scope.coordinates=[{coords:{x:140,y:25},shape:"circle",color:"#009E11",pointName:"Neurology (Overall)"},{coords:{x:122,y:40},shape:"circle",color:"#009E11",pointName:"Eyes"},{coords:{x:155,y:40},shape:"circle",color:"#009E11",pointName:"Eyes"},{coords:{x:107,y:60},shape:"circle",color:"#009E11",pointName:"Ears"},{coords:{x:173,y:60},shape:"circle",color:"#009E11",pointName:"Ears"},{coords:{x:140,y:75},shape:"circle",color:"#009E11",pointName:"Mouth & Throat"},{coords:{x:140,y:102},shape:"circle",color:"#009E11",pointName:"Neck"},{coords:{x:110,y:155,rw:18,rh:25},shape:"oval",color:"#009E11",pointName:"Chest"},{coords:{x:170,y:155,rw:18,rh:25},shape:"oval",color:"#009E11",pointName:"Chest"},{coords:{x:140,y:145},shape:"circle",color:"#009E11",pointName:"Cardiovascular & Throat"},{coords:{x:70,y:200},shape:"circle",color:"#009E11",pointName:"Upper Limbs"},{coords:{x:210,y:200},shape:"circle",color:"#009E11",pointName:"Upper Limbs"},{coords:{x:45,y:330},shape:"circle",color:"#009E11",pointName:"Wrist & Hands"},{coords:{x:234,y:330},shape:"circle",color:"#009E11",pointName:"Wrist & Hands"},{coords:{x:104,y:260},shape:"circle",color:"#009E11",pointName:"Genito-Urinary"},{coords:{x:172,y:260},shape:"circle",color:"#009E11",pointName:"Genito-Urinary"},{coords:{x:140,y:280},shape:"circle",color:"#009E11",pointName:"Abdomen"},{coords:{x:110,y:315},shape:"circle",color:"#009E11",pointName:"Inguinal"},{coords:{x:168,y:315},shape:"circle",color:"#009E11",pointName:"Inguinal"},{coords:{x:116,y:420},shape:"circle",color:"#009E11",pointName:"Lower Limb"},{coords:{x:160,y:420},shape:"circle",color:"#009E11",pointName:"Lower Limb"},{coords:{x:122,y:570},shape:"circle",color:"#009E11",pointName:"Ankle & Feet"},{coords:{x:157,y:570},shape:"circle",color:"#009E11",pointName:"Ankle & Feet"},{coords:{x:140,y:45,a:148,b:62,c:130,d:62},shape:"triangle",color:"#EF6254",pointName:"Nasal Space"}],$scope.backcoordinator=[{coords:{x:140,y:165},shape:"circle",color:"#009E11",pointName:"Spine"},{coords:{x:140,y:290},shape:"circle",color:"#009E11",pointName:"Anus & Rectum"}],$scope.init=function(){$scope.edittabledata=[],$scope.editrecords={parts_id:"",parts_name:"",remarks:""},$scope.checkboxModel=!0,$scope.pushtargetd=[],$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1}),$scope.dataBind(),$scope.$watch("checkboxModel",function(newvalue,oldvalue){newvalue?$scope.checknew=!1:$scope.checknew=!0,$window.sessionStorage.setItem("clickval",$scope.checknew),$scope.$on("examinationONload",function(event,data){$scope.physicalexamination_Examinationonload()})})},$scope.dataBind=function(){$scope.physicalexamination_Examinationonload(),$scope.targeted(),$scope.getUploadedDocument()},$scope.targeted=function(){$scope.targetedparam={applicationid:$scope.visitInfo.applicantDetails.applicationId},APIS.LME_PHYSICALEXAMINATION_TARGETED.data=$scope.targetedparam,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_TARGETED,function(response){response.success?$scope.targeted_bean=response.dataBean.listLME_SendToUI_DTO:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.index=!1,$scope.physicalexamination_onload=function(body_part){"DMF"==$scope.visitInfo.visitType||"PR"==$scope.visitInfo.visitType?($scope.examination_Arparams={visitId:$scope.visitInfo.visitId,personId:$scope.visitInfo.applicantId,pointName:body_part.pointName,examination_type:"ar"},APIS.LME_PHYSICALEXAMINATION_ONLOAD.data=$scope.examination_Arparams,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_ONLOAD,function(response){response.success?($scope.physicalexamination_onloaddata=response.dataBean,$scope.index=!0):console.log(response.errorMessage)},$scope.uconfig.token)):($scope.examination_Lmeparams={visitId:$scope.visitInfo.visitId,personId:$scope.visitInfo.applicantId,pointName:body_part.pointName,examination_type:"lme"},APIS.LME_PHYSICALEXAMINATION_ONLOAD.data=$scope.examination_Lmeparams,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_ONLOAD,function(response){if(response.success){$scope.physicalexamination_onloaddata=response.dataBean,$scope.index=!0;for(var k=0;k<$scope.targeted_bean.length;k++)if($scope.targeted_bean[k].pointName==$scope.examination_Lmeparams.pointName){$scope.status="N";for(var t=0;t<$scope.physicalexamination_onloaddata.length;t++)for(var u=0;u<$scope.physicalexamination_onloaddata[t].partsDetails.length;u++)$scope.physicalexamination_onloaddata[t].partsDetails[u].mandatory=$scope.status}else $scope.mandatory=!1}else console.log(response.errorMessage)},$scope.uconfig.token))},$scope.physicalexamination_Examinationonload=function(){$scope.physicalexamination_userinfo={visitId:parseInt($scope.visitInfo.visitId),applicationId:$scope.visitInfo.applicantDetails.applicationId},"DMF"==$scope.visitInfo.visitType||"PR"==$scope.visitInfo.visitType?(APIS.AR_PHYSICALEXAMINATION_EXAMINATION.data=$scope.physicalexamination_userinfo,DataManager.sendRestRequest(null,APIS.AR_PHYSICALEXAMINATION_EXAMINATION,function(response){response.success?($scope.measurement_bp=response.dataBean[0].ar_mea_bp,$scope.measurement_asthma=response.dataBean[0].ar_mea_asthma,$scope.measurement_eye=response.dataBean[0].ar_mea_eye_others,$scope.measurement_audiometry=response.dataBean[0].ar_MEA_AUDIOMETRY,$scope.investigation=response.dataBean[0].investigation,$scope.system_parts_remarks=response.dataBean[0].system_parts_remarks,$scope.physicalexamination_examinationdata=$scope.measurement_bp.concat($scope.measurement_asthma,$scope.measurement_eye,$scope.measurement_audiometry,$scope.investigation,$scope.system_parts_remarks)):console.log(response.errorMessage)},$scope.uconfig.token)):(APIS.LME_PHYSICALEXAMINATION_EXAMINATION.data=$scope.physicalexamination_userinfo,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_EXAMINATION,function(response){response.success?($scope.examination_flag=response.dataBean[0].exitsORnotFlag,console.log($scope.examination_flag),"Y"==$scope.examination_flag&&($scope.checknew=!0,$window.sessionStorage.setItem("clickval",$scope.checknew)),console.log($scope.examination_flag),$scope.hed=response.dataBean[0].hedList,$scope.hed.lme_dme=response.dataBean[0].lme_DME_REMARKS,$scope.measurement_bp=response.dataBean[0].lme_mea_bp,$scope.measurement_asthma=response.dataBean[0].lme_mea_asthma,$scope.measurement_eye=response.dataBean[0].lme_mea_eye_others,$scope.measurement_audiometry=response.dataBean[0].lme_MEA_AUDIOMETRY,$scope.investigation=response.dataBean[0].investigation,$scope.system_parts_remarks=response.dataBean[0].system_parts_remarks,$scope.body_points=response.dataBean[0].body_points_list,$scope.physicalexamination_examinationdata=$scope.hed.concat($scope.hed.lme_dme,$scope.measurement_bp,$scope.measurement_asthma,$scope.measurement_eye,$scope.measurement_audiometry,$scope.investigation,$scope.system_parts_remarks)):console.log(response.errorMessage)},$scope.uconfig.token))},$scope.physicalexamination_submit=function(physicalexamination_onloaddata){$scope.physicalexamination_data=physicalexamination_onloaddata,$scope.physicalexamination_data=physicalexamination_onloaddata;for(var i=0;i<$scope.physicalexamination_data.length;i++){$scope.physicalexamination_data[i].visitId=$scope.visitInfo.visitId,$scope.physicalexamination_data[i].personId=$scope.visitInfo.applicantId;for(var j=0;j<$scope.physicalexamination_data[i].partsDetails.length;j++)delete $scope.physicalexamination_data[i].partsDetails[j].pointsId}"DMF"==$scope.visitInfo.visitType||"PR"==$scope.visitInfo.visitType?(APIS.AR_PHYSICALEXAMINATION_SAVE.data=$scope.physicalexamination_data,DataManager.sendRestRequest(null,APIS.AR_PHYSICALEXAMINATION_SAVE,function(response){response.success?($scope.physicalexamination_submitdata=response.dataBean,$scope.physicalexamination_Examinationonload(),angular.forEach($scope.physicalexamination_data,function(value,key){$scope.physicalexamination_dataDetails=value.partsDetails,angular.forEach($scope.physicalexamination_dataDetails,function(value,key){$scope.dataDetails_Remarks=value.remarks,$scope.dataDetails_Remarks&&(value.remarks=" ")})}),$scope.dataDetails_Remarks||($scope.dataDetails_Remarks=" ")):console.log(response.errorMessage)},$scope.uconfig.token)):(APIS.LME_PHYSICALEXAMINATION_SAVE.data=$scope.physicalexamination_data,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_SAVE,function(response){response.success?($scope.physicalexamination_submitdata=response.dataBean,$scope.physicalexamination_Examinationonload(),angular.forEach($scope.physicalexamination_data,function(value,key){$scope.physicalexamination_dataDetails=value.partsDetails,angular.forEach($scope.physicalexamination_dataDetails,function(value,key){$scope.dataDetails_Remarks=value.remarks,$scope.dataDetails_Remarks&&(value.remarks=" ")})})):console.log(response.errorMessage)},$scope.uconfig.token))},$scope.filter=function(value){$scope.copyrecords=value,$scope.editrecords.remark_id=$scope.copyrecords.remarkid,$scope.editrecords.remark_name=$scope.copyrecords.sectionName,$scope.editrecords.reference=$scope.copyrecords.reference,$scope.editrecords.remarks=$scope.copyrecords.remark},$scope.edit_records=function(remarks,remarkId,remark_name){$scope.editdatas={visit_id:$scope.visitInfo.visitId,applicationid:$scope.visitInfo.applicantDetails.applicationId,remark:remarks,remarkid:remarkId,sectionName:remark_name},"DMF"==$scope.visitInfo.visitType||"PR"==$scope.visitInfo.visitType?(APIS.AR_PHYSICALEXAMINATION_UPDATE.data=$scope.editdatas,DataManager.sendRestRequest(null,APIS.AR_PHYSICALEXAMINATION_UPDATE,function(response){response.success?($scope.response_update=response.dataBean,$scope.physicalexamination_Examinationonload(),$scope.$root.$broadcast("examLoad",!0),ModalService.openAlert("alert","Physical Examination","Remarks updated successfully","null","null")):console.log(response.errorMessage)},$scope.uconfig.token)):(APIS.LME_PHYSICALEXAMINATION_UPDATE.data=$scope.editdatas,console.log($scope.editdatas),DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_UPDATE,function(response){response.success?($scope.response_update=response.dataBean,$scope.physicalexamination_Examinationonload(),$scope.$root.$broadcast("examLoad",!0),ModalService.openAlert("alert","Physical Examination","Remarks updated successfully","null","null")):console.log(response.errorMessage)},$scope.uconfig.token))},$scope.remarks_save=function(){APIS.LME_PHYSICALEXAMINATION_CHECKBOXSAVE.URL="lmeExam/lme_examination_finding_yorn/"+$scope.visitInfo.visitId,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_CHECKBOXSAVE,function(response){response.success?ModalService.openAlert("alert","Physical Examination","Saved successfully","null","null"):console.log(response.errorMessage);
},$scope.uconfig.token)},$scope.arremarks_save=function(){ModalService.openAlert("alert","AR Physical Examination","Saved successfully","null","null")},$scope.delete_row=function(remarkid,sectionName,reference){$scope.delete_records={visit_id:$scope.visitInfo.visitId,sectionName:sectionName,remarkid:remarkid,applicationid:$scope.visitInfo.applicantDetails.applicationId,reference:reference},"DMF"==$scope.visitInfo.visitType||"PR"==$scope.visitInfo.visitType?(ModalService.openAlert("confirm","warning","Do you want to delete the remarks",$scope,"recall",function(){}),$scope.$on("recallOk",function(){APIS.AR_PHYSICALEXAMINATION_DELETE.data=$scope.delete_records,DataManager.sendRestRequest(null,APIS.AR_PHYSICALEXAMINATION_DELETE,function(response){response.success?($scope.response_delete=response.dataBean,$scope.physicalexamination_Examinationonload(),$scope.$root.$broadcast("examLoad",!0)):console.log(response.errorMessage)},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})):(ModalService.openAlert("confirm","warning","Do you want to delete the remarks",$scope,"recall",function(){}),$scope.$on("recallOk",function(){APIS.LME_PHYSICALEXAMINATION_DELETE.data=$scope.delete_records,DataManager.sendRestRequest(null,APIS.LME_PHYSICALEXAMINATION_DELETE,function(response){response.success?($scope.response_delete=response.dataBean,$scope.physicalexamination_Examinationonload(),$scope.$root.$broadcast("examLoad",!0)):console.log(response.errorMessage)},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}))},$rootScope.mandatorycheck=function(){if(0==$scope.system_parts_remarks.length)console.log("PH mandatory"),$scope.mandatorycheck=!1;else if(0!=$scope.system_parts_remarks.length){for(var count=0,s=0;s<$scope.body_points.length;s++)for(var t=0;t<$scope.targeted_bean.length;t++)$scope.targeted_bean[t].pointName==$scope.body_points[s].BODY_POINTS_NAME&&(count+=1,console.log(count));$scope.targeted_bean.length==count?(console.log("PH mandatory1"),$scope.mandatorycheck=!1):$scope.mandatorycheck=!1}},$scope.Checklist_document=function(){DataManager.sendRestRequest(null,APIS.PHYSICALEXAMINATION_CHECKLIST,function(response){if(response.success){var content=response.dataBean.document,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.document,"_blank","location=0,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token)},$scope.getTarget=function(targetPoint){if(1==targetPoint){var body_part={pointName:"Neurology (Overall)"};$scope.physicalexamination_onload(body_part)}else if(2==targetPoint||3==targetPoint){var body_part={pointName:"Eyes"};$scope.physicalexamination_onload(body_part)}else if(4==targetPoint||5==targetPoint){var body_part={pointName:"Ears"};$scope.physicalexamination_onload(body_part)}else if(26==targetPoint){var body_part={pointName:"Nasal Space"};$scope.physicalexamination_onload(body_part)}else if(6==targetPoint){var body_part={pointName:"Mouth & Throat"};$scope.physicalexamination_onload(body_part)}else if(7==targetPoint){var body_part={pointName:"Neck"};$scope.physicalexamination_onload(body_part)}else if(8==targetPoint||9==targetPoint){var body_part={pointName:"Chest"};$scope.physicalexamination_onload(body_part)}else if(10==targetPoint){var body_part={pointName:"Cardiovascular & Throat"};$scope.physicalexamination_onload(body_part)}else if(11==targetPoint||12==targetPoint){var body_part={pointName:"Upper Limbs"};$scope.physicalexamination_onload(body_part)}else if(13==targetPoint||14==targetPoint){var body_part={pointName:"Wrist & Hands"};$scope.physicalexamination_onload(body_part)}else if(15==targetPoint||16==targetPoint){var body_part={pointName:"Genito-Urinary"};$scope.physicalexamination_onload(body_part)}else if(17==targetPoint){var body_part={pointName:"Abdomen"};$scope.physicalexamination_onload(body_part),$scope.index=!0}else if(18==targetPoint||19==targetPoint){var body_part={pointName:"Inguinal"};$scope.physicalexamination_onload(body_part)}else if(20==targetPoint||21==targetPoint){var body_part={pointName:"Lower Limb"};$scope.physicalexamination_onload(body_part)}else if(22==targetPoint||23==targetPoint){var body_part={pointName:"Ankle & Feet"};$scope.physicalexamination_onload(body_part)}else if(24==targetPoint){var body_part={pointName:"Spine"};$scope.physicalexamination_onload(body_part)}else if(25==targetPoint){var body_part={pointName:"Anus & Rectum"};$scope.physicalexamination_onload(body_part)}},$scope.front=!0,$scope.back=!1,$scope.togglecanvas=function(){$scope.front=!$scope.front,$scope.back=!$scope.back},$scope.goPreview=function(){$window.open("#/viewhed?preview=2")},$scope.getUploadedDocument=function(){"DMF"==$scope.visitInfo.visitType||"PR"==$scope.visitInfo.visitType?$scope.referencetype="AR_VISITS":$scope.referencetype="LME_VISITS",APIS.LME_ATTACH_DOC_GRID.data={applicantId:$scope.visitInfo.applicantId,referencetype:$scope.referencetype},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?response.dataBean&&($scope.isDocumentUploaded=response.dataBean.length>0):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.init()}]),angular.module("app.lme").directive("physicalexaminationfront",function(){return{restrict:"A",scope:{someCtrlFn:"&callbackFn",coords:"=coords",drawtarget:"=drawtarget",canvasid:"=canvasid",spanid:"=spanid",data:"=data"},link:function(scope,element,attrs){var canvasID="#"+scope.canvasid,spanID="#"+scope.spanid,context=element[0].getContext("2d");scope.targeted_bean=JSON.parse(sessionStorage.getItem("targeted_beanData"));var circles=[],triangles=[],redtriangles=[],targetcircles=[],draw=function(context,x,y,fillcolor,radius,linewidth,strokestyle,fontcolor,textalign,fonttype,filltext){context.beginPath(),context.arc(x,y,radius,0,2*Math.PI,!1),context.fillStyle=fillcolor,context.fill(),context.lineWidth=linewidth,context.strokeStyle=strokestyle,context.stroke(),context.fillStyle=fontcolor,context.textAlign=textalign,context.font=fonttype,context.fillText(filltext,x,y)},Circle=function(x,y,radius){this.left=x-radius,this.top=y-radius,this.right=x+radius,this.bottom=y+radius},curve=function(){context.arc(138,265,35,0,Math.PI,!1),context.lineWidth="9",context.strokeStyle="#009E11",context.stroke()};curve();var oval=function(context,x,y,rw,rh,color){context.save(),context.beginPath(),context.ellipse(x,y,rw,rh,1*Math.PI/180,0,2*Math.PI),context.lineWidth=1,context.strokeStyle=color,context.fillStyle=color,context.fill(),context.stroke()},Oval=function(x,y,rw,rh){this.left=x-rw,this.top=y-rh,this.right=x+rw,this.bottom=y+rh},triangle=function(context,a,b,c,d,e,f,fillcolor){context.beginPath(),context.lineJoin="round",context.lineWidth=20,context.moveTo(a,b),context.lineTo(c,d),context.lineTo(e,f),context.closePath(),context.fillStyle=fillcolor,context.fill()},Tanglecenter=function(x,y,a,b,c,d,e){this.left=c,this.top=y,this.right=a,this.bottom=d},left_handline=function(){context.beginPath(),context.moveTo(79,170),context.lineTo(60,235),context.lineWidth="9",context.fill(),context.stroke()};left_handline();var right_handline=function(){context.beginPath(),context.moveTo(200,170),context.lineTo(219,235),context.stroke()};right_handline();var left_legline=function(){context.beginPath(),context.moveTo(116,390),context.lineTo(116,420),context.lineTo(116,450),context.stroke()};left_legline();var right_legline=function(){context.beginPath(),context.moveTo(160,390),context.lineTo(160,420),context.lineTo(160,450),context.stroke()};right_legline();var drawCircle=function(context,x,y,fillcolor,radius,linewidth,strokestyle,fontcolor,textalign,fonttype,filltext,circles){draw(context,x,y,fillcolor,radius,linewidth,strokestyle,fontcolor,textalign,fonttype,filltext);var circle=new Circle(x,y,radius);circles.push(circle)},drawoval=function(context,x,y,rw,rh,color,circles){oval(context,x,y,rw,rh,color);var circle=new Oval(x,y,rw,rh);circles.push(circle)},drawTriangle=function(context,x,y,a,b,c,d,e,f,fontcolor,triangles){triangle(context,x,y,a,b,c,d,e,f,fontcolor);var tanglec=new Tanglecenter(x,y,a,b,c,d,e);triangles.push(tanglec)};angular.forEach(scope.coords,function(value,key){"circle"==value.shape?drawCircle(context,value.coords.x,value.coords.y,value.color,7,1,"white",value.color,"center","8px Arial",key+1,circles):"oval"==value.shape?drawoval(context,value.coords.x,value.coords.y,value.coords.rw,value.coords.rh,value.color,circles):"triangle"==value.shape&&drawTriangle(context,value.coords.x,value.coords.y,value.coords.a,value.coords.b,value.coords.c,value.coords.d,value.coords.e,value.coords.f,value.color,triangles)}),angular.forEach(scope.coords,function(value1,key1){angular.forEach(scope.targeted_bean,function(value2,key2){"circle"==value1.shape&&value1.pointName==value2.pointName?drawCircle(context,value1.coords.x,value1.coords.y,"#E94B3B",7,1,"white","#E94B3B","center","8px Arial",key1+1,targetcircles):"oval"==value1.shape&&value1.pointName==value2.pointName?drawoval(context,value1.coords.x,value1.coords.y,value1.coords.rw,value1.coords.rh,"#E94B3B",targetcircles):"triangle"==value1.shape&&value1.pointName==value2.pointName&&drawTriangle(context,value1.coords.x,value1.coords.y,value1.coords.a,value1.coords.b,value1.coords.c,value1.coords.d,value1.coords.e,value1.coords.f,"#E94B3B",redtriangles)})}),element.bind("click",function(event){for(var nums,position=$(canvasID).offset(),position_nxt=$(spanID).offset(),clickedX=parseInt(event.clientX)-parseInt(position.left),clickedY=parseInt(event.clientY)+(parseInt(position_nxt.top)-parseInt(position.top)),i=0;i<circles.length;i++)if(clickedX<circles[i].right&&clickedX>circles[i].left&&clickedY>circles[i].top&&clickedY<circles[i].bottom){var num=i+1;nums=i,scope.someCtrlFn({arg1:num}),scope.$apply()}}),element.bind("click",function(event){for(var position=$(canvasID).offset(),position_nxt=$(spanID).offset(),clickedX=parseInt(event.clientX)-parseInt(position.left),clickedY=parseInt(event.clientY)+(parseInt(position_nxt.top)-parseInt(position.top)),j=0;j<triangles.length;j++)if(clickedX<triangles[j].right&&clickedX>triangles[j].left&&clickedY>triangles[j].top&&clickedY<triangles[j].bottom){var num=j+26;scope.someCtrlFn({arg1:num}),scope.$apply()}})}}}),angular.module("app.lme").directive("physicalexaminationback",function(){return{restrict:"A",scope:{someCtrlFn:"&callbackFn",coords:"=coords",canvasid:"=canvasid",spanid:"=spanid"},link:function(scope,element,attrs){var canvasID="#"+scope.canvasid,spanID="#"+scope.spanid;scope.targeted_bean=JSON.parse(sessionStorage.getItem("targeted_beanData"));var context=element[0].getContext("2d"),circles=[],targetcircles=[],draw=function(context,x,y,fillcolor,radius,linewidth,strokestyle,fontcolor,textalign,fonttype,filltext){context.beginPath(),context.arc(x,y,radius,0,2*Math.PI,!1),context.fillStyle=fillcolor,context.fill(),context.lineWidth=linewidth,context.strokeStyle=strokestyle,context.stroke(),context.fillStyle=fontcolor,context.textAlign=textalign,context.font=fonttype,context.fillText(filltext,x,y)},Circle=function(x,y,radius){this.left=x-radius,this.top=y-radius,this.right=x+radius,this.bottom=y+radius},strightline=function(){context.moveTo(140,88),context.lineTo(140,250),context.lineWidth="9",context.strokeStyle="#009E11",context.stroke()};strightline();var drawCircle=function(context,x,y,fillcolor,radius,linewidth,strokestyle,fontcolor,textalign,fonttype,filltext,circles){draw(context,x,y,fillcolor,radius,linewidth,strokestyle,fontcolor,textalign,fonttype,filltext);var circle=new Circle(x,y,radius);circles.push(circle)};angular.forEach(scope.coords,function(value,key){drawCircle(context,value.coords.x,value.coords.y,value.color,7,1,"white",value.color,"center","8px Arial",key+1,circles)}),angular.forEach(scope.coords,function(value1,key1){angular.forEach(scope.targeted_bean,function(value2,key2){"circle"==value1.shape&&value1.pointName==value2.pointName&&drawCircle(context,value1.coords.x,value1.coords.y,"#E94B3B",7,1,"white","#E94B3B","center","8px Arial",key1+1,targetcircles)})}),element.bind("click",function(event){for(var position=$(canvasID).offset(),position_nxt=$(spanID).offset(),clickedX=parseInt(event.clientX)-parseInt(position.left),clickedY=parseInt(event.clientY)+(parseInt(position_nxt.top)-parseInt(position.top)),i=0;i<circles.length;i++)if(clickedX<circles[i].right&&clickedX>circles[i].left&&clickedY>circles[i].top&&clickedY<circles[i].bottom){var num=i+24;scope.someCtrlFn({arg1:num}),scope.$apply()}})}}}),angular.module("app.lme").controller("QueueCtrl",["$scope","DataManager","$state","APIS","CAASConfig","ResourceManager","$stateParams",function($scope,DataManager,$state,APIS,CAASConfig,regRM,$stateParams){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.regRM=regRM,sessionStorage.removeItem("underDMF"),$stateParams.abort?$scope.showTab="aborted":$scope.showTab="queued",$scope.dataBind(),$scope.totalRecord={queued:0,lmeInprogress:0,arInprogress:0,pending:0,deferred:0,submitted:0,completed:0,aborted:0,expired:0}},$scope.dataBind=function(){$scope.$on("queuedCount",function(event,args){$scope.totalRecord.queued=args.count}),$scope.$on("lmeInprogressCount",function(event,args){$scope.totalRecord.lmeInprogress=args.count}),$scope.$on("arInprogressCount",function(event,args){$scope.totalRecord.arInprogress=args.count}),$scope.$on("pendingCount",function(event,args){$scope.totalRecord.pending=args.count}),$scope.$on("diferredCount",function(event,args){$scope.totalRecord.deferred=args.count}),$scope.$on("submittedCount",function(event,args){$scope.totalRecord.submitted=args.count}),$scope.$on("completedCount",function(event,args){$scope.totalRecord.completed=args.count}),$scope.$on("abortedCount",function(event,args){$scope.totalRecord.aborted=args.count}),$scope.$on("expiredCount",function(event,args){$scope.totalRecord.expired=args.count})},$scope.init()}]),angular.module("app.lme").controller("QueuedCtrl",["$scope","$state","APIS","DataManager","$window","$filter","$uibModal","ModalService","$rootScope","$log",function($scope,$state,APIS,DataManager,$window,$filter,$uibModal,ModalService,$rootScope,$log,$uibModalInstance){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.doctorInfo=JSON.parse(sessionStorage.getItem("doctorDetails")),$scope.clinicInfo=JSON.parse(sessionStorage.getItem("ClinicDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userSeqId=$scope.uconfig.userSeqId,$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.personId=$scope.userInfo.personId,$scope.visitInfo=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visittypeRecord=JSON.parse(sessionStorage.getItem("VisitRecords")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.keys={idno:"",applicantname:"",doctorname:"",visitType:{lmetype:""}},$scope.selectedAction={selectedObject:{}},$scope.keyvalue=[{lmetype:null}],$scope.visitType={I:!1,R:!1,B:!1,60:!1,DMF:!1,PR:!1,EVERY:!1},$scope.visitData=[],$scope.Date=null,$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.visitDetails={visitId:"",applicantId:"",applicantuserId:""},$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind()},$scope.dataBind=function(){$scope.queuedfetch(),$scope.visitList(),$scope.visitInfo&&($scope.loaddme($scope.visitInfo.applicantDetails.applicationId),$scope.loadclinic($scope.visitInfo.applicantDetails.applicationId))},$scope.visitList=function(){$scope.visittypeRecord&&$scope.groupVisit($scope.visittypeRecord)},$scope.queuedfetch=function(){var url=null,tempUrl=null;tempUrl=APIS.QUEUED_TAB.URL,url=tempUrl+$scope.roleid+"/"+$scope.userSeqId,APIS.QUEUED_TAB.URL=url,DataManager.sendRestRequest(null,APIS.QUEUED_TAB,function(response){response.success?($scope.mrfilteredStores=response.dataBean,$scope.temp=response.dataBean,console.log($scope.mrfilteredStores),$scope.$emit("queuedCount",{count:response.dataBean.length}),$scope.drList=$scope.groupDr(),$scope.select($scope.currentPage,$scope.mrfilteredStores),$scope.visitList()):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.QUEUED_TAB.URL=tempUrl},$scope.loaddme=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.DOCTOR_LIST.URL,url=tempUrl+"/"+applicationId,APIS.DOCTOR_LIST.URL=url,DataManager.sendRestRequest(null,APIS.DOCTOR_LIST,function(response){response.success?($scope.doctordata=response.dataBean,angular.forEach($scope.doctordata,function(value,key){$scope.userSeqId==value.dmeuserId&&$scope.doctordata.splice(key,1)}),$window.sessionStorage.setItem("doctorDetails",JSON.stringify($scope.doctordata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.DOCTOR_LIST.URL=tempUrl},$scope.loadclinic=function(applicationId){var url=null,tempUrl=null;tempUrl=APIS.CLINIC_LOCATION.URL,url=tempUrl+"/"+applicationId,APIS.CLINIC_LOCATION.URL=url,DataManager.sendRestRequest(null,APIS.CLINIC_LOCATION,function(response){response.success?($scope.clinicdata=response.dataBean,$window.sessionStorage.setItem("ClinicDetails",JSON.stringify($scope.clinicdata))):console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.CLINIC_LOCATION.URL=tempUrl},$scope.popuptrigger=function(trigger){$scope.actionTrigger=trigger},$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){if($scope.keys.idno||$scope.keys.applicantname||$scope.keys.doctorname||$scope.keys.visitType.lmetype){$scope.mrfilteredStores=$scope.temp;var data=$scope.mrfilteredStores;return null==$scope.keys.doctorname&&($scope.keys.doctorname=""),null==$scope.keys.visitType.lmetype&&($scope.keys.visitType.lmetype=""),data=$filter("filter")(data,$scope.keys),$scope.mrfilteredStores=data,$scope.onFilterChange(data)}$scope.mrfilteredStores=$scope.temp,$scope.mrcurrentPageStores=$scope.select($scope.currentPage,$scope.mrfilteredStores)},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.doAction=function(actionParam,applicantParam,tablerecord){$scope.visitDetails=null,$scope.deferredtab=!1,sessionStorage.setItem("DefferedPage",JSON.stringify($scope.deferredtab)),$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.triggerAction(actionParam,applicantParam,tablerecord),$scope.lmehomedirect=!1,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect))},$scope.triggerAction=function(actionParam,applicantParam,tablerecord){switch(sessionStorage.removeItem("LME_Updatecheck"),$scope.swichModel="",actionParam.actionName){case"Abort":$scope.swichModel="queueabort";break;case"Accept Transfer Request":break;case"Attach Documents":break;case"CAMB Instructions":break;case"Call Applicant":return $scope.callapplicant={applicationId:tablerecord.applicationId,visitId:tablerecord.visitId,type:tablerecord.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.callapplicant,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?(sessionStorage.removeItem("hed"),$state.go("hed")):$state.go("measurement"))},$scope.uconfig.token),!1;case"Create AR Visit":break;case"VIEW DMF":$scope.swichModel="dmf";break;case"DMF":$scope.val="";var url=null,tempUrl=null;return tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+tablerecord.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"dmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})})}else $scope.dmf(tablerecord)},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl,!1;case"Follow Up":break;case"HED":break;case"Preview":break;case"Recall":return ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Recall":return ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){$scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:tablerecord.applicantname,dmename:tablerecord.doctorname,applicantid:tablerecord.applicantId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token)}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Unlock":return ModalService.openAlert("confirm","warning","Do you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){$scope.requnlock={visitId:tablerecord.visitId,applicantname:tablerecord.applicantname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId,type:tablerecord.type},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(response){response.success},$scope.uconfig.token)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Resume":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"resume",function(){}),$scope.$on("resumeOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RESUME.URL,url=tempUrl+"/"+tablerecord.visitId+"/"+tablerecord.type,APIS.LME_DME_RESUME.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RESUME,function(response){response.success?$state.go("measurement"):console.log(response)},$scope.uconfig.token),APIS.LME_DME_RESUME.URL=tempUrl}),$scope.$on("resumecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Transfer":$scope.modifyvisitType=[],$scope.modifyvisitType=[{"class":"C1",classId:"1",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1},{"class":"C2",classId:"2",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1},{"class":"C3",classId:"3",lmetype:tablerecord.visitType[0].lmetype,lmetypeId:tablerecord.visitType[0].lmetypeId,visitdetailId:"",checked:!1}],angular.forEach(tablerecord.visitType,function(value,key){"C1"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[value.classId-1].checked=!0),"C2"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[value.classId-1].checked=!0),"C3"==tablerecord.visitType[key]["class"]&&($scope.modifyvisitType[value.classId-1].checked=!0)}),tablerecord.visitType=[],tablerecord.visitType=$scope.modifyvisitType,"AR"==tablerecord.type?$scope.swichModel="arqueuetransfer":$scope.swichModel="queuedtransfer";break;case"Unlock":return ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+tablerecord.visitId+"/"+tablerecord.statuspageName,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?(ModalService.openAlert("alert","Unlock","Unlock Done","","",""),$window.location.reload()):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Update":return ModalService.openAlert("confirm","warning","Are you sure you want to update the selected record?",$scope,"update",function(){}),$scope.$on("updateOk",function(){$state.go("measurement")}),$scope.$on("updatecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"View DMF":break;case"View Submission":break;case"Create LME Visit":break;case"Next":break;case"Request CAMB Review":break;case"Review Capel Export":break;case"Review Aris Export":break;case"Publish LMAB":break;case"Publish Letters":break;case"Referral":break;case"Send":break;case"View LMF Comments":break;case"Review Assessment Changes":break;case"Close":break;case"Return to LMAB":break;case"Circulate":break;case"Commence":break;case"Submit":break;case"View  Only":break;default:$scope.swichModel="noAction"}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:tablerecord,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.groupDr=function(){var drlist=[];return angular.forEach($scope.mrfilteredStores,function(value,key){var temp={doctorId:value.doctorId,doctorname:value.doctorname};drlist.push(temp)}),drlist},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.groupVisit=function(visitCombo){angular.forEach($scope.mrfilteredStores,function(value,key){angular.forEach(value.visitType,function(visit,index){switch(visit.lmetype){case"I":$scope.visitType.I=!0;break;case"R":$scope.visitType.R=!0;break;case"B":$scope.visitType.B=!0;break;case"60":$scope.visitType[60]=!0;break;case"DMF":$scope.visitType.DMF=!0;break;case"PR":$scope.visitType.PR=!0;break;case"EVERY":$scope.visitType.EVERY=!0}})});var tempArray=[];angular.forEach(visitCombo,function(combo,index){$scope.visitType[combo.code]&&tempArray.push(combo)}),$scope.visitData=tempArray},$scope.dmf=function(param){$uibModal.open({animation:!0,templateUrl:"dmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.init()}]),angular.module("app.lme").controller("RecommendationCtrl",["$scope","$filter","$state","APIS","$location","DataManager","$window","$uibModal","$rootScope","ModalService","$timeout",function($scope,$filter,$state,APIS,$location,DataManager,$window,$uibModal,$rootScope,ModalService,$timeout){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse(sessionStorage.getItem("visitDetails")),$scope.visitId=$scope.visitDetails.visitId,$scope.applicantId=$scope.visitDetails.applicantId,$scope.lmeupdatecheck=JSON.parse($window.sessionStorage.getItem("LME_Updatecheck")),$window.sessionStorage.setItem("Dmepagename","recommentation"),$window.sessionStorage.setItem("analysispage","recommend"),$window.sessionStorage.setItem("hedpage","clickhed"),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.underDmf=sessionStorage.getItem("underDMF"),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.dataBind(),$scope.stressorsdata=[],$scope.mentalstatedata=[],$scope.outcomesdata=[],$scope.macId=[],$scope.selectedOpinion=[],$scope.remarks=[],$scope.significant_stressors=!1,$scope.measureFollowData=[],$scope.stressors=null,$scope.showPreviewBtn=!1,$scope.validationStatus={measurement:!1,investigation:!1},$scope.isPreviewBtnClicked=!1,$scope.frmSubmitted=!1,$scope.toDoSave={measurement:{status:!1,alertShown:!1},investigation:{status:!1,alertShown:!1},examination:{status:!1,alertShown:!1},audiometry:{status:!1,alertShown:!1},recomendaion:{status:!1,alertShown:!1}}},$scope.dataBind=function(){$scope.lmerecommendationgetfetch(),$scope.stressorsfetch(),$scope.mentalstatefetch(),$scope.outcomesfetch(),$scope.recofollowLoadCombo(),$scope.getUploadedDocument(),$scope.$on("isDocUploaded",function(event,args){1==args.isUploded?$scope.isDocumentUploaded=!0:$scope.isDocumentUploaded=!1}),$scope.$on("ValidationStatusMeasurement",function(event,args){console.log("res-measrue"),args.stauts&&($scope.validationStatus.measurement=!0)}),$scope.$on("ValidationStatusInvestigation",function(event,args){console.log("res-Invest"),args.stauts&&($scope.validationStatus.investigation=!0)}),$scope.$watchCollection("validationStatus",function(newVal,oldVal){console.log("Final VAlidation"),console.log(newVal),!$scope.isPreviewBtnClicked||$scope.validationStatus.measurement||$scope.validationStatus.investigation?($scope.showValidationMessage=!0,$.unblockUI(),console.log($scope.isPreviewBtnClicked)):($.unblockUI(),$state.go("dmesubbmission"))});var isFormAlreadyModified=!1;$scope.$watch("formRec.$dirty",function(newval,old){newval&&($scope.toDoSave.recomendaion.status=!0,isFormAlreadyModified||$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave}),isFormAlreadyModified=!0)})},$scope.popuptrigger=function(trigger){$scope.actionTrigger=trigger},$scope.stressorsfetch=function(){
DataManager.sendRestRequest(null,APIS.POST_LME_STRESSORS,function(response){response.success?($scope.stressorsdata=response.dataBean,console.log($scope.stressorsdata)):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.mentalstatefetch=function(){DataManager.sendRestRequest(null,APIS.GET_LME_MENTALSTATE,function(response){response.success?$scope.mentalstatedata=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.outcomesfetch=function(){DataManager.sendRestRequest(null,APIS.GET_LME_OUTCOMES,function(response){response.success?$scope.outcomesdata=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.addDiagnosis=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/adddiagnosismodal.html",controller:"AdddiagnosisCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={screenName:"Recommendation Diagnosis",existingDiagnosis:$rootScope.recommendationData.diagnosisDTOList};return temp}}})},$scope.removeDiagnosistable=function(index){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"removeDiagnosis",function(){$scope.$on("removeDiagnosisOk",function(){$rootScope.recommendationData.diagnosisDTOList.splice(index,1)}),$scope.$on("removeDiagnosiscancel",function(){$scope.newdiagnosisList=[],$uibModalInstance.closed})})},$scope.lmerecommendationsave=function(){$scope.toDoSave.recomendaion.status=!1,$scope.$root.$broadcast("isDataSaved",{data:$scope.toDoSave});var saveData=$rootScope.recommendationData;saveData.stressors=$scope.stressors,$scope.frmSubmitted=!0,$scope.formRec.$invalid?saveData.formInvalid="Y":saveData.formInvalid="N",$("#recommTab").attr("changeForm","false"),$scope.remarksInvalid=[],$scope.frmSubmitted_new=!0;for(var o=0;o<$rootScope.recommendationData.dmeOutcomeDTOList.length;o++)$scope.outComeDetails=$.grep($scope.outcomesdata,function(e){return e.outcomeId==$rootScope.recommendationData.dmeOutcomeDTOList[o].outComeId});$scope.frmSubmit=!1,$scope.remarksInvalid=!1,APIS.LME_SAVE_RECOMMENDATION.data=saveData,DataManager.sendRestRequest(null,APIS.LME_SAVE_RECOMMENDATION,function(response){response.success?ModalService.openAlert("alert","success","Saved Successfully","null","null",function(){}):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.lmerecommendationgetfetch=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_RECOMMENDATION.URL,url=tempUrl+"/"+$scope.visitId,APIS.LME_GET_RECOMMENDATION.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_RECOMMENDATION,function(response){response.success&&($rootScope.recommendationData=response.dataBean,null!=$rootScope.recommendationData.stressors&&"0"!=$rootScope.recommendationData.stressors.length&&($scope.stressors=$filter("filter")($scope.stressorsdata,{stressorsId:$rootScope.recommendationData.stressors.stressorsId}),$scope.stressors=$scope.stressors[0]),console.log($rootScope.recommendationData.significantStress),$rootScope.recommendationData.visitId=$scope.visitId,$rootScope.recommendationData.applicantId=$scope.applicantId,null==$rootScope.recommendationData.discussedChallenge&&($rootScope.recommendationData.discussedChallenge="N"),null==$rootScope.recommendationData.significantStress&&($rootScope.recommendationData.significantStress="N"),null==$rootScope.recommendationData.diagnosisDTOList&&($rootScope.recommendationData.diagnosisDTOList=[]),null==$rootScope.recommendationData.dmeOutcomeDTOList&&($rootScope.recommendationData.dmeOutcomeDTOList=[]),"Y"==$rootScope.recommendationData.significantStress&&($rootScope.recommendationData.significantStress=$rootScope.recommendationData.stressorsId),$rootScope.recommendationData.dmeOutcomeDTOList.length>0&&$rootScope.recommendationData.dmeOutcomeDTOList[0].dmeOutComeId&&$rootScope.recommendationData.dmeOutcomeDTOList[0].dmeRemarks&&($scope.showPreviewBtn=!0))},$scope.uconfig.token),APIS.LME_GET_RECOMMENDATION.URL=tempUrl},$scope.fromDate=null,$scope.fromdateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.dateOptions={formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.recomFollowData={},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.fromdatepickerPopup={opened:!1},$scope.datepickerOpen=function(){$scope.datepickerPopup.opened=!0},$scope.datepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.recofollowLoadCombo=function(){DataManager.sendRestRequest(null,APIS.GET_LME_FOLLOWUP_COMBO,function(response){response.success?$scope.recomFollowData=response.dataBean:console.log("Error Code: "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token)},$scope.go=function(){$window.open("#/viewhed?preview=2")},$scope.followupdoAction=function(){$uibModal.open({animation:!0,templateUrl:"recFollowUp",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.doattachAction=function(){$uibModal.open({animation:!0,templateUrl:"app/lme/partials/attachmentmodel.html",controller:"ActionCtrl",size:"lg",backdrop:"static",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.dmfdoAction=function(){$uibModal.open({animation:!0,templateUrl:"recdmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.AbortdoAction=function(){$uibModal.open({animation:!0,templateUrl:"recAbort",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})},$scope.dmfbutton=function(){$scope.val="";var url=null,tempUrl=null;tempUrl=APIS.GET_DMF_DATE.URL,url=tempUrl+"/"+$scope.applicantId,APIS.GET_DMF_DATE.URL=url,DataManager.sendRestRequest(null,APIS.GET_DMF_DATE,function(response){if(response.success)if($scope.val=response.dataBean,null!=$scope.val){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modaldmf.html",controller:"DMFmodalCtrl",size:"lg",resolve:{items:function(){var temp={value:$scope.val};return temp}}});modalInstance.result.then(function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"recdmf",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:"",visitDetails:$scope.visitDetails};return temp}}})})}else $scope.dmfdoAction()},$scope.uconfig.token),APIS.GET_DMF_DATE.URL=tempUrl},$scope.stressorsTransfermation=function(stressors){var data=[];angular.forEach(stressors,function(value,key){var temp=$filter("filter")($scope.stressorsdata,value);data.push(temp[0])}),$scope.stressors=data},$scope.getUploadedDocument=function(){"DMF"==$scope.visitDetails.visittype||"PR"==$scope.visitDetails.visittype?$scope.referencetype="AR_VISITS":$scope.referencetype="LME_VISITS",APIS.LME_ATTACH_DOC_GRID.data={applicantId:$scope.visitDetails.applicantId,referencetype:$scope.referencetype},DataManager.sendRestRequest(null,APIS.LME_ATTACH_DOC_GRID,function(response){response.success?response.dataBean&&($scope.isDocumentUploaded=response.dataBean.length>0):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.goPreview=function(){$scope.isPreviewBtnClicked=!0,$scope.validationStatus={measurement:!1,investigation:!1},$.blockUI({message:$("#domMessage")}),$scope.$root.$broadcast("ValidationRequestLmeSubmission",{message:"Is everything is fine can we show preivew?"})},$scope.goPreview1=function(){if(1==$scope.visitDetails.applicantDetails.flag||"true"==$scope.underDmf)return ModalService.openAlert("alert","Recommendation","You can not submit the LME Assessment to LMAB as the Applicant is under DMF"),!1;var url=null,tempUrl=null;tempUrl=APIS.LME_SUBMIT_VALIDATION.URL,url=tempUrl+"/"+$scope.visitId,APIS.LME_SUBMIT_VALIDATION.URL=url,DataManager.sendRestRequest(null,APIS.LME_SUBMIT_VALIDATION,function(response){response.success?($scope.showValidationMessage=!0,$scope.FrmValidationMsg=response.dataBean,$scope.hedpagevalue=JSON.parse(sessionStorage.getItem("clickval")),response.dataBean&&("N"==response.dataBean.measurements&&"N"==response.dataBean.investigations&&"N"==response.dataBean.recommendations&&$scope.hedpagevalue&&($state.go("dmesubbmission"),sessionStorage.removeItem("clickval")),$scope.hedpagevalue||($scope.FrmValidationMsg.examinations=!1))):(console.log("LME Submission: "+response.errorMessage),ModalService.openAlert("alert","Recommendation",response.errorMessage))},$scope.uconfig.token),APIS.LME_SUBMIT_VALIDATION.URL=tempUrl},$scope.init()}]),angular.module("app.lme").controller("ReferenceCtrl",["$scope","$state","APIS","$location","$window","DataManager","ModalService",function($scope,$state,APIS,$location,$window,DataManager,ModalService){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleName=$scope.currentRole.roleName,$scope.uconfig?($scope.init=function(){$scope.loadGetReferenceDocuments()},$scope.loadGetReferenceDocuments=function(){"Applicant"==$scope.uconfig.userFacilities[0].roles[0].roleName?$scope.userTypes="A":$scope.userTypes="B",APIS.GETREFERENCEDOCUMENTS.data={publishId:644,userType:$scope.userTypes},DataManager.sendRestRequest(null,APIS.GETREFERENCEDOCUMENTS,function(response){response.success?$scope.documents=response.dataBean:ModalService.openAlert("alert","info",response.errorMessage,$scope,"","")},$scope.uconfig.token)},$scope.getViewDocument=function(ID){APIS.GETVIEWDOCUMENT.data={docId:ID},DataManager.sendRestRequest(null,APIS.GETVIEWDOCUMENT,function(response){if(response.success){var content=response.dataBean.document,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.document,"_blank","location=0,enableviewportscale=yes"),$scope.init()}else ModalService.openAlert("alert","info",response.errorMessage,$scope,"","")},$scope.uconfig.token)},void $scope.init()):($state.go("login"),!1)}]),angular.module("app.lme").controller("SubmittedCtrl",["$scope","$state","APIS","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter",function($scope,$state,APIS,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter){function disabled(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())}$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.userSeqId=$scope.uconfig.userSeqId,$scope.firstname=$scope.userInfo.firstName,$scope.lastName=$scope.userInfo.lastName,$scope.personId=$scope.userInfo.personId,$scope.doctorInfo=JSON.parse(sessionStorage.getItem("doctorDetails")),$scope.clinicInfo=JSON.parse(sessionStorage.getItem("ClinicDetails")),$window.sessionStorage.setItem("Dmepagename","submittedtab"),$window.sessionStorage.setItem("backtosubmit","submitted"),sessionStorage.setItem("applicantMac",JSON.stringify($scope.appliminimac)),$scope.visittypeRecord=JSON.parse(sessionStorage.getItem("VisitRecords")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.visitType={I:!1,R:!1,B:!1,60:!1,DMF:!1,PR:!1,EVERY:!1},$scope.visitData=[],$scope.selectedAction="",$scope.keys={idno:"",applicantname:"",doctorname:"",visitType:{lmetype:""}},$scope.selectedAction={selectedObject:{}},$scope.keyvalue=[{lmetype:null}],$scope.fromDate=null,$scope.fromdateOptions={dateDisabled:disabled,formatDay:"dd",formatMonth:"MM",formatYear:"yyyy",maxDate:new Date,minDate:null,startingDay:1},$scope.mrcurrentPageStores=[],$scope.mrfilteredStores=[],$scope.drList=[],$scope.visiList=[],$scope.row="",$scope.numPerPageOpt=[3,5,10,20],$scope.numPerPage=$scope.numPerPageOpt[2],$scope.currentPage=1,$scope.dataBind(),$scope.selectionarray=[]},$scope.dataBind=function(){$scope.tabledatas(),$scope.visitList()},$scope.tabledatas=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_SUBMITTED.URL,url=tempUrl+$scope.roleid,APIS.LME_SUBMITTED.URL=url,DataManager.sendRestRequest(null,APIS.LME_SUBMITTED,function(response){response.success&&($scope.mrfilteredStores=response.dataBean,$scope.temp=response.dataBean,$scope.$emit("submittedCount",{count:response.dataBean.length}),$scope.drList=$scope.groupDr(),$scope.select($scope.currentPage),$scope.visitList())},$scope.uconfig.token),APIS.LME_SUBMITTED.URL=tempUrl},$scope.fromdatepickerOpen=function(){$scope.fromdatepickerPopup.opened=!0},$scope.fromdatepickerPopup={opened:!1},$scope.formats=["dd-MM-yyyy","yyyy-MM-dd","dd-MMM-yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.select=function(page,data){data||(data=$scope.mrfilteredStores);var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.mrcurrentPageStores=data.slice(start,end)},$scope.onFilterChange=function(data){return $scope.select(1,data),$scope.currentPage=1,$scope.row=""},$scope.onNumPerPageChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.onOrderChange=function(){return $scope.select(1),$scope.currentPage=1},$scope.order=function(rowName){if($scope.row!==rowName)return $scope.row=rowName,$scope.mrfilteredStores=$filter("orderBy")($scope.mrfilteredStores,rowName),$scope.onOrderChange()},$scope.filter=function(){if($scope.keys.idno||$scope.keys.applicantname||$scope.keys.doctorname||$scope.keys.visitType.lmetype){$scope.mrfilteredStores=$scope.temp;var data=$scope.mrfilteredStores;return null==$scope.keys.doctorname&&($scope.keys.doctorname=""),null==$scope.keys.visitType.lmetype&&($scope.keys.visitType.lmetype=""),data=$filter("filter")(data,$scope.keys),$scope.mrfilteredStores=data,$scope.onFilterChange(data)}$scope.mrfilteredStores=$scope.temp,$scope.mrcurrentPageStores=$scope.select($scope.currentPage,$scope.mrfilteredStores)},$scope.visitList=function(){$scope.visittypeRecord&&$scope.groupVisit($scope.visittypeRecord)},$scope.doAction=function(actionParam,applicantParam,tablerecord){$scope.visitDetails=null,$scope.deferredtab=!1,sessionStorage.setItem("DefferedPage",JSON.stringify($scope.deferredtab)),$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.triggerAction(actionParam,applicantParam,tablerecord)},$scope.triggerAction=function(actionParam,applicantParam,tablerecord){switch(sessionStorage.removeItem("LME_Updatecheck"),$scope.swichModel="",actionParam.actionName){case"Abort":$scope.swichModel="submitabort";break;case"Accept Transfer Request":break;case"Attach Documents":break;case"CAMB Instructions":break;case"Call Applicant":return $scope.callapplicant={applicationId:tablerecord.applicationId,visitId:tablerecord.visitId,type:tablerecord.type,roleName:$scope.rolename},APIS.LME_CALLAPPLICANT.data=$scope.callapplicant,DataManager.sendRestRequest(null,APIS.LME_CALLAPPLICANT,function(response){response.success&&("hed"==response.dataBean.callApplicant&&"Clinic Assistant"!=$scope.rolename?$state.go("hed"):$state.go("measurement"))},$scope.uconfig.token),!1;case"Create AR Visit":break;case"DMF":$scope.swichModel="submitdmf";break;case"Follow Up":break;case"HED":break;case"Preview":break;case"VIEW DMF":$scope.swichModel="submitdmf";break;case"Recall":return ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){}),$scope.$on("recallOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RECALL.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RECALL.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RECALL,function(response){response.success?$state.go("measurement"):ModalService.openAlert("alert","info","Not Allowed","","","")},$scope.uconfig.token),APIS.LME_DME_RECALL.URL=tempUrl}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Request for Recall":return $scope.warningConfirmed=!1,$scope.selectedAction.selectedObject={},ModalService.openAlert("confirm","warning","Do you want to recall the selected record?",$scope,"recall",function(){$scope.$on("recallOk",function(){0==$scope.warningConfirmed&&($scope.requestrecall={rollid:$scope.roleid,rollname:$scope.rolename,applicantname:tablerecord.applicantname,dmename:tablerecord.doctorname,applicantid:tablerecord.applicantId,visitId:tablerecord.visitId},APIS.LME_REQUEST_FOR_RECALL.data=$scope.requestrecall,DataManager.sendRestRequest(null,APIS.LME_REQUEST_FOR_RECALL,function(response){if(response.success)$scope.lmehomedirect=!1,sessionStorage.setItem("lmehomedirect",JSON.stringify($scope.lmehomedirect)),$state.go("measurement");else if("EXIST"==response.errorMessage)return $scope.requestrecall=response,ModalService.openAlert("alert","AR Recall","AR Recall not allowed as visit already in CAMB progress for the applicant","null","null"),$scope.cancel(),!1},$scope.uconfig.token)),$scope.warningConfirmed=!0}),$scope.$on("recallcancel",function(){$uibModalInstance.dismiss("cancel")})}),!1;case"Request for Unlock":return ModalService.openAlert("confirm","warning","Do you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){$scope.requnlock={visitId:tablerecord.visitId,applicantname:tablerecord.applicantname,caFirstname:$scope.firstname,caLastname:$scope.lastName,userId:$scope.userSeqId,type:tablerecord.type},APIS.LME_DME_REQUEST_FOR_UNLOCK.data=$scope.requnlock,DataManager.sendRestRequest(null,APIS.LME_DME_REQUEST_FOR_UNLOCK,function(response){response.success?(ModalService.openAlert("alert","Unlock","Unlock Done","","",""),$window.location.reload()):ModalService.openAlert("alert","Unlock","Your request is not allowed","","","")},$scope.uconfig.token)}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Resume":return ModalService.openAlert("confirm","warning","Do you want to resume the selected record?",$scope,"resume",function(){}),$scope.$on("resumeOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_DME_RESUME.URL,url=tempUrl+"/"+tablerecord.visitId,APIS.LME_DME_RESUME.URL=url,DataManager.sendRestRequest(null,APIS.LME_DME_RESUME,function(response){response.success?$state.go("measurement"):console.log(response)},$scope.uconfig.token),APIS.LME_DME_RESUME.URL=tempUrl}),$scope.$on("resumecancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Transfer":break;case"Unlock":return ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){var url=null,tempUrl=null;tempUrl=APIS.LME_UNLOCK.URL,url=tempUrl+"/"+tablerecord.visitId+"/"+tablerecord.statuspageName,APIS.LME_UNLOCK.URL=url,DataManager.sendRestRequest(null,APIS.LME_UNLOCK,function(response){response.success?(ModalService.openAlert("alert","Unlock","Unlock Done","","",""),$window.location.reload()):ModalService.openAlert("alert","Unlock","Not Allowed to Unlock the Record","","","")},$scope.uconfig.token),APIS.LME_UNLOCK.URL=tempUrl}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"Update":return ModalService.openAlert("confirm","warning","Are you sure you want to update the selected record?",$scope,"update",function(){}),$scope.$on("updateOk",function(){$state.go("measurement")}),$scope.$on("unlockcancel",function(){$uibModalInstance.dismiss("cancel")}),!1;case"View DMF":break;case"View Submission":return $scope.selectedAction.selectedObject={},$state.go("dmesubbmission"),!1;case"Create LME Visit":break;case"Next":break;case"Request CAMB Review":break;case"Review Capel Export":break;case"Review Aris Export":break;case"Publish LMAB":break;case"Publish Letters":break;case"Referral":break;case"Send":break;case"View LMF Comments":break;case"Review Assessment Changes":break;case"Close":break;case"Return to LMAB":break;case"Circulate":break;case"Commence":break;case"Submit":break;case"View  Only":break;default:$scope.swichModel="noAction"}$uibModal.open({animation:!0,templateUrl:$scope.swichModel,controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){var temp={applicantParam:tablerecord,visitDetails:$rootScope.visitDetails};return $scope.selectedAction.selectedObject={},temp}}})},$scope.dateFormate=function(param){return new Date(param)},$scope.groupDr=function(){var drlist=[];return angular.forEach($scope.mrfilteredStores,function(value,key){var temp={doctorId:value.doctorId,doctorname:value.doctorname};drlist.push(temp)}),drlist},$scope.goToPofile=function(tablerecord){$scope.visitDetails=null,$scope.visitDetails={visitId:tablerecord.visitId,visitType:tablerecord.visitType[0].lmetype,applicantId:tablerecord.applicantId,applicantuserId:tablerecord.applicantuserId,applicantDetails:tablerecord},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")},$scope.groupVisit=function(visitCombo){angular.forEach($scope.mrfilteredStores,function(value,key){angular.forEach(value.visitType,function(visit,index){switch(visit.lmetype){case"I":$scope.visitType.I=!0;break;case"R":$scope.visitType.R=!0;break;case"B":$scope.visitType.B=!0;break;case"60":$scope.visitType[60]=!0;break;case"DMF":$scope.visitType.DMF=!0;break;case"PR":$scope.visitType.PR=!0;break;case"EVERY":$scope.visitType.EVERY=!0}})});var tempArray=[];angular.forEach(visitCombo,function(combo,index){$scope.visitType[combo.code]&&tempArray.push(combo)}),$scope.visitData=tempArray},$scope.init()}]),angular.module("app.lme").controller("viewdmfCtrl",["$scope","$state","APIS","DataManager","$window","$uibModal","ModalService","$rootScope","$log","$filter","convertpdf",function($scope,$state,APIS,DataManager,$window,$uibModal,ModalService,$rootScope,$log,$filter,convertpdf){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.init=function(){$scope.dataBind()},$scope.dataBind=function(){$scope.callthefunction()},$scope.callthefunction=function(){$scope.applicantid=JSON.parse(sessionStorage.getItem("viewdmfapplicantid"));var url=null,tempUrl=null;tempUrl=APIS.LME_VIEW_DMF.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_VIEW_DMF.URL=url,DataManager.sendRestRequest(null,APIS.LME_VIEW_DMF,function(response){response.success&&($scope.dmfviewdata=response.dataBean,console.log($scope.dmfviewdata))},$scope.uconfig.token),APIS.LME_VIEW_DMF.URL=tempUrl},$scope.dateFormate=function(param){return new Date(param)},$scope.calltogeneratepdf=function(param){convertpdf.htmltoPdf(param)},$scope.init()}]),angular.module("app.lme").config(function($stateProvider){$stateProvider.state("lme",{url:"/lme",controller:"LmeCtrl",templateUrl:"app/lme/partials/lme.html"}).state("lmeheader",{url:"/lmeheader",controller:"HeaderCtrl",templateUrl:"app/lme/partials/header/lme-header.html"}).state("mrsearch",{url:"/mrsearch",controller:"MrsearchCtrl",templateUrl:"app/lme/partials/mrsearch.html"}).state("queue",{url:"/queue",controller:"QueueCtrl",templateUrl:"app/lme/partials/queue.html"}).state("reference",{url:"/reference",controller:"ReferenceCtrl",templateUrl:"app/lme/partials/reference.html"}).state("measurement",{url:"/measurement?visitId&personId",templateUrl:"app/lme/partials/measurements.html"}).state("lmeapplicantprofile",{url:"/lmeapplicantprofile",controller:"LmeapplicantprofileCtrl",templateUrl:"app/lme/partials/lme_applicantprofile.html"}).state("recommendation",{url:"/recommendation",templateUrl:"app/lme/partials/recommendation.html"}).state("physicalexamination",{url:"/physicalexamination",templateUrl:"app/lme/partials/physicalexamination.html"}).state("dmesubbmission",{url:"/dmesubbmission",controller:"DmesubbmissionCtrl",templateUrl:"app/lme/partials/DMEsubbmission.html"}).state("medicalrecordpdf",{url:"/medicalrecordpdf",controller:"MedicalrecordPDFDownloadCtrl",templateUrl:"app/lme/partials/medicalrecordPDFDownload.html"}).state("viewdmf",{url:"/viewdmf",controller:"viewdmfCtrl",templateUrl:"app/lme/partials/viewDMF.html"})}).run(function($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams}),angular.module("app.login").controller("LoginCtrl",["$rootScope","$scope","$state","APIS","DataManager","ResourceManager","$timeout","$window","$uibModal","ModalService","switchRoles","PermissionManager","SessionManager","AutoSaveManager","$sce",function($rootScope,$scope,$state,APIS,DataManager,ResourceManager,$timeout,$window,$uibModal,ModalService,switchRoles,PermissionManager,SessionManager,AutoSaveManager,$sce){function loadSessionTimeOut(){DataManager.sendRestRequest(null,APIS.GET_SESSION_TIMEOUT,function(response){response.success&&SessionManager.startTimer(Number(response.dataBean))},$scope.uconfig.token)}$scope.init=function(){$scope.loggedIn=!1,$scope.loginRM=ResourceManager,setSingPassType(),clearSession(),$scope.isFrmSubmited=!1,$scope.isOtpFrmSubmited=!1,$scope.isOtpFrmValidate=!1,$scope.newPassword=null,$scope.isDisabled=!1,$scope.userDetails={username:null,password:null,totpCode:null},$rootScope.profile180daysInActive=!1,$scope.loginStatus="",$scope.otpQuesAns={userQuestionMapDTOList:[],totpUrl:null,usrId:null},$scope.validateotpQuesAns={userQuestionMapDTOList:[],totpUrl:null,usrId:null},loadLoginInstruction(),loadLOGBUSUSRInstruction(),loadQRSETUPInstruction()};var resetUserDetails=function(){$scope.loggedIn=!1,$scope.userDetails={username:null,password:null,totpCode:null}},setSingPassType=function(){$window.sessionStorage.setItem("singLoginType","Applicant"),$scope.singPassErrorMessage=$window.sessionStorage.getItem("singPassErrorMessage"),$timeout(function(){$window.sessionStorage.setItem("singPassErrorMessage","")},1e4)},clearSession=function(){sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage},$scope.uconfig.token)),$window.sessionStorage.clear()},loadLoginInstruction=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I002",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){var ins=response.dataBean.instruction;$scope.loginInstruction=$sce.trustAsHtml(ins)}})},loadLOGBUSUSRInstruction=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I003",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){var Bussinessins=response.dataBean.instruction;$scope.BussInstruction=$sce.trustAsHtml(Bussinessins)}})},loadQRSETUPInstruction=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I004",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){var QRins=response.dataBean.instruction;$scope.QRInstruction=$sce.trustAsHtml(QRins)}})};$scope.init(),$scope.onBlurmail=!1,$scope.onBlurmailFn=function(){$scope.onBlurmail=!0},$scope.onBlurPwd=!1,$scope.onBlurPwdFn=function(){$scope.onBlurPwd=!0},$scope.onChangePwdFn=function(){$scope.isOldPwd=!1,$scope.isOldPwdTxt=""};var loginDataBean=null;$scope.login=function(){return $scope.isFrmSubmited=!0,!$scope.formLogin.$invalid&&(APIS.AUTHENTICATION.data=$scope.userDetails,void DataManager.sendRestRequest(null,APIS.AUTHENTICATION,function(response){response.success?loginSuccessResponse(response):loginFailureResponse(response)}))};var loginSuccessResponse=function(response){$scope.loggedIn=!0,loginDataBean=response.dataBean,loginDataBean.token=response.tempToken,$scope.loginStatus="",response.dataBean.firstLogin?$scope.otpSetUp():($("#totpCode").focus(),$("#confirmOTPBtn").prop("disabled",!1))},loginFailureResponse=function(response){$scope.loggedIn=!1,$scope.isFrmSubmited=!1,$scope.loginStatus=response,$timeout(function(){$scope.loginStatus=""},1e4)};$scope.otpSetUp=function(){null!=loginDataBean&&(APIS.GETOTPQUESTIONS.URL="security/getUserSecurityQuestions/"+loginDataBean.userSeqId,APIS.GETOTPQUESTIONS.data={},DataManager.sendRestRequest(null,APIS.GETOTPQUESTIONS,function(response){$scope.otpgetques=response,"Y"==loginDataBean.istotpGenerated?($scope.getques=response,$scope.validateotpQuesAns=$scope.getques.dataBean,$("#otpsetupques_pop").modal("show")):(APIS.OTPSECQUES.data=$scope.userDetails,DataManager.sendRestRequest(null,APIS.OTPSECQUES,function(response){$scope.otpques=response}),$("#otpsetup_pop").modal("show"))}))},$scope.checkIfEnterKeyWasPressed=function(event){13==event.keyCode&&$scope.confirmOTP()},$scope.confirmOTP=function(){if(null!=loginDataBean){loginDataBean.firstLogin;APIS.TOTP_LOGIN.data=$scope.userDetails,DataManager.sendRestRequest(null,APIS.TOTP_LOGIN,function(response){response.success?(2==response.dataBean.status&&ModalService.openAlert("warning","warning","Your account is Inactive. Please contact Administrator.",$scope,"inactive",function(){"BussinessUser"==$scope.loginType?$state.go("singpasslogin"):"Applicant"==$scope.loginType?$state.go("login"):$state.go("login")}),otpSuccessResponse(response)):otpFailureResponse(response)},loginDataBean.token)}};var otpSuccessResponse=function(response){$scope.loggedIn=!1,$(".totp_validation1").hide(),response.dataBean.accountNonLocked||2!=response.dataBean.lockedReasonId?response.dataBean.requestForUnLock&&7==response.dataBean.lockedReasonId?response.dataBean.requestRaisedForUnlock?ModalService.openAlert("warning","warning","Your ELMeRS account has been locked due to 180 days inactivity and request already been submitted.",$scope,"locked",function(){}):inActivity180days(response):response.dataBean.requestForUnLock&&3==response.dataBean.lockedReasonId?response.dataBean.requestRaisedForUnlock?ModalService.openAlert("warning","warning",response.successMessage,$scope,"locked",function(){}):ModalService.openAlert("warning","warning",response.successMessage,$scope,"locked",function(){$state.go("login_unlock")}):response.dataBean.nricholder?ModalService.openAlert("warning","warning","System has valid NRIC/FIN. Please login through Singpass ",$scope,"locked",function(){$scope.isFrmSubmited=!1,resetUserDetails()}):loginDataBean.firstLogin?(sessionStorage.setItem("config",JSON.stringify(response.dataBean)),$("#loginResetPwd").modal("show")):response.dataBean.passwordExpired?ModalService.openAlert("confirm","warning","Your password has expired, Do you want to change?",$scope,"isPasswordExpired",function(){$scope.$on("isPasswordExpiredOk",function(){sessionStorage.setItem("config",JSON.stringify(response.dataBean)),$("#loginResetPwd").modal("show")})}):(sessionStorage.setItem("config",JSON.stringify(response.dataBean)),$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),AutoSaveManager.setUserConfig($scope.uconfig),loadSessionTimeOut(),cacheUserInfo(response)):ModalService.openAlert("warning","warning",response.successMessage,$scope,"locked",function(){$state.go("login")})},otpFailureResponse=function(response){switch($scope.loggedIn=!0,response.errorCode){case"TOTP2":$(".totp_validation1").show(),$timeout(function(){$(".totp_validation1").hide()},1e4);break;case"TOTP1":case"2":case"5":ModalService.openAlert("warning","warning","Your ELMeRS account has been locked due to unsuccessful attempts, please request for account unlock or a new password if you have forgotten your password.",$scope,"locked",function(){
$state.go("login_unlock")});break;case"3":ModalService.openAlert("warning","warning","Your ELMeRS account has been locked due to 90 days inactivity, please request for account unlock.",$scope,"locked",function(){$state.go("login_unlock")});break;case"7":inActivity180days(response);break;case"002":redirectToSessExists(response);break;default:$(".totp_validation1").show(),$timeout(function(){$(".totp_validation1").hide()},1e4)}},redirectToSessExists=function(response){$scope.loggedIn=!1,ModalService.openAlert("confirm","warning",response.errorMessage,$scope,"usrCurrentSess",function(){$scope.$on("usrCurrentSessOk",function(){$scope.usrSessionData={username:$scope.userDetails.username,password:$scope.userDetails.password,overrideSession:"true"},APIS.DISCARD_SESSION.data=$scope.usrSessionData,DataManager.sendRestRequest(null,APIS.DISCARD_SESSION,function(sessResponse){sessResponse.success?otpSuccessResponse(sessResponse):ModalService.openAlert("alert","error",sessResponse.errorMessage,$scope)})})})},inActivity180days=function(response){$scope.loggedIn=!1,ModalService.openAlert("confirm","warning","Do you have FIN or not ?",$scope,"inActivity",function(){$scope.$on("inActivityOk",function(){new FormData;APIS.GET_INACTIVITY_USER.data=$scope.userDetails.username,DataManager.sendRestRequest(null,APIS.GET_INACTIVITY_USER,function(inactiveUsrResponse){inactiveUsrResponse.success?cacheApplicantUserInfo(response):ModalService.openAlert("alert","error",sessResponse.errorMessage,$scope)})})})},cacheApplicantUserInfo=function(data){sessionStorage.setItem("config",JSON.stringify(data.dataBean)),APIS.GET_PROFILE.data={};var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+data.dataBean.userSeqId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($window.sessionStorage.setItem("userconfig",JSON.stringify(response.dataBean)),$rootScope.profile180daysInActive=!0,$state.go("profile")),APIS.GET_PROFILE.URL=tempUrl},data.dataBean.token)};$scope.saveOtp=function(){$scope.isOtpFrmSubmited=!0,null!=loginDataBean&&($scope.otpQuesAns.usrId=loginDataBean.userSeqId,$scope.otpQuesAns.userQuestionMapDTOList[0].qstId==$scope.otpQuesAns.userQuestionMapDTOList[1].qstId?alert("This question already used."):$scope.otpQuesAns.userQuestionMapDTOList[1].qstId==$scope.otpQuesAns.userQuestionMapDTOList[2].qstId?alert("This question already used."):$scope.otpQuesAns.userQuestionMapDTOList[0].qstId==$scope.otpQuesAns.userQuestionMapDTOList[2].qstId?alert("This question already used."):""!=$scope.otpQuesAns.userQuestionMapDTOList[0].qstId&&""!=$scope.otpQuesAns.userQuestionMapDTOList[1].qstId&&""!=$scope.otpQuesAns.userQuestionMapDTOList[2].qstId&&(APIS.SAVEOTPQUES.data=$scope.otpQuesAns,console.log($scope.otpQuesAns),DataManager.sendRestRequest(null,APIS.SAVEOTPQUES,function(response){return $scope.regStatus=response,!!$scope.regStatus.success&&($("#otpsetup_pop").modal("hide"),$("#totpCode").prop("disabled",!1),null!=response.dataBean.totpImage?$("#QRCode").attr("src","data:image/jpeg;base64,"+response.dataBean.totpImage):$("#QRCode").attr("src",response.dataBean.totpUrl),$("#otpsetup_qrcode").modal("show"),$("#totpCode").focus(),$("#confirmOTPBtn").prop("disabled",!1),void 0)})))};var cacheUserInfo=function(data){$scope.uconfig="",$scope.uconfig=sessionStorage.setItem("config",JSON.stringify(data.dataBean));var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+data.dataBean.userSeqId,APIS.GET_PROFILE.URL=url,APIS.GET_PROFILE.data={},DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&($window.sessionStorage.setItem("userconfig",JSON.stringify(response.dataBean)),switchRole(data))},data.dataBean.token),APIS.GET_PROFILE.URL=tempUrl},switchRole=function(response){var dataBean=response.dataBean,respons={dataBean:dataBean};return dataBean.userFacilities[0].roles.length>1?(PermissionManager.setMultiRoleResponse(respons),void $state.go("multiRoles")):(PermissionManager.setMultiRoleResponse(respons),PermissionManager.setPermissionsBasedOnRole(dataBean.userFacilities[0].roles[0].roleId,null,function(){sessionStorage.setItem("currentRole",JSON.stringify(dataBean.userFacilities[0].roles[0])),switchRoles.go(dataBean.userFacilities[0].roles[0].roleName)}),PermissionManager.cacheSelectedRole(dataBean.userFacilities[0].roles[0].roleId,null),void 0)};$scope.isOldPwd=!1,$scope.isOldPwdTxt="",$scope.checkPassword=function(){$scope.isOldPwd=!1,$scope.isOldPwdTxt="";var dataBean=JSON.parse(sessionStorage.getItem("config"));$scope.checkPwd={id:dataBean.userSeqId,password:$scope.newPassword},APIS.CHECKPASSWORD.data=$scope.checkPwd,DataManager.sendRestRequest(null,APIS.CHECKPASSWORD,function(response){response.success?resetPwd():("USER_PASSWORD_SAME"==response.errorMessage&&($scope.errorpwd=!0,$scope.errormsg="Password should not be same as Username"),$scope.isOldPwd=!0,$scope.isOldPwdTxt=response.errorMessage)},dataBean.token)};var resetPwd=function(){var dataBean=JSON.parse(sessionStorage.getItem("config"));APIS.CHANGE_PWD.URL="security/users/common/changePassword/"+dataBean.userSeqId+"/"+window.btoa($scope.userDetails.password)+"/"+window.btoa($scope.newPassword),APIS.CHANGE_PWD.data={},DataManager.sendRestRequest(null,APIS.CHANGE_PWD,function(response){response.success?($("#loginResetPwd").modal("hide"),ModalService.openAlert("alert","","Password changed is successful. Please Login to your ELMeRS account.",$scope),$scope.loggedIn=!1,$scope.isFrmSubmited=!1,$scope.userDetails.username="",$scope.userDetails.password="",$scope.userDetails.totpCode="",clearSession()):($(".totp_validation2").show(),$timeout(function(){$(".totp_validation2").hide()},1e4))},dataBean.token)};$scope.resetPWD=function(){$state.go("login_reset_pwd")},$scope.unlockPWD=function(){$state.go("login_unlock")},$scope.validateOTP=function(){$scope.isOtpFrmValidate=!0,APIS.VALIDATEOTPQUES.data=$scope.validateotpQuesAns,console.log($scope.validateotpQuesAns),DataManager.sendRestRequest(null,APIS.VALIDATEOTPQUES,function(response){$scope.regStatus=response,$scope.regStatus.success?($("#otpsetupques_pop").modal("hide"),$("#totpCode").prop("disabled",!1),null!=response.dataBean.totpImage?$("#QRCode").attr("src","data:image/jpeg;base64,"+response.dataBean.totpImage):$("#QRCode").attr("src",response.dataBean.totpUrl),$("#otpsetup_qrcode").modal("show"),$("#totpCode").focus(),$("#confirmOTPBtn").prop("disabled",!1)):null!=$scope.regStatus.errorMessage&&alert($scope.regStatus.errorMessage)})},$scope.Action=function(){$uibModal.open({animation:!0,templateUrl:"helpPopup",controller:"ActionCtrl",size:"lg",resolve:{modalParam:function(){}}})},$scope.resetFun=function(){$scope.sty="z-index:30;display:block;position:absolute;margin-top:95px",ModalService.openAlert("confirm","confirm","Reset will sent a temporary password to your registered email address. You will have to complete OTP setup and change your password on login",$scope,"reset",function(){}),setTimeout(function(){$(".modal-footer .btn-primary").text("Confirm"),$(".modal-footer .btn-warning").text("Cancel")},100),$scope.$on("resetOk",function(){loginDataBean&&($scope.usrId=loginDataBean.userSeqId,APIS.OTPRESETPASSWORD.URL="User/OTPPasswordReset/"+$scope.usrId,DataManager.sendRestRequest(null,APIS.OTPRESETPASSWORD,function(response){response.success&&ModalService.openAlert("alert","success",response.successMessage,$scope,"success",function(){window.location.reload()})}))})},APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I015",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){var Bussinessins=response.dataBean.instruction;$scope.IntranetInstruction=$sce.trustAsHtml(Bussinessins)}})}]),angular.module("app.login").controller("LoginForgotPwdCtrl",["$rootScope","$scope","$state","APIS","DataManager","ResourceManager","$timeout","$window","$uibModal","ModalService","switchRoles","PermissionManager","SessionManager","AutoSaveManager","$sce",function($rootScope,$scope,$state,APIS,DataManager,ResourceManager,$timeout,$window,$uibModal,ModalService,switchRoles,PermissionManager,SessionManager,AutoSaveManager,$sce){$scope.init=function(){$scope.loginRM=ResourceManager,$scope.resetDetails={emailId:""},loadLoginInstruction()},$scope.resetPassword=function(invalid){if($scope.resetFrmSubmited=!0,invalid)return $scope.isDisabled=!1,!1;JSON.parse(sessionStorage.getItem("config"));APIS.REESTPASSWORD.data=$scope.resetDetails,DataManager.sendRestRequest(null,APIS.REESTPASSWORD,function(response){$scope.status=response,$scope.status.success?($window.sessionStorage.clear(),ModalService.openAlert("alert","success","Password reset sucessfully. New password has been sent to your registered email address.",$scope,"resetPwd",function(){$state.go("login")})):$scope.isDisabled=!1})};var loadLoginInstruction=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I002",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){var ins=response.dataBean.instruction;$scope.loginInstruction=$sce.trustAsHtml(ins)}})};$scope.init()}]),angular.module("app.login").controller("LoginUnlockCtrl",["$rootScope","$scope","$state","APIS","DataManager","ResourceManager","$timeout","$window","$uibModal","ModalService","switchRoles","PermissionManager","SessionManager","AutoSaveManager","$sce",function($rootScope,$scope,$state,APIS,DataManager,ResourceManager,$timeout,$window,$uibModal,ModalService,switchRoles,PermissionManager,SessionManager,AutoSaveManager,$sce){$scope.init=function(){$scope.loginRM=ResourceManager,$scope.unlockDetails={email:"",passportNo:""},$scope.authToken="",loadLoginInstruction()},$scope.reqForUnlock=function(invalid){if($scope.ulFrmSubmited=!0,invalid)return!1;JSON.parse(sessionStorage.getItem("config"));APIS.UNLOCK_ACC.data=$scope.unlockDetails,DataManager.sendRestRequest(null,APIS.UNLOCK_ACC,function(response){$scope.ulStatus=response,response.success&&ModalService.openAlert("alert","success",response.successMessage,$scope,"success",function(){$state.go("login")}),$timeout(function(){$scope.ulStatus=""},1e4)})};var loadLoginInstruction=function(){APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I002",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){var ins=response.dataBean.instruction;$scope.loginInstruction=$sce.trustAsHtml(ins)}})};$scope.init()}]),angular.module("app.login").config(function($stateProvider){$stateProvider.state("login",{url:"/login",controller:"LoginCtrl",templateUrl:"app/login/partials/login.html"}).state("login_reset_pwd",{url:"/login_reset_pwd",controller:"LoginForgotPwdCtrl",templateUrl:"app/login/partials/login_resetpwd.html"}).state("login_unlock",{url:"/login_unlock",controller:"LoginUnlockCtrl",templateUrl:"app/login/partials/login_unlock.html"}).state("login_otp",{url:"/login_otp",controller:"LoginCtrl",templateUrl:"app/login/partials/login_otp.html"})}),angular.module("app").controller("AdminHomeCtrl",["$scope","$rootScope","$state","APIS","$location","DataManager","$window","$uibModal","ModalService","ResourceManager",function($scope,$rootScope,$state,APIS,$location,DataManager,$window,$uibModal,ModalService,adhm){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){$scope.adhm=adhm,$scope.animationsEnabled=!0,$scope.loadWorklikstselect(),$scope.tableData=[],$scope.notificationObject={},$scope.notificationObject.receiver_role_Id=7,$scope.notificationObject.receiver_Id=$scope.uconfig.userSeqId,$scope.getNotifications($scope.notificationObject)},$scope.loadWorklikstselect=function(){APIS.GET_HOME_WORKLISTS.data={},DataManager.sendRestRequest(null,APIS.GET_HOME_WORKLISTS,function(response){response.success&&(console.log("data-",response.dataBean),$scope.tableData=response.dataBean.list)},$scope.uconfig.token)},$scope.selectedAction=function(wk){"Profile Update"==wk.requestType?$scope.profileUpdate(wk.updateProfId,wk.applicantId):$scope.accountUnlock(wk.requestForUnlockId)},$scope.profileUpdate=function(updateProfId,applicantId){$scope.tempURL="",$scope.templateUrl="app/master/partials/maintenance/profile_view_modal_form.html",APIS.ADMIN_SELECTED_GET_PROFILE.URL=String.prototype.format.apply(APIS.ADMIN_SELECTED_GET_PROFILE.tempURL,[updateProfId]),APIS.GET_PROFILE.data={},DataManager.sendRestRequest(null,APIS.ADMIN_SELECTED_GET_PROFILE,function(response){response.success?$scope.setApplicantProfileDtls(applicantId,response):console.log("Unable to open Modal:","ErrorMessage--",response.errorMessage)},$scope.uconfig.token)},$scope.setApplicantProfileDtls=function(applicantId,profileResponse){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+applicantId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:null,visitType:null,applicantId:applicantId,applicantuserId:response.dataBean.id,applicantDetails:{applicationId:null}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.showModelpopup(profileResponse)):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.showModelpopup=function(response){$scope.profileData=response.dataBean;var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:$scope.templateUrl,controller:"HomeProfileUpdateCtrl",size:"lg",resolve:{profileData:function(){return $scope.profileData}}});modalInstance.result.then(function(){$scope.init()})},$scope.accountUnlock=function(id){ModalService.openAlert("confirm","warning","Your request for account unlock has been approved.",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){APIS.ADMIN_ACCOUNT_UNLOCK_REQUEST.data={requestForUnlockId:id},DataManager.sendRestRequest(null,APIS.ADMIN_ACCOUNT_UNLOCK_REQUEST,function(response){response.success?($scope.accountUnlockLIst=response.dataBean,$scope.loadWorklikstselect()):console.log(response)},$scope.uconfig.token)})},$scope.getNotifications=function(notificationObject){APIS.GET_NOTIFICATION.data=notificationObject,DataManager.sendRestRequest(null,APIS.GET_NOTIFICATION,function(response){response.success?response.dataBean.length>0&&($scope.notificationsData=response.dataBean):console.log("UNABLE TO GET NOTIFICATION","Error Code:",response.errorCode)},$scope.uconfig.token)},$scope.goToApplicantProfile=function(wk){if("Unlock"==wk.action)var applicantId=wk.person.personId;else var applicantId=wk.applicantId;var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+applicantId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:null,visitType:null,applicantId:applicantId,applicantuserId:response.dataBean.id,applicantDetails:{applicationId:null}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.dataBind=function(){},$scope.viewMsg=function(param){$scope.showMsg=param},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("HomeProfileUpdateCtrl",["$scope","APIS","DataManager","ResourceManager","$uibModalInstance","profileData","$window","ResourceManager","ModalService",function($scope,APIS,DataManager,ResourceManager,$uibModalInstance,profileData,$window,adhm,ModalService){$scope.prfleupdt=adhm,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.profileData=profileData,$scope.viewdoc=function(documentdata){var content=documentdata,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+documentdata,"_blank","location=0,enableviewportscale=yes")},$scope.approve=function(){$scope.profileData.action="Approve",APIS.ADMIN_PROFILE_UPDATE_APPROVAL.data=$scope.profileData,DataManager.sendRestRequest(null,APIS.ADMIN_PROFILE_UPDATE_APPROVAL,function(response){response.success?(ModalService.openAlert("alert","success","Your request to update profile details has been approved successfully",$scope),$uibModalInstance.close("Approved")):$uibModalInstance.close("Approved")},$scope.uconfig.token)},$scope.reject=function(){$scope.profileData.action="Reject",APIS.ADMIN_PROFILE_UPDATE_APPROVAL.data=$scope.profileData,DataManager.sendRestRequest(null,APIS.ADMIN_PROFILE_UPDATE_APPROVAL,function(response){response.success?(ModalService.openAlert("alert","success","Your request to update profile details has been rejected successfully",$scope),$uibModalInstance.close("Cancel")):$uibModalInstance.close("Cancel")},$scope.uconfig.token)},$scope.cancel=function(){$uibModalInstance.close("cancel")}}]),angular.module("app").controller("MasterCtrl",["$scope","$state","APIS","$location","DataManager","$window",function($scope,$state,APIS,$location,DataManager,$window){$scope.init=function(){$scope.roleInfo=[],$scope.isLoggedin(),$scope.getRole(),$scope.dataBind()},$scope.isLoggedin=function(){if($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userinfo=JSON.parse($window.sessionStorage.getItem("userconfig")),!$scope.userinfo||!$scope.uconfig)return $state.go("login"),!1},$scope.getRole=function(){DataManager.sendRestRequest(null,APIS.GET_ROLE,function(response){console.log(response),response.success&&($scope.roleInfo=response.dataBean)},$scope.uconfig.token)},$scope.dataBind=function(){},$scope.swichRole=function(role){switch(console.log(role),role){case 7:$state.go("master-home");break;case 2:$state.go("lme");break;default:$state.go("home")}},$scope.init()}]),angular.module("app").controller("MasterHeaderCtrl",["$scope","$state","$timeout","APIS","$location","$window","PermissionManager","DataManager","$uibModal","ModalService","switchRoles",function($scope,$state,$timeout,APIS,$location,$window,PermissionManager,DataManager,$uibModal,ModalService,switchRoles){$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.role=JSON.parse($window.sessionStorage.getItem("currentRole")),null!=$scope.userInfo&&null!=$scope.userInfo.photo&&$timeout(function(){$("#profilePic").attr("src","data:image/jpeg;base64,"+$scope.userInfo.photo)},10),$scope.init=function(){$scope.isNavActive=!0}(),$scope.menuClass=function(path){return $location.path().substr(0,path.length)===path?"top-nav-active":""},$scope.showRoles=!1;var rr=PermissionManager.getMultiRoleResponse();rr&&rr.dataBean&&($scope.roles=rr.dataBean.userFacilities[0].roles,$scope.selectedRole=PermissionManager.getMultiRoleResponse().selectedRole,$scope.roles.length>1&&($scope.showRoles=!0)),$scope.roleChanged=function(){var selectedRoleName="";for(var i in $scope.roles)if($scope.roles[i].roleId==$scope.selectedRole){selectedRoleName=$scope.roles[i].roleDisplayName;break}PermissionManager.roleChanged($scope.selectedRole,selectedRoleName)},$scope.swichRole=function(param){sessionStorage.setItem("currentRole",JSON.stringify(param)),switchRoles.go(param.roleName)},$scope.viewProfileTemplate=function(){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/common/partials/Profile_Model_Form.html",controller:"ProfileModelCtrl",size:"lg",resolve:{}},$scope.uconfig.token)},$scope.logout=function(){sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage},$scope.uconfig.token)),$window.sessionStorage.clear(),$state.go("app")}}]),angular.module("app").controller("RoleCtrl",["$scope","$state","APIS",function($scope,$state,APIS){$scope.init=function(){},$scope.init()}]),angular.module("app").controller("ViewProfileModelCtrl",["$http","$scope","$state","$stateParams","APIS","DataManager","$window","$uibModal","$uibModalInstance","ResourceManager",function($http,$scope,$state,$stateParams,APIS,DataManager,$window,$uibModal,$uibModalInstance,adhm){$scope.adhm=adhm,$scope.dt=new Date,$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.bonopen1=function(){$scope.bonpopup1.opened=!0},$scope.bexpopen1=function(){$scope.bexppopup1.opened=!0},$scope.bexppopup1={opened:!1},$scope.bonpopup1={opened:!1},$scope.formats=["dd/MM/yyyy","MM-dd-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[1],$scope.popup1={opened:!1},$scope.animationsEnabled=!0,$scope.confirmProfileDtls={},$scope.invalidResPC=!1,$scope.salList=[{lookUpItemId:1,lookUpItemValue:"Mr"}],$scope.qualList=[{lookUpItemId:1,lookUpItemValue:"Mr"}],$scope.nationsList=[{lookUpItemId:1,lookUpItemValue:"Singapore"}],$scope.ectyList=[{lookUpItemId:1,lookUpItemValue:"Ecty"}],$scope.genList=[{lookUpItemId:1,lookUpItemValue:"Male"}],$scope.countryList=[{lookUpItemId:1,lookUpItemValue:"Singapore"}],$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurOfficeNum=!1,$scope.onBlurOfficeNumFn=function(){$scope.onBlurOfficeNum=!0},$scope.onBlurPhoneNo=!1,$scope.onBlurPhoneNoFn=function(){$scope.onBlurPhoneNo=!0},$scope.onBlurFaxNo=!1,$scope.onBlurFaxNoFn=function(){$scope.onBlurFaxNo=!0},$scope.onBlurPhoneNo2=!1,$scope.onBlurPhoneNo2Fn=function(){$scope.onBlurPhoneNo2=!0},$scope.onBlurFaxNo2=!1,$scope.onBlurFaxNo2Fn=function(){$scope.onBlurFaxNo2=!0},$scope.onblurPas=!1,$scope.onblurPasFn=function(){$scope.onblurPas=!0},$scope.onBlurNIRC=!1,$scope.onBlurNIRCFn=function(){$scope.onBlurNIRC=!0},$scope.onBlurmail=!1,$scope.matchEmail=function(){$scope.onBlurmail=!0},$scope.confirmProfileDtls={},$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode){$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode&&($scope.copyAdd=!1,APIS.GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.GET_ADDRESS,function(response){response.success&&response.dataBean&&($scope.confirmProfileDtls.address[0].floor=response.dataBean.floor,$scope.confirmProfileDtls.address[0].line1=response.dataBean.building,$scope.confirmProfileDtls.address[0].line2=response.dataBean.unit)}))},$scope.isEmailExsist=function(){APIS.USER_EXSIST.data={email:$scope.confirmProfileDtls.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response})},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.isFrmSubmited=!1,$scope.init=function(){APIS.SINGPASS_GET_PROFILE.data={},APIS.SINGPASS_GET_PROFILE.URL=String.prototype.format.apply(APIS.SINGPASS_GET_PROFILE.tempURL,[$scope.uconfig.userSeqId]),DataManager.sendRestRequest(null,APIS.SINGPASS_GET_PROFILE,function(response){response.success&&($scope.confirmProfileDtls=response.dataBean,$scope.confirmProfileDtls.person.dob=new Date($scope.confirmProfileDtls.person.dob),null!=$scope.confirmProfileDtls.person.photo&&$("#docBinaryStorageDiv").attr("src","data:image/jpeg;base64,"+$scope.confirmProfileDtls.person.photo),console.log("data",$scope.confirmProfileDtls))},$scope.uconfig.token),$scope.loadCombos=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.URL+"SAL, NATIONS, ECTY, GEN, DOB,country,ORGANIZATION,QUALIFICATION",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.nationsList=response.dataBean.NATIONS,$scope.ectyList=response.dataBean.ECTY,$scope.genList=response.dataBean.GEN,$scope.countryList=response.dataBean.country,$scope.orgList=response.dataBean.ORGANIZATION,$scope.qualList=response.dataBean.QUALIFICATION})}(),$scope.onBlurQua=!1,$scope.onBlurQuaFn=function(){$scope.onBlurQua=!0}},$scope.postConfirmProfileDtls=function(){return $scope.isFrmSubmited=!0,!$scope.frmConfirmProfile.$invalid&&(APIS.UPDATE_PROFILE.data={},$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.confirmProfileDtls.person.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),APIS.SINGPASS_CONFIRM_PROFILE.data=$scope.confirmProfileDtls,DataManager.sendRestRequest(null,APIS.SINGPASS_CONFIRM_PROFILE,function(response){response.success&&console.log(response.success)},$scope.uconfig.token),$uibModalInstance.dismiss("save"),void 0)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("EmailConfigCtrl",["$scope","$rootScope","$state","APIS","DataManager","ResourceManager","$uibModal","$filter","ResourceManager","ModalService",function($scope,$rootScope,$state,APIS,DataManager,ResourceManager,$uibModal,$filter,emailconfig,ModalService){$scope.init=function(){return $scope.tempname="",$scope.emailconfig=emailconfig,$scope.isFrmSubmited=!1,$scope.selectedEmailObj={rowObj:null},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.animationsEnabled=!0,$scope.viewData={},$scope.modifyData={},void $scope.emailTemplateList()):($state.go("login"),!1)},$scope.emailTemplateList=function(){$scope.emailListData=[],APIS.CONFIG_GET_ALL_EMAIL_TEMPLATES.data={},DataManager.sendRestRequest(null,APIS.CONFIG_GET_ALL_EMAIL_TEMPLATES,function(response){response.success?($scope.emailListData=response.dataBean,console.log("edata",$scope.emailListData),$scope.filteredItems=$scope.emailListData,""==$scope.tempname&&($scope.tempname="DSC"==$scope.tempname?"ASC":"DSC",$scope.tempSearch())):console.log("GRID DISPLAY DATA:",response)},$scope.uconfig.token)},$scope.tempSearch=function(){""==$scope.tempname||"DSC"==$scope.tempname?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"templateName",!1),$scope.tempname="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"templateName",!0),$scope.tempname="DSC")},$scope.addTemplate=function(){$scope.addEmailTemplate="",$scope.modalTemplateURL="app/master/partials/config/email_Template_Add_Model.html";var addModalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:$scope.modalTemplateURL,controller:"addModalInstanceCtrl",size:"lg",resolve:{addEmailTemplate:function(){return $scope.addEmailTemplate}}});addModalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date)})},$scope.viewTemplate=function(){console.log("selected email --: "+$scope.selectedEmailObj.rowObj),null!=$scope.selectedEmailObj.rowObj?($scope.emailTempId=$scope.selectedEmailObj.rowObj.emailTemplateId,$scope.modalTemplateURL="app/master/partials/config/email_Template_View_Model.html",APIS.CONFIG_VIEW_EMAIL_TEMPLATE.data={emailTemplateId:$scope.emailTempId},DataManager.sendRestRequest(null,APIS.CONFIG_VIEW_EMAIL_TEMPLATE,function(response){if(response.success){$scope.viewData=response.dataBean;var viewModalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:$scope.modalTemplateURL,controller:"viewModalInstanceCtrl",size:"lg",resolve:{viewData:function(){return $scope.viewData}}});viewModalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date)})}else console.log(response)},$scope.uconfig.token)):ModalService.openAlert("alert","info",$scope.emailconfig.resources.EMAIL_CONFIG.SELECT_EMAILTEMPLATE,$scope)},$scope.modifyTemplate=function(){null!=$scope.selectedEmailObj.rowObj?($scope.emailTemplateId=$scope.selectedEmailObj.rowObj.emailTemplateId,$scope.modalTemplateURL="app/master/partials/config/email_Template_Modify_Model.html",APIS.CONFIG_VIEW_EMAIL_TEMPLATE.data={emailTemplateId:$scope.emailTemplateId},DataManager.sendRestRequest(null,APIS.CONFIG_VIEW_EMAIL_TEMPLATE,function(response){if(response.success){$scope.modifyData=response.dataBean;var modifyModalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:$scope.modalTemplateURL,controller:"modifyModalInstanceCtrl",size:"lg",resolve:{modifyData:function(){return $scope.modifyData}}});modifyModalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date)})}else console.log(response)},$scope.uconfig.token)):ModalService.openAlert("alert","info",$scope.emailconfig.resources.EMAIL_CONFIG.SELECT_EMAILTEMPLATE,$scope)},$scope.manageGroups=function(){$scope.modalTemplateURL="app/master/partials/config/email_Template_Groups_Model.html";$uibModal.open({animation:$scope.animationsEnabled,backdrop:"static",templateUrl:$scope.modalTemplateURL,controller:"groupsModalInstanceCtrl",size:"lg",resolve:{EmailTemplate:function(){}}})},$scope.filterEmails=function(filterData){return console.log("fiterdata",filterData),$scope.isFrmSubmited=!0,!$scope.emailFilterForm.$invalid&&($scope.filteredItems=$scope.emailListData,filterData.name&&($scope.filteredItems=$filter("filter")($scope.emailListData,{templateName:filterData.name})),filterData.description&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{description:filterData.description})),void(filterData.status&&(console.log("status",filterData.status),$scope.filteredItems=$filter("filter")($scope.filteredItems,{status:filterData.status},!0))))},$scope.init()}]),angular.module("app").controller("addModalInstanceCtrl",["$scope","$state","APIS","DataManager","ResourceManager","$uibModalInstance","addEmailTemplate","ModalService","ResourceManager",function($scope,$state,APIS,DataManager,ResourceManager,$uibModalInstance,addEmailTemplate,ModalService,emailconfig){$(document).ready(function(){setTimeout(function(){CKEDITOR.replace("editor1")},100)}),$scope.emailconfig=emailconfig,$scope.isFrmSubmited=!1,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.recipients={},$scope.addEmailTemplate={},$scope.addEmailTemplate.body="",$scope.EmailReceipients=[],$scope.recipientsSubList="",$scope.addedReceipientList="",$scope.vetting="",$scope.isBusinessUser=!1,APIS.CONFIG_GET_RECEIPIENT_TYPES.data={},DataManager.sendRestRequest(null,APIS.CONFIG_GET_RECEIPIENT_TYPES,function(response){response.success?$scope.recipients=response.dataBean:console.log("UNABLE TO FETCH RECEIPIENT TYPES:",response)},$scope.uconfig.token),APIS.GET_EMAIL_TEMPLATE_SHORTCUTS.data={},DataManager.sendRestRequest(null,APIS.GET_EMAIL_TEMPLATE_SHORTCUTS,function(response){response.success?$scope.addContextdata=response.dataBean:($scope.addContextdata=[],console.log("UNABLE TO FETCH RECEIPIENT TYPES:",response))},$scope.uconfig.token),$scope.$watch("recipient",function(newVal){null!=newVal&&($scope.typeId=newVal.receipientType,APIS.CONFIG_GET_EMAIL_RECEIPIENTS.data={receipientType:$scope.typeId},DataManager.sendRestRequest(null,APIS.CONFIG_GET_EMAIL_RECEIPIENTS,function(response){response.success?($scope.recipientsSubList=response.dataBean,667==$scope.typeId&&($scope.allRoles=[],$scope.allRoles=angular.copy($scope.recipientsSubList),angular.forEach($scope.allRoles,function(value,key){value.receipientName="All "+value.receipientName+"s",value.include_all_role_members="Y"}),$scope.recipientsSubList=$scope.recipientsSubList.concat($scope.allRoles)),668==$scope.typeId?$scope.isBusinessUser=!0:$scope.isBusinessUser=!1):console.log("UNABLE TO FETCH RECEIPIENT SUB LIST:",response)},$scope.uconfig.token))}),$scope.addToList=function(list,sublist){return 668==list.receipientType&&(sublist=sublist.originalObject),checkForDuplicate(sublist.emailReceipientId)?void ModalService.openAlert("alert","Error",$scope.emailconfig.resources.EMAIL_CONFIG.RECIPIENT_EXISTS,$scope):void $scope.EmailReceipients.push({
emailReceipientId:sublist.emailReceipientId,receipientType:list.receipientType,receipientName:sublist.receipientName,include_all_role_members:sublist.include_all_role_members})};var checkForDuplicate=function(emailReceipientId){for(var isPresent=!1,i=0;i<$scope.EmailReceipients.length;i++)if($scope.EmailReceipients[i].emailReceipientId==emailReceipientId){isPresent=!0;break}return isPresent};$scope.removeReceipient=function(Receipient){angular.forEach(Receipient,function(val){angular.forEach($scope.EmailReceipients,function(list){if(list.emailReceipientId==val){var index=$scope.EmailReceipients.indexOf(list);$scope.EmailReceipients.splice(index,1)}})})},$scope.addToContext=function(appendData){CKEDITOR.instances.editor1.insertText(appendData)},$scope.$watch("addEmailTemplate.vetting",function(newVal){null!=newVal&&newVal?$scope.vetting="Y":$scope.vetting="N"}),$scope.$watch("addEmailTemplate.status",function(newVal){null!=newVal&&2==newVal?$scope.addEmailTemplate.status=2:$scope.addEmailTemplate.status=1}),$scope.bodyreq=!1,$scope.bodylen=!1,$scope.addTemplate=function(saveTemplate){saveTemplate.vetting=$scope.vetting,saveTemplate.addedReceipients=$scope.EmailReceipients,saveTemplate.body=CKEDITOR.instances.editor1.getData(),""==saveTemplate.body||"undefined"==saveTemplate.body||null==saveTemplate.body?($scope.bodyreq=!0,$scope.emailAddForm.$invalid=!0):$scope.bodyreq=!1;var editorcontent=CKEDITOR.instances.editor1.getData().replace(/<[^>]*>/gi,"");return editorcontent.length>1e4?($scope.bodylen=!0,$scope.addtemp.$invalid=!0):$scope.bodylen=!1,$scope.isFrmSubmited=!0,!$scope.emailAddForm.$invalid&&(APIS.CONFIG_SAVE_EMAIL_TEMPLATE.data=saveTemplate,void DataManager.sendRestRequest(null,APIS.CONFIG_SAVE_EMAIL_TEMPLATE,function(response){response.success?($scope.recipientsSubList=response.dataBean,window.location.reload()):ModalService.openAlert("alert","UNABLE TO SAVE TEMPLATE:",response.errorMessage,$scope)},$scope.uconfig.token))},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("viewModalInstanceCtrl",["$scope","$state","APIS","DataManager","ResourceManager","$uibModalInstance","viewData","ResourceManager",function($scope,$state,APIS,DataManager,ResourceManager,$uibModalInstance,viewData,emailconfig){$scope.viewData=viewData,$scope.emailconfig=emailconfig,$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("modifyModalInstanceCtrl",["$scope","$state","APIS","DataManager","ResourceManager","$uibModalInstance","modifyData","ModalService","ResourceManager",function($scope,$state,APIS,DataManager,ResourceManager,$uibModalInstance,modifyData,ModalService,emailconfig){console.log("modifyData",modifyData),$(document).ready(function(){setTimeout(function(){CKEDITOR.replace("editor2"),CKEDITOR.instances.editor2.setData(modifyData.body)},100)}),$scope.emailconfig=emailconfig,null!=modifyData.addedReceipients&&modifyData.addedReceipients.length>0?$scope.EmailReceipientsMod=modifyData.addedReceipients:$scope.EmailReceipientsMod=[],$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.addEmailTemplate=modifyData,$scope.addEmailTemplate.body=modifyData.body,"Y"===modifyData.vetting?$scope.addEmailTemplate.vetting=!0:$scope.addEmailTemplate.vetting=!1,$scope.addEmailTemplate.status=modifyData.status,console.log("MOD",modifyData.systemConfigYN),$scope.EmailConfigDisable=!1,"Y"===modifyData.systemConfigYN?($scope.EmailConfigDisable=!0,$scope.modifyInfo="1"):$scope.modifyInfo="2",$scope.EmailReceipientsObj={},$scope.$watch("addEmailTemplate.status",function(newVal){null!=newVal&&2==newVal?$scope.addEmailTemplate.status=2:$scope.addEmailTemplate.status=1}),APIS.CONFIG_GET_RECEIPIENT_TYPES.data={},DataManager.sendRestRequest(null,APIS.CONFIG_GET_RECEIPIENT_TYPES,function(response){response.success?$scope.recipients=response.dataBean:console.log("UNABLE TO FETCH RECEIPIENT TYPES:",response)},$scope.uconfig.token),APIS.GET_EMAIL_TEMPLATE_SHORTCUTS.data={},DataManager.sendRestRequest(null,APIS.GET_EMAIL_TEMPLATE_SHORTCUTS,function(response){response.success?$scope.addContextdata=response.dataBean:($scope.addContextdata=[],console.log("UNABLE TO FETCH RECEIPIENT TYPES:",response))},$scope.uconfig.token),$scope.$watch("recipient",function(newVal){null!=newVal&&($scope.typeId=newVal.receipientType,APIS.CONFIG_GET_EMAIL_RECEIPIENTS.data={receipientType:$scope.typeId},DataManager.sendRestRequest(null,APIS.CONFIG_GET_EMAIL_RECEIPIENTS,function(response){response.success?($scope.recipientsSubList=response.dataBean,667==$scope.typeId&&($scope.allRoles=[],$scope.allRoles=angular.copy($scope.recipientsSubList),angular.forEach($scope.allRoles,function(value,key){value.receipientName="All "+value.receipientName+"s",value.include_all_role_members="Y"}),$scope.recipientsSubList=$scope.recipientsSubList.concat($scope.allRoles)),668==$scope.typeId?$scope.isBusinessUser=!0:$scope.isBusinessUser=!1):console.log("UNABLE TO FETCH RECEIPIENT SUB LIST:",response)},$scope.uconfig.token))}),$scope.addToList=function(list,sublist){return 668==list.receipientType&&(sublist=sublist.originalObject),checkForDuplicate(sublist.emailReceipientId)?void ModalService.openAlert("alert","Error",$scope.emailconfig.resources.EMAIL_CONFIG.RECIPIENT_EXISTS,$scope):($scope.EmailReceipientsObj={emailReceipientId:sublist.emailReceipientId,receipientType:list.receipientType,receipientName:sublist.receipientName,include_all_role_members:sublist.include_all_role_members},$scope.EmailReceipientsMod.push($scope.EmailReceipientsObj),void console.log("list",$scope.EmailReceipientsMod))};var checkForDuplicate=function(emailReceipientId){if(null!=$scope.EmailReceipientsMod){for(var isModPresent=!1,i=0;i<$scope.EmailReceipientsMod.length;i++)if($scope.EmailReceipientsMod[i].emailReceipientId==emailReceipientId){isModPresent=!0;break}return isModPresent}};console.log("EmailReceipientsMod",$scope.EmailReceipientsMod),$scope.removeReceipient=function(Receipient){angular.forEach(Receipient,function(val){angular.forEach($scope.EmailReceipientsMod,function(list){if(list.emailReceipientId==val){var index=$scope.EmailReceipientsMod.indexOf(list);$scope.EmailReceipientsMod.splice(index,1)}})})},$scope.$watch("addEmailTemplate.vetting",function(newVal){null!=newVal&&newVal?$scope.vetting="Y":$scope.vetting="N"}),$scope.addToContextMod=function(appendData){CKEDITOR.instances.editor2.insertText(appendData)},$scope.mod_bodylen=!1,$scope.mod_bodyreq=!1,$scope.updateTemplate=function(saveTemplate){if($scope.isFrmSubmited=!0,$scope.emailModifyForm.$invalid)return!1;if(console.log("saveTemplate",saveTemplate),"1"===$scope.modifyInfo&&($scope.saveStatusTemplate={subject:saveTemplate.subject,body:CKEDITOR.instances.editor2.getData(),emailTemplateId:saveTemplate.emailTemplateId,status:saveTemplate.status,vetting:$scope.vetting,description:saveTemplate.description},console.log("saveData",$scope.saveStatusTemplate),APIS.CONFIG_MODIFY_STATUS_EMAIL_TEMPLATE.data=$scope.saveStatusTemplate,DataManager.sendRestRequest(null,APIS.CONFIG_MODIFY_STATUS_EMAIL_TEMPLATE,function(response){response.success?ModalService.openAlert("alert","success",$scope.emailconfig.resources.EMAIL_CONFIG.MODIFIED_SUCCESSFULLY,$scope,"success",function(){window.location.reload()}):console.log("UNABLE TO SAVE TEMPLATE:",response)},$scope.uconfig.token)),"2"===$scope.modifyInfo){saveTemplate.vetting=$scope.vetting,saveTemplate.addedReceipients=$scope.EmailReceipientsMod,saveTemplate.body=CKEDITOR.instances.editor2.getData(),""==saveTemplate.body||"undefined"==saveTemplate.body||null==saveTemplate.body?($scope.mod_bodyreq=!0,$scope.emailModifyForm.$invalid=!0):$scope.mod_bodyreq=!1;var editorcontent=CKEDITOR.instances.editor2.getData().replace(/<[^>]*>/gi,"");editorcontent.length>1e4?($scope.mod_bodylen=!0,$scope.addtemp.$invalid=!0):$scope.mod_bodylen=!1,console.log("UpdatedData",saveTemplate),APIS.CONFIG_MODIFY_EMAIL_TEMPLATE.data=saveTemplate,DataManager.sendRestRequest(null,APIS.CONFIG_MODIFY_EMAIL_TEMPLATE,function(response){response.success?ModalService.openAlert("alert","success",$scope.emailconfig.resources.EMAIL_CONFIG.MODIFIED_SUCCESSFULLY,$scope,"success",function(){window.location.reload()}):console.log("UNABLE TO SAVE TEMPLATE:",response)},$scope.uconfig.token)}},$scope.cancel=function(){$uibModalInstance.close("cancel")}}]),angular.module("app").controller("groupsModalInstanceCtrl",["$scope","$state","APIS","DataManager","ResourceManager","$uibModalInstance","ResourceManager",function($scope,$state,APIS,DataManager,ResourceManager,$uibModalInstance,emailconfig){function getRowDataObject(){return Object.create($scope.baseRowObject)}$scope.init=function(){$scope.emailconfig=emailconfig,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.getGroupList={},$scope.setDisplayList={},$scope.newGroupDetails={},$scope.modifyGroupDetails={},$scope.newGroupDetails.groupDetails=[],$scope.modifyGroupDetails.groupDetails=[],$scope.displayGroupList=!0,$scope.showGrouplist=!0,$scope.modifyGrouplist=!0,$scope.baseRowObject={name:null,email:null},$scope.getCustomGroups()},$scope.groupSubmitted=!1,$scope.addNewRow=function(){$scope.groupSubmitted=!0,$scope.newGroupDetails.groupDetails.push(getRowDataObject())},$scope.removeRow=function(index){$scope.newGroupDetails.groupDetails.splice(index,1)},$scope.appendNewRow=function(){$scope.modifyGroupDetails.groupDetails.push(getRowDataObject())},$scope.saveGrpSubmitted=!1,$scope.saveGroup=function(savegroupdata){return $scope.saveGrpSubmitted=!0,!$scope.emailGroupForm.$invalid&&(APIS.CONFIG_SAVE_EMAIL_GROUPS_DETAILS.data=savegroupdata,void DataManager.sendRestRequest(null,APIS.CONFIG_SAVE_EMAIL_GROUPS_DETAILS,function(response){response.success?($scope.showGrouplist=!0,$scope.modifyGrouplist=!0,$scope.deleteCurrentID="",$scope.getCustomGroups(),$scope.groupList=null):console.log("UNABLE TO SAVE TEMPLATE:",response)},$scope.uconfig.token))},$scope.getCustomGroups=function(){APIS.CONFIG_GET_EMAIL_GROUPS.data={},DataManager.sendRestRequest(null,APIS.CONFIG_GET_EMAIL_GROUPS,function(response){response.success?$scope.getGroupList=response.dataBean.emailGroupsList:console.log("UNABLE TO SAVE TEMPLATE:",response)},$scope.uconfig.token)},$scope.$watch("groupList",function(newVal){null!=newVal&&newVal?$scope.getGroupInfo(newVal[0]):$scope.displayGroupList=!0}),$scope.getGroupInfo=function(newVal){$scope.displayGroupList=!1,$scope.showGrouplist=!0,$scope.modifyGrouplist=!0,$scope.deleteCurrentID=newVal,APIS.CONFIG_GET_EMAIL_GROUPS_DETAILS.data={emailGroupId:newVal},DataManager.sendRestRequest(null,APIS.CONFIG_GET_EMAIL_GROUPS_DETAILS,function(response){response.success?($scope.setGroupName=response.dataBean.groupName,$scope.setDisplayList=response.dataBean.groupDetails,$scope.setGroupId=response.dataBean.emailGroupId):console.log("UNABLE TO FETCH EMAIL DETAILS:",response)},$scope.uconfig.token)},$scope.modifyGroup=function(gid,gname,gdetails){$scope.displayGroupList=!0,$scope.showGrouplist=!0,$scope.modifyGrouplist=!1,$scope.modifyGroupDetails.emailGroupId=gid,$scope.modifyGroupDetails.groupDetails=gdetails,$scope.modifyGroupDetails.groupName=gname},$scope.cancelUpdate=function(){$scope.modifyGrouplist=!0,$scope.displayGroupList=!1},$scope.removeUser=function(groupuser){$scope.modifyGroupDetails.groupDetails.splice(groupuser,1)},$scope.modifyGrpSubmitted=!1,$scope.updateModifyGroup=function(updateDetials){return $scope.modifyGrpSubmitted=!0,!$scope.emailModifyGroupForm.$invalid&&(APIS.CONFIG_SAVE_EMAIL_GROUPS_DETAILS.data=updateDetials,void DataManager.sendRestRequest(null,APIS.CONFIG_SAVE_EMAIL_GROUPS_DETAILS,function(response){response.success?($scope.showGrouplist=!0,$scope.modifyGrouplist=!0,$scope.getGroupInfo($scope.groupList[0])):console.log("UNABLE TO SAVE TEMPLATE:",response)},$scope.uconfig.token))},$scope.changeMode=function(){$scope.groupSubmitted=!1,$scope.displayGroupList=!0,$scope.showGrouplist=!1,$scope.newGroupDetails={},$scope.newGroupDetails.groupDetails=[]},$scope.deletGroup=function(){APIS.CONFIG_DELETE_EMAIL_GROUP.data={emailGroupId:$scope.deleteCurrentID},DataManager.sendRestRequest(null,APIS.CONFIG_DELETE_EMAIL_GROUP,function(response){response.success?($scope.displayGroupList=!0,$scope.showGrouplist=!0,$scope.modifyGrouplist=!0,$scope.getCustomGroups(),console.log("Group Deleted SUCESSFULLY")):console.log("UNABLE TO FETCH EMAIL DETAILS:",response)},$scope.uconfig.token)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("EmailViewCtrl",["$scope","$state","APIS",function($scope,$state,APIS){}]),angular.module("app").controller("FollowuprovisoCtrl",["$rootScope","$scope","$state","APIS","DataManager","$timeout","$window","ModalService","ResourceManager","$filter",function($rootScope,$scope,$state,APIS,DataManager,$timeout,$window,ModalService,AFP,$filter){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.typeOdr="",$scope.subtypeOdr="",$scope.ipOdr="",$scope.init=function(){$scope.isFPFormSubmited=!1,$scope.AFP=AFP,$scope.fpData={},$scope.subType=[],$scope.proType=[],$scope.invProtocal=[],$scope.followProtocals=[],$scope.displayFollowProvisoList(),$scope.loadMasterCambo(),$scope.loadInvistigationCambo(),$scope.fpModalUpdatedData={}},$scope.typSearch=function(){""==$scope.typeOdr||"DSC"==$scope.typeOdr?($scope.followProtocals=$filter("orderBy")($scope.followProtocals,"provisoType",!1),$scope.typeOdr="ASC"):($scope.followProtocals=$filter("orderBy")($scope.followProtocals,"provisoType",!0),$scope.typeOdr="DSC"),$scope.subtypeOdr="",$scope.ipOdr=""},$scope.subTypeSearch=function(){""==$scope.subtypeOdr||"DSC"==$scope.subtypeOdr?($scope.followProtocals=$filter("orderBy")($scope.followProtocals,"subType",!1),$scope.subtypeOdr="ASC"):($scope.followProtocals=$filter("orderBy")($scope.followProtocals,"subType",!0),$scope.subtypeOdr="DSC"),$scope.ipOdr="",$scope.typeOdr=""},$scope.ipSearch=function(){""==$scope.ipOdr||"DSC"==$scope.ipOdr?($scope.followProtocals=$filter("orderBy")($scope.followProtocals,"investigationProtocol",!1),$scope.ipOdr="ASC"):($scope.followProtocals=$filter("orderBy")($scope.followProtocals,"investigationProtocol",!0),$scope.ipOdr="DSC"),$scope.subtypeOdr="",$scope.typeOdr=""},$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.loadMasterCambo=function(){APIS.GETPROVISOTYPE.data={},DataManager.sendRestRequest(null,APIS.GETPROVISOTYPE,function(response){$scope.proType=response},$scope.uconfig.token)},$scope.changePro=function(typeId){$scope.protype=typeId,APIS.GETSUBTYPE.URL="adminSettings/retriveSubType/"+$scope.protype,DataManager.sendRestRequest(null,APIS.GETSUBTYPE,function(response){$scope.subType=response},$scope.uconfig.token)},$scope.loadInvistigationCambo=function(){APIS.INVPROTOCAL.data={},DataManager.sendRestRequest(null,APIS.INVPROTOCAL,function(response){$scope.invProtocal=response},$scope.uconfig.token)},$scope.displayFollowProvisoList=function(){APIS.FOLLOWUPPROTOCOL.data={},DataManager.sendRestRequest(null,APIS.FOLLOWUPPROTOCOL,function(response){response.success?($scope.followProtocals=response.dataBean,""!=$scope.typeOdr?($scope.typeOdr="ASC"==$scope.typeOdr?"DSC":"ASC",$scope.typSearch()):""!=$scope.subtypeOdr?($scope.subtypeOdr="ASC"==$scope.subtypeOdr?"DSC":"ASC",$scope.subTypeSearch()):""!=$scope.ipOdr&&($scope.ipOdr="ASC"==$scope.ipOdr?"DSC":"ASC",$scope.ipSearch()),""==$scope.typeOdr&&""==$scope.subtypeOdr&&""==$scope.ipOdr&&$scope.typSearch()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.saveProviso=function(fpModalData){return $scope.isFPFormSubmited=!0,!$scope.FP_Form.$invalid&&($scope.fpModalData=fpModalData,"Active"==fpModalData.status?$scope.Status="1":$scope.Status="2",$scope.fpModalSavedData={provisoType:fpModalData.provisoTypeId,subType:fpModalData.subTypeId,investigationProtocol:fpModalData.investigationProtocolId,status:$scope.Status},APIS.FOLLOW_CREATE_PROVISO.data=$scope.fpModalSavedData,void DataManager.sendRestRequest(null,APIS.FOLLOW_CREATE_PROVISO,function(response){response.success?$scope.init():console.log(response)},$scope.uconfig.token))},$scope.editFollowProvisoRecord=function(fpDataObj){$scope.editing=$scope.followProtocals.indexOf(fpDataObj),APIS.GETSUBTYPE.URL="adminSettings/retriveSubType/"+fpDataObj.provisoTypeId,DataManager.sendRestRequest(null,APIS.GETSUBTYPE,function(response){$scope.subType=response},$scope.uconfig.token)},$scope.deleteRecord=function(deleteIdRecord){ModalService.openAlert("confirm","warning",$scope.AFP.resources.ADMINFOLLOWUPPROVISO.DELETE_SELECTED_RECORD,$scope,"delete",function(){$scope.$on("deleteOk",function(){APIS.FOLLOW_DELETE_PROVISO.data={provisoId:deleteIdRecord},DataManager.sendRestRequest(null,APIS.FOLLOW_DELETE_PROVISO,function(response){response.success&&$scope.init()},$scope.uconfig.token)})})},$scope.EditchangePro=function(ID){$scope.protype=ID,APIS.GETSUBTYPE.URL="adminSettings/retriveSubType/"+$scope.protype,DataManager.sendRestRequest(null,APIS.GETSUBTYPE,function(response){$scope.subType=response},$scope.uconfig.token)},$scope.UpdateData=function(fpModalUpdateData){"Active"==fpModalUpdateData.status&&($scope.EditStatus="1"),"Inactive"!=fpModalUpdateData.status&&""!=fpModalUpdateData.status||($scope.EditStatus="2"),isNaN(fpModalUpdateData.provisoType)&&(fpModalUpdateData.provisoType=fpModalUpdateData.provisoTypeId),isNaN(fpModalUpdateData.subType)&&(fpModalUpdateData.subType=fpModalUpdateData.subTypeId),isNaN(fpModalUpdateData.investigationProtocol)&&(fpModalUpdateData.investigationProtocol=fpModalUpdateData.investigationProtocolId),$scope.fpModalUpdatedData={provisoId:fpModalUpdateData.provisoId,provisoType:fpModalUpdateData.provisoType,subType:fpModalUpdateData.subType,investigationProtocol:fpModalUpdateData.investigationProtocolId,status:$scope.EditStatus},$scope.fpModalUpdateData=$scope.fpModalUpdatedData,APIS.FOLLOW_UPDATE_PROVISO.data=$scope.fpModalUpdateData,DataManager.sendRestRequest(null,APIS.FOLLOW_UPDATE_PROVISO,function(response){response.success?$scope.init():console.log(response)},$scope.uconfig.token)},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("Instructionsconfig",["$rootScope","$scope","$state","APIS","DataManager","$window","$timeout","$uibModal","ModalService","$filter","ResourceManager",function($rootScope,$scope,$state,APIS,DataManager,$window,$timeout,$uibModal,ModalService,$filter,ic){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){$scope.ic=ic,$scope.animationsEnabled=!0,$scope.instructionsConfigGridData(),$scope.selectedObj={rowObj:null}},$scope.pgname="",$scope.tg="",$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.instructionsFilterData=function(fd){return $scope.searchPageName?$scope.searchTag?void($scope.filteredgrird=$filter("filter")($scope.instructionsgird,{pageName:$scope.searchPageName,tag:$scope.searchTag})):void ModalService.openAlert("alert","info",$scope.ic.resources.INSTRUCTION_CONFIG.TAG_NAME_EMPTY,"Tag Name cannot be empty",$scope):void ModalService.openAlert("alert","info",$scope.ic.resources.INSTRUCTION_CONFIG.PAGE_NAME_EMPTY,"Page Name cannot be empty",$scope)},$scope.instructionsConfigGridData=function(){APIS.INSTRUCTIONCONFIGDATA.data={},DataManager.sendRestRequest(null,APIS.INSTRUCTIONCONFIGDATA,function(response){response.success?($scope.instructionsgird=response.dataBean,$scope.filteredgrird=$scope.instructionsgird,""==$scope.tg?($scope.pgname="DSC"==$scope.pgname?"ASC":"DSC",$scope.idSearch()):($scope.tg="DSC"==$scope.tg?"ASC":"DSC",$scope.nameSearch()),""==$scope.tg&&""==$scope.pgname&&$scope.idSearch(),console.log("grid",response.dataBean)):console.log(response)},$scope.uconfig.token)},$scope.idSearch=function(){""==$scope.pgname||"DSC"==$scope.pgname?($scope.filteredgrird=$filter("orderBy")($scope.filteredgrird,"pageName",!1),$scope.pgname="ASC"):($scope.filteredgrird=$filter("orderBy")($scope.filteredgrird,"pageName",!0),$scope.pgname="DSC"),$scope.tg=""},$scope.nameSearch=function(){""==$scope.tg||"DSC"==$scope.tg?($scope.filteredgrird=$filter("orderBy")($scope.filteredgrird,"tag",!1),$scope.tg="ASC"):($scope.filteredgrird=$filter("orderBy")($scope.filteredgrird,"tag",!0),$scope.tg="DSC"),$scope.pgname=""},$scope.modifyinstructions=function(){if(console.log($scope.selectedObj.rowObj),null!=$scope.selectedObj.rowObj){$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/config/Instructionsconfig_Modify_Modal.html",controller:"ModifyinstructionsConfigCtrl",size:"md",resolve:{modifyData:function(){return $scope.selectedObj.rowObj}}})}else ModalService.openAlert("alert","info",$scope.ic.resources.INSTRUCTION_CONFIG.SELECT_RECORD,"Please select record",$scope)},$scope.viewinstructionsConfig=function(viewData_ID){$scope.tempURL="",APIS.INSTRUCTIONCONFIGDATA.URL=APIS.INSTRUCTIONCONFIGDATA.tempURL+"?id="+viewData_ID,DataManager.sendRestRequest(null,APIS.INSTRUCTIONCONFIGDATA,function(response){if(response.success){$scope.viewData=response.dataBean;$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/config/Instructionsconfig_View_Modal.html",controller:"ViewinstructionsConfigCtrl",size:"md",resolve:{viewData:function(){return $scope.viewData}}})}else console.log(response)},$scope.uconfig.token)},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("ViewinstructionsConfigCtrl",["$scope","$uibModalInstance","viewData","ResourceManager",function($scope,$uibModalInstance,viewData,ic){$scope.ic=ic,$(document).ready(function(){setTimeout(function(){CKEDITOR.replace("editor2"),CKEDITOR.instances.editor2.setData(modifyBroadCastInfo.body)},100)}),$scope.viewDetails=viewData[0],$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("ModifyinstructionsConfigCtrl",["$scope","APIS","DataManager","$uibModalInstance","modifyData","ModalService","ResourceManager",function($scope,APIS,DataManager,$uibModalInstance,modifyData,ModalService,ic){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.ic=ic,$scope.modifyData=Object.create(modifyData),$(document).ready(function(){setTimeout(function(){CKEDITOR.replace("editor1"),CKEDITOR.instances.editor1.setData(modifyBroadCastInfo.body)},100)}),$scope.saveTemplate=function(modifyData){$scope.isFrmSubmited=!0,$scope.modifyData.instruction=CKEDITOR.instances.editor1.getData(),$scope.sendData={instructionId:$scope.modifyData.instructionId,instruction:$scope.modifyData.instruction,tag:$scope.modifyData.tag},APIS.UPDATE_INSTRUCTIONCONFIGDATA.data=$scope.sendData,DataManager.sendRestRequest(null,APIS.UPDATE_INSTRUCTIONCONFIGDATA,function(response){response.success?ModalService.openAlert("alert","success",response.successMessage,$scope,"",function(){window.location.reload()}):console.log(response)},$scope.uconfig.token),$uibModalInstance.dismiss("update")},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("instructionsconfigmodal",["$scope","$state","APIS",function($scope,$state,APIS){}]),angular.module("app").controller("MacConfigCtrl",["$scope","$state","APIS","DataManager","$window","$timeout","ResourceManager",function($scope,$state,APIS,DataManager,$window,$timeout,AMAC){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){$scope.AMAC=AMAC,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.configData={},$scope.getConfig(),$scope.getConfig(),$scope.getClassesConfig()},$scope.saveData=function(){APIS.ADD_MACCONFIG.data=$scope.configData,DataManager.sendRestRequest(null,APIS.ADD_MACCONFIG,function(response){$scope.addStatus=response,console.log($scope.addStatus),$timeout(function(){$scope.addStatus=""},5e3)},$scope.uconfig.token)},$scope.getConfig=function(){DataManager.sendRestRequest(null,APIS.GET_MACCONFIG,function(response){response.success?$scope.configData=response.dataBean:console.log(response)},$scope.uconfig.token)},$scope.getClassesConfig=function(){DataManager.sendRestRequest(null,APIS.GET_CLASSESMACCONFIG,function(response){response.success?$scope.classConfigData=response.dataBean:console.log(response)},$scope.uconfig.token)},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("Operationalprovinso",["$rootScope","$scope","$state","APIS","DataManager","$window","$timeout","ModalService","ResourceManager",function($rootScope,$scope,$state,APIS,DataManager,$window,$timeout,ModalService,AOP){function getRowDataObject(){return Object.create($scope.baseRowObject)}return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){$scope.AOP=AOP,$scope.getOperationalDataList(),$scope.OperationalData={},$scope.addedRowOperationalProvisoList=[],$scope.editing=!1,$scope.editingList=[],$scope.isOPFormSubmited=!1,$scope.onBlurEditOp=!1,$scope.onBlurEditOpFn=function(){$scope.onBlurEditOp=!0},$scope.onBlurEditDesOp=!1,$scope.onBlurEditDesOpFn=function(){$scope.onBlurEditDesOp=!0},$scope.onBlurAddOp=!1,$scope.onBlurAddOpFn=function(){$scope.onBlurAddOp=!0},$scope.onBlurAddDisOp=!1,$scope.onBlurAddDisOpFn=function(){$scope.onBlurAddDisOp=!0}},$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.baseRowObject={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,code:null,description:null,vetting:null},$scope.getOperationalDataList=function(){APIS.GET_OPERATIONALPROVISO.data={},DataManager.sendRestRequest(null,APIS.GET_OPERATIONALPROVISO,function(response){response.success?$scope.OperationalData=response.dataBean:console.log(response)},$scope.uconfig.token)},$scope.delOperationalPro=function(ID){ModalService.openAlert("confirm","warning",$scope.AOP.resources.OPERATIONPROVISO.DELETE_SELECTED_RECORD,$scope,"delete",function(){}),$scope.$on("deleteOk",function(){APIS.FOLLOW_DELETE_OPERATIONALPRO.data={operationalProvisoDTOs:[{operationalProvisoId:ID}]},DataManager.sendRestRequest(null,APIS.FOLLOW_DELETE_OPERATIONALPRO,function(response){response.success&&(ModalService.openAlert("alert","success",$scope.AOP.resources.OPERATIONPROVISO.DELETED_SUCCESSFULLY,$scope),$scope.init())},$scope.uconfig.token)})},$scope.addNewRow=function(){$scope.addedRowOperationalProvisoList.push(getRowDataObject())},$scope.deleteRow=function(index){$scope.addedRowOperationalProvisoList.splice(index,1)},$scope.actioninCode="0",$scope.myFunct=function(e){$scope.actioninCode="1",console.log($scope.actioninCode)},$scope.saveData=function(){if($scope.isOPFormSubmited=!0,$scope.OP_Form.$invalid)return!1;$scope.saveOperationalProvisoData=[],$scope.editingList.length>=0&&angular.forEach($scope.editingList,function(indexVal,key){$scope.editableData=$scope.OperationalData[indexVal],$scope.saveOperationalProvisoData.push({code:$scope.editableData.code,description:$scope.editableData.description,vetting:$scope.editableData.vetting,operationalProvisoId:$scope.editableData.operationalProvisoId})}),$scope.addedRowOperationalProvisoList.length>0&&angular.forEach($scope.addedRowOperationalProvisoList,function(value,key){$scope.saveOperationalProvisoData.push({code:value.code,description:value.description,vetting:value.vetting,operationalProvisoId:null})}),APIS.GET_OPERATIONALPROVISO.data={};var opProvDupflag=!1;DataManager.sendRestRequest(null,APIS.GET_OPERATIONALPROVISO,function(response){if(response.success){if($scope.OPDataTemp=response.dataBean,angular.forEach($scope.saveOperationalProvisoData,function(pVal,pKey){angular.forEach($scope.OPDataTemp,function(gVal,gKey){gVal.code==pVal.code&&"1"==$scope.actioninCode&&($scope.saveOperationalProvisoData.splice(pKey,1),opProvDupflag=!0)})}),opProvDupflag)return ModalService.openAlert("alert","warning",$scope.AOP.resources.OPERATIONPROVISO.ALREADY_EXIST,$scope,"",function(){}),!1;$scope.saveFinalData(),$scope.actioninCode="0"}},$scope.uconfig.token)},$scope.saveFinalData=function(){$scope.saveOperationalProvisoData.length>0&&(APIS.SAVE_OPERATIONALPRO.data={operationalProvisoDTOs:$scope.saveOperationalProvisoData},DataManager.sendRestRequest(null,APIS.SAVE_OPERATIONALPRO,function(response){response.success&&(ModalService.openAlert("alert","success",$scope.AOP.resources.OPERATIONPROVISO.SAVE_SUCCESSFULLY,$scope),$scope.init())},$scope.uconfig.token))},$scope.editOperationalProItem=function(index){$scope.editableData={},$scope.editing=$scope.OperationalData.indexOf(index),$scope.editingList.push($scope.editing)},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("PublishconfigCtrl",["$scope","$state","APIS","$window","DataManager","$timeout","ResourceManager",function($scope,$state,APIS,$window,DataManager,$timeout,pc){$scope.init=function(){return $scope.pc=pc,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.getConfigData(),void($scope.configData=[])):($state.go("login"),!1)},$scope.saveConfig=function(){APIS.ADD_VETTPUBLISH_CONFIG.data=$scope.configData,DataManager.sendRestRequest(null,APIS.ADD_VETTPUBLISH_CONFIG,function(response){$scope.addStatus=response,console.log($scope.addStatus),$timeout(function(){$scope.addStatus=""},5e3)},$scope.uconfig.token)},$scope.getConfigData=function(){DataManager.sendRestRequest(null,APIS.GET_VETTPUBLISH_CONFIG,function(response){response.success?$scope.configData=response.dataBean:console.log(response)},$scope.uconfig.token)},$scope.init()}]),angular.module("app").controller("Restrictionconfig",["$rootScope","$scope","$state","APIS","DataManager","$window","$timeout","ModalService","ResourceManager",function($rootScope,$scope,$state,APIS,DataManager,$window,$timeout,ModalService,ARC){function getRowDataObject(){return Object.create($scope.baseRowObject)}$scope.init=function(){return $scope.ARC=ARC,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.getRestrictionConfigList(),$scope.RestrictionData=[],$scope.selected={},$scope.addedRowRestrictionList=[],$scope.editingList=[],$scope.onBlurRest=!1,$scope.onBlurRestFn=function(){$scope.onBlurRest=!0},$scope.onBlurRestriction=!1,$scope.onBlurRestrictionFn=function(){$scope.onBlurRestriction=!0},void($scope.savebutstatus=!0)):($state.go("login"),!1)},$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.baseRowObject={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,restrictionsId:null,restriction:null,class1:"N",class2:"N",class3:"N",practiceid:null},$scope.getRestrictionConfigList=function(){APIS.GET_RESTRICTIONCONFIGLIST.data={},DataManager.sendRestRequest(null,APIS.GET_RESTRICTIONCONFIGLIST,function(response){response.success?$scope.RestrictionData=response.dataBean:console.log(response)},$scope.uconfig.token)};var delRestId=null;$scope.delRestConfig=function(ID){delRestId=ID,ModalService.openAlert("confirm","warning",$scope.ARC.resources.RESTRICTIONSCONFIG.DELETE_SELECTED_RECORD,$scope,"delete",function(){})},$scope.$on("deleteOk",function(){null!=delRestId&&(APIS.DEL_RESTRICTDATA.data={restrictionDTOs:[{restrictionsId:delRestId}]},DataManager.sendRestRequest(null,APIS.DEL_RESTRICTDATA,function(response){response.success&&(ModalService.openAlert("alert","success",$scope.ARC.resources.RESTRICTIONSCONFIG.DELETED_SUCCESSFULLY,$scope,"success",function(){
$scope.init()}),$scope.init())},$scope.uconfig.token))}),$scope.editRestConfig=function(editData){$scope.selected=angular.copy(editData)},$scope.addNewRow=function(){$scope.savebutstatus=!1,$scope.addedRowRestrictionList.push(getRowDataObject())},$scope.deleteRow=function(index){$scope.addedRowRestrictionList.splice(index,1)},$scope.isRCFormSubmited=!1,$scope.saveData=function(){return $scope.isRCFormSubmited=!0,!$scope.RC_Form.$invalid&&($scope.saveRestrictConfigData=[],$scope.editingList.length>=0&&angular.forEach($scope.editingList,function(indexVal,key){$scope.editableData=$scope.RestrictionData[indexVal],$scope.saveRestrictConfigData.push({restriction:$scope.editableData.restriction,class1:$scope.editableData.class1,class2:$scope.editableData.class2,class3:$scope.editableData.class3,restrictionsId:$scope.editableData.restrictionsId}),angular.forEach($scope.RestrictionData,function(val,key){return $scope.editableData.restriction==val.restriction&&$scope.editableData.class1==val.class1&&$scope.editableData.class2==val.class2&&$scope.editableData.class3==val.class3?($scope.sameRestError="Configuration already exist for selected record",$scope.RC_Form.$invalid,!1):void($scope.editableData.class1!==val.class1&&$scope.editableData.class2!==val.class2&&$scope.editableData.class3!==val.class3&&($scope.sameRestError=""))})}),$scope.addedRowRestrictionList.length>0&&angular.forEach($scope.addedRowRestrictionList,function(value,key){$scope.saveRestrictConfigData.push({restriction:value.restriction,class1:value.class1,class2:value.class2,class3:value.class3}),angular.forEach($scope.RestrictionData,function(val,key){return value.restriction==val.restriction&&value.class1==val.class1&&value.class2==val.class2&&value.class3==val.class3?($scope.sameRestError="Configuration already exist for selected record",!$scope.RC_Form.$invalid&&forEach["break"]()):void(value.class1!==val.class1&&value.class2!==val.class2&&value.class3!==val.class3&&($scope.sameRestError=""))})}),APIS.SAVE_RESTRICTDATA.data={restrictionDTOs:$scope.saveRestrictConfigData},void DataManager.sendRestRequest(null,APIS.SAVE_RESTRICTDATA,function(response){response.success?ModalService.openAlert("alert","success",$scope.ARC.resources.RESTRICTIONSCONFIG.SAVED_SUCCESSFULLY,$scope,"success",function(){$scope.init()}):ModalService.openAlert("alert","error",response.errorMessage,$scope,"error",function(){$scope.init()})},$scope.uconfig.token))},$scope.editRestrictionConItem=function(index){$scope.savebutstatus=!1,$scope.editableData={},$scope.editing=$scope.RestrictionData.indexOf(index),$scope.editingList.push($scope.editing)},$scope.init()}]),angular.module("app").controller("Scheduletests",["$rootScope","$scope","$state","APIS","DataManager","ResourceManager","$uibModal","$filter","ModalService",function($rootScope,$scope,$state,APIS,DataManager,schedule,$uibModal,$filter,ModalService){if($scope.viewSchedTestList=[],$scope.schedule=schedule,$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.init=function(){$scope.isNewFrmSubmited=!1,$scope.isNewFilterSubmited=!1,console.log("View Schedule Tests"),DataManager.sendRestRequest(null,APIS.ADMIN_GET_SCHED_TEST,function(response){response.success&&($scope.viewSchedTestList=response.dataBean,$scope.filteredItems=response.dataBean,""!=$scope.searchOrder?($scope.searchOrder="ASC"==$scope.searchOrder?"DSC":"ASC",$scope.macSearch()):""!=$scope.typeOrder?($scope.typeOrder="ASC"==$scope.typeOrder?"DSC":"ASC",$scope.typeSearch()):""!=$scope.fieldOrder?($scope.fieldOrder="ASC"==$scope.fieldOrder?"DSC":"ASC",$scope.fieldSearch()):""!=$scope.ipOrder&&($scope.ipOrder="ASC"==$scope.ipOrder?"DSC":"ASC",$scope.ipSearch()),""==$scope.searchOrder&&""==$scope.typeOrder&&""==$scope.fieldOrder&&""==$scope.ipOrder&&$scope.macSearch())},$scope.uconfig.token),$scope.selectedLMEFreq=!1,$scope.selectedYrMonthFreq=!1,$scope.schedTestNewObj={seheduledTestsId:null,macObj:{lookUpItemId:null,lookUpItemValue:null,lookUpItemCode:null,status:null,checked:!1},pageNameObj:{lookUpItemId:null,lookUpItemValue:null},fieldNameObj:{lookUpItemId:null,lookUpItemValue:null},frequencyObj:{lookUpItemId:null,lookUpItemValue:null,lookUpItemCode:null,status:null,checked:!1},lmeList:[],yearMonthVal:null,investProtocolObj:{investigationProtocolId:null,protocol:null},ageCond1Obj:{lookUpItemId:null,lookUpItemValue:null},ageCond2Obj:{lookUpItemId:null,lookUpItemValue:null},ageCond3Obj:{lookUpItemId:null,lookUpItemValue:null},year1Value:null,year2Value:null,year3Value:null,status:!1,statusId:2},$scope.schedTestNewObj.fieldNameObj.lookUpItemValue=null,$("#fieldName_value").val(""),$scope.schedTestsearchObj={macObj:{lookUpItemId:null,lookUpItemValue:null,lookUpItemCode:null,status:null,checked:!1},pageNameObj:{lookUpItemId:null,lookUpItemValue:null},fieldNameObj:{lookUpItemId:null,lookUpItemValue:null},provisoId:null}},$scope.macList=[],$scope.pageNameList=[],$scope.filterFieldNameList=[],$scope.fieldNameList=[],$scope.frequencyList=[],$scope.lmeTypeList=[],$scope.investProtocolList=[],$scope.ageCond1List=[],$scope.ageCond2List=[],$scope.ageCond3List=[],$scope.macList=[],$scope.macSearch=function(){""==$scope.searchOrder||"DSC"==$scope.searchOrder?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"displayMac",!1),$scope.searchOrder="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"displayMac",!0),$scope.searchOrder="DSC"),$scope.ipOrder="",$scope.typeOrder="",$scope.fieldOrder=""},$scope.typeSearch=function(){""==$scope.typeOrder||"DSC"==$scope.typeOrder?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"type",!1),$scope.typeOrder="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"type",!0),$scope.typeOrder="DSC"),$scope.ipOrder="",$scope.fieldOrder="",$scope.searchOrder=""},$scope.fieldSearch=function(){""==$scope.fieldOrder||"DSC"==$scope.fieldOrder?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"fieldName",!1),$scope.fieldOrder="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"fieldName",!0),$scope.fieldOrder="DSC"),$scope.ipOrder="",$scope.typeOrder="",$scope.searchOrder=""},$scope.ipSearch=function(){""==$scope.ipOrder||"DSC"==$scope.ipOrder?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"displayInvestProtocol",!1),$scope.ipOrder="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"displayInvestProtocol",!0),$scope.ipOrder="DSC"),$scope.fieldOrder="",$scope.typeOrder="",$scope.searchOrder=""},$scope.selectAll=function(){void 0==$scope.schedTestNewObj.macObj.lookUpItemId&&($scope.schedTestNewObj.macObj.lookUpItemId=[1,2,3])},$scope.loadAllCombos=function(){DataManager.sendRestRequest(null,APIS.ADMIN_MAC_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.macList=response.dataBean)},$scope.uconfig.token),APIS.ADMIN_PAGE_COMBO_MED_TEMPLATE.data={},DataManager.sendRestRequest(null,APIS.ADMIN_PAGE_COMBO_MED_TEMPLATE,function(response){response.success&&null!=response.dataBean&&angular.forEach(response.dataBean.pageNameList,function(value,key){$scope.pageNameList.push({lookUpItemId:key,lookUpItemValue:value})})},$scope.uconfig.token),APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.tempURL+"AGE_COND_SCHED_TST ",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){response.success&&null!=response.dataBean&&($scope.ageCond1List=response.dataBean.AGE_COND_SCHED_TST,$scope.ageCond2List=response.dataBean.AGE_COND_SCHED_TST,$scope.ageCond3List=response.dataBean.AGE_COND_SCHED_TST)},$scope.uconfig.token),DataManager.sendRestRequest(null,APIS.ADMIN_SCHED_TEST_GET_LMETYPES,function(response){response.success&&null!=response.dataBean&&($scope.lmeTypeList=response.dataBean)},$scope.uconfig.token),DataManager.sendRestRequest(null,APIS.ADMIN_SCHED_TEST_GET_FREQUENCY,function(response){response.success&&null!=response.dataBean&&($scope.frequencyList=response.dataBean)},$scope.uconfig.token),APIS.ADMIN_SCHED_TEST_INV_PROTOCOL_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_SCHED_TEST_INV_PROTOCOL_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.investProtocolList=response.dataBean)},$scope.uconfig.token)}(),$scope.loadFieldNameCombo=function(comboName,selectedObj){"filter"===comboName?($scope.filterFieldNameList=[],APIS.ADMIN_SCHED_TEST_FIELD_COMBO.URL=String.prototype.format.apply(APIS.ADMIN_SCHED_TEST_FIELD_COMBO.tempURL,[selectedObj.pageNameObj.lookUpItemValue])):($scope.fieldNameList=[],APIS.ADMIN_SCHED_TEST_FIELD_COMBO.URL=String.prototype.format.apply(APIS.ADMIN_SCHED_TEST_FIELD_COMBO.tempURL,[selectedObj.pageNameObj.lookUpItemValue])),DataManager.sendRestRequest(null,APIS.ADMIN_SCHED_TEST_FIELD_COMBO,function(response){response.success&&null!=response.dataBean&&("filter"===comboName?$scope.filterFieldNameList=response.dataBean:($scope.fieldNameList=response.dataBean,null!=selectedObj.fieldNameObj.lookUpItemValue&&angular.forEach($scope.fieldNameList,function(value,key){value.fieldName==selectedObj.fieldNameObj.lookUpItemValue&&($scope.schedTestNewObj.fieldNameObj.lookUpItemId=value.pageFieldsId)})))},$scope.uconfig.token)},$scope.onChangePageName=function(){$("#fieldName_value").val(""),$scope.schedTestNewObj.pageNameObj.lookUpItemValue=null,angular.forEach($scope.pageNameList,function(value,key){key==$scope.schedTestNewObj.pageNameObj.lookUpItemId&&($scope.schedTestNewObj.pageNameObj.lookUpItemValue=value.lookUpItemValue)}),$scope.loadFieldNameCombo("addnew",$scope.schedTestNewObj)},$scope.onChangeFilterPageName=function(){$scope.schedTestsearchObj.pageNameObj.lookUpItemValue=null,angular.forEach($scope.pageNameList,function(value,key){key==$scope.schedTestsearchObj.pageNameObj.lookUpItemId&&($scope.schedTestsearchObj.pageNameObj.lookUpItemValue=value.lookUpItemValue)}),$scope.loadFieldNameCombo("filter",$scope.schedTestsearchObj)},$scope.onChangeAgeCond1=function(){$scope.schedTestNewObj.ageCond1Obj.lookUpItemValue=null,angular.forEach($scope.ageCond1List,function(pvalue,pkey){pvalue.lookUpItemId==$scope.schedTestNewObj.ageCond1Obj.lookUpItemId&&($scope.schedTestNewObj.ageCond1Obj.lookUpItemValue=pvalue.lookUpItemValue)})},$scope.onChangeAgeCond2=function(){$scope.schedTestNewObj.ageCond2Obj.lookUpItemValue=null,angular.forEach($scope.ageCond2List,function(pvalue,pkey){pvalue.lookUpItemId==$scope.schedTestNewObj.ageCond2Obj.lookUpItemId&&($scope.schedTestNewObj.ageCond2Obj.lookUpItemValue=pvalue.lookUpItemValue)})},$scope.onChangeAgeCond3=function(){$scope.schedTestNewObj.ageCond3Obj.lookUpItemValue=null,angular.forEach($scope.ageCond3List,function(pvalue,pkey){pvalue.lookUpItemId==$scope.schedTestNewObj.ageCond3Obj.lookUpItemId&&($scope.schedTestNewObj.ageCond3Obj.lookUpItemValue=pvalue.lookUpItemValue)})},$scope.onLMEBlur=function(){console.log("lme list",$scope.schedTestNewObj.lmeList)},$scope.onChangeFrequency=function(){console.log("lme list",$scope.schedTestNewObj.frequencyObj),1==$scope.schedTestNewObj.frequencyObj.lookUpItemId?($scope.selectedLMEFreq=!0,$scope.selectedYrMonthFreq=!1):null!=$scope.schedTestNewObj.frequencyObj.lookUpItemId&&($scope.selectedLMEFreq=!1,$scope.selectedYrMonthFreq=!0)},$scope.saveSchedTestDtls=function(){if($scope.isNewFrmSubmited=!0,$scope.newSchedTestFrom.$invalid)return $scope.newSchedTestFrom.year1.$error.required?(ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.ENTER_AGE_CONDITION1,$scope,function(){}),!1):$scope.newSchedTestFrom.year1.$error.maxlength?(ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.YEARS_AGE_CONDITION1,$scope,function(){}),!1):$scope.newSchedTestFrom.year2.$error.required?(ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.ENTER_AGE_CONDITION2,$scope,function(){}),!1):$scope.newSchedTestFrom.year2.$error.maxlength?(ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.YEARS_AGE_CONDITION2,$scope,function(){}),!1):$scope.newSchedTestFrom.year3.$error.required?(ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.ENTER_AGE_CONDITION3,$scope,function(){}),!1):$scope.newSchedTestFrom.year3.$error.maxlength?(ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.YEARS_AGE_CONDITION3,$scope,function(){}),!1):(ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.ENTER_MANDATORY_FIELDS,$scope,function(){}),!1);if(null==$scope.schedTestNewObj.fieldNameObj.lookUpItemValue||void 0==$scope.schedTestNewObj.fieldNameObj.lookUpItemValue)return ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.ENTER_FIELD_NAME,$scope),!1;var mandatoryFlag=!1;if(($scope.schedTestNewObj.ageCond1Obj.lookUpItemId||$scope.schedTestNewObj.ageCond2Obj.lookUpItemId||$scope.schedTestNewObj.ageCond3Obj.lookUpItemId||$scope.schedTestNewObj.frequencyObj.lookUpItemId)&&(mandatoryFlag=!0),!mandatoryFlag)return ModalService.openAlert("alert","warning",$scope.schedule.resources.SCHEDULE_TEST.AGE_CONDITION_FREQUENCY,$scope,function(){}),!1;for(var finalSchedArr=[],i=0;i<$scope.schedTestNewObj.macObj.lookUpItemId.length;i++)$scope.finalSchedObj={seheduledTestsId:null,frequencyValues:null},$scope.finalSchedObj.seheduledTestsId=$scope.schedTestNewObj.seheduledTestsId,$scope.finalSchedObj.macId=$scope.schedTestNewObj.macObj.lookUpItemId[i],null!=$scope.schedTestNewObj.fieldNameObj.lookUpItemValue&&void 0!=$scope.schedTestNewObj.fieldNameObj.lookUpItemValue&&void 0!=$scope.schedTestNewObj.fieldNameObj.lookUpItemValue.originalObject&&($scope.schedTestNewObj.fieldNameObj.lookUpItemValue=$scope.schedTestNewObj.fieldNameObj.lookUpItemValue.originalObject.fieldName),angular.forEach($scope.fieldNameList,function(value,key){value.fieldName==$scope.schedTestNewObj.fieldNameObj.lookUpItemValue&&($scope.finalSchedObj.pageFieldsId=value.pageFieldsId)}),null!=$scope.schedTestNewObj.ageCond1Obj.lookUpItemValue&&(null!=$scope.schedTestNewObj.year1Value?$scope.finalSchedObj.ageCond1=$scope.schedTestNewObj.ageCond1Obj.lookUpItemValue+" "+$scope.schedTestNewObj.year1Value:$scope.finalSchedObj.ageCond1=$scope.schedTestNewObj.ageCond1Obj.lookUpItemValue),null!=$scope.schedTestNewObj.ageCond2Obj.lookUpItemValue&&(null!=$scope.schedTestNewObj.year2Value?$scope.finalSchedObj.ageCond2=$scope.schedTestNewObj.ageCond2Obj.lookUpItemValue+" "+$scope.schedTestNewObj.year2Value:$scope.finalSchedObj.ageCond2=$scope.schedTestNewObj.ageCond2Obj.lookUpItemValue),null!=$scope.schedTestNewObj.ageCond3Obj.lookUpItemValue&&(null!=$scope.schedTestNewObj.year3Value?$scope.finalSchedObj.ageCond3=$scope.schedTestNewObj.ageCond3Obj.lookUpItemValue+" "+$scope.schedTestNewObj.year3Value:$scope.finalSchedObj.ageCond3=$scope.schedTestNewObj.ageCond3Obj.lookUpItemValue),$scope.finalSchedObj.status=$scope.schedTestNewObj.statusId,$scope.finalSchedObj.investigationProtocolId=$scope.schedTestNewObj.investProtocolObj.investigationProtocolId,$scope.finalSchedObj.frequencyId=$scope.schedTestNewObj.frequencyObj.lookUpItemId,1==$scope.schedTestNewObj.frequencyObj.lookUpItemId?angular.forEach($scope.schedTestNewObj.lmeList,function(value,key){null!=$scope.finalSchedObj.frequencyValues?$scope.finalSchedObj.frequencyValues=$scope.finalSchedObj.frequencyValues+","+value:$scope.finalSchedObj.frequencyValues=value}):null!=$scope.schedTestNewObj.frequencyObj.lookUpItemId&&null!=$scope.schedTestNewObj.yearMonthVal&&($scope.finalSchedObj.frequencyValues=$scope.schedTestNewObj.yearMonthVal),finalSchedArr.push($scope.finalSchedObj);console.log("schedule test save  ",$scope.finalSchedObj),APIS.ADMIN_SAVE_SCHED_TEST.data=finalSchedArr,DataManager.sendRestRequest(null,APIS.ADMIN_SAVE_SCHED_TEST,function(response){response.success?(ModalService.openAlert("alert","success",$scope.schedule.resources.SCHEDULE_TEST.SAVED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error",$scope.schedule.resources.SCHEDULE_TEST.ERROR_SAVE,$scope)},$scope.uconfig.token)},$scope.filterSchedTests=function(){return $scope.isFilterFrmSubmited=!0,!$scope.filterSchedTestFrom.$invalid&&($scope.filteredItems=$scope.viewSchedTestList,console.log("Before filter count ",$scope.filteredItems.length),$scope.schedTestsearchObj.macObj.lookUpItemId&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{macId:$scope.schedTestsearchObj.macObj.lookUpItemId})),console.log("pageNameObj",$scope.schedTestsearchObj.pageNameObj.lookUpItemValue),$scope.schedTestsearchObj.pageNameObj.lookUpItemValue&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{type:$scope.schedTestsearchObj.pageNameObj.lookUpItemValue})),$scope.schedTestsearchObj.fieldNameObj.lookUpItemValue&&$scope.schedTestsearchObj.fieldNameObj.lookUpItemValue.originalObject.fieldName&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{fieldName:$scope.schedTestsearchObj.fieldNameObj.lookUpItemValue.originalObject.fieldName})),$scope.schedTestsearchObj.provisoId&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{investigationProtocolId:parseInt($scope.schedTestsearchObj.provisoId)})),void console.log("After filter count ",$scope.filteredItems.length))},$scope.editSchedTest=function(selectedObj){console.log("selected record : ",selectedObj),$scope.init(),$scope.schedTestNewObj.seheduledTestsId=selectedObj.seheduledTestsId;var arr=[];if(arr.push(selectedObj.macId),$scope.schedTestNewObj.macObj.lookUpItemId=arr,$scope.schedTestNewObj.pageNameObj.lookUpItemValue=selectedObj.type,angular.forEach($scope.pageNameList,function(value,key){value.lookUpItemValue==selectedObj.type&&($scope.schedTestNewObj.pageNameObj.lookUpItemId=value.lookUpItemId)}),$scope.schedTestNewObj.fieldNameObj.lookUpItemValue=null,$("#fieldName_value").val(selectedObj.fieldName),$scope.schedTestNewObj.fieldNameObj.lookUpItemValue=selectedObj.fieldName,$scope.loadFieldNameCombo("addnew",$scope.schedTestNewObj),null!=selectedObj.ageCond1)if("Divisible by 5"==selectedObj.ageCond1||"Even"==selectedObj.ageCond1||"Odd"==selectedObj.ageCond1)$scope.schedTestNewObj.ageCond1Obj.lookUpItemValue=selectedObj.ageCond1,angular.forEach($scope.ageCond1List,function(value,key){value.lookUpItemValue==selectedObj.ageCond1&&($scope.schedTestNewObj.ageCond1Obj.lookUpItemId=value.lookUpItemId)});else{var ageCond1Arr=selectedObj.ageCond1.split(" ");ageCond1Arr.length>=2&&($scope.schedTestNewObj.ageCond1Obj.lookUpItemValue=ageCond1Arr[0],angular.forEach($scope.ageCond1List,function(value,key){value.lookUpItemValue==ageCond1Arr[0]&&($scope.schedTestNewObj.ageCond1Obj.lookUpItemId=value.lookUpItemId)}),$scope.schedTestNewObj.year1Value=ageCond1Arr[1])}if(null!=selectedObj.ageCond2)if("Divisible by 5"==selectedObj.ageCond2||"Even"==selectedObj.ageCond2||"Odd"==selectedObj.ageCond2)$scope.schedTestNewObj.ageCond2Obj.lookUpItemValue=selectedObj.ageCond2,angular.forEach($scope.ageCond2List,function(value,key){value.lookUpItemValue==selectedObj.ageCond2&&($scope.schedTestNewObj.ageCond2Obj.lookUpItemId=value.lookUpItemId)});else{var ageCond2Arr=selectedObj.ageCond2.split(" ");ageCond2Arr.length>=1&&($scope.schedTestNewObj.ageCond2Obj.lookUpItemValue=ageCond2Arr[0],angular.forEach($scope.ageCond2List,function(value,key){value.lookUpItemValue==ageCond2Arr[0]&&($scope.schedTestNewObj.ageCond2Obj.lookUpItemId=value.lookUpItemId)}),$scope.schedTestNewObj.year2Value=ageCond2Arr[1])}if(null!=selectedObj.ageCond3)if("Divisible by 5"==selectedObj.ageCond3||"Even"==selectedObj.ageCond3||"Odd"==selectedObj.ageCond3)$scope.schedTestNewObj.ageCond3Obj.lookUpItemValue=selectedObj.ageCond3,angular.forEach($scope.ageCond3List,function(value,key){value.lookUpItemValue==selectedObj.ageCond3&&($scope.schedTestNewObj.ageCond3Obj.lookUpItemId=value.lookUpItemId)});else{var ageCond3Arr=selectedObj.ageCond3.split(" ");ageCond3Arr.length>=2&&($scope.schedTestNewObj.ageCond3Obj.lookUpItemValue=ageCond3Arr[0],angular.forEach($scope.ageCond3List,function(value,key){value.lookUpItemValue==ageCond3Arr[0]&&($scope.schedTestNewObj.ageCond3Obj.lookUpItemId=value.lookUpItemId)}),$scope.schedTestNewObj.year3Value=ageCond3Arr[1])}if($scope.schedTestNewObj.investProtocolObj.investigationProtocolId=selectedObj.investigationProtocolId,$scope.schedTestNewObj.frequencyObj.lookUpItemId=selectedObj.frequencyId,1==$scope.schedTestNewObj.frequencyObj.lookUpItemId){if($scope.selectedLMEFreq=!0,$scope.selectedYrMonthFreq=!1,null!=selectedObj.lmeTypes)for(var freqVals=selectedObj.lmeTypes.split(","),i=0;i<freqVals.length;i++)null!=freqVals[i]&&$scope.schedTestNewObj.lmeList.push(parseInt(freqVals[i]))}else null!=$scope.schedTestNewObj.frequencyObj.lookUpItemId&&($scope.selectedLMEFreq=!1,$scope.selectedYrMonthFreq=!0,null!=selectedObj.lmeTypes&&($scope.schedTestNewObj.yearMonthVal=selectedObj.lmeTypes));1==selectedObj.status?($scope.schedTestNewObj.status=!0,$scope.schedTestNewObj.statusId=1):($scope.schedTestNewObj.status=!1,$scope.schedTestNewObj.statusId=2)};var seheduledTestsVarId=null;$scope.deleteSchedTest=function(id){console.log("selected record : ",id),null!=id?(seheduledTestsVarId=id,ModalService.openAlert("confirm","warning",$scope.schedule.resources.SCHEDULE_TEST.DELETE_SELECTED_RECORD,$scope,"delete",function(){})):ModalService.openAlert("alert","info",$scope.schedule.resources.SCHEDULE_TEST.SELECT_RECORD,$scope)},$scope.$on("deleteOk",function(){null!=seheduledTestsVarId&&($scope.deleteRecord={seheduledTestsId:seheduledTestsVarId},APIS.ADMIN_DELETE_SCHED_TEST.data=$scope.deleteRecord,DataManager.sendRestRequest(null,APIS.ADMIN_DELETE_SCHED_TEST,function(response){response.success?(ModalService.openAlert("alert","success",$scope.schedule.resources.SCHEDULE_TEST.DELETED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error",$scope.schedule.resources.SCHEDULE_TEST.ERROR,$scope)},$scope.uconfig.token))}),$scope.init()}]),angular.module("app").controller("SystemConfigCtrl",["$rootScope","$scope","$state","APIS","DataManager","$log","$window","$uibModal","ResourceManager","ModalService",function($rootScope,$scope,$state,APIS,DataManager,$log,$window,$uibModal,ASYC,ModalService){if($scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){console.log("changed"),$scope.perPage=$scope.perPage},$scope.systemConfig=[],$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.init=function(){$scope.ASYC=ASYC,$scope.isFrmSubmited=!1,$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.configtext="",$scope.commenttext="",$scope.lmabConfigIndex="",$scope.speciality=[],$scope.noOfScpciality=null,$scope.selectedMa="",$scope.getDataFormatCombo=null,$scope.getSystemConfig()},$scope.getDataFormat=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.tempURL+"DATE_FORMAT,DATE_TIME_FORMAT",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.dateFormatList=response.dataBean.DATE_FORMAT,$scope.dateTimeFormatList=response.dataBean.DATE_TIME_FORMAT})}(),$scope.getSystemConfig=function(){DataManager.sendRestRequest(null,APIS.GET_SYSTEM_CONFIG,function(response){response.success?($scope.systemConfig=response.dataBean,console.log("$scope.systemConfig",$scope.systemConfig),angular.forEach($scope.systemConfig,function(value,key){null!=value.configCode?(value.configValMaxLen=ASYC.resources.ADMINSYSTEMCONFIG[value.configCode+"_MAX_CHAR"],value.configVal=ASYC.resources.ADMINSYSTEMCONFIG[value.configCode+"_PATTERN"],void 0==value.configValMaxLen&&(value.configValMaxLen="30"),void 0==value.configVal?value.configValPattern="":"N"==value.configVal?value.configValPattern="^[1-9][0-9]*$":"AN"==value.configVal?value.configValPattern="^[A-Za-z ]+$":"NSC"==value.configVal?value.configValPattern="^[0-9- +-]+$":"EMAIL"==value.configVal?value.configValPattern="":"ANSC"==value.configVal&&(value.configValPattern="")):(value.configValMaxLen="30",value.configValPattern="")})):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.isConfigClicked=function(configObj){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/config/systemconfig_lmab_form.html",controller:"SystemConfigModelCtrl",size:"md",resolve:{configObj:function(){return configObj}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem)},function(){console.log("Modal dismissed at: "+new Date)})};var configIds=[],pushErrorConfigIds=function(configId){configIds.length>0?configIds.indexOf(configId)==-1&&configIds.push(configId):configIds.push(configId)},sliceErrorConfigIds=function(configId){configIds.length>0&&configIds.indexOf(configId)!=-1&&configIds.splice(configIds.indexOf(configId),1)};$scope.configkeyup=function(data){var configId=data.configId,configjson="config"+configId;$scope.systemConfigForm[configjson].$error.required?pushErrorConfigIds(configId):$scope.systemConfigForm[configjson].$error.maxlength?pushErrorConfigIds(configId):$scope.systemConfigForm[configjson].$error.pattern?pushErrorConfigIds(configId):"N"===data.configVal&&data.configValue<=0?($scope.systemConfigForm[configjson].$error.greaterthanzero=!0,pushErrorConfigIds(configId)):"N"===data.configVal?($scope.systemConfigForm[configjson].$error.greaterthanzero=!1,sliceErrorConfigIds(configId)):sliceErrorConfigIds(configId)},$scope.saveConfig=function(){return $scope.isFrmSubmited=!0,$scope.systemConfigForm.$invalid?(ModalService.openAlert("alert","warning",$scope.ASYC.resources.ADMINSYSTEMCONFIG.ENTER_VALID_CONFIG,$scope),!1):configIds.length>0?(ModalService.openAlert("alert",$scope.ASYC.resources.ADMINSYSTEMCONFIG.ENTER_VALID_CONFIG,$scope),!1):(angular.forEach($scope.systemConfig,function(value,key){delete value.configValMaxLen,delete value.configValPattern,delete value.configVal}),APIS.UPDATE_SYSTEM_CONFIG.data={systemconfigDTOs:$scope.systemConfig},void DataManager.sendRestRequest(null,APIS.UPDATE_SYSTEM_CONFIG,function(response){response.success?(ModalService.openAlert("alert","success",$scope.ASYC.resources.ADMINSYSTEMCONFIG.SAVED_SUCCESSFULLY,$scope),$scope.init()):console.log(response.errorMessage)},$scope.uconfig.token))},$scope.init()}]),angular.module("app").controller("SystemConfigModelCtrl",["$rootScope","$scope","APIS","DataManager","$uibModalInstance","configObj","ResourceManager",function($rootScope,$scope,APIS,DataManager,$uibModalInstance,configObj,ASYC){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.selectedConfigObj=configObj,console.log($scope.selectedConfigObj.configValue),$scope.selectedObjSpecialities=[],$scope.specialitiesList=[],$scope.init=function(){$scope.ASYC=ASYC,$scope.getSpecialitesCombo(),$scope.getSelectedObjSpecialities()},$scope.getSpecialitesCombo=function(){DataManager.sendRestRequest(null,APIS.GET_SYSTEM_CONFIG_SPECIALITIES,function(response){response.success?$scope.specialitiesList=response.dataBean:console.log(response.errorMessage)},$scope.uconfig.token)},$scope.getSelectedObjSpecialities=function(){APIS.GET_SYSTEM_CONFIG_SELECTED_SPECIALITY.URL=String.prototype.format.apply(APIS.GET_SYSTEM_CONFIG_SELECTED_SPECIALITY.tempURL,[$scope.selectedConfigObj.configId]),DataManager.sendRestRequest(null,APIS.GET_SYSTEM_CONFIG_SELECTED_SPECIALITY,function(response){if(response.success){var selectedMAs=response.dataBean;if(null!=selectedMAs)for(var selectedMAsArr=selectedMAs.split(","),i=0;i<$scope.selectedConfigObj.configValue;i++)i<selectedMAsArr.length?"0"!=selectedMAsArr[i]?$scope.selectedObjSpecialities.push({maSpecialityId:parseInt(selectedMAsArr[i])}):$scope.selectedObjSpecialities.push({maSpecialityId:selectedMAsArr[i]}):$scope.selectedObjSpecialities.push({maSpecialityId:"0"});else for(var i=0;i<$scope.selectedConfigObj.configValue;i++)$scope.selectedObjSpecialities.push({maSpecialityId:"0"})}else console.log(response.errorMessage);console.log("selectedObjSpecialities: "+$scope.selectedObjSpecialities)},$scope.uconfig.token)},$scope.saveLMABMAConfig=function(){var finalMASpecialityObj=null;angular.forEach($scope.selectedObjSpecialities,function(value,key){finalMASpecialityObj=null!=finalMASpecialityObj?finalMASpecialityObj+","+value.maSpecialityId:value.maSpecialityId}),$scope.finalSaveMAObj={configId:$scope.selectedConfigObj.configId,maSpeciality:finalMASpecialityObj},APIS.SAVE_MA_SYSTEM_CONFIG.data=$scope.finalSaveMAObj,console.log($scope.finalSaveMAObj),DataManager.sendRestRequest(null,APIS.SAVE_MA_SYSTEM_CONFIG,function(response){response.success&&$scope.init(),$uibModalInstance.close("Reject")},$scope.uconfig.token)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("TargetConfigCtrl",["$rootScope","$scope","$state","APIS","DataManager","$window","$timeout","ResourceManager","$filter",function($rootScope,$scope,$state,APIS,DataManager,$window,$timeout,tc,$filter){$scope.cndtn="",$scope.init=function(){return $scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.tc=tc,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.selectedAll=!1,$scope.tableData=[],void $scope.loadTargetData()):($state.go("login"),!1)},$scope.checkAll=function(){angular.forEach($scope.tableData,function(value,key){$scope.selectedAll?value.checkStatus="Y":value.checkStatus="N"})},$scope.pagination=function(){$scope.start=1,$scope.end=5,$scope.currentPageData=$scope.tableData.slice($scope.start,$scope.end),$scope.totalItems=$scope.tableData.length,$scope.currentPage=1,$scope.numPerPage=5},$scope.pageChanged=function(page){var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.currentPageData=$scope.tableData.slice(start,end)},$scope.loadTargetData=function(){DataManager.sendRestRequest(null,APIS.GET_TARGET_CONFIG,function(response){console.log("data--",response.dataBean),response.success?($scope.tableData=response.dataBean,$scope.pagination(),""==$scope.cndtn&&($scope.cndtn="DSC"==$scope.cndtn?"ASC":"DSC",$scope.condSearch())):console.log(response.errorMessage)},$scope.uconfig.token)};var checkFlag=!1,unCheckFlag=!1;$scope.onCheckBoxClick=function(){checkFlag=!1,unCheckFlag=!1,angular.forEach($scope.tableData,function(val,key){"Y"==val.checkStatus?checkFlag=!0:"N"==val.checkStatus&&(unCheckFlag=!0)}),checkFlag&&!unCheckFlag?$scope.selectedAll=!0:$scope.selectedAll=!1},$scope.TargetedConfigSaveDTO=[],$scope.saveData=function(){angular.forEach($scope.tableData,function(val,key){"Y"==val.checkStatus?$scope.TargetedConfigSaveDTO.push({targettedConfigId:val.targettedConfigId,checkStatus:"Y"}):$scope.TargetedConfigSaveDTO.push({targettedConfigId:val.targettedConfigId,checkStatus:"N"})}),APIS.ADD_TARGET_CONFIG.data=$scope.TargetedConfigSaveDTO,DataManager.sendRestRequest(null,APIS.ADD_TARGET_CONFIG,function(response){$scope.saveStatus=response,$timeout(function(){$scope.saveStatus=""},5e3)},$scope.uconfig.token)},$scope.condSearch=function(){""==$scope.cndtn||"DSC"==$scope.cndtn?($scope.tableData=$filter("orderBy")($scope.tableData,"condition",!1),$scope.cndtn="ASC"):($scope.tableData=$filter("orderBy")($scope.tableData,"condition",!0),$scope.cndtn="DSC")},$scope.init()}]),angular.module("app").controller("configmodifymodal1",["$scope","$state","APIS",function($scope,$state,APIS){}]),angular.module("app").controller("configmodifymodal2",["$scope","$state","APIS",function($scope,$state,APIS){}]),angular.module("app").controller("configmodifymodal3",["$scope","$state","APIS",function($scope,$state,APIS){}]),angular.module("app").controller("ValidityConfig",["$rootScope","$scope","$state","APIS","DataManager","$uibModal","ModalService","ResourceManager",function($rootScope,$scope,$state,APIS,DataManager,$uibModal,ModalService,AVC){
function getRowDataObject(){return Object.create($scope.baseRowObject)}if($rootScope.viewValConfList=[],$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.init=function(){$scope.AVC=AVC,$scope.addedRowValConfList=[],$scope.editedRowValConfList=[],$scope.isFrmSubmited=!1,console.log("View Validity Config "),DataManager.sendRestRequest(null,APIS.ADMIN_GET_VAL_CONFIG,function(response){response.success&&($rootScope.viewValConfList=response.dataBean)},$scope.uconfig.token)},$scope.baseRowObject={validityConfigId:null,macList:$scope.macList,licenceTypeList:$scope.licenceTypeList,airCraftTypeList:$scope.airCraftTypeList,operationTypeList:$scope.operationTypeList,ageCond1List:$scope.ageCond1List,ageCond2List:$scope.ageCond2List,macTypeId:null,macTypeName:null,licenceTypeName:null,licenceTypeId:null,licenceTypeName:null,airCraftTypeId:null,airCraftTypeName:null,operationTypeId:null,operationTypeName:null,ageCond1Id:null,ageCond1Value:null,ageCond2Id:null,ageCond2Value:null,year1Value:null,year2Value:null,validity:null,status:!0,statusId:2},$scope.loadAllCombos=function(data,comboName,rowObj){APIS.ADMIN_GET_VAL_CONFIG_COMBOS.data=data,DataManager.sendRestRequest(null,APIS.ADMIN_GET_VAL_CONFIG_COMBOS,function(response){response.success&&null!=response.dataBean&&(rowObj[comboName]=response.dataBean)},$scope.uconfig.token)},$scope.loadProfessionalCombos=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){response.success&&null!=response.dataBean&&(rowObj[comboName]=response.dataBean,"airCraftTypeList"==comboName?angular.forEach(rowObj.airCraftTypeList,function(value,key){0==key&&(rowObj.airCraftTypeId=value.lookUpItemId,rowObj.airCraftTypeName=value.lookUpItemValue)}):"operationTypeList"==comboName&&angular.forEach(rowObj.operationTypeList,function(value,key){0==key&&(rowObj.operationTypeId=value.lookUpItemId,rowObj.operationTypeName=value.lookUpItemValue)}))})},$scope.loadDependentCombos=function(argId,rowObj){$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"airCraftTypeList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationTypeList",rowObj)},$scope.loadLookUPCombos=function(rowObj){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.tempURL+"AGE_CONDITION",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){response.success&&null!=response.dataBean&&(rowObj.ageCond1List=response.dataBean.AGE_CONDITION,rowObj.ageCond2List=response.dataBean.AGE_CONDITION)})},$scope.loadAllCombos({lookUpItemId:1,lookUpItemValue:"macs",lookUpItemCode:null},"macList",$scope.baseRowObject),$scope.loadAllCombos({lookUpItemId:1,lookUpItemValue:"",lookUpItemCode:null},"licenceTypeList",$scope.baseRowObject),$scope.loadLookUPCombos($scope.baseRowObject),$scope.addNewRow=function(){$scope.addedRowValConfList.push(getRowDataObject())},$scope.onChangeMacName=function(cmb){cmb.row.macName=null,angular.forEach(cmb.row.macList,function(value,key){value.lookUpItemId==cmb.row.macTypeId&&(cmb.row.macName=value.lookUpItemValue)})},$scope.onChangeLicenceType=function(cmb){console.log("onChangeLicenceType"),cmb.row.licenceTypeName=null,angular.forEach(cmb.row.licenceTypeList,function(value,key){value.lookUpItemId==cmb.row.licenceTypeId&&(cmb.row.licenceTypeName=value.lookUpItemValue)}),$scope.loadDependentCombos(cmb.row.licenceTypeId,cmb.row)},$scope.onChangeAirCraftType=function(cmb){cmb.row.airCraftTypeName=null,angular.forEach(cmb.row.airCraftTypeList,function(value,key){value.lookUpItemId==cmb.row.airCraftTypeId&&(cmb.row.airCraftTypeName=value.lookUpItemValue)})},$scope.onChangeOperationType=function(cmb){cmb.row.operationTypeName=null,angular.forEach(cmb.row.operationTypeList,function(value,key){value.lookUpItemId==cmb.row.operationTypeId&&(cmb.row.operationTypeName=value.lookUpItemValue)})},$scope.onChangeAgeCond1=function(cmb){$scope.addAgeCond1ToRowObj(cmb.row)},$scope.addAgeCond1ToRowObj=function(rowObj){rowObj.ageCond1Value=null,angular.forEach(rowObj.ageCond1List,function(pvalue,pkey){pvalue.lookUpItemId==rowObj.ageCond1Id&&(rowObj.ageCond1Value=pvalue.lookUpItemValue)})},$scope.onChangeAgeCond2=function(cmb){$scope.addAgeCond2ToRowObj(cmb.row)},$scope.addAgeCond2ToRowObj=function(rowObj){rowObj.ageCond2Value=null,angular.forEach(rowObj.ageCond2List,function(pvalue,pkey){pvalue.lookUpItemId==rowObj.ageCond2Id&&(rowObj.ageCond2Value=pvalue.lookUpItemValue)})},$scope.templateObj={},$scope.deleteValConf=function(templateObj){$scope.templateObj=templateObj,ModalService.openAlert("confirm","warning",$scope.AVC.resources.ADMINVALIDITYCONFIG.DELETE_SELECTED_RECORD,$scope,"delete",function(){})},$scope.$on("deleteOk",function(){$scope.deleteValConfData={validityconfigid:""+$scope.templateObj.validityconfigid},APIS.ADMIN_DELETE_VAL_CONFIG.data=$scope.deleteValConfData,DataManager.sendRestRequest(null,APIS.ADMIN_DELETE_VAL_CONFIG,function(response){response.success?(ModalService.openAlert("alert","success",$scope.AVC.resources.ADMINVALIDITYCONFIG.DELETED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error",response.errorMessage,$scope)},$scope.uconfig.token)});var indexVal=null;$scope.deleteRow=function(index){indexVal=index,ModalService.openAlert("confirm","warning",$scope.AVC.resources.ADMINVALIDITYCONFIG.DELETE_SELECTED_RECORD,$scope,"deleteNew",function(){})},$scope.$on("deleteNewOk",function(){$scope.addedRowValConfList.splice(indexVal,1)}),$scope.saveValidityConf=function(){if($scope.isFrmSubmited=!0,$scope.validityForm.$invalid)return!1;if($scope.addedRowValConfList.length<=0)return ModalService.openAlert("alert","error",$scope.AVC.resources.ADMINVALIDITYCONFIG.RECORDS_SAVE,$scope),!1;$scope.saveFinalData={validityConfigDTOList:null},$scope.saveValConfData=[];var duplicateFlag=!1;return angular.forEach($scope.addedRowValConfList,function(value,key){$scope.saveValConfData.push({status:value.statusId,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,validityconfigid:null,macid:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,macid:value.macTypeId,code:null,comments:null,description:value.macTypeName,practiceid:0},licencetypeid:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,licenceTypeId:value.licenceTypeId,code:null,description:value.licenceTypeName,comments:null},aircrafttypeid:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,aircrafttypeid:value.airCraftTypeId,code:null,description:value.airCraftTypeName,comments:null},operationtypeid:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,operationTypeId:value.operationTypeId,code:null,description:value.operationTypeName,comments:null},agecond1:(null!=value.ageCond1Value?value.ageCond1Value:"")+" "+(null!=value.year1Value?value.year1Value:""),agecond2:(null!=value.ageCond2Value?value.ageCond2Value:"")+" "+(null!=value.year2Value?value.year2Value:""),validity:value.validity,practiceid:5})}),duplicateFlag?(ModalService.openAlert("alert","warning",$scope.AVC.resources.ADMINVALIDITYCONFIG.ALREADY_EXISTS,$scope),!1):($scope.saveFinalData.validityConfigDTOList=$scope.saveValConfData,APIS.ADMIN_SAVE_VAL_CONFIG.data=$scope.saveFinalData,void DataManager.sendRestRequest(null,APIS.ADMIN_SAVE_VAL_CONFIG,function(response){response.success&&(ModalService.openAlert("alert","success",$scope.AVC.resources.ADMINVALIDITYCONFIG.ADDED_SUCCESSFULLY,$scope),$scope.init())},$scope.uconfig.token))},$scope.mapViewTemplateDataOnEdit=function(templateObj,rowObj){if(rowObj.validityConfigId=templateObj.validityconfigid,rowObj.statusId=templateObj.status,rowObj.macTypeId=templateObj.macid.macid,rowObj.macTypeName=templateObj.macid.description,rowObj.licenceTypeId=templateObj.licencetypeid.licenceTypeId,rowObj.licenceTypeName=templateObj.licencetypeid.description,rowObj.airCraftTypeId=templateObj.aircrafttypeid.aircrafttypeid,rowObj.airCraftTypeName=templateObj.aircrafttypeid.description,rowObj.operationTypeId=templateObj.operationtypeid.operationTypeId,rowObj.operationTypeName=templateObj.operationtypeid.description,rowObj.ageCond1Id=templateObj.agecond1.lookUpItemId,rowObj.ageCond1Value=templateObj.agecond1.lookUpItemValue,rowObj.validity=templateObj.validity,rowObj.status=templateObj.status,null!=templateObj.agecond1){var ageCond1arr=templateObj.agecond1.split(" ");rowObj.ageCond1Value=ageCond1arr[0],rowObj.year1Value=ageCond1arr[1]}if(null!=templateObj.agecond2){var ageCond2arr=templateObj.agecond2.split(" ");rowObj.ageCond2Value=ageCond2arr[0],rowObj.year2Value=ageCond2arr[1]}angular.forEach(rowObj.ageCond1List,function(value,key){value.lookUpItemValue==rowObj.ageCond1Value&&(rowObj.ageCond1Id=value.lookUpItemId)}),angular.forEach(rowObj.ageCond2List,function(value,key){value.lookUpItemValue==rowObj.ageCond2Value&&(rowObj.ageCond2Id=value.lookUpItemId)})},$scope.editValConf=function(templateObj){$scope.editedRowValConfList=[],console.log($scope.baseRowObject),$scope.editedRowValConfList.push(getRowDataObject()),$scope.mapViewTemplateDataOnEdit(templateObj,$scope.editedRowValConfList[0]);var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/config/validity_conf_edit_form.html",controller:"ValConfModalCtrl",size:"lg",resolve:{selectedObj:function(){return $scope.editedRowValConfList[0]}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date),$scope.init()})},$scope.init()}]),angular.module("app").controller("ValConfModalCtrl",["$rootScope","$scope","APIS","DataManager","$uibModalInstance","selectedObj","ModalService","ResourceManager",function($rootScope,$scope,APIS,DataManager,$uibModalInstance,selectedObj,ModalService,AVC){$scope.selObj=Object.create(selectedObj),$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.AVC=AVC,$scope.editedValConfList=[],$scope.editedValConfList.push($scope.selObj)},$scope.init(),$scope.loadProfessionalCombosOnEdit=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){response.success&&null!=response.dataBean&&(rowObj[comboName]=response.dataBean)})},$scope.loadProfessionalCombos=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){response.success&&null!=response.dataBean&&(rowObj[comboName]=response.dataBean,"airCraftTypeList"==comboName?angular.forEach(rowObj.airCraftTypeList,function(value,key){0==key&&(rowObj.airCraftTypeId=value.lookUpItemId,rowObj.airCraftTypeName=value.lookUpItemValue)}):"operationTypeList"==comboName&&angular.forEach(rowObj.operationTypeList,function(value,key){0==key&&(rowObj.operationTypeId=value.lookUpItemId,rowObj.operationTypeName=value.lookUpItemValue)}))})},$scope.loadDependentCombos=function(argId,rowObj){$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"airCraftTypeList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationTypeList",rowObj)},$scope.loadDependentCombosOnEdit=function(argId,rowObj){$scope.loadProfessionalCombosOnEdit({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"airCraftTypeList",rowObj),$scope.loadProfessionalCombosOnEdit({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationTypeList",rowObj)},$scope.loadDependentCombosOnEdit($scope.editedValConfList[0].licenceTypeId,$scope.editedValConfList[0]),$scope.onChangeMacName=function(cmb){cmb.row.macName=null,angular.forEach(cmb.row.macList,function(value,key){value.lookUpItemId==cmb.row.macTypeId&&(cmb.row.macName=value.lookUpItemValue)})},$scope.onChangeLicenceType=function(cmb){cmb.row.licenceTypeName=null,console.log("onChangeLicenceType"),angular.forEach(cmb.row.licenceTypeList,function(value,key){value.lookUpItemId==cmb.row.licenceTypeId&&(cmb.row.licenceTypeName=value.lookUpItemValue)}),$scope.loadDependentCombos(cmb.row.licenceTypeId,cmb.row)},$scope.onChangeAirCraftType=function(cmb){cmb.row.airCraftTypeName=null,angular.forEach(cmb.row.airCraftTypeList,function(value,key){value.lookUpItemId==cmb.row.airCraftTypeId&&(cmb.row.airCraftTypeName=value.lookUpItemValue)})},$scope.onChangeOperationType=function(cmb){cmb.row.operationTypeName=null,angular.forEach(cmb.row.operationTypeList,function(value,key){value.lookUpItemId==cmb.row.operationTypeId&&(cmb.row.operationTypeName=value.lookUpItemValue)})},$scope.onChangeAgeCond1=function(cmb){$scope.addAgeCond1ToRowObj(cmb.row)},$scope.addAgeCond1ToRowObj=function(rowObj){rowObj.ageCond1Value=null,angular.forEach(rowObj.ageCond1List,function(pvalue,pkey){pvalue.lookUpItemId==rowObj.ageCond1Id&&(rowObj.ageCond1Value=pvalue.lookUpItemValue)})},$scope.onChangeAgeCond2=function(cmb){$scope.addAgeCond2ToRowObj(cmb.row)},$scope.addAgeCond2ToRowObj=function(rowObj){rowObj.ageCond2Value=null,angular.forEach(rowObj.ageCond2List,function(pvalue,pkey){pvalue.lookUpItemId==rowObj.ageCond2Id&&(rowObj.ageCond2Value=pvalue.lookUpItemValue)})},$scope.saveEditedValidtyConf=function(){if($scope.isFrmSubmited=!0,$scope.validityForm.$invalid)return!1;$scope.saveFinalData={validityConfigDTOList:null},$scope.saveModValConfData=[];var duplicateFlag=!1;return angular.forEach($scope.editedValConfList,function(value,key){selectedObj.licenceTypeName===value.licenceTypeName&&selectedObj.macTypeName===value.macTypeName&&selectedObj.airCraftTypeName===value.airCraftTypeName&&selectedObj.operationTypeName===value.operationTypeName,$scope.saveModValConfData.push({status:value.statusId,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,validityconfigid:value.validityConfigId,macid:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,macid:value.macTypeId,code:null,comments:null,description:value.macTypeName,practiceid:0},licencetypeid:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,licenceTypeId:value.licenceTypeId,code:null,description:value.licenceTypeName,comments:null},aircrafttypeid:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,aircrafttypeid:value.airCraftTypeId,code:null,description:value.airCraftTypeName,comments:null},operationtypeid:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,operationTypeId:value.operationTypeId,code:null,description:value.operationTypeName,comments:null},agecond1:(null!=value.ageCond1Value?value.ageCond1Value:"")+" "+(null!=value.year1Value?value.year1Value:""),agecond2:(null!=value.ageCond2Value?value.ageCond2Value:"")+" "+(null!=value.year2Value?value.year2Value:""),validity:value.validity,practiceid:5})}),duplicateFlag?(ModalService.openAlert("alert","warning",$scope.AVC.resources.ADMINVALIDITYCONFIG.ALREADY_EXISTS,$scope),!1):($scope.saveFinalData.validityConfigDTOList=$scope.saveModValConfData,APIS.ADMIN_SAVE_VAL_CONFIG.data=$scope.saveFinalData,void DataManager.sendRestRequest(null,APIS.ADMIN_SAVE_VAL_CONFIG,function(response){response.success&&(ModalService.openAlert("alert","success",$scope.AVC.resources.ADMINVALIDITYCONFIG.UPDATED_SUCCESSFULLY,$scope),$uibModalInstance.dismiss("Reject"))},$scope.uconfig.token))},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("AccountUnlockCtrl",["$scope","$rootScope","$state","APIS","DataManager","ResourceManager","ModalService","$uibModal","$filter","ResourceManager","$window",function($scope,$rootScope,$state,APIS,DataManager,ResourceManager,ModalService,$uibModal,$filter,AUNLOK,$window){if($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.idOrder="",$scope.nameOrder="",$scope.init=function(){$scope.AUNLOK=AUNLOK,$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.accountUnlockLIst={},$scope.accountRecord={},$scope.selected={},$scope.unlockList()},$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.unlockList=function(){APIS.ADMIN_ACCOUNT_UNLOCK_LIST.data={},DataManager.sendRestRequest(null,APIS.ADMIN_ACCOUNT_UNLOCK_LIST,function(response){response.success?($scope.accountUnlockLIst=response.dataBean,$scope.filteredItems=$scope.accountUnlockLIst,console.log("AccountUnlockLIst",$scope.accountUnlockLIst),""==$scope.nameOrder?($scope.idOrder="DSC"==$scope.idOrder?"ASC":"DSC",$scope.nameSearch()):($scope.nameOrder="DSC"==$scope.nameOrder?"ASC":"DSC",$scope.idSearch()),""==$scope.nameOrder&&""==$scope.idOrder&&$scope.nameSearch()):console.log(response)},$scope.uconfig.token)},$scope.idSearch=function(){""==$scope.idOrder||"DSC"==$scope.idOrder?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"idNo",!1),$scope.idOrder="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"idNo",!0),$scope.idOrder="DSC"),$scope.nameOrder=""},$scope.nameSearch=function(){""==$scope.nameOrder||"DSC"==$scope.nameOrder?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,'firstName + " " +lastName',!1),$scope.nameOrder="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,'firstName + " " +lastName',!0),$scope.nameOrder="DSC"),$scope.idOrder=""},$scope.filterData=function(){return $scope.isFrmSubmited=!0,!$scope.accunloc.$invalid&&($scope.filteredItems=$scope.accountUnlockLIst,$scope.filterNircOrFin&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{idNo:$scope.filterNircOrFin})),$scope.filterLicense&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{person:{licenseNo:$scope.filterLicense}})),void($scope.filterName&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{applicantName:$scope.filterName}))))},$scope.accountRecord=[];var listOfUnlock=[];$scope.recordSelected=function(result){$scope.accountRecord=result,console.log(listOfUnlock.indexOf(result.requestForUnlockId)),listOfUnlock.indexOf(result.requestForUnlockId)>-1?(console.log("asdasd"),listOfUnlock.splice(listOfUnlock.indexOf(result.requestForUnlockId),1),console.log(listOfUnlock)):(listOfUnlock.push(result.requestForUnlockId),console.log(listOfUnlock))},$scope.unlockSelected=function(result){null==$scope.accountRecord.requestForUnlockId?ModalService.openAlert("alert","error","Please select record to unlock",$scope):(ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected account?",$scope,"unlock",function(){}),$scope.$on("unlockOk",function(){for(var listOfUnlockLen=listOfUnlock.length,i=0;i<listOfUnlockLen;i++)console.log(listOfUnlock[i]),console.log($scope.accountRecord.requestForUnlockId),APIS.ADMIN_ACCOUNT_UNLOCK_REQUEST.data={requestForUnlockId:listOfUnlock[i]},DataManager.sendRestRequest(null,APIS.ADMIN_ACCOUNT_UNLOCK_REQUEST,function(response){response.success?($scope.accountUnlockLIst=response.dataBean,$scope.unlockList()):console.log(response)},$scope.uconfig.token);$scope.accountRecord.requestForUnlockId=null}))},$scope.goToApplicantProfile=function(applicantId){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+applicantId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:null,visitType:null,applicantId:applicantId,applicantuserId:response.dataBean.id,applicantDetails:{applicationId:null}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.init()}]),angular.module("app").controller("BulkApproveCtrl",["$scope","APIS","DataManager","$uibModalInstance","ResourceManager","ModalService",function($scope,APIS,DataManager,uibModalInstance,rm,ModalService){$scope.cancel=function(){uibModalInstance.dismiss("cancel")},$scope.init=function(){if($scope.rm=rm,$scope.action={selectedAction:null},$scope.uploadFileName="",$scope.bulkUploadList=[],$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1},$scope.selectFile=function(){angular.element("#bulkUpload").trigger("click")},$scope.uploadFile=function(){if(!$scope.action.selectedAction)return void ModalService.openAlert("alert","error","Please select Approve or Remove",$scope);var bulkUploadData={action:1==$scope.action.selectedAction?"approve":"remove",doc:{document:$scope.uploadObj}};APIS.ADMIN_FEEWAIVER_BULK_UPLOAD.data=bulkUploadData,DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_BULK_UPLOAD,function(response){response.success&&($scope.bulkUploadList=response.dataBean,$scope.uploadFileName=""),clearUploadDetails()},$scope.uconfig.token)},$scope.onUploadFileChange=function(fileObj){var file=document.forms[0].bulkUpload.files[0];if(!file)return void clearUploadDetails();var fileExtTypeArray=file.name.split(".");$scope.uploadFileName=file.name;var fileExtType=fileExtTypeArray[fileExtTypeArray.length-1],r=null,docValidTypeArray=["csv","xls","xlsx"];return docValidTypeArray.indexOf(fileExtType)>=0?(r=new window.FileReader,r.onloadend=function(f){return function(e){var contents=e.target.result;$scope.uploadObj=contents.split(",")[1],$scope.isUploadContentSet=!0,$scope.safeApply()}}(file),r.readAsDataURL(file),void 0):(file=null,clearUploadDetails(),void ModalService.openAlert("alert","error","Application accepts only MS-Excel or .csv format",$scope))};var clearUploadDetails=function(){angular.element("#bulkUpload").val(""),$scope.uploadObj=null,$scope.isUploadContentSet=!1,$scope.safeApply()};$scope.safeApply=function(fn){var phase=this.$root.$$phase;"$apply"==phase||"$digest"==phase?fn&&"function"==typeof fn&&fn():this.$apply(fn)},$scope.init()}]),angular.module("app").controller("ClinicSetupCtrl",["$scope","$rootScope","$state","APIS","DataManager","$uibModal","$filter","ModalService","ResourceManager",function($scope,$rootScope,$state,APIS,DataManager,$uibModal,$filter,ModalService,ACS){return $scope.fd={clinicID:"",clinicName:""},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.ACS=ACS,$rootScope.clinicSetupList=[],$scope.init=function(){$scope.animationsEnabled=!0,$scope.loadClinicalSetUpList()},$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.loadClinicalSetUpList=function(){APIS.GETCLINICSETUPLIST.data={},DataManager.sendRestRequest(null,APIS.GETCLINICSETUPLIST,function(response){response.success?($rootScope.clinicSetupList=response.dataBean,$scope.filteredCSData=$rootScope.clinicSetupList):console.log(response)},$scope.uconfig.token)},$scope.filterData=function(fd){$scope.filteredCSData=$rootScope.clinicSetupList,fd.clinicID&&($scope.filteredCSData=$filter("filter")($scope.filteredCSData,{clinicID:fd.clinicID})),fd.clinicName&&($scope.filteredCSData=$filter("filter")($scope.filteredCSData,{clinicName:fd.clinicName})),fd.statusDescription&&($scope.filteredCSData=$filter("filter")($scope.filteredCSData,{status:parseInt(fd.statusDescription)}))},$scope.addClinic=function(){$scope.modifyData={};var addClinicmodalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/addClinic-modal-form.html",controller:"AddClinicModalInstanceCtrl",size:"md",resolve:{modifyData:function(){return $scope.modifyData}}});addClinicmodalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem)},function(){console.log("Modal dismissed at: "+new Date)})},$scope.selectedClinicObj={rowObj:null},$scope.dataBind=function(){$scope.statusObj.lookUpItemId=$scope.statusObj[2].lookUpItemId},$scope.Modify=function(){if($scope.modifyData=$scope.selectedClinicObj,null==$scope.modifyData.rowObj)ModalService.openAlert("alert","error","Please select a row to modify.",$scope);else{var clinicModalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/ModifyClinic-modal-form.html",controller:"AddClinicModalInstanceCtrl",size:"md",resolve:{modifyData:function(){return $scope.modifyData.rowObj.clinicID}}});clinicModalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem)},function(){console.log("Modal dismissed at: "+new Date)})}},$scope.ViewClinic=function(){if($scope.modifyData=$scope.selectedClinicObj,null==$scope.modifyData.rowObj)ModalService.openAlert("alert","error","Please select a row to view.",$scope);else{$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/ViewClinic-modal-form.html",controller:"AddClinicModalInstanceCtrl",size:"md",resolve:{modifyData:function(){return $scope.modifyData.rowObj.clinicID}}},$scope.uconfig.token)}},$scope.DeleteClinic=function(){$scope.deleteData=$scope.selectedClinicObj,null==$scope.deleteData.rowObj?ModalService.openAlert("alert","error","Please select a row to delete.",$scope):(ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"delete",function(){}),$scope.$on("deleteOk",function(){APIS.DELETECLINICSETUPDATA.URL="admin/clinics/deleteClinic/"+$scope.deleteData.rowObj.clinicID,DataManager.sendRestRequest(null,APIS.DELETECLINICSETUPDATA,function(response){response.success?(ModalService.openAlert("alert","success","Deleted Successfully",$scope),$scope.init()):ModalService.openAlert("alert","error","Error",$scope)},$scope.uconfig.token)}))},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("AddClinicModalInstanceCtrl",["$scope","$rootScope","APIS","DataManager","$uibModalInstance","modifyData","ModalService","ResourceManager","$http",function($scope,$rootScope,APIS,DataManager,$uibModalInstance,modifyData,ModalService,ADDCS,$http){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.ADDCS=ADDCS,$scope.modalData={},$scope.loadCountry(),$scope.loadFacility(),$scope.loadArFunctions(),null!==modifyData&&($scope.loadModifyData(modifyData),$scope.loadFunctions()),$scope.selectedFuns=[],$scope.addClinicSetupData={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,clinicID:null,clinicCode:null,clinicName:null,clinicAddress:{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,addressId:null,addressType:null,transactionId:null,transactionType:null,country:{countryId:null,countryName:null,countryCode:null},postalCode:null,line1:null,line2:null,floor:null,unit:null,state:null,workPhoneNo:null,phoneExt:null,fax:null,street:null,block:null,building:null,email:null,city:null,line3:null},facilities:[{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,faciltyName:null,faciltyDisplayName:null,faciltyCode:null,facilityLevel:null,customerId:null,remarks:null,timeZone:null,timeZoneDiff:null,dst:null,currencyCode:null,currencySymbol:null,facilityConfigurations:null}],visitOptions:[{lmeType:{lmeTypeID:null,code:null,description:null},macDetails:{macID:null,macCode:null,macDescription:null},macLmeTypeCode:null}],arVisitTypes:[]},$scope.selectedFunctions=[],$scope.isCSFormSubmited=!1,$scope.selectedFacilities=[],$scope.arVisitTypes=[],$scope.arVisit=[]};var prevClinicName=null;$scope.loadModifyData=function(ID){APIS.GETCLINICSETUPDATA.URL="admin/clinics/"+ID,DataManager.sendRestRequest(null,APIS.GETCLINICSETUPDATA,function(response){response.success&&($scope.modalData=response.dataBean,prevClinicName=$scope.modalData.clinicName,$scope.loadFunctions(),$scope.loadFacility(),$scope.loadArFunctions(),configurePostalValLen("modify"),console.log("modify",$scope.modalData))},$scope.uconfig.token)},$scope.loadFacility=function(){APIS.GETCLINICFACILITY.data={},DataManager.sendRestRequest(null,APIS.GETCLINICFACILITY,function(response){response.success?($scope.facilityList=response.dataBean,angular.forEach($scope.facilityList,function(facvalue,fackey){angular.forEach($scope.modalData.facilities,function(modfcvalue,modfckey){facvalue.facilityId==modfcvalue.facilityId&&$scope.selectedFacilities.push(facvalue)})})):console.log(response)},$scope.uconfig.token)},$scope.loadFunctions=function(){APIS.GETCLINICFUNCTIONS.data={},DataManager.sendRestRequest(null,APIS.GETCLINICFUNCTIONS,function(response){response.success?($scope.functionsList=response.dataBean,angular.forEach($scope.functionsList,function(funvalue,funkey){funvalue.ischecked=!1,angular.forEach($scope.modalData.visitOptions,function(modvalue,modkey){funvalue.lmeType.lmeTypeID==modvalue.lmeType.lmeTypeID&&funvalue.macDetails.macID==modvalue.macDetails.macID&&(funvalue.ischecked=!0)})})):console.log(response)},$scope.uconfig.token)};var sporeKey=1,sporeTxt="Singapore",configurePostalValLen=function(type){"add"==type?$scope.addClinicSetupData.clinicAddress.country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope.postalMinLen0=3,$scope.postalMaxLen0=15):($scope.postalMinLen0=6,$scope.postalMaxLen0=6):$scope.modalData.clinicAddress.country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope.postalMinLen1=3,$scope.postalMaxLen1=15):($scope.postalMinLen1=6,$scope.postalMaxLen1=6)},getAddPostalAddress=function(postalCode,ln1,ln2){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean.building?($scope.addClinicSetupData.clinicAddress.line1=response.dataBean.building,$scope.addClinicSetupData.clinicAddress.line2=response.dataBean.unit,$("#"+ln1).removeAttr("disabled"),$("#"+ln2).removeAttr("disabled")):($scope.addClinicSetupData.clinicAddress.line1=null,$scope.addClinicSetupData.clinicAddress.line2=null,$("#"+ln1).attr("disabled","disabled"),$("#"+ln2).attr("disabled","disabled"))})},getModifyPostalAddress=function(postalCode,ln1,ln2){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean.building?($scope.modalData.clinicAddress.line1=response.dataBean.building,$scope.modalData.clinicAddress.line2=response.dataBean.unit,$("#"+ln1).removeAttr("disabled"),$("#"+ln2).removeAttr("disabled")):($scope.modalData.clinicAddress.line1=null,$scope.modalData.clinicAddress.line2=null,$("#"+ln1).attr("disabled","disabled"),$("#"+ln2).attr("disabled","disabled"))})};$scope.isMailingAddChanged=!1,$scope.isMailingModifyChanged=!1,$scope.preloadAddClinicAddress=function(postalCode,ln1,ln2){!$scope.isMailingAddChanged&&postalCode?getAddPostalAddress(postalCode,ln1,ln2):($scope.addClinicSetupData.clinicAddress.line1=null,$scope.addClinicSetupData.clinicAddress.line2=null,$("#"+ln1).removeAttr("disabled"),$("#"+ln2).removeAttr("disabled"))},$scope.preloadModifyClinicAddress=function(postalCode,ln1,ln2){!$scope.isMailingModifyChanged&&postalCode?getModifyPostalAddress(postalCode,ln1,ln2):($scope.modalData.clinicAddress.line1=null,
$scope.modalData.clinicAddress.line2=null,$("#"+ln1).removeAttr("disabled"),$("#"+ln2).removeAttr("disabled"))},$scope.loadCountry=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.tempURL+"country",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.countryList=response.dataBean.country,angular.forEach($scope.countryList,function(value,key){value.lookUpItemValue==sporeTxt&&(sporeKey=key)}),$scope.countryList&&!$scope.addClinicSetupData.clinicAddress.country.countryId&&($scope.addClinicSetupData.clinicAddress.country.countryId=$scope.countryList[sporeKey].lookUpItemId),configurePostalValLen("add")},$scope.uconfig.token)},$scope.isAddressChanged=function(type){"add"==type?($scope.isMailingAddChanged=!1,$scope.addClinicSetupData.clinicAddress.country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),$scope.addClinicSetupData.clinicAddress.postalCode=null,$scope.addClinicSetupData.clinicAddress.line1=null,$scope.addClinicSetupData.clinicAddress.line2=null,configurePostalValLen("add")):($scope.isMailingModifyChanged=!1,$scope.modalData.clinicAddress.country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingModifyChanged=!0),$scope.modalData.clinicAddress.postalCode=null,$scope.modalData.clinicAddress.line1=null,$scope.modalData.clinicAddress.line2=null,configurePostalValLen("modify"))},$scope.loadArFunctions=function(){APIS.GETCLINICARFUNCTIONS.data={},DataManager.sendRestRequest(null,APIS.GETCLINICARFUNCTIONS,function(response){response.success?($scope.ArfunctionsList=response.dataBean,angular.forEach($scope.ArfunctionsList,function(arfunvalue,arfunkey){arfunvalue.ischecked=!1,angular.forEach($scope.modalData.arVisitTypes,function(arvalue,arkey){arfunvalue.lmeTypeID==arvalue&&(arfunvalue.ischecked=!0)})})):console.log(response)},$scope.uconfig.token)},$scope.visitOptions=[],$scope.funCheckedStatus=function(funVal){$scope.seletionMode=funVal.selectedFunctions.split("_"),"add"==$scope.seletionMode[0]&&(1==funVal.seletionMode[1]&&$scope.visitOptions.push({lmeType:{lmeTypeID:funVal.fun.lmeType.lmeTypeID,code:funVal.fun.lmeType.code,description:null},macDetails:{macID:funVal.fun.macDetails.macID,macCode:null,macDescription:null},macLmeTypeCode:null}),0==funVal.seletionMode[1]&&angular.forEach($scope.visitOptions,function(modvalue,modkey){funVal.fun.lmeType.lmeTypeID==modvalue.lmeType.lmeTypeID&&funVal.fun.macDetails.macID==modvalue.macDetails.macID&&$scope.visitOptions.splice(modkey,1)}),$scope.addClinicSetupData.visitOptions=$scope.visitOptions),"mod"==$scope.seletionMode[0]&&(1==funVal.seletionMode[1]&&$scope.modalData.visitOptions.push({lmeType:{lmeTypeID:funVal.fun.lmeType.lmeTypeID,code:funVal.fun.lmeType.code,description:null},macDetails:{macID:funVal.fun.macDetails.macID,macCode:null,macDescription:null},macLmeTypeCode:null}),0==funVal.seletionMode[1]&&angular.forEach($scope.modalData.visitOptions,function(modvalue,modkey){funVal.fun.lmeType.lmeTypeID==modvalue.lmeType.lmeTypeID&&funVal.fun.macDetails.macID==modvalue.macDetails.macID&&$scope.modalData.visitOptions.splice(modkey,1)}))},$scope.ArChecked=function(ArFun){1==ArFun.arVisitTypes&&angular.forEach($scope.ArfunctionsList,function(arVal,arKey){arVal.lmeTypeID==ArFun.ar.lmeTypeID&&$scope.arVisit.push(arVal.lmeTypeID)}),0==ArFun.arVisitTypes&&angular.forEach($scope.arVisit,function(arVal,arKey){arVal==ArFun.ar.lmeTypeID&&$scope.arVisit.splice(arKey,1)})},$scope.ClinicSetUpSave=function(){if($scope.isCSFormSubmited=!0,$scope.ClinicSetup_Form.$invalid)return!1;$scope.addClinicSetupData.arVisitTypes=$scope.arVisit,$scope.addClinicSetupData.status||($scope.addClinicSetupData.status="1");var duplicateConfig=!1;return angular.forEach($rootScope.clinicSetupList,function(viewValue,key){viewValue.clinicName==$scope.addClinicSetupData.clinicName&&(duplicateConfig=!0)}),duplicateConfig?(ModalService.openAlert("alert","error","Clinic is already exists.",$scope,"duplicateClinic",function(){}),!1):(APIS.ADDCLINICSETUPDATA.data=$scope.addClinicSetupData,DataManager.sendRestRequest(null,APIS.ADDCLINICSETUPDATA,function(response){response.success?ModalService.openAlert("alert","success","Save Successfully.",$scope,"success",function(){window.location.reload()}):console.log(response)},$scope.uconfig.token),void $uibModalInstance.close("add"))},$scope.ArChecked_mod=function(ArFun){0==ArFun.ar.ischecked&&$scope.modalData.arVisitTypes.push(ArFun.ar.lmeTypeID),1==ArFun.ar.ischecked&&angular.forEach($scope.modalData.arVisitTypes,function(arVal,arKey){arVal==ArFun.ar.lmeTypeID&&$scope.modalData.arVisitTypes.splice(arKey,1)})},$scope.funCheckedStatus_mod=function(funModVal){0==funModVal.fun.ischecked&&$scope.modalData.visitOptions.push({lmeType:{lmeTypeID:funModVal.fun.lmeType.lmeTypeID,code:funModVal.fun.lmeType.code,description:null},macDetails:{macID:funModVal.fun.macDetails.macID,macCode:null,macDescription:null},macLmeTypeCode:null}),1==funModVal.fun.ischecked&&angular.forEach($scope.modalData.visitOptions,function(fVal,fKey){funModVal.fun.lmeType.lmeTypeID==fVal.lmeType.lmeTypeID&&funModVal.fun.macDetails.macID==fVal.macDetails.macID&&$scope.modalData.visitOptions.splice(fKey,1)})},$scope.ClinicSetUpUpdate=function(modalData){if($scope.isCSFormSubmited=!0,$scope.ClinicSetup_Form.$invalid)return!1;$scope.modalData.facilities=$scope.selectedFacilities;var duplicateConfig=!1;return prevClinicName!=$scope.modalData.clinicName&&(angular.forEach($rootScope.clinicSetupList,function(viewValue,key){viewValue.clinicName==$scope.modalData.clinicName&&(duplicateConfig=!0)}),duplicateConfig)?(ModalService.openAlert("alert","error","Clinic is already exists.",$scope,"duplicateClinic",function(){}),!1):(APIS.MODIFYCLINICSETUPDATA.data=modalData,DataManager.sendRestRequest(null,APIS.MODIFYCLINICSETUPDATA,function(response){response.success?ModalService.openAlert("alert","success","Update Successfully.",$scope,"success",function(){window.location.reload()}):console.log(response)},$scope.uconfig.token),void $uibModalInstance.close("modify"))},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("FeeRefundPopupCtrl",["$scope","APIS","DataManager","$uibModalInstance","data","ModalService","ResourceManager",function($scope,APIS,DataManager,uibModalInstance,formData,ModalService,rm){return $scope.refundDetails={},$scope.rm=rm,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.iconsPath="assets/img/icons/",$scope.applicationsArray=formData.popupData,console.log("applicationsArray",$scope.applicationsArray),$scope.comboObj={},$scope.comboObj.refundDetailsId=formData.popupData[0].applicationId,$scope.getApplicationDetails=function(applicationId){APIS.GET_FEE_REFUND_APPLICATION_DETAILS.data={applicationId:applicationId},DataManager.sendRestRequest(null,APIS.GET_FEE_REFUND_APPLICATION_DETAILS,function(response){response.success?($scope.refundDetails=response.dataBean,console.log("refundDetails",$scope.refundDetails)):ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)},$scope.getApplicationDetails(formData.popupData[0].applicationId),$scope.cancel=function(){uibModalInstance.dismiss("cancel")},void($scope.saveRefundDetails=function(){console.log("refundDetailsId",$scope.comboObj.refundDetailsId),APIS.SAVE_FEE_REFUND.data={applicationId:$scope.comboObj.refundDetailsId},DataManager.sendRestRequest(null,APIS.SAVE_FEE_REFUND,function(response){response.success?(ModalService.openAlert("alert","success","Refund successfully"),$scope.cancel()):ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)})):($state.go("login"),!1)}]),angular.module("app").controller("FeewaiverconfigCtrl",["$scope","$rootScope","$state","$filter","APIS","DataManager","$window","$timeout","ModalService","ResourceManager",function($scope,$rootScope,$state,$filter,APIS,DataManager,$window,$timeout,ModalService,rm){if($scope.viewFeeWaiverList=[],$scope.perPage=10,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.selectedAllValue=!1,$scope.isFeeRefundDisabled=!0,$scope.isApproveEnabled=!0,$scope.isRemoveEnabled=!0,$scope.selectedRecords=[],$scope.currentPage=1,$scope.idOrder="",$scope.nameOrder="",$scope.init=function(){$scope.rm=rm,$scope.selectedOrgs=[],$scope.selectedOrgWaiverList=[],$scope.selectedMacs=[],$scope.searchParams={name:"",nricFinPassport:"",organisation:""}},$scope.searchData=function(){return""==$scope.searchParams.name&&""==$scope.searchParams.nricFinPassport&&""==$scope.searchParams.organisation?void ModalService.openAlert("alert","Required","Please provide search details to search",$scope,"alert"):void $scope.searchFeeWaiver()},$scope.selectedExpiries="",$scope.searchFeeWaiver=function(){$scope.selectedAllValue=!1,$scope.viewFeeWaiverList=[],APIS.ADMIN_FEEWAIVER_LIST.data=$scope.searchParams,DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_LIST,function(response){response.success?($scope.viewFeeWaiverList=response.dataBean,console.log("viewFeeWaiverList",$scope.viewFeeWaiverList),""==$scope.nameOrder?($scope.idOrder="DSC"==$scope.idOrder?"ASC":"DSC",$scope.idSearch()):($scope.nameOrder="DSC"==$scope.nameOrder?"ASC":"DSC",$scope.nameSearch()),""==$scope.nameOrder&&""==$scope.idOrder&&$scope.idSearch(),getSelectedRecords()):ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)},$scope.macList=[],$scope.orgList=[],$scope.orgWaiverList=[],$scope.wiverOrganizations=[],$scope.expiryList=[],$scope.idSearch=function(){""==$scope.idOrder||"DSC"==$scope.idOrder?($scope.viewFeeWaiverList=$filter("orderBy")($scope.viewFeeWaiverList,"nricFinPassport",!1),$scope.idOrder="ASC"):($scope.viewFeeWaiverList=$filter("orderBy")($scope.viewFeeWaiverList,"nricFinPassport",!0),$scope.idOrder="DSC"),$scope.nameOrder=""},$scope.nameSearch=function(){""==$scope.nameOrder||"DSC"==$scope.nameOrder?($scope.viewFeeWaiverList=$filter("orderBy")($scope.viewFeeWaiverList,"name",!1),$scope.nameOrder="ASC"):($scope.viewFeeWaiverList=$filter("orderBy")($scope.viewFeeWaiverList,"name",!0),$scope.nameOrder="DSC"),$scope.idOrder=""},$scope.loadAllCombos=function(){APIS.ADMIN_FEEWAIVER_ORG_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_ORG_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.orgList=response.dataBean.organizationList,$scope.selectedOrgWaiverList=response.dataBean.organizationSavedList,angular.forEach($scope.selectedOrgWaiverList,function(WVal,WKey){angular.forEach($scope.orgList,function(OVal,OKey){WVal.description==OVal.description&&$scope.orgList.splice(OKey,1)})}),console.log($scope.orgList))},$scope.uconfig.token),APIS.ADMIN_MAC_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_MAC_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.macList=response.dataBean)},$scope.uconfig.token),APIS.ADMIN_FEEWAIVER_EXPIRY_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_EXPIRY_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.expiryList=response.dataBean,console.log("expiryList",$scope.expiryList))},$scope.uconfig.token)}(),$scope.addToWivers=function(){for(var i=0;i<$scope.selectedOrgs.length;i++){for(var isOrgExists=!1,j=0;j<$scope.selectedOrgWaiverList.length;j++)if($scope.selectedOrgs[i].organizationId==$scope.selectedOrgWaiverList[j].organizationId){isOrgExists=!0;break}isOrgExists||$scope.selectedOrgWaiverList.push($scope.selectedOrgs[i])}for(var i=0;i<$scope.selectedOrgs.length;i++)for(var j=0;j<$scope.orgList.length;j++)if($scope.selectedOrgs[i].organizationId==$scope.orgList[j].organizationId){$scope.orgList.splice(j,1);break}$scope.selectedOrgs=[]},$scope.removeWiverOrganization=function(){ModalService.openAlert("confirm","Confirmation","Do you want to delete the Feewaiver configuration?",$scope,"feewaiverConfiguration")},$scope.$on("feewaiverConfigurationOk",function(){var data={orgID:$scope.wiverOrganizations.organizationId};APIS.REMOVE_FEEWAIVER_ORG.data=data,DataManager.sendRestRequest(null,APIS.REMOVE_FEEWAIVER_ORG,function(response){if(response.success)for(var j=0;j<$scope.selectedOrgWaiverList.length;j++)if($scope.wiverOrganizations.organizationId==$scope.selectedOrgWaiverList[j].organizationId){$scope.orgList.push($scope.selectedOrgWaiverList[j]),$scope.selectedOrgWaiverList.splice(j,1);break}},$scope.uconfig.token),$scope.selectedMacs=[],$scope.selectedExpiries=""}),$scope.selectedMacs=[],$scope.selectedMacExpData=[],$scope.loadOrgMacsData=function(){$scope.wiverOrganizations&&($scope.selectedMacs=[],APIS.ADMIN_FEEWAIVER_GET_MACEXPIRY.data={},APIS.ADMIN_FEEWAIVER_GET_MACEXPIRY.URL=String.prototype.format.apply(APIS.ADMIN_FEEWAIVER_GET_MACEXPIRY.tempURL,[$scope.wiverOrganizations.organizationId]),DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_GET_MACEXPIRY,function(response){response.success&&null!=response.dataBean?(angular.forEach(response.dataBean.macExpiry,function(sVal,sKey){$scope.selectedMacs.push(sVal.macId)}),$scope.selectedExpiries=response.dataBean.macExpiry[0].feeWaiverExpiryId,$scope.selectedMacExpData=response.dataBean.macExpiry):($scope.selectedMacs=[],$scope.selectedMacExpData=[],$scope.selectedExpiries="")},$scope.uconfig.token))},$scope.selectedMacExp=function(val){var selectedMacExpData=$scope.selectedMacExpData,isExists=!1;angular.forEach(selectedMacExpData,function(sVal,sKey){isExists||(val==sVal.macId?($scope.selectedExpiries=sVal.feeWaiverExpiryId,isExists=!0):$scope.selectedExpiries="")})},$scope.saveData=function(){var macExpArr=[];angular.forEach($scope.selectedMacs,function(mVal,mKey){var macObjs={feeWaiverExpiryId:$scope.selectedExpiries,description:null,macId:mVal,feeWaiverConfigId:null};macExpArr.push(macObjs)});var orgData={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,feeWaiverConfigId:null,orgID:$scope.wiverOrganizations.organizationId,macIDs:$scope.selectedMacs,expiryID:$scope.selectedExpiries,macExpiry:macExpArr};APIS.ADMIN_FEEWAIVER_SAVE.data=orgData,DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_SAVE,function(response){response.success?ModalService.openAlert("alert","success",response.successMessage):ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)},$scope.openFeeRedfundPopup=function(){APIS.GET_FEE_REFUND_ORGANIZATIONS_DETAILS.data={};var refundObj=$scope.selectedRecords;APIS.GET_FEE_REFUND_ORGANIZATIONS_DETAILS.URL=APIS.GET_FEE_REFUND_ORGANIZATIONS_DETAILS.tempURL+refundObj[0].applicantId.toString(),DataManager.sendRestRequest(null,APIS.GET_FEE_REFUND_ORGANIZATIONS_DETAILS,function(response){if(response.success&&response.dataBean.length>0){var popupObj={modalTitle:$scope.rm.resources.FEE_WAIVER.REFUND_APPLICATION_FOR_MEDICAL_ASSESMENT_FEE,data:{parentScope:$scope,popupData:response.dataBean},size:"lg"};ModalService.openModal("app/master/partials/maintenance/feeRefundPopup.html","FeeRefundPopupCtrl",popupObj)}else ModalService.openAlert("alert","error","Applicant is not eligible for fee waiver.")},$scope.uconfig.token)},$scope.openBulkUpdatePopup=function(){var popupObj={modalTitle:$scope.rm.resources.FEE_WAIVER.FEE_WIVER_BULK_APPROVE,data:{parentScope:$scope},size:"lg"};ModalService.openModal("app/master/partials/maintenance/bulkApprovePopup.html","BulkApproveCtrl",popupObj)},$scope.selectAll=function(){getFilteredRecordsOnPage();angular.forEach($scope.viewFeeWaiverList,function(item){item.checked=$scope.selectedAllValue}),getSelectedRecords()},$scope.onCheckClick=function(){var allCheck=!0;getFilteredRecordsOnPage();angular.forEach($scope.viewFeeWaiverList,function(item){allCheck=allCheck&&item.checked}),$scope.selectedAllValue=allCheck,getSelectedRecords()},$scope.pageChanged=function(newPage){$scope.currentPage=newPage,getSelectedRecords()},$scope.approveOrRemoveFeeWaiver=function(action){var personIdsArray=getPersonIds();APIS.APPROVE_OR_REMOVE_FEE_WAIVER.data={action:action,feeWaiverConfigDTOsList:personIdsArray},DataManager.sendRestRequest(null,APIS.APPROVE_OR_REMOVE_FEE_WAIVER,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage),$scope.searchFeeWaiver()):ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)};var getPersonIds=function(){for(var returnArray=[],i=0;i<$scope.selectedRecords.length;i++)returnArray.push({personId:$scope.selectedRecords[i].personId});return returnArray},getFilteredRecordsOnPage=function(){var end,start;return start=($scope.currentPage-1)*$scope.perPage,end=start+$scope.perPage,$scope.viewFeeWaiverList.slice(start,end)},getSelectedRecords=function(){var paginatedRecords=getFilteredRecordsOnPage();$scope.selectedRecords=[];for(var i=0;i<paginatedRecords.length;i++)1==paginatedRecords[i].checked&&$scope.selectedRecords.push(paginatedRecords[i]);resetButtons(),1==$scope.selectedRecords.length&&($scope.isFeeRefundDisabled=!1),$scope.selectedRecords.length>0&&($scope.isApproveEnabled=!1,$scope.isRemoveEnabled=!1)},resetButtons=function(){$scope.isFeeRefundDisabled=!0,$scope.isApproveEnabled=!0,$scope.isRemoveEnabled=!0};$scope.goToApplicantProfile=function(applicantId){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+applicantId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:null,visitType:null,applicantId:applicantId,applicantuserId:response.dataBean.id,applicantDetails:{applicationId:null}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.init()}]),angular.module("app").controller("LetterTemplatesCtrl",["$rootScope","$scope","$state","APIS","DataManager","$uibModal","$filter","ModalService","ResourceManager",function($rootScope,$scope,$state,APIS,DataManager,$uibModal,$filter,ModalService,lt){return $scope.template={searchTemplateName:"",searchDescription:""},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.lt=lt,$scope.animationsEnabled=!0,$scope.addComboData={},$scope.displayLetterTemplates()},$scope.searchStatusId=null,$scope.statusDesc=[{lookUpItemId:null,lookUpItemValue:"All"},{lookUpItemId:1,lookUpItemValue:"Active"},{lookUpItemId:2,lookUpItemValue:"InActive"}],$scope.displayLetterTemplates=function(){APIS.LETTERTEMPLATESETUP.data={},DataManager.sendRestRequest(null,APIS.LETTERTEMPLATESETUP,function(response){response.success&&($scope.letterTemplatesProtocalls=response.dataBean,$scope.filteredItems=$scope.letterTemplatesProtocalls,console.log(response.dataBean))},$scope.uconfig.token)},$scope.onChangeStatusCombo=function(){$scope.searchStatusName="Active",angular.forEach($scope.statusDesc,function(value,key){value.lookUpItemId==$scope.searchStatusId&&($scope.searchStatusName=value.lookUpItemValue)})},$scope.filterData=function(){$scope.filteredItems=$scope.letterTemplatesProtocalls,$scope.template.searchTemplateName&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{templateName:$scope.template.searchTemplateName})),$scope.template.searchDescription&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{templateDescription:$scope.template.searchDescription})),$scope.searchStatusId&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{status:$scope.searchStatusId}))},$scope.addLetterTemplate=function(){APIS.LETTERTEMPLATESHORTCUTS.data={},DataManager.sendRestRequest(null,APIS.LETTERTEMPLATESHORTCUTS,function(response){if(response.success){$scope.addComboData=response.dataBean;$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/letter_Add_Model_Form.html",controller:"AddLetterModalInstanceCtrl",size:"md",resolve:{addComboData:function(){return $scope.addComboData}}})}else console.log("Combo Fail:",response)},$scope.uconfig.token)},$scope.selectedObj={rowObj:null},$scope.viewLetter=function(){if(null==$scope.selectedObj.rowObj)ModalService.openAlert("alert","info",$scope.lt.resources.LETTER_TEMPLATES.SELECT_VIEWED_ROW,$scope);else{$scope.viewData_ID=$scope.selectedObj;$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/letter_View_Model_Form.html",controller:"viewletterModalInstanceCtrl",size:"md",resolve:{viewData_ID:function(){return $scope.viewData_ID.rowObj.templateId}}},$scope.uconfig.token)}},$scope.modifyLetter=function(){if(null==$scope.selectedObj.rowObj)ModalService.openAlert("alert","info",$scope.lt.resources.LETTER_TEMPLATES.SELECT_MODIFY_ROW,$scope);else{$scope.modifyData=$scope.selectedObj;$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/letter_Modify_Model_Form.html",controller:"LetterModalInstanceCtrl",size:"md",resolve:{modifyData:function(){return $scope.modifyData.rowObj.templateId}}},$scope.uconfig.token)}},$scope.deleteLetter=function(){null==$scope.selectedObj.rowObj?ModalService.openAlert("alert","info",$scope.lt.resources.LETTER_TEMPLATES.SELECT_DELETE_ROW,$scope):(ModalService.openAlert("confirm","warning",$scope.lt.resources.LETTER_TEMPLATES.DELETE_RECORD,$scope,"delete",function(){}),$scope.$on("deleteOk",function(){APIS.DELETE_LETTER_TEMPLATES.data={templateId:$scope.selectedObj.rowObj.templateId},DataManager.sendRestRequest(null,APIS.DELETE_LETTER_TEMPLATES,function(response){response.success?(ModalService.openAlert("alert","success",$scope.lt.resources.LETTER_TEMPLATES.DELETED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error","Error",$scope)},$scope.uconfig.token)}))},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("AddLetterModalInstanceCtrl",["$scope","APIS","DataManager","$uibModalInstance","addComboData","ModalService","ResourceManager",function($scope,APIS,DataManager,$uibModalInstance,addComboData,ModalService,lt){$scope.lt=lt,$scope.templateData={},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.animationsEnabled=!0,$scope.addComboData={},$scope.displayLetterTemplates()},$(document).ready(function(){setTimeout(function(){CKEDITOR.replace("editor1")},100)}),$scope.addtoContext=function(templatedata){CKEDITOR.instances.editor1.insertText(templatedata)},$scope.comboData=addComboData,console.log("AddPOP_Combodata",$scope.comboData),$scope.isFrmSubmited=!1,$scope.bodyreq=!1,$scope.bodylen=!1,$scope.saveTemplate=function(templatedata){templatedata.templateBody=CKEDITOR.instances.editor1.getData(),""==templatedata.templateBody||"undefined"==templatedata.templateBody?($scope.bodyreq=!0,$scope.addtemp.$invalid=!0):$scope.bodyreq=!1;var editorcontent=CKEDITOR.instances.editor1.getData().replace(/<[^>]*>/gi,"");return editorcontent.length>1e4?($scope.bodylen=!0,$scope.addtemp.$invalid=!0):$scope.bodylen=!1,$scope.isFrmSubmited=!0,!$scope.addtemp.$invalid&&(APIS.ADDLETTERTEMPLATES.data=templatedata,DataManager.sendRestRequest(null,APIS.ADDLETTERTEMPLATES,function(response){response.success?ModalService.openAlert("alert","success",response.successMessage,$scope,"success",function(){window.location.reload()}):console.log(response)},$scope.uconfig.token),console.log(templatedata),void $uibModalInstance.dismiss("saveTemplate"))},$scope.cancel=function(){ModalService.openAlert("confirm","warning",$scope.lt.resources.LETTER_TEMPLATES.YOU_WANT_TO_CLOSE,$scope,null,function(){$uibModalInstance.dismiss("cancel")})}}]),angular.module("app").controller("viewletterModalInstanceCtrl",["$scope","APIS","DataManager","$uibModalInstance","ModalService","viewData_ID","ResourceManager",function($scope,APIS,DataManager,$uibModalInstance,ModalService,viewData_ID,lt){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.lt=lt,$scope.viewData_ID=viewData_ID,console.log("CLviewData_ID",$scope.viewData_ID),$scope.loadViewData()},$scope.loadViewData=function(){APIS.VIEWLETTERTEMPLATES.data={templateId:$scope.viewData_ID},DataManager.sendRestRequest(null,APIS.VIEWLETTERTEMPLATES,function(response){response.success?($scope.viewData=response.dataBean[0],console.log("viewData",$scope.viewData),$(document).ready(function(){setTimeout(function(){CKEDITOR.replace("editor3"),CKEDITOR.instances.editor3.setData($scope.viewData.templateBody)},10)})):console.log(response)},$scope.uconfig.token)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("LetterModalInstanceCtrl",["$scope","APIS","DataManager","$uibModalInstance","modifyData","ModalService","ResourceManager",function($scope,APIS,DataManager,$uibModalInstance,modifyData,ModalService,lt){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.lt=lt,$scope.modifyID=modifyData,console.log("modifyID",$scope.modifyID),$scope.loadmodifyData(),$scope.loadShortcutCombo()},$scope.loadmodifyData=function(){APIS.VIEWLETTERTEMPLATES.data={templateId:$scope.modifyID},DataManager.sendRestRequest(null,APIS.VIEWLETTERTEMPLATES,function(response){response.success?($scope.modifyData=response.dataBean[0],console.log("modifyData",$scope.modifyData),$(document).ready(function(){setTimeout(function(){CKEDITOR.replace("editor2"),CKEDITOR.instances.editor2.setData($scope.modifyData.templateBody)},100)})):console.log(response)},$scope.uconfig.token)},$scope.addContext=function(appendData){CKEDITOR.instances.editor2.insertText(appendData)},$scope.loadShortcutCombo=function(){APIS.LETTERTEMPLATESHORTCUTS.data={},DataManager.sendRestRequest(null,APIS.LETTERTEMPLATESHORTCUTS,function(response){response.success?($scope.addComboData=response.dataBean,console.log($scope.addComboData)):console.log("Combo Fail:",response)},$scope.uconfig.token)},$scope.isModFrmSubmited=!1,$scope.mod_bodylen=!1,$scope.mod_bodyreq=!1,$scope.modifyTemplate=function(){$scope.modifyData.templateBody=CKEDITOR.instances.editor2.getData(),""==$scope.modifyData.templateBody||"undefined"==$scope.modifyData.templateBody||null==$scope.modifyData.templateBody?($scope.mod_bodyreq=!0,$scope.updatetemp.$invalid=!0):$scope.mod_bodyreq=!1;var editorcontent=CKEDITOR.instances.editor2.getData().replace(/<[^>]*>/gi,"");return editorcontent.length>1e4?($scope.mod_bodylen=!0,$scope.updatetemp.$invalid=!0):$scope.mod_bodylen=!1,$scope.isModFrmSubmited=!0,!$scope.updatetemp.$invalid&&($scope.modifyData.templateId=$scope.modifyID,APIS.MODIFY_LETTER_TEMPLATES.data=$scope.modifyData,void DataManager.sendRestRequest(null,APIS.MODIFY_LETTER_TEMPLATES,function(response){response.success?ModalService.openAlert("alert","success",response.successMessage,$scope,"success",function(){window.location.reload()}):console.log(response)},$scope.uconfig.token))},$scope.cancel=function(){ModalService.openAlert("confirm","warning",$scope.lt.resources.LETTER_TEMPLATES.YOU_WANT_TO_CLOSE,$scope,null,function(){$uibModalInstance.dismiss("cancel")})},$scope.init()}]),angular.module("app").controller("MasterDiagnosisPresetCtrl",["$rootScope","$scope","APIS","DataManager","ResourceManager","ModalService",function($rootScope,$scope,APIS,DataManager,rm,ModalService){return $scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){$scope.rm=rm,$scope.presetList=[],$scope.selectedRecord=null,$scope.loadPresetData()},$scope.updateSelectedRecord=function(presetRecord){$scope.selectedRecord=presetRecord},$scope.showAddPopup=function(){var popupObj={modalTitle:"Add New Diagnosis Preset",data:{parentScope:$scope,mode:"add"},size:"lg"};ModalService.openModal("app/master/partials/maintenance/addDiagnosisPreset.html","AddPresetCtrl",popupObj)},$scope.showEditPopup=function(){var popupObj={modalTitle:"Modify Diagnosis Preset",data:{parentScope:$scope,mode:"edit",record:$scope.selectedRecord},size:"lg"};ModalService.openModal("app/master/partials/maintenance/addDiagnosisPreset.html","AddPresetCtrl",popupObj)},$scope.deleteRecord=function(){var data={diagnosisPresetId:$scope.selectedRecord.diagnosisPresetId};APIS.DELETE_DIAGNOSIS_PRESET.data=data,DataManager.sendRestRequest(null,APIS.DELETE_DIAGNOSIS_PRESET,function(response){response.success?$scope.loadPresetData():ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)},$scope.deleteRecord=function(){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"delete",function(){})},$scope.$on("deleteOk",function(){var data={diagnosisPresetId:$scope.selectedRecord.diagnosisPresetId};APIS.DELETE_DIAGNOSIS_PRESET.data=data,DataManager.sendRestRequest(null,APIS.DELETE_DIAGNOSIS_PRESET,function(response){response.success?$scope.loadPresetData():ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)}),$scope.loadPresetData=function(){DataManager.sendRestRequest(null,APIS.RETRIEVE_DIAGNOSIS_PRESET,function(response){response.success?$scope.presetList=response.dataBean:ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)},void $scope.init()):($state.go("login"),!1)}]).controller("AddPresetCtrl",["$scope","$timeout","APIS","DataManager","ResourceManager","ModalService","$uibModalInstance","data",function($scope,$timeout,APIS,DataManager,rm,ModalService,uibModalInstance,formData){function loadCurrentPresetData(){var data={diagnosisPresetId:formData.record.diagnosisPresetId};APIS.GET_NODES_FOR_EDIT.data=data,DataManager.sendRestRequest(null,APIS.GET_NODES_FOR_EDIT,function(response){response.success?($scope.treeData=response.dataBean.icd10List,$scope.expandTimeOut=$timeout(expandTree,200)):ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)}function expandTree(){$scope.presetTree.expand_all(),$timeout.cancel($scope.expandTimeOut)}function loadTreeData(){APIS.GET_PARENT_NODES.data={},DataManager.sendRestRequest(null,APIS.GET_PARENT_NODES,function(response){response.success?$scope.treeData=response.dataBean:ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)}function selectValues(branch){angular.forEach(branch.children,function(item){item.hasChecked=branch.hasChecked,item.children&&item.children.length>0&&selectValues(item)})}function getSelectedIds(data){for(var i=0;i<data.length;i++)data[i].hasChecked&&$scope.idsArr.push(data[i].icd_diagnosis_Id),data[i].children&&data[i].children.length>0&&getSelectedIds(data[i].children)}$scope.init=function(){$scope.rm=rm,$scope.isPresetFormSubmitted=!1,$scope.presetObj={presetName:"",status:1},"edit"==formData.mode&&($scope.presetObj.presetName=formData.record.diagnosisPresetDescription,$scope.presetObj.status=formData.record.status),$scope.treeData=[],$scope.presetTree={},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.parentScope=formData.parentScope,$scope.expandProperty={field:"description",displayName:"",cellTemplate:'<span><input type="checkbox" ng-model="row.branch.hasChecked" ng-click="onCheckClick({branch: row.branch})">{{row.branch[expandingProperty.field]}}</span>'},"edit"!=formData.mode?loadTreeData():loadCurrentPresetData()},$scope.cancel=function(){uibModalInstance.dismiss("cancel")},$scope.loadChilds=function(branch){if(branch.hasChild&&0==branch.children.length){var data={parentId:branch.icd_diagnosis_Id};$scope.selectedBranch=branch,APIS.GET_CHILD_NODES.data=data,
DataManager.sendRestRequest(null,APIS.GET_CHILD_NODES,function(response){response.success?$scope.selectedBranch.children=response.dataBean:ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)}},$scope.updateCheckBox=function(branch){selectValues(branch)},$scope.clear=function(){$scope.presetObj.presetName="",$scope.presetObj.status=1,angular.forEach($scope.treeData,function(item){item.hasChecked=!1,item.children.length>0&&selectValues(item)})},$scope.save=function(){if(this.presetForm.$invalid)return $scope.isPresetFormSubmitted=!0,void ModalService.openAlert("alert","error","Please Provide preset name");if($scope.idsArr=[],getSelectedIds($scope.treeData),"edit"!=formData.mode){var data={diagnosisPresetDescription:$scope.presetObj.presetName,diagnosisCode:$scope.idsArr.join(","),status:$scope.presetObj.status};APIS.ADD_DIAGNOSIS_PRESET.data=data,DataManager.sendRestRequest(null,APIS.ADD_DIAGNOSIS_PRESET,function(response){response.success?($scope.parentScope.loadPresetData(),$scope.parentScope.selectedRecord=null,$scope.cancel()):ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)}else{var data={diagnosisPresetId:formData.record.diagnosisPresetId,diagnosisPresetDescription:$scope.presetObj.presetName,diagnosisCode:$scope.idsArr.join(","),status:$scope.presetObj.status};APIS.MODIFY_DIAGNOSIS_PRESET.data=data,DataManager.sendRestRequest(null,APIS.MODIFY_DIAGNOSIS_PRESET,function(response){response.success?($scope.parentScope.loadPresetData(),$scope.parentScope.selectedRecord=null,$scope.cancel()):ModalService.openAlert("alert","error",response.errorMessage)},$scope.uconfig.token)}},$scope.init()}]),angular.module("app").controller("MergeRecordsCtrl",["$scope","$rootScope","$state","APIS","DataManager","$uibModal","$filter","ModalService","ResourceManager","$window","$timeout",function($scope,$rootScope,$state,APIS,DataManager,$uibModal,$filter,ModalService,AMR,$window,$timeout){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.idOrder="",$scope.nameOrder="",$scope.init=function(){$scope.AMR=AMR,$scope.animationsEnabled=!0,$scope.selectedMergeList=[],$scope.MergeRecordsList=[]},$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.loadMergeRecordsList=function(){APIS.GETMERGERECORDSLIST.data={},DataManager.sendRestRequest(null,APIS.GETMERGERECORDSLIST,function(response){response.success?$scope.MergeRecordsList=response.dataBean:console.log(response)},$scope.uconfig.token)},$scope.searchData=function(mr){$scope.mr=mr,$scope.mr?(APIS.GETMERGERECORDSLIST.data=$scope.mr,DataManager.sendRestRequest(null,APIS.GETMERGERECORDSLIST,function(response){response.success?response.dataBean.length>0?($scope.MergeRecordsList=response.dataBean,""==$scope.nameOrder?($scope.idOrder="DSC"==$scope.idOrder?"ASC":"DSC",$scope.idSearch()):($scope.nameOrder="DSC"==$scope.nameOrder?"ASC":"DSC",$scope.nameSearch()),""==$scope.nameOrder&&""==$scope.idOrder&&$scope.idSearch()):ModalService.openAlert("alert","error","No records found.",$scope):console.log(response)},$scope.uconfig.token)):ModalService.openAlert("alert","error","Please enter atleast field.",$scope)},$scope.idSearch=function(){""==$scope.idOrder||"DSC"==$scope.idOrder?($scope.MergeRecordsList=$filter("orderBy")($scope.MergeRecordsList,"nricFinPassport",!1),$scope.idOrder="ASC"):($scope.MergeRecordsList=$filter("orderBy")($scope.MergeRecordsList,"nricFinPassport",!0),$scope.idOrder="DSC"),$scope.nameOrder=""},$scope.nameSearch=function(){""==$scope.nameOrder||"DSC"==$scope.nameOrder?($scope.MergeRecordsList=$filter("orderBy")($scope.MergeRecordsList,"applicantName",!1),$scope.nameOrder="ASC"):($scope.MergeRecordsList=$filter("orderBy")($scope.MergeRecordsList,"applicantName",!0),$scope.nameOrder="DSC"),$scope.idOrder=""},$scope.merged=!1,$scope.SelecetedMergeRec=function(MergeRec){if($scope.merged=!0,1==MergeRec.selectedMergeRow){for(var i=0;i<$scope.selectedMergeList.length;i++)if($scope.selectedMergeList[i].personId==MergeRec.mrcs.personId)return console.log("Duplciate"),void ModalService.openAlert("alert","error","This record is already selected for merging",$scope);$scope.selectedMergeList.push(MergeRec.mrcs),console.log("selected",$scope.selectedMergeList)}0==MergeRec.selectedMergeRow&&angular.forEach($scope.selectedMergeList,function(modvalue,modkey){MergeRec.mrcs.personId==modvalue.personId&&(console.log(modkey),$scope.selectedMergeList.splice(modkey,1))})},$scope.deleteRow=function(delVal){ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"delete",function(){}),$scope.$on("deleteOk",function(){angular.forEach($scope.selectedMergeList,function(modvalue,modkey){delVal.addM.personId==modvalue.personId&&($scope.selectedMergeList.splice(modkey,1),$scope.chk="chk_"+delVal.addM.personId,$scope.chk=!1)})})},$scope.MergeRecordsData=function(){if($scope.selectedMergeList.length>=2){$scope.mergeData=$scope.selectedMergeList;var MergeModalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/Mergerecords-modal-form.html",controller:"MergeModalInstanceCtrl",size:"md",resolve:{mergeData:function(){return $scope.mergeData}}},$scope.uconfig.token);MergeModalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init(),$scope.searchData($scope.mr)},function(){console.log("Modal dismissed at: "+new Date),$scope.init(),$scope.searchData($scope.mr)})}else ModalService.openAlert("alert","error","At least 2 records need to selected to do a merge.",$scope)},$scope.GetunMerge=function(ID){$scope.priperID=ID;var UnMergeModalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/UnMergerecords-modal-form.html",controller:"UnMergeModalInstanceCtrl",size:"md",resolve:{priperID:function(){return $scope.priperID}}},$scope.uconfig.token);UnMergeModalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init(),$scope.searchData($scope.mr)},function(){console.log("Modal dismissed at: "+new Date),$scope.init(),$scope.searchData($scope.mr)})},$scope.goToApplicantProfile=function(applicantId){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+applicantId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:null,visitType:null,applicantId:applicantId,applicantuserId:response.dataBean.id,applicantDetails:{applicationId:null}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("MergeModalInstanceCtrl",["$scope","APIS","DataManager","$uibModalInstance","mergeData","ModalService","ResourceManager",function($scope,APIS,DataManager,$uibModalInstance,mergeData,ModalService,AMRec){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.AMRec=AMRec,$scope.mergeDataList=mergeData,$scope.MergedDataList={},$scope.personIDs=[]},$scope.selectedMObj={personId:null},$scope.Er="",$scope.saveMergeData=function(){angular.forEach($scope.mergeDataList,function(mVal,mKey){$scope.personIDs.push(mVal.personId)}),$scope.MergedDataList={action:"merge",personIDs:$scope.personIDs,primaryPersonId:null,primaryPersonIdForMerge:$scope.selectedMObj.personId},null==$scope.selectedMObj.personId?ModalService.openAlert("alert","error","Select Primary Record.",$scope):(APIS.MERGERECORDS.data=$scope.MergedDataList,DataManager.sendRestRequest(null,APIS.MERGERECORDS,function(response){response.success?ModalService.openAlert("alert","success","Saved Successfully",$scope,"success",function(){$uibModalInstance.dismiss("Reject")}):console.log(response)},$scope.uconfig.token))},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("UnMergeModalInstanceCtrl",["$scope","APIS","DataManager","$uibModalInstance","priperID","ModalService","ResourceManager",function($scope,APIS,DataManager,$uibModalInstance,priperID,ModalService,UnMR){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.UnMR=UnMR,console.log("popId",priperID),$scope.priperID=priperID,$scope.loadUnMergeList(),$scope.UnMergeRecordsList={},$scope.personIDs=[]},$scope.selectedUMObj={personId:null},$scope.loadUnMergeList=function(){APIS.GETUNMERGERECORDSLIST.URL="adminSettings/getMergedRecords/"+$scope.priperID,DataManager.sendRestRequest(null,APIS.GETUNMERGERECORDSLIST,function(response){response.success?($scope.UnMergeRecordsList=response.dataBean,angular.forEach($scope.UnMergeRecordsList,function(selVal,selKey){selVal.personId==selVal.primaryPersonId&&($scope.selectedUMObj.personId=selVal.primaryPersonId),$scope.personIDs.push(selVal.personId)})):console.log(response)},$scope.uconfig.token)},$scope.UpdateMergeData=function(){$scope.UnMergedDataList={action:"merge",personIDs:$scope.personIDs,primaryPersonId:null,primaryPersonIdForMerge:$scope.selectedUMObj.personId},APIS.MERGERECORDS.data=$scope.UnMergedDataList,DataManager.sendRestRequest(null,APIS.MERGERECORDS,function(response){response.success?(ModalService.openAlert("alert","success","Save Successfully",$scope),$uibModalInstance.dismiss("Reject")):console.log(response)},$scope.uconfig.token)},$scope.UnMergeData=function(){$scope.UnMergedDataList={action:"unmerge",personIDs:$scope.personIDs,primaryPersonId:null,primaryPersonIdForMerge:$scope.selectedUMObj.personId},APIS.MERGERECORDS.data=$scope.UnMergedDataList,DataManager.sendRestRequest(null,APIS.MERGERECORDS,function(response){response.success?($uibModalInstance.dismiss("cancel"),ModalService.openAlert("alert","success","UnMerge Successfully",$scope),$uibModalInstance.dismiss("Reject")):console.log(response)},$scope.uconfig.token)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("PaymentDetailsCtrl",["$scope","$rootScope","$state","APIS","DataManager","ResourceManager","ModalService","$uibModal","$filter","$window","$http",function($scope,$rootScope,$state,APIS,DataManager,paymntDtls,ModalService,$uibModal,$filter,$window,$http){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.paymntDtls=paymntDtls,$scope.baseUrl=DataManager.url+"api/",$scope.statuses=[{id:"N",desc:"Pending"},{id:"PP",desc:"Partially Pending"},{id:"Y",desc:"Completed"},{id:"C",desc:"Cancelled"},{id:"A",desc:"Abort"},{id:"ALL",desc:"All"}],$scope.pstatus="ALL",$scope.init=function(){$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.animationsEnabled=!0,$scope.activeMacPath="assets/img/icons/icon_",$scope.inactiveMacPath="assets/img/icons/Grey_C_",$scope.formats=["dd-MMM-yyyy","yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.popup1={opened:!1}},$scope.open1=function(){$scope.popup1.opened=!0},$scope.clear=function(){$scope.filterFrom=null,$scope.filterTo=null},$scope.fromDate="",$scope.init(),$scope.getPaymentlist=function(){var refNo="",patName="",nric="",pstatus="";refNo=$scope.salesDraftNumber?$scope.salesDraftNumber:"",nric=$scope.nric?$scope.nric:"",patName=$scope.patName?$scope.patName:"",pstatus=$scope.pstatus?$scope.pstatus:"";var date="";$scope.fromDate||(date=$filter("date")($scope.fromDate,"dd-MMM-yyyy")),APIS.GET_PAYMENT_LIST.URL=String.prototype.format.apply(APIS.GET_PAYMENT_LIST.tempURL,[nric,refNo,patName,pstatus,date]),DataManager.sendRestRequest(null,APIS.GET_PAYMENT_LIST,function(response){response.data?$scope.filteredItems=response.data:console.log("Unable get data","ErrorMessage--",response.errorMessage)},$scope.uconfig.token)},$scope.getPaymentlist(),$scope.selectPaymentDtls=function(refN0){$scope.templateUrl="",$scope.tempURL="",$scope.currentRefN0=refN0,$scope.templateUrl="app/master/partials/maintenance/payment_update_modal_form.html",APIS.GET_PAYMENT_DETAILS.URL=String.prototype.format.apply(APIS.GET_PAYMENT_DETAILS.tempURL,[refN0]),DataManager.sendRestRequest(null,APIS.GET_PAYMENT_DETAILS,function(response){response?$scope.showModelpopup(response):console.log("Unable to get data for selected :","ErrorMessage--",response.errorMessage)},$scope.uconfig.token)},$scope.showModelpopup=function(response){$scope.paymentData=response;var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:$scope.templateUrl,controller:"PaymentUpdateModalInstanceCtrl",size:"md",resolve:{paymentData:function(){return $scope.paymentData}}});modalInstance.result.then(function(){$scope.init()})},void($scope.generateInvoicePdf=function(applicationId){APIS.GENERATE_PDF_PAYMENTGATEWAY.URL=String.prototype.format.apply(APIS.GENERATE_PDF_PAYMENTGATEWAY.tempURL,[applicationId]),DataManager.sendRestRequest(null,APIS.GENERATE_PDF_PAYMENTGATEWAY,function(response){"success"==response.data[0]?ModalService.openAlert("alert","PAYMENT DETAILS","PDF Generated Successfully",$scope,"alert"):ModalService.openAlert("alert","PAYMENT DETAILS","Failed to Generated PDF",$scope,"alert")},$scope.uconfig.token)})):($state.go("login"),!1)}]),angular.module("app").controller("PaymentUpdateModalInstanceCtrl",["$scope","APIS","DataManager","ResourceManager","ModalService","paymentData","$uibModalInstance","$window","ResourceManager",function($scope,APIS,DataManager,ResourceManager,ModalService,paymentData,$uibModalInstance,$window,paymntDtls){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.paymntDtls=paymntDtls,$scope.uconfig?($scope.paymentData=paymentData,null==paymentData.tm_currency&&($scope.paymentData.tm_currency="SGD"),$scope.cancel=function(){$uibModalInstance.close("cancel")},$scope.update=function(){return null==paymentData.tm_ccnum?(ModalService.openAlert("alert","UPDATE PAYMENT DETAILS","Please enter Card Number",$scope,"alert"),!1):null==paymentData.tm_approvalCode?(ModalService.openAlert("alert","UPDATE PAYMENT DETAILS","Please enter Approve Code",$scope,"alert"),!1):null==paymentData.tm_bankRespCode?(ModalService.openAlert("alert","UPDATE PAYMENT DETAILS","Please enter Response Code",$scope,"alert"),!1):(paymentData.payment_yn="Y",APIS.UPDATE_PAYMENT_DETAILS.data=$scope.paymentData,void DataManager.sendRestRequest(null,APIS.UPDATE_PAYMENT_DETAILS,function(response){"success"==response.data[0]?(ModalService.openAlert("alert","UPDATE PAYMENT DETAILS","successfully updated",$scope,"alert"),$scope.cancel(),window.location.reload()):(ModalService.openAlert("alert","UPDATE PAYMENT DETAILS","failed to update",$scope,"alert"),$scope.cancel()),$scope.cancel()},$scope.uconfig.token))},void($scope.filterValue=function($event){isNaN(String.fromCharCode($event.keyCode))&&$event.preventDefault()})):($state.go("login"),!1)}]),angular.module("app").controller("ProfileUpdateCtrl",["$scope","$rootScope","$state","APIS","DataManager","ResourceManager","ModalService","$uibModal","$filter","$window",function($scope,$rootScope,$state,APIS,DataManager,prfleupdt,ModalService,$uibModal,$filter,$window){function modifydata(listdata){return angular.forEach(listdata,function(value,key){if(value.licenseNo&&(value.licenseNo=value.licenseNo.replace(/,/g,"<br/>")),value.iconSet=[],value.macNo)for(var macNoArray=value.macNo.split(","),expiredArray=value.expired.split(","),i=0;i<macNoArray.length;i++)null!=macNoArray[i]&&"null"!=macNoArray[i]&&null!=expiredArray[i]&&"null"!=expiredArray[i]&&value.iconSet.push({macNo:macNoArray[i],isExpired:expiredArray[i]})}),listdata}return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.idOrder="",$scope.nameOrder="",$scope.prfleupdt=prfleupdt,$scope.init=function(){$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.listdata={},$scope.profileData={},$scope.currentProfileId="",$scope.animationsEnabled=!0,$scope.activeMacPath="assets/img/icons/icon_",$scope.inactiveMacPath="assets/img/icons/Grey_C_",$scope.formats=["dd-MMM-yyyy","yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.popup1={opened:!1},$scope.popup2={opened:!1},$scope.profileList()},$scope.profileList=function(){APIS.ADMIN_PROFILE_UPDATE.data={},DataManager.sendRestRequest(null,APIS.ADMIN_PROFILE_UPDATE,function(response){response.success?(console.log("response.dataBean",response.dataBean),$scope.listdata=modifydata(response.dataBean),$scope.filteredItems=$scope.listdata,""==$scope.nameOrder?($scope.idOrder="DSC"==$scope.idOrder?"ASC":"DSC",$scope.idSearch()):($scope.nameOrder="DSC"==$scope.nameOrder?"ASC":"DSC",$scope.nameSearch()),""==$scope.nameOrder&&""==$scope.idOrder&&$scope.idSearch()):console.log("TableData:","ErrorMessage--",response.errorMessage)},$scope.uconfig.token)},$scope.idSearch=function(){""==$scope.idOrder||"DSC"==$scope.idOrder?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"nricOrFin",!1),$scope.idOrder="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,"nricOrFin",!0),$scope.idOrder="DSC"),$scope.nameOrder=""},$scope.nameSearch=function(){""==$scope.nameOrder||"DSC"==$scope.nameOrder?($scope.filteredItems=$filter("orderBy")($scope.filteredItems,'firstName + " " + lastName',!1),$scope.nameOrder="ASC"):($scope.filteredItems=$filter("orderBy")($scope.filteredItems,'firstName + " " + lastName',!0),$scope.nameOrder="DSC"),$scope.idOrder=""},$scope.isFrmSubmited=!1,$scope.filterData=function(){return $scope.isFrmSubmited=!0,!$scope.profileupdt.$invalid&&($scope.filterFrom>$scope.filterTo?(ModalService.openAlert("alert","warning","Submitted From Date should be less than To Date",$scope),!1):($scope.fromdate="",$scope.todate="",$scope.filteredItems=$scope.listdata,"undefined"!=typeof $scope.filterFrom&&""!=$scope.filterFrom&&($scope.fromdate=$scope.filterFrom,"undefined"!=typeof $scope.filterTo&&""!=$scope.filterTo&&($scope.todate=$scope.filterTo),APIS.ADMIN_PROFILE_UPDATE.data={submittedFrom:$scope.fromdate,submittedTo:$scope.filterTo},DataManager.sendRestRequest(null,APIS.ADMIN_PROFILE_UPDATE,function(response){response.success?$scope.filteredItems=response.dataBean:console.log("No Records Found")},$scope.uconfig.token)),$scope.filterNircOrFin&&($scope.filteredItems=$filter("filter")($scope.listdata,{nricOrFin:$scope.filterNircOrFin})),$scope.filterLicense&&($scope.filteredItems=$filter("filter")($scope.listdata,{licenseNo:$scope.filterLicense})),void($scope.filterName&&($scope.filteredItems=$filter("filter")($scope.listdata,{applicantName:$scope.filterName})))))},$scope.selectedProfile=function(applicantId,ProfId,status){$scope.templateUrl="",$scope.tempURL="",$scope.currentProfileId=ProfId,"Approved"==status?$scope.templateUrl="app/master/partials/maintenance/profile_view_approved_form.html":"Rejected"==status?$scope.templateUrl="app/master/partials/maintenance/profile_view_rejected_form.html":$scope.templateUrl="app/master/partials/maintenance/profile_view_modal_form.html",APIS.ADMIN_SELECTED_GET_PROFILE.URL=String.prototype.format.apply(APIS.ADMIN_SELECTED_GET_PROFILE.tempURL,[ProfId]),APIS.GET_PROFILE.data={},DataManager.sendRestRequest(null,APIS.ADMIN_SELECTED_GET_PROFILE,function(response){response.success?$scope.setApplicantProfileDtls(applicantId,response):console.log("Unable to open Modal:","ErrorMessage--",response.errorMessage)},$scope.uconfig.token)},$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.clear=function(){$scope.filterFrom=null,$scope.filterTo=null},$scope.setApplicantProfileDtls=function(applicantId,profileResponse){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+applicantId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:null,visitType:null,applicantId:applicantId,applicantuserId:response.dataBean.id,applicantDetails:{applicationId:null}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$scope.showModelpopup(profileResponse)):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},$scope.showModelpopup=function(response){$scope.profileData=response.dataBean;var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:$scope.templateUrl,controller:"ProfileUpdateModalInstanceCtrl",size:"lg",resolve:{profileData:function(){return $scope.profileData}}});modalInstance.result.then(function(){$scope.init()})},$scope.goToApplicantProfile=function(applicantId){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+applicantId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:null,visitType:null,applicantId:applicantId,applicantuserId:response.dataBean.id,applicantDetails:{applicationId:null}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("ProfileUpdateModalInstanceCtrl",["$scope","APIS","DataManager","ResourceManager","$uibModalInstance","profileData","$window","ResourceManager",function($scope,APIS,DataManager,ResourceManager,$uibModalInstance,profileData,$window,prfleupdt){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.prfleupdt=prfleupdt,$scope.uconfig?($scope.profileData=profileData,$scope.viewdoc=function(documentdata){var content=documentdata,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+documentdata,"_blank","location=0,enableviewportscale=yes")},$scope.approve=function(){$scope.profileData.action="Approve",APIS.ADMIN_PROFILE_UPDATE_APPROVAL.data=$scope.profileData,DataManager.sendRestRequest(null,APIS.ADMIN_PROFILE_UPDATE_APPROVAL,function(response){response.success?$uibModalInstance.close("Approved"):$uibModalInstance.close("Approved"),$uibModalInstance.close("Cancel")},$scope.uconfig.token)},$scope.reject=function(){$scope.profileData.action="Reject",APIS.ADMIN_PROFILE_UPDATE_APPROVAL.data=$scope.profileData,DataManager.sendRestRequest(null,APIS.ADMIN_PROFILE_UPDATE_APPROVAL,function(response){response.success?$uibModalInstance.close("Cancel"):$uibModalInstance.close("Cancel")},$scope.uconfig.token),$uibModalInstance.close("Cancel")},void($scope.cancel=function(){$uibModalInstance.close("cancel")})):($state.go("login"),!1)}]),angular.module("app").controller("RoleSetupCtrl",["$rootScope","$scope","$state","APIS","DataManager","ModalService","ResourceManager",function($rootScope,$scope,$state,APIS,DataManager,ModalService,role){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.role=role,$scope.roleSetupTemplate()},$scope.roleSetupTemplate=function(){APIS.GET_ROLESETUP_MASTER.roledata={},DataManager.sendRestRequest(null,APIS.GET_ROLESETUP_MASTER,function(response){response.success?(console.log("data-",response.dataBean),$scope.roledata=response.dataBean,console.log(response.dataBean)):console.log(response)},$scope.uconfig.token)},$scope.isRollFormSubmited=!1,$scope.roleUpdate=function(role){return $scope.isRollFormSubmited=!0,!$scope.Roll_Form.$invalid&&($scope.updateedList=[],console.log("role.roledata",role.roledata),APIS.ROLESETUP_UPDATE.URL="security/updateRoles",APIS.ROLESETUP_UPDATE.data=role.roledata,void DataManager.sendRestRequest(null,APIS.ROLESETUP_UPDATE,function(response){response.success?(1==$scope.tempID,ModalService.openAlert("alert","success",response.successMessage,$scope)):console.log(response)},$scope.uconfig.token))},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("SearchUserCtrl",["$rootScope","$scope","$state","APIS","DataManager","$uibModal","$filter","ModalService","ResourceManager",function($rootScope,$scope,$state,APIS,DataManager,$uibModal,$filter,ModalService,ASU){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.searchUserList=[],$scope.filteredItems=[],$rootScope.searchUserRoleList=[],$scope.statusObj=[{lookUpItemId:1,lookUpItemValue:"Active"},{lookUpItemId:2,lookUpItemValue:"Inactive"},{lookUpItemId:null,lookUpItemValue:"All"},{lookUpItemId:99,lookUpItemValue:"Locked"}],$scope.selectedUserObj={rowObj:null,roleList:[],salList:[],designList:[],qualList:[],countryList:[],nationsList:[],ectyList:[],genList:[],clinicList:[],specialityList:[],sporeKey:1,sporeTxt:"Singapore"},$scope.init=function(){$scope.ASU=ASU,$scope.selectedUserObj.rowObj=null,$scope.seachKeys={nirc:null,userName:null,role:null,status:{lookUpItemId:null,lookUpItemValue:"All"}},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},APIS.ADMIN_GET_SEARCH_USER.data={},DataManager.sendRestRequest(null,APIS.ADMIN_GET_SEARCH_USER,function(response){response.success&&($scope.searchUserList=response.dataBean,$scope.filteredItems=response.dataBean)},$scope.uconfig.token)},$scope.loadRoleCombo=function(){DataManager.sendRestRequest(null,APIS.GET_BUSSINESS_USER_ROLES,function(response){response.success&&($scope.selectedUserObj.roleList=response.dataBean)},$scope.uconfig.token)}(),$scope.loadCombos=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.URL+"SAL,DESIGNATION,QUALIFICATION,NATIONS, ECTY, GEN, country,ORGANIZATION",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.selectedUserObj.salList=response.dataBean.SAL,$scope.selectedUserObj.designList=response.dataBean.DESIGNATION,$scope.selectedUserObj.qualList=response.dataBean.QUALIFICATION,$scope.selectedUserObj.nationsList=response.dataBean.NATIONS,$scope.selectedUserObj.ectyList=response.dataBean.ECTY,$scope.selectedUserObj.genList=response.dataBean.GEN,$scope.selectedUserObj.countryList=response.dataBean.country,angular.forEach($scope.selectedUserObj.countryList,function(value,key){value.lookUpItemValue==$scope.selectedUserObj.sporeTxt&&($scope.selectedUserObj.sporeKey=key)})})}(),$scope.loadClinicsCombo=function(){APIS.GETCLINICSETUPLIST.data={},DataManager.sendRestRequest(null,APIS.GETCLINICSETUPLIST,function(response){response.success?($scope.selectedUserObj.clinicList=response.dataBean,console.log("clinicList : ",$scope.clinicList)):console.log(response)},$scope.uconfig.token)}(),$scope.loadSpecialityCombo=function(){DataManager.sendRestRequest(null,APIS.ADMIN_GET_USER_SPECIALITIES,function(response){response.success&&($scope.selectedUserObj.specialityList=response.dataBean,console.log("speciality LIST : ",$scope.specialityList))},$scope.uconfig.token)}(),$scope.filterUser=function(){return $scope.isFrmSubmited=!0,!$scope.filterUserForm.$invalid&&(console.log($scope.seachKeys.status.lookUpItemId),$scope.filteredItems=$scope.searchUserList,console.log("Before filter count ",$scope.filteredItems.length),$scope.seachKeys.nirc&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{nric_fin:$scope.seachKeys.nirc})),$scope.seachKeys.userName&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{username:$scope.seachKeys.userName})),$scope.seachKeys.role&&($scope.filteredItems=$filter("filter")($scope.filteredItems,{roleName:$scope.seachKeys.role})),$scope.seachKeys.status.lookUpItemId&&(99===$scope.seachKeys.status.lookUpItemId?$scope.filteredItems=$filter("filter")($scope.filteredItems,{isAccountNonLocked:"N"}):$scope.filteredItems=$filter("filter")($scope.filteredItems,{status:$scope.seachKeys.status.lookUpItemId})),void console.log("After filter count ",$scope.filteredItems.length))},$scope.addUser=function(){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/searchuser_add_form.html",controller:"SearchUsrAddModalCtrl",size:"lg",resolve:{selectedUserObj:function(){return $scope.selectedUserObj.rowObj=null,$scope.selectedUserObj}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date)})},$scope.editUser=function(){if(console.log("selected user : "+$scope.selectedUserObj.rowObj),null!=$scope.selectedUserObj.rowObj){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/searchuser_add_form.html",controller:"SearchUsrAddModalCtrl",size:"lg",resolve:{selectedUserObj:function(){return $scope.selectedUserObj}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date),$scope.selectedUserObj.rowObj=null})}else ModalService.openAlert("alert","info","Please select User",$scope)},$scope.viewUserProfile=function(userObj){if(console.log("selected userObj : ",userObj),null!=userObj){$scope.selectedUserObj.rowObj=userObj;var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/searchuser_view_form.html",controller:"SearchUsrAddModalCtrl",size:"lg",resolve:{selectedUserObj:function(){return $scope.selectedUserObj}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.selectedUserObj.rowObj=null},function(){console.log("Modal dismissed at: "+new Date),$scope.selectedUserObj.rowObj=null})}else ModalService.openAlert("alert","info","Please select User",$scope)},$scope.deleteUser=function(){console.log("selected user : "+$scope.selectedUserObj.rowObj),null!=$scope.selectedUserObj.rowObj?ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"delete",function(){}):ModalService.openAlert("alert","info","Please select User",$scope)},$scope.$on("deleteOk",function(){$scope.selectedUserId=$scope.selectedUserObj.rowObj.id;var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/searchuser_reason_form.html",controller:"SearchUserDelCtrl",size:"xs",resolve:{selectedUserId:function(){return $scope.selectedUserId}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date),$scope.selectedUserObj={rowObj:null}})}),$scope.unlockUser=function(){console.log("selected user",$scope.selectedUserObj.rowObj),null!=$scope.selectedUserObj.rowObj?"N"==$scope.selectedUserObj.rowObj.isAccountNonLocked?ModalService.openAlert("confirm","warning","Are you sure you want to unlock the selected record?",$scope,"unlock",function(){}):ModalService.openAlert("alert","info","Selected user is not locked",$scope):ModalService.openAlert("alert","info","Please select User",$scope);
},$scope.$on("unlockOk",function(){$scope.searchuserunlockID=$scope.selectedUserObj.rowObj.id;var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/maintenance/searchuser_unlock_reason_form.html",controller:"SearchUserunlkCtrl",size:"xs",resolve:{searchuserunlockID:function(){return $scope.searchuserunlockID}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.init()},function(){console.log("Modal dismissed at: "+new Date),$scope.selectedUserObj={rowObj:null}})}),void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("SearchUserDelCtrl",["$rootScope","$scope","APIS","DataManager","$uibModalInstance","selectedUserId","ResourceManager","ModalService","$http","$filter","CAASConfig",function($rootScope,$scope,APIS,DataManager,$uibModalInstance,selectedUserId,ASUD,ModalService,$http,$filter,CAASConfig){return $scope.selectedUserId=selectedUserId,$scope.ASUD=ASUD,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){},$scope.isdelreasonFrmSubmited=!1,$scope.saveDeletedReason=function(){return $scope.isdelreasonFrmSubmited=!0,!$scope.Reasonfrm.$invalid&&($scope.deleteUserObj={id:$scope.selectedUserId,reason:$scope.reason},console.log("delOBJ",$scope.deleteUserObj),APIS.ADMIN_DELETE_SEARCH_USER.data=$scope.deleteUserObj,void DataManager.sendRestRequest(null,APIS.ADMIN_DELETE_SEARCH_USER,function(response){response.success?ModalService.openAlert("alert","success","Deleted Successfully",$scope,"success",function(){}):ModalService.openAlert("alert","error","Error",$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token))},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("SearchUserunlkCtrl",["$rootScope","$scope","APIS","DataManager","$uibModalInstance","searchuserunlockID","ResourceManager","ModalService","$http","$filter","CAASConfig",function($rootScope,$scope,APIS,DataManager,$uibModalInstance,searchuserunlockID,ASUL,ModalService,$http,$filter,CAASConfig){return $scope.searchuserunlockID=searchuserunlockID,$scope.ASUL=ASUL,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.init=function(){},$scope.isunlockreasonFrmSubmited=!1,$scope.saveUnlockReason=function(){return $scope.isunlockreasonFrmSubmited=!0,!$scope.UnlockReasonfrm.$invalid&&($scope.unlockUserObj={id:$scope.searchuserunlockID,reason:$scope.reason},console.log("unlockOBJ",$scope.unlockUserObj),APIS.ADMIN_UNLOCK_SEARCH_USER.data=$scope.unlockUserObj,void DataManager.sendRestRequest(null,APIS.ADMIN_UNLOCK_SEARCH_USER,function(response){response.success?ModalService.openAlert("alert","success","User is unlocked Successfully",$scope,"success",function(){}):ModalService.openAlert("alert","error","Error",$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token))},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},void $scope.init()):($state.go("login"),!1)}]),angular.module("app").controller("SearchUsrAddModalCtrl",["$rootScope","$scope","APIS","DataManager","$uibModalInstance","selectedUserObj","ResourceManager","ModalService","$http","$filter","CAASConfig",function($rootScope,$scope,APIS,DataManager,$uibModalInstance,selectedUserObj,ASU,ModalService,$http,$filter,CAASConfig){if($scope.selUserObj=selectedUserObj.rowObj,$scope.ASU=ASU,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.currentDt=new Date,$scope.init=function(){$scope.user={selectedRoles:[]},$scope.selectedSpecialityList=[],$scope.selectedClinics=[],$scope.formats=["dd-MMM-yyyy","dd/MM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dateOptions={startingDay:1,showWeeks:!1},$scope.pastDateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.futureDateOptions={minDate:new Date,startingDay:1,showWeeks:!1},$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.dobopen1=function(){$scope.dobpopup1.opened=!0},$scope.dobpopup1={opened:!1},$scope.apptFromopen1=function(){$scope.apptFrompopup1.opened=!0},$scope.apptFrompopup1={opened:!1},$scope.apptToopen1=function(){$scope.apptTopopup1.opened=!0},$scope.apptTopopup1={opened:!1},$scope.accExpDtopen1=function(){$scope.accExpDtpopup1.opened=!0},$scope.accExpDtpopup1={opened:!1}},$scope.init();var getPostalAddress=function(postalCode,index,ln1,ln2){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean.building?($scope.userNewDataObj.person.address[index].line1=response.dataBean.building,$scope.userNewDataObj.person.address[index].line2=response.dataBean.unit,$("#"+ln1).removeAttr("disabled"),$("#"+ln2).removeAttr("disabled")):($scope.userNewDataObj.person.address[index].line1=null,$scope.userNewDataObj.person.address[index].line2=null,$("#"+ln1).attr("disabled","disabled"),$("#"+ln2).attr("disabled","disabled"))})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode,ln1,ln2){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index,ln1,ln2):($scope.userNewDataObj.person.address[index].line1=null,$scope.userNewDataObj.person.address[index].line2=null,$("#"+ln1).removeAttr("disabled"),$("#"+ln2).removeAttr("disabled"))},$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurOfficeNum=!1,$scope.onBlurOfficeNumFn=function(){$scope.onBlurOfficeNum=!0},$scope.duplicateUser={},$scope.duplicateNRIC={},$scope.prevEmail=null,$scope.isEmailExsist=function(){$scope.duplicateUser={},$scope.prevEmail!==$scope.userNewDataObj.person.email&&(APIS.USER_EXSIST.data={email:$scope.userNewDataObj.person.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response}))},$scope.isValidNRIC=!0,$scope.prevnric=null,$scope.isNRICExsist=function(){if($scope.duplicateNRIC={},$scope.userNewDataObj.person.nric){if($scope.isValidNRIC=CAASConfig.isValidateNRIC($scope.userNewDataObj.person.nric),!$scope.isValidNRIC)return!1;$scope.prevnric!==$scope.userNewDataObj.person.nric&&(APIS.NRIC_EXSIST.data={nric:$scope.userNewDataObj.person.nric},DataManager.sendRestRequest(null,APIS.NRIC_EXSIST,function(response){$scope.duplicateNRIC=response}))}},$scope.userNewDataObj={status:1,username:null,password:null,emailId:null,employeeId:null,isAccountNonExpired:null,isAccountNonLocked:null,isCredentialsNonExpired:null,isEnabled:null,passwordQuestion:null,passwordAnswer:null,passwordChangedDate:null,userFacilities:[{roles:[]}],isFirstLogin:null,loginFailedAttempts:null,person:{personId:null,firstName:null,middleName:null,lastName:null,dob:null,gender:{lookUpId:null,lookUpValue:null},phoneNo:null,homePhoneNo:null,personIdentificationNum:null,primaryIdentificationNUmber:null,salutation:null,ethnicity:null,religion:null,maritalStatus:null,nationality:{lookUpId:null,lookUpValue:null},qualification:{lookUpId:null,lookUpValue:null},education:null,occupation:null,citizenship:null,age:null,race:null,otherRace:null,nric:null,customerId:null,othercitizenship:null,otherReligion:null,otherOccupation:null,otherEducation:null,otherNationality:null,referralAddress:null,organization:null,professionalDetailsList:null,period_of_appt_from:null,period_of_appt_to:null,photo:null,dateofIssue:null,email:null,passportNo:null,passportCountry:null,totpCode:null,address:[{addressId:null,addressType:1,transactionId:null,transactionType:null,country:{countryId:null,countryName:null,countryCode:null},postalCode:null,line1:null,line2:null,floor:null,unit:null,state:null,workPhoneNo:null,phoneExt:null,fax:null,phoneNo:null,street:null,block:null,building:null,email:null,city:null,line3:null},{addressId:null,addressType:3,transactionId:null,transactionType:675,country:{countryId:null,countryName:null,countryCode:null},postalCode:null,line1:null,line2:null,floor:null,unit:null,state:null,workPhoneNo:null,phoneExt:null,fax:null,phoneNo:null,street:null,block:null,building:null,email:null,city:null,line3:null}],prospective:null,licenseNo:null},totpAuthURL:null,totpKey:null,totpFailedAttempts:null,isTOTPAccountNonLocked:null,faxNo:null,mcrNo:null,acExpirtDate:null,designation:null,userSpecialities:null,userSpecialitiesSet:[],userClinics:[{userClinicsId:null,userId:null,clinicsId:null}],userFunctions:null,lmeVisitTypes:[],arVisitType:[],reason:null},$scope.lmeVisitTypes=[{lmeTypeId:1,code:null,description:"Initial",applicationTypeYN:"\0",frequencyOnlyYN:"\0",checked:0},{lmeTypeId:2,code:null,description:"Renewal",applicationTypeYN:"\0",frequencyOnlyYN:"\0",checked:0},{lmeTypeId:3,code:null,description:"Board",applicationTypeYN:"\0",frequencyOnlyYN:"\0",checked:0},{lmeTypeId:4,code:null,description:"Age 60",applicationTypeYN:"\0",frequencyOnlyYN:"\0",checked:0}],$scope.arVisitType=[{lmeTypeId:5,code:null,description:"DMF clearance",checked:0},{lmeTypeId:6,code:null,description:"Proviso",checked:0}],$scope.roleList=selectedUserObj.roleList,$scope.salList=selectedUserObj.salList,$scope.designList=selectedUserObj.designList,$scope.qualList=selectedUserObj.qualList,$scope.salList=selectedUserObj.salList,$scope.countryList=selectedUserObj.countryList,$scope.nationsList=selectedUserObj.nationsList,$scope.ectyList=selectedUserObj.ectyList,$scope.genList=selectedUserObj.genList,$scope.clinicList=selectedUserObj.clinicList,$scope.specialityList=selectedUserObj.specialityList;var sporeKey=(selectedUserObj.sporeTxt,selectedUserObj.sporeKey);$scope.countryList&&($scope.userNewDataObj.person.address[0].country.countryId=$scope.countryList[sporeKey].lookUpItemId,$scope.userNewDataObj.person.address[1].country.countryId=$scope.countryList[sporeKey].lookUpItemId);var configurePostalValLen=function(index){$scope.userNewDataObj.person.address[index].country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope["postalMinLen"+index]=3,$scope["postalMaxLen"+index]=15):($scope["postalMinLen"+index]=6,$scope["postalMaxLen"+index]=6)};configurePostalValLen(0),$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.userNewDataObj.person.address[0].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isResAddChanged=!0),$scope.userNewDataObj.person.address[0].line1=null,$scope.userNewDataObj.person.address[0].line2=null,configurePostalValLen(0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.userNewDataObj.person.address[1].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),$scope.userNewDataObj.person.address[1].line1=null,$scope.userNewDataObj.person.address[1].line2=null,configurePostalValLen(1))};var resetDivFlags=function(){$scope.roleDiv=!0,$scope.personalDiv=!0,$scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!0,$scope.accExpDiv=!1,$scope.qualificationDiv=!1};resetDivFlags();var roleIdsVarStr=null;$scope.onRoleChange=function(){roleIdsVarStr=null,resetDivFlags(),angular.forEach($scope.user.selectedRoles,function(roleId,key){roleIdsVarStr=null!=roleIdsVarStr?roleIdsVarStr+","+roleId:""+roleId}),console.log("roleIdsVarStr",roleIdsVarStr),null!=roleIdsVarStr&&(roleIdsVarStr.indexOf("7")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("8")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("12")==-1&&roleIdsVarStr.indexOf("13")==-1||($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("10")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("9")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1),roleIdsVarStr.indexOf("14")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1),roleIdsVarStr.indexOf("11")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!0,$scope.accExpDiv=!1,$scope.qualificationDiv=!1))},$scope.getUserDetailsByUserId=function(){if(null!=$scope.selUserObj){if(console.log("sele",$scope.selUserObj),null!=$scope.selUserObj.roleIds){var roleIdArr=$scope.selUserObj.roleIds.split(",");if(null!=roleIdArr)for(var i=0;i<roleIdArr.length;i++)null!=roleIdArr[i]&&""!=roleIdArr[i]&&$scope.user.selectedRoles.push(parseInt(roleIdArr[i]))}$scope.onRoleChange(),APIS.ADMIN_VIEW_SEARCH_USER.URL=String.prototype.format.apply(APIS.ADMIN_VIEW_SEARCH_USER.tempURL,[$scope.selUserObj.id]),APIS.ADMIN_VIEW_SEARCH_USER.data={},DataManager.sendRestRequest(null,APIS.ADMIN_VIEW_SEARCH_USER,function(response){response.success&&($scope.userNewDataObj=response.dataBean,console.log("modify userDetails before : ",$scope.userNewDataObj),$scope.prevEmail=$scope.userNewDataObj.person.email,angular.forEach($scope.userNewDataObj.userSpecialitiesSet,function(specialityObj,key){$scope.selectedSpecialityList.push(specialityObj.speciality.specialityId)}),angular.forEach($scope.userNewDataObj.userClinics,function(clinicObj,key){$scope.selectedClinics.push(clinicObj.clinicsId)}),null!=$scope.userNewDataObj.person.dob&&($scope.userNewDataObj.person.dob=new Date($scope.userNewDataObj.person.dob)),null!=$scope.userNewDataObj.person.period_of_appt_from&&($scope.userNewDataObj.person.period_of_appt_from=new Date($scope.userNewDataObj.person.period_of_appt_from)),null!=$scope.userNewDataObj.person.period_of_appt_to&&($scope.userNewDataObj.person.period_of_appt_to=new Date($scope.userNewDataObj.person.period_of_appt_to)),null!=$scope.userNewDataObj.acExpirtDate&&($scope.userNewDataObj.acExpirtDate=new Date($scope.userNewDataObj.acExpirtDate)),null!=$scope.userNewDataObj.person.address&&void 0!=$scope.userNewDataObj.person.address&&console.log("$scope.userNewDataObj.person.address[0]",$scope.userNewDataObj.person.address[0]),null!=$scope.userNewDataObj.person.address&&void 0!=$scope.userNewDataObj.person.address&&0==$scope.userNewDataObj.person.address.length&&($scope.userNewDataObj.person.address.push({}),$scope.userNewDataObj.person.address[0].addressType=1),null!=$scope.userNewDataObj.person.address&&void 0!=$scope.userNewDataObj.person.address&&$scope.userNewDataObj.person.address.push({}),$scope.onClinicChange(),angular.forEach($scope.userNewDataObj.lmeVisitTypes,function(savedlme,key){angular.forEach($scope.lmeVisitTypes,function(lme,key){savedlme.lmeTypeId==lme.lmeTypeId&&(lme.checked=1)})}),angular.forEach($scope.userNewDataObj.arVisitType,function(savedar,key){angular.forEach($scope.arVisitType,function(ar,key){savedar==ar.lmeTypeId&&(ar.checked=1)})}))},$scope.uconfig.token)}}(),$scope.onClinicChange=function(){console.log("selected clinics ",$scope.selectedClinics),0==$scope.selectedClinics.length&&($scope.userNewDataObj.person.address[1]={}),APIS.GETCLINICSETUPDATA.URL="admin/clinics/"+$scope.selectedClinics[0],DataManager.sendRestRequest(null,APIS.GETCLINICSETUPDATA,function(response){response.success&&(console.log(response.dataBean),$scope.userNewDataObj.person.address[1]=response.dataBean.clinicAddress,$scope.userNewDataObj.person.address[1].addressType=2)},$scope.uconfig.token)};var upperCaseFirstLetter=function(input){return input.charAt(0).toUpperCase()+input.slice(1)};$scope.saveUserDetails=function(){return $scope.isFrmSubmited=!0,!$scope.frmConfirmProfile.$invalid&&($scope.roleDiv&&0===$scope.user.selectedRoles.length?(ModalService.openAlert("alert","warning","Role can not be empty. Please select atleast one Role.",$scope),!1):!($scope.userNewDataObj.person.nric&&!$scope.isValidNRIC)&&($scope.personalDiv&&$scope.specDiv&&0===$scope.selectedSpecialityList.length?(ModalService.openAlert("alert","warning","Speciality can not be empty. Please select atleast one Speciality.",$scope),!1):$scope.duplicateUser.errorMessage?(ModalService.openAlert("alert","warning",$scope.duplicateUser.errorMessage+" Please enter another email.",$scope),!1):$scope.duplicateNRIC.errorMessage?(ModalService.openAlert("alert","warning",$scope.duplicateNRIC.errorMessage,$scope),!1):$scope.userNewDataObj.person.period_of_appt_from>$scope.userNewDataObj.person.period_of_appt_to?(ModalService.openAlert("alert","warning","Period of Appointment From Date should be less than To Date",$scope),!1):($scope.userNewDataObj.person.firstName&&($scope.userNewDataObj.person.firstName=upperCaseFirstLetter($scope.userNewDataObj.person.firstName)),$scope.userNewDataObj.person.lastName&&($scope.userNewDataObj.person.lastName=upperCaseFirstLetter($scope.userNewDataObj.person.lastName)),null!=$scope.userNewDataObj.person.dob&&($scope.userNewDataObj.person.dob=$filter("date")($scope.userNewDataObj.person.dob,"yyyy-MM-dd")),null!=$scope.userNewDataObj.acExpirtDate&&($scope.userNewDataObj.acExpirtDate=$filter("date")($scope.userNewDataObj.acExpirtDate,"yyyy-MM-dd")),null!=$scope.userNewDataObj.person.period_of_appt_from&&($scope.userNewDataObj.person.period_of_appt_from=$filter("date")($scope.userNewDataObj.person.period_of_appt_from,"yyyy-MM-dd")),null!=$scope.userNewDataObj.person.period_of_appt_to&&($scope.userNewDataObj.person.period_of_appt_to=$filter("date")($scope.userNewDataObj.person.period_of_appt_to,"yyyy-MM-dd")),null!=$scope.userNewDataObj.userFacilities?$scope.userNewDataObj.userFacilities[0].roles=[]:$scope.userNewDataObj.userFacilities=[{roles:[]}],$scope.userNewDataObj.userSpecialitiesSet=[],$scope.userNewDataObj.userClinics=[],$scope.userNewDataObj.lmeVisitTypes=[],$scope.userNewDataObj.arVisitType=[],$scope.userNewDataObj.username=$scope.userNewDataObj.person.lastName+" "+$scope.userNewDataObj.person.firstName,angular.forEach($scope.user.selectedRoles,function(roleId,key){$scope.userNewDataObj.userFacilities[0].roles.push({roleId:roleId})}),angular.forEach($scope.selectedSpecialityList,function(specialityId,key){$scope.userNewDataObj.userSpecialitiesSet.push({speciality:{specialityId:specialityId}})}),angular.forEach($scope.selectedClinics,function(clinicId,key){$scope.userNewDataObj.userClinics.push({clinicsId:clinicId})}),angular.forEach($scope.lmeVisitTypes,function(lme,key){1==lme.checked&&$scope.userNewDataObj.lmeVisitTypes.push({lmeTypeId:lme.lmeTypeId,code:lme.code,description:lme.description,applicationTypeYN:lme.applicationTypeYN,frequencyOnlyYN:lme.frequencyOnlyYN})}),angular.forEach($scope.arVisitType,function(ar,key){1==ar.checked&&$scope.userNewDataObj.arVisitType.push(ar.lmeTypeId)}),void(null!=$scope.selUserObj?updateUserDetails():addNewUserDetails()))))};var addNewUserDetails=function(){console.log("addnew",$scope.userNewDataObj),APIS.ADMIN_ADD_SEARCH_USER.data=$scope.userNewDataObj,DataManager.sendRestRequest(null,APIS.ADMIN_ADD_SEARCH_USER,function(response){response.success?(ModalService.openAlert("alert","success","Saved Successfully",$scope),$scope.init()):ModalService.openAlert("alert","error","Error in save",$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token)},updateUserDetails=function(){APIS.ADMIN_MODIFY_SEARCH_USER.data=$scope.userNewDataObj,DataManager.sendRestRequest(null,APIS.ADMIN_MODIFY_SEARCH_USER,function(response){response.success?(ModalService.openAlert("alert","success","Updated Successfully",$scope),$scope.init()):ModalService.openAlert("alert","error","Error in Update",$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token)};$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app").controller("SearchUsrViewModalCtrl",["$rootScope","$scope","APIS","DataManager","$uibModalInstance","selectedUserObj","ResourceManager","ModalService",function($rootScope,$scope,APIS,DataManager,$uibModalInstance,selectedUserObj,ASU,ModalService){if($scope.selUserObj=selectedUserObj.rowObj,$scope.ASU=ASU,$scope.userNewDataObj={},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.roleList=selectedUserObj.roleList,$scope.salList=selectedUserObj.salList,$scope.designList=selectedUserObj.designList,$scope.qualList=selectedUserObj.qualList,$scope.salList=selectedUserObj.salList,$scope.countryList=selectedUserObj.countryList,$scope.nationsList=selectedUserObj.nationsList,$scope.ectyList=selectedUserObj.ectyList,$scope.genList=selectedUserObj.genList,$scope.clinicList=selectedUserObj.clinicList,$scope.specialityList=selectedUserObj.specialityList,$scope.lmeVisitTypes=[{lmeTypeId:1,code:null,description:"Initial",applicationTypeYN:"\0",frequencyOnlyYN:"\0",checked:0},{lmeTypeId:2,code:null,description:"Renewal",applicationTypeYN:"\0",frequencyOnlyYN:"\0",checked:0},{lmeTypeId:3,code:null,description:"Board",applicationTypeYN:"\0",frequencyOnlyYN:"\0",checked:0},{lmeTypeId:4,code:null,description:"Age 60",applicationTypeYN:"\0",frequencyOnlyYN:"\0",checked:0}],$scope.arVisitType=[{lmeTypeId:5,code:null,description:"DMF clearance",checked:0},{lmeTypeId:6,code:null,description:"Proviso",checked:0}],$scope.init=function(){if($scope.user={selectedRoles:[]},$scope.selectedRoleNames=[],$scope.selectedSpecialityList=[],$scope.selectedClinics=[],null!=$scope.selUserObj){if(null!=$scope.selUserObj.roleIds){var roleIdArr=$scope.selUserObj.roleIds.split(",");if(null!=roleIdArr)for(var i=0;i<roleIdArr.length;i++)null!=roleIdArr[i]&&""!=roleIdArr[i]&&$scope.user.selectedRoles.push(parseInt(roleIdArr[i]))}$scope.onRoleChange(),APIS.ADMIN_VIEW_SEARCH_USER.URL=String.prototype.format.apply(APIS.ADMIN_VIEW_SEARCH_USER.tempURL,[$scope.selUserObj.id]),APIS.ADMIN_VIEW_SEARCH_USER.data={},DataManager.sendRestRequest(null,APIS.ADMIN_VIEW_SEARCH_USER,function(response){response.success&&($scope.userNewDataObj=response.dataBean,console.log(" view userDetails : ",$scope.userNewDataObj),null==$scope.userNewDataObj.userFacilities&&($scope.userNewDataObj.userFacilities=[{roles:[]}]),angular.forEach($scope.userNewDataObj.userFacilities[0].roles,function(roleObj,key){$scope.selectedRoleNames.push(roleObj.roleName),$scope.selectedRoles.push(roleObj.roleId)}),angular.forEach($scope.userNewDataObj.userSpecialitiesSet,function(specialityObj,key){$scope.selectedSpecialityList.push(specialityObj.speciality.description)}),angular.forEach($scope.userNewDataObj.userClinics,function(clinicObj,key){$scope.selectedClinics.push(clinicObj.clinicsId)}),$scope.userNewDataObj.person.address.push({}),$scope.onClinicChange(),angular.forEach($scope.userNewDataObj.lmeVisitTypes,function(savedlme,key){angular.forEach($scope.lmeVisitTypes,function(lme,key){savedlme.lmeTypeId==lme.lmeTypeId&&(lme.checked=1)})}),angular.forEach($scope.userNewDataObj.arVisitType,function(savedar,key){angular.forEach($scope.arVisitType,function(ar,key){savedar==ar.lmeTypeId&&(ar.checked=1)})}))},$scope.uconfig.token)}},$scope.onClinicChange=function(){console.log("selected clinics ",$scope.selectedClinics),APIS.GETCLINICSETUPDATA.URL="admin/clinics/"+$scope.selectedClinics[0],DataManager.sendRestRequest(null,APIS.GETCLINICSETUPDATA,function(response){response.success&&(console.log(response.dataBean),$scope.userNewDataObj.person.address[1]=response.dataBean.clinicAddress,$scope.userNewDataObj.person.address[1].addressType=2)},$scope.uconfig.token)};var resetDivFlags=function(){$scope.roleDiv=!0,$scope.personalDiv=!0,$scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!0,$scope.accExpDiv=!1,$scope.qualificationDiv=!1};resetDivFlags();var roleIdsVarStr=null;$scope.onRoleChange=function(){roleIdsVarStr=null,resetDivFlags(),angular.forEach($scope.user.selectedRoles,function(roleId,key){roleIdsVarStr=null!=roleIdsVarStr?roleIdsVarStr+","+roleId:""+roleId}),null!=roleIdsVarStr&&(roleIdsVarStr.indexOf("7")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("8")!=-1&&($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("12")==-1&&roleIdsVarStr.indexOf("13")==-1||($scope.apptDiv=!1,$scope.addressDiv=!1,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!0,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("10")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!1,$scope.specDiv=!1,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!0),roleIdsVarStr.indexOf("9")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1),roleIdsVarStr.indexOf("14")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!1,$scope.accExpDiv=!1,$scope.qualificationDiv=!1),roleIdsVarStr.indexOf("11")!=-1&&($scope.apptDiv=!0,$scope.addressDiv=!0,$scope.mcrDiv=!0,$scope.specDiv=!0,$scope.funcDiv=!0,$scope.accExpDiv=!1,$scope.qualificationDiv=!1))},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("AdminmrsearchCtrl",["$scope","$rootScope","$state","APIS","DataManager","$window","$timeout","$uibModal","ResourceManager","ModalService","$filter",function($scope,$rootScope,$state,APIS,DataManager,$window,$timeout,$uibModal,MRS,ModalService,$filter){function modifydata(listdata){return angular.forEach(listdata,function(value,key){value.isExpired||(value.isExpired="Y")}),listdata}$scope.idOrder="",$scope.nameOrder="",$scope.init=function(){return $scope.MRS=MRS,$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.dt=new Date,$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.dateOptions={startingDay:1,showWeeks:!1},$scope.bonopen1=function(){$scope.bonpopup1.opened=!0},$scope.bexpopen1=function(){$scope.bexppopup1.opened=!0},$scope.bexppopup1={opened:!1},$scope.bonpopup1={opened:!1},$scope.formats=["dd/MM/yyyy","dd-MMM-yyyy","MM-dd-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[1],$scope.popup1={opened:!1},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.animationsEnabled=!0,$scope.loadAdminMrsearch(),$scope.MrSearchComboApi(),$scope.selectedAll=!1,$scope.mrsearch=[],$scope.pIds=[],$scope.isAllChecked=!1,$scope.activeMacPath="assets/img/icons/icon_",void($scope.inactiveMacPath="assets/img/icons/Grey_C_")):($state.go("login"),!1)},$scope.MrSearchComboApi=function(){APIS.ADMIN_GET_MRSEARCH_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_GET_MRSEARCH_COMBO,function(response){response.success&&($scope.dropdownData=response.dataBean)},$scope.uconfig.token)},$scope.loadAdminMrsearch=function(){APIS.ADMIN_GET_MRSEARCH.data={purged:"no"},DataManager.sendRestRequest(null,APIS.ADMIN_GET_MRSEARCH,function(response){response.success?(console.log("GridData",response.dataBean),$scope.mrsearch=modifydata(response.dataBean),""==$scope.nameOrder?($scope.idOrder="DSC"==$scope.idOrder?"ASC":"DSC",$scope.idSearch()):($scope.nameOrder="DSC"==$scope.nameOrder?"ASC":"DSC",$scope.nameSearch()),""==$scope.nameOrder&&""==$scope.idOrder&&$scope.idSearch()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.idSearch=function(){""==$scope.idOrder||"DSC"==$scope.idOrder?($scope.mrsearch=$filter("orderBy")($scope.mrsearch,"idNo",!1),$scope.idOrder="ASC"):($scope.mrsearch=$filter("orderBy")($scope.mrsearch,"idNo",!0),$scope.idOrder="DSC"),$scope.nameOrder=""},$scope.nameSearch=function(){""==$scope.nameOrder||"DSC"==$scope.nameOrder?($scope.mrsearch=$filter("orderBy")($scope.mrsearch,"applicantName",!1),$scope.nameOrder="ASC"):($scope.mrsearch=$filter("orderBy")($scope.mrsearch,"applicantName",!0),$scope.nameOrder="DSC"),$scope.idOrder=""},$scope.mrSearchCheckAll=function(){angular.forEach($scope.mrsearch,function(value,key){$scope.selectedAll?(value.checkStatus="yes",$scope.isAllChecked=!0):(value.checkStatus="no",$scope.isAllChecked=!1)})},$scope.viewdoc=function(personId){$uibModal.open({animation:!0,templateUrl:"viewAdminprovisio",size:"lg",controller:"ViewAdminCtrl",backdrop:"static",resolve:{modalParam:function(){var datas={applicantdeteils:personId};return datas}}})},$scope.statusDesc=[{lookUpItemId:1,lookUpItemValue:"Active"},{lookUpItemId:2,lookUpItemValue:"InActive"},{lookUpItemId:3,lookUpItemValue:"Locked"}],$scope.purcheck=!1,$scope.purstatus=!0,$scope.showPurged=!0,$scope.click_purged=function(){"yes"==$scope.mrsearchdata.purged?($scope.purstatus=!1,$scope.showPurged=!1):($scope.purstatus=!0,$scope.showPurged=!0)},$scope.isSubmitted=!1,$scope.mrsearchtxt=function(mrsearchdata){if($scope.isSubmitted=!0,$scope.mrsearchvalidate.$invalid)return!1;var startDate1=new Date($scope.mrsearchdata.expiryDateFrom),startDate2=new Date($scope.mrsearchdata.expiryDateTo),diff=startDate2-startDate1,seconds=diff/1e3,minutes=seconds/60,hours=minutes/60,days=hours/24;return console.log("diff",days),days>=91.25?(ModalService.openAlert("alert","error","Expiry To Date and from Date should be with in 3 months",$scope),!1):(APIS.ADMIN_GET_MRSEARCH.data={purged:$scope.mrsearchdata.purged,idNo:$scope.mrsearchdata.idNo,applicantName:$scope.mrsearchdata.applicantName,licenseNo:$scope.mrsearchdata.licenseNo,macId:$scope.mrsearchdata.macId,statusId:$scope.mrsearchdata.statusId,expiryDateFrom:$scope.mrsearchdata.expiryDateFrom,expiryDateTo:$scope.mrsearchdata.expiryDateTo},"yes"==$scope.mrsearchdata.purged?$scope.purcheck=!0:$scope.purcheck=!1,void DataManager.sendRestRequest(null,APIS.ADMIN_GET_MRSEARCH,function(response){response.success?(console.log("searchdata-",response.dataBean),$scope.mrsearch=modifydata(response.dataBean)):(console.log(response.errorMessage),$scope.mrsearch=[])},$scope.uconfig.token))},$scope.recordSelected=function(result){$scope.pIds.indexOf(result)==-1?$scope.pIds.push(result):$scope.pIds.splice($scope.pIds.indexOf(result),1)},$scope.updateExpiryDate=function(updateMRDtls){if(console.log("selectedarray",updateMRDtls.pIds.length),updateMRDtls.pIds.length>0){$scope.isAllChecked?$scope.updateMRDtls=$scope.mrsearch:$scope.updateMRDtls=$scope.pIds;$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/mrsearch/update_Expiry_Date_Form.html",controller:"UpdateModalInstanceCtrl",size:"md",resolve:{updateMRDtls:function(){return $scope.updateMRDtls}}},$scope.uconfig.token)}else ModalService.openAlert("alert","error","Please select a row to modify.",$scope)},$scope.init(),$scope.goToApplicantProfile=function(applicantId){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_USERID.URL,url=tempUrl+"/"+applicantId,APIS.LME_GET_USERID.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_USERID,function(response){response.success?($scope.visitDetails={visitId:null,visitType:null,applicantId:applicantId,applicantuserId:response.dataBean.id,applicantDetails:{applicationId:null}},sessionStorage.setItem("visitDetails",JSON.stringify($scope.visitDetails)),$rootScope.visitDetails=null,$rootScope.visitDetails=$scope.visitDetails,$window.open("#/profile")):console.log("Applicant profile: Error Code "+response.errorCode+", Error Messages: "+response.errorMessages)},$scope.uconfig.token),APIS.LME_GET_USERID.URL=tempUrl}}]),angular.module("app").controller("UpdateModalInstanceCtrl",["$scope","APIS","DataManager","$uibModalInstance","ModalService","$uibModal","updateMRDtls","ResourceManager",function($scope,APIS,DataManager,$uibModalInstance,ModalService,$uibModal,updateMRDtls,MRS){
$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.MRS=MRS,$scope.init=function(){$scope.animationsEnabled=!0,$scope.updateObj="",$scope.monthList=[],$scope.getMonths(),$scope.personIDs=[],$scope.finalsendObj=[]},$scope.getMonths=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.tempURL+"LME_EXT",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){response.success?$scope.monthList=response.dataBean.LME_EXT:console.log("ERROR-MONTHS",response)},$scope.uconfig.token)},$scope.updateExpiry=function(){return"undifined"==$scope.updateObj.mrValue||null==$scope.updateObj.mrValue?(ModalService.openAlert("alert","error","Please select reduce or extend.",$scope),!1):"undifined"==$scope.updateObj.lookUpItemValue||null==$scope.updateObj.lookUpItemValue?(ModalService.openAlert("alert","error","Please select month.",$scope),!1):(angular.forEach(updateMRDtls,function(value,key){$scope.finalsendObj.push({personIDs:value.personId,macID:value.macID,selectedMonths:$scope.updateObj.lookUpItemValue,reduceOrExtend:$scope.updateObj.mrValue})}),console.log("finalObj",$scope.finalsendObj),APIS.MR_UPDATE_EXPIRY.data=$scope.finalsendObj,DataManager.sendRestRequest(null,APIS.MR_UPDATE_EXPIRY,function(response){response.success?window.location.reload():console.log("ERROR-MR_UPDATE_EXPIRY",response)},$scope.uconfig.token),void 0)},$scope.cancel=function(){ModalService.openAlert("confirm","warning","Are you sure you want to close?",$scope,null,function(){$uibModalInstance.dismiss("cancel")})},$scope.init()}]),angular.module("app").controller("ViewAdminCtrl",["$scope","$state","APIS","$uibModal","$uibModalInstance","ModalService","$location","DataManager","$window","modalParam",function($scope,$state,APIS,$uibModal,$uibModalInstance,ModalService,$location,DataManager,$window,modalParam){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.applicantDetail=modalParam.applicantdeteils,$scope.applicantId=$scope.applicantDetail.personId},$scope.loadProvisioData=function(modalParam){var personId=null;personId=modalParam.applicantdeteils;var url=null,tempUrl=null;tempUrl=APIS.CAMB_PROVISIOVIEW.URL,url=tempUrl+"/"+personId,APIS.CAMB_PROVISIOVIEW.URL=url,DataManager.sendRestRequest(null,APIS.CAMB_PROVISIOVIEW,function(response){response.success?($scope.provisioData=response.dataBean,console.log(response.dataBean)):console.log(response)},$scope.uconfig.token),APIS.CAMB_PROVISIOVIEW.URL=tempUrl},$scope.close=function(){$uibModalInstance.close("close")},$scope.init(),$scope.loadProvisioData(modalParam)}]),angular.module("app").controller("BatchCtrl",["$rootScope","$scope","ResourceManager","APIS","DataManager","$http","$filter",function($rootScope,$scope,rm,APIS,DataManager,$http,$filter){if($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.rm=rm,$scope.baseUrl=DataManager.url+"api/",$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.dateOptions={startingDay:1},$scope.open2=function(){$scope.popup2.opened=!0},$scope.open1=function(){$scope.popup1.opened=!0},$scope.setDate=function(year,month,day){$scope.fromDate=new Date(year,month,day),$scope.toDate=new Date(year,month,day)},$scope.popup2={opened:!1},$scope.popup1={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+1),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.reports=[{id:"ARIS",desc:"ARIS"},{id:"CAPELS",desc:"CAPELS"}],$scope.options=[{id:"data",name:"View Data"},{id:"log",name:"View Log Data"}],$scope.selectedReport="ARIS",$scope.selectedOption="data",$scope.fromDate=new Date,$scope.toDate=new Date,$scope.runSchedulars=function(){"data"!=$scope.selectedOption;var Jsondata_schedular=JSON.stringify({type:$scope.selectedReport,fromDate:$filter("date")($scope.fromDate,"dd-MMM-yyyy"),toDate:$filter("date")($scope.toDate,"dd-MMM-yyyy")}),token=JSON.parse(sessionStorage.getItem("config")).token;$http({url:$scope.baseUrl+"fetchCapelArisData?token="+token,method:"POST",data:Jsondata_schedular,headers:{"Content-Type":"application/json"}}).success(function(data,status,headers,config){return"ARIS"==$scope.selectedReport&&($scope.arisData=data.data,$scope.capelData=[],$scope.fromDate=new Date,$scope.toDate=new Date),"CAPELS"==$scope.selectedReport&&($scope.arisData=[],$scope.capelData=data.data),data}).error(function(data,status){console.log("getResult error.")})},$scope.fetchLogData=function(){var Jsondata_fetch_log=JSON.stringify({type:$scope.selectedReport,fromDate:$filter("date")($scope.fromDate,"dd-MMM-yyyy"),toDate:$filter("date")($scope.toDate,"dd-MMM-yyyy")});if("Invalid date"==$filter("date")($scope.fromDate,"dd-MMM-yyyy")||"Invalid date"==$filter("date")($scope.toDate,"dd-MMM-yyyy"))return void alert("Please select valid date");if("Invalid date"==$filter("date")($scope.fromDate,"dd-MMM-yyyy")||"Invalid date"==$filter("date")($scope.toDate,"dd-MMM-yyyy"))return void alert("Please select valid date");var token=JSON.parse(sessionStorage.getItem("config")).token;$http({url:$scope.baseUrl+"fetchLogData?token="+token,method:"POST",data:Jsondata_fetch_log,headers:{"Content-Type":"application/json"}}).success(function(data,status,headers,config){return"ARIS"==$scope.selectedReport&&($scope.arisLogData=data.data,$scope.capelLogData=[],$scope.fromDate=new Date,$scope.toDate=new Date),"CAPELS"==$scope.selectedReport&&($scope.arisLogData=[],$scope.capelLogData=data.data,$scope.fromDate=new Date,$scope.toDate=new Date),data}).error(function(data,status){console.log("getResult error.")})},$scope["export"]=function(){var token=JSON.parse(sessionStorage.getItem("config")).token;"ARIS"==$scope.selectedReport&&(url=$scope.baseUrl+"exportCsv?token="+token,$http.get(url).success(function(data,status,headers,config){$scope.arisData=[],$scope.capelData=[],$scope.fromDate=new Date,$scope.toDate=new Date}).error(function(data,status){})),"CAPELS"==$scope.selectedReport&&(url=$scope.baseUrl+"exportExcel?token="+token,$http.get(url).success(function(data,status,headers,config){$scope.arisData=[],$scope.capelData=[]}).error(function(data,status){console.log("getResult error.")}))},$scope.runSchedulars()}]),angular.module("app").controller("CentralBillingCtrl",["$rootScope","$scope","$filter","ResourceManager","APIS","DataManager","$location","$window","$state",function($rootScope,$scope,$filter,rm,APIS,DataManager,$location,$window,$state){function loadCombos(){APIS.ADMIN_FEEWAIVER_ORG_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_ORG_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.orgList=response.dataBean.organizationList)},$scope.uconfig.token),APIS.ADMIN_MAC_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_MAC_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.macList=response.dataBean)},$scope.uconfig.token)}function makeDateFromSearchObject(){return{fromDate:$filter("date")($scope.modelObj.fromDate,"dd-MMM-yyyy"),toDate:$filter("date")($scope.modelObj.toDate,"dd-MMM-yyyy"),mac:$scope.modelObj.mac,organization:$scope.modelObj.organization}}function exportToExcel(){if($scope.reportName){var ur="/caas-web/ReportServlet?reportName="+$scope.reportName+"&token="+$scope.uconfig.token;document.location.href=ur}else{if($scope.isFrmSubmitted=!0,$scope.reportForm.$invalid)return void($scope.modelObj.exportOption="");APIS.RETRIEVE_CENTRAL_BILLING_REPORT_DETAILS.data=makeDateFromSearchObject(),DataManager.sendRestRequest(null,APIS.RETRIEVE_CENTRAL_BILLING_REPORT_DETAILS,function(response){if(response.success&&null!=response.dataBean&&response.dataBean.reportName){$scope.reportName=response.dataBean.reportName;var ur="/caas-web/ReportServlet?reportName="+$scope.reportName+"&token="+$scope.uconfig.token;document.location.href=ur}},$scope.uconfig.token)}}return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.rm=rm,$scope.popup1={opened:!1},$scope.popup2={opened:!1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.clear=function(){$scope.filterFrom=null,$scope.filterTo=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.futureDateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.setMinDate=function(){$scope.futureDateOptions.minDate=$scope.modelObj.fromDate?$scope.modelObj.fromDate:new Date},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.modelObj={fromDate:null,toDate:null,mac:null,organization:null,"export":!1,exportOption:""},$scope.isFrmSubmitted=!1,$scope.centralReportList=[],$scope.orgList=[],$scope.macList=[],$scope.searchData=function(){$scope.isFrmSubmitted=!0,$scope.reportForm.$invalid||(APIS.RETRIEVE_CENTRAL_BILLING_REPORT_DETAILS.data=makeDateFromSearchObject(),DataManager.sendRestRequest(null,APIS.RETRIEVE_CENTRAL_BILLING_REPORT_DETAILS,function(response){response.success&&null!=response.dataBean&&(angular.forEach(response.dataBean.centralBillingDTOList,function(member,index){member.index=index+1}),$scope.centralReportList=response.dataBean.centralBillingDTOList,response.dataBean.reportName&&($scope.reportName=response.dataBean.reportName))},$scope.uconfig.token))},$scope.exportcentral=function(){switch($scope.modelObj.exportOption){case"1":exportToExcel()}},$scope.datesDisable=!1,$scope.NRFromDt=!0,$scope.todayreports=function(){console.log($scope.today),1==$scope.today?($scope.datesDisable=!0,$scope.NRFromDt=!1,$scope.modelObj.fromDate="",$scope.modelObj.toDate=""):($scope.datesDisable=!1,$scope.NRFromDt=!0)},$scope["export"]=function(id){},void loadCombos()):($state.go("login"),!1)}]),angular.module("app").controller("DateFilterCtrl",["$scope","ResourceManager","$uibModalInstance","data",function($scope,rm,uibModalInstance,formData){function setDates(){formData.parentScope.modelObj.fromDate=$scope.modelObj.fromDate,formData.parentScope.modelObj.toDate=$scope.modelObj.toDate,$scope.cancel()}function getMonthEndDate(date){var currentMonth=date.getMonth(),currentYear=date.getFullYear();return 0==currentMonth||2==currentMonth||4==currentMonth||6==currentMonth||7==currentMonth||9==currentMonth||11==currentMonth?31:3==currentMonth||5==currentMonth||8==currentMonth||10==currentMonth?30:currentYear%4==0?29:28}$scope.rm=rm,$scope.showTab="year",$scope.YEAR_MAX=3,$scope.QUARTER_MAX=4,$scope.MONTH_MAX=12,$scope.WEEK_MAX=52,$scope.ALL_MIN=2,$scope.isYearFormSubmitted=!1,$scope.isQuarterFormSubmitted=!1,$scope.isMonthFormSubmitted=!1,$scope.isWeekFormSubmitted=!1,$scope.mastermodelObj={yearValue:"",yearInput:"",quarterValue:"",quarterInput:"",monthValue:"",monthInput:"",weekValue:"",weekInput:"",fromDate:new Date,toDate:new Date},$scope.modelObj=angular.copy($scope.mastermodelObj),$scope.cancel=function(){uibModalInstance.dismiss("cancel")},$scope.activateTab=function(tab){$scope.showTab=tab,$scope.modelObj=angular.copy($scope.mastermodelObj)},$scope.clearData=function(){$scope.modelObj=angular.copy($scope.mastermodelObj)},$scope.submitDateRange=function(){switch($scope.showTab){case"year":if(this.yearForm.$invalid)return void($scope.isYearFormSubmitted=!0);break;case"quarter":if(this.quarterForm.$invalid)return void($scope.isQuarterFormSubmitted=!0);break;case"month":if(this.monthForm.$invalid)return void($scope.isMonthFormSubmitted=!0);break;case"week":if(this.weekForm.$invalid)return void($scope.isWeekFormSubmitted=!0)}setDates()},$scope.caliculateYearValues=function(){switch($scope.modelObj.yearValue){case"1":$scope.modelObj.fromDate=new Date((new Date).getFullYear()-1,0,1,0,0,0,0),$scope.modelObj.toDate=new Date((new Date).getFullYear()-1,11,31,0,0,0,0);break;case"2":$scope.modelObj.fromDate=new Date((new Date).getFullYear(),0,1,0,0,0,0),$scope.modelObj.toDate=new Date((new Date).getFullYear(),11,31,0,0,0,0);break;case"3":this.yearForm.$valid&&($scope.modelObj.fromDate=new Date((new Date).getFullYear()-$scope.modelObj.yearInput,0,1,0,0,0,0),$scope.modelObj.toDate=new Date((new Date).getFullYear(),(-1),31,0,0,0,0))}},$scope.caliculateQuarterValues=function(){var currentMonth=(new Date).getMonth(),currentQuarterMonth=currentMonth%3;switch($scope.modelObj.quarterValue){case"1":$scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth()-currentQuarterMonth-3,1,0,0,0,0),$scope.modelObj.toDate=new Date((new Date).getFullYear(),$scope.modelObj.fromDate.getMonth()+2,3==$scope.modelObj.fromDate.getMonth()||6==$scope.modelObj.fromDate.getMonth()?30:31,0,0,0,0);break;case"2":$scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth()-currentQuarterMonth,1,0,0,0,0),$scope.modelObj.toDate=new Date((new Date).getFullYear(),$scope.modelObj.fromDate.getMonth()+2,3==$scope.modelObj.fromDate.getMonth()||6==$scope.modelObj.fromDate.getMonth()?30:31,0,0,0,0);break;case"3":this.quarterForm.$valid&&($scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth()-currentQuarterMonth-3*$scope.modelObj.quarterInput,1,0,0,0,0),$scope.modelObj.toDate=new Date($scope.modelObj.fromDate.getFullYear(),$scope.modelObj.fromDate.getMonth()-1+3*$scope.modelObj.quarterInput,30,0,0,0,0),2!=$scope.modelObj.toDate.getMonth()&&11!=$scope.modelObj.toDate.getMonth()||$scope.modelObj.toDate.setDate(31))}},$scope.caliculateMonthValues=function(){switch($scope.modelObj.monthValue){case"1":$scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth()-1,1,0,0,0,0),$scope.modelObj.toDate=new Date((new Date).getFullYear(),$scope.modelObj.fromDate.getMonth(),28,0,0,0,0),$scope.modelObj.toDate.setDate(getMonthEndDate($scope.modelObj.toDate));break;case"2":$scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth(),1,0,0,0,0),$scope.modelObj.toDate=new Date((new Date).getFullYear(),$scope.modelObj.fromDate.getMonth(),28,0,0,0,0),$scope.modelObj.toDate.setDate(getMonthEndDate($scope.modelObj.toDate));break;case"3":this.monthForm.$valid&&($scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth()-$scope.modelObj.monthInput,1,0,0,0,0),$scope.modelObj.toDate=new Date($scope.modelObj.fromDate.getFullYear(),$scope.modelObj.fromDate.getMonth()+$scope.modelObj.monthInput,28,0,0,0,0),$scope.modelObj.toDate.setDate(getMonthEndDate($scope.modelObj.toDate)))}},$scope.caliculateWeekValues=function(){var currentDay=(new Date).getDay();switch($scope.modelObj.weekValue){case"1":$scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth(),(new Date).getDate()-7-currentDay,0,0,0,0),$scope.modelObj.toDate=new Date($scope.modelObj.fromDate.getFullYear(),$scope.modelObj.fromDate.getMonth(),$scope.modelObj.fromDate.getDate()+6,0,0,0,0);break;case"2":$scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth(),(new Date).getDate()-currentDay,0,0,0,0),$scope.modelObj.toDate=new Date($scope.modelObj.fromDate.getFullYear(),$scope.modelObj.fromDate.getMonth(),$scope.modelObj.fromDate.getDate()+6,0,0,0,0);break;case"3":this.weekForm.$valid&&($scope.modelObj.fromDate=new Date((new Date).getFullYear(),(new Date).getMonth(),(new Date).getDate()-7*$scope.modelObj.weekInput-currentDay,0,0,0,0),$scope.modelObj.toDate=new Date($scope.modelObj.fromDate.getFullYear(),$scope.modelObj.fromDate.getMonth(),$scope.modelObj.fromDate.getDate()-1+7*$scope.modelObj.weekInput,0,0,0,0))}}}]),angular.module("app").controller("FinanceCtrl",["$rootScope","$scope","$state","$filter","ResourceManager","DataManager","APIS","ModalService","$location","$window",function($rootScope,$scope,$state,$filter,rm,DataManager,APIS,ModalService,$location,$window){function loadReportData(){switch($scope.modelObj.selectedReport){case 1:loadPaymentTransactionReport();break;case 2:loadRefundEligibleReport();break;case 3:loadRefundedReport()}}function loadPaymentTransactionReport(){APIS.RETRIEVE_PAYMENT_TRANSACTION_REPORT_DETAILS.data=makeDateFromSearchObject(),DataManager.sendRestRequest(null,APIS.RETRIEVE_PAYMENT_TRANSACTION_REPORT_DETAILS,function(response){response.success?($scope.loadreportsLength=response.dataBean.paymentTransactionReportDTOList.length,$scope.loadreportsLength>0?(angular.forEach(response.dataBean.paymentTransactionReportDTOList,function(member,index){member.index=index+1}),$scope.transactionReportList=response.dataBean.paymentTransactionReportDTOList,response.dataBean.reportName&&($scope.reportName=response.dataBean.reportName)):$scope.transactionReportList=[]):($scope.transactionReportList=[],$log.error("loadPaymentTransactionReport: "+response.errorMessage))})}function loadRefundEligibleReport(){APIS.RETRIEVE_REFUND_ELIGIBLE_REPORT_DETAILS.data=makeDateFromSearchObject(),DataManager.sendRestRequest(null,APIS.RETRIEVE_REFUND_ELIGIBLE_REPORT_DETAILS,function(response){response.success?($scope.loadreportsLength=response.dataBean.paymentTransactionReportDTOList.length,$scope.loadreportsLength>0?(angular.forEach(response.dataBean.paymentTransactionReportDTOList,function(member,index){member.index=index+1}),$scope.transactionReportList=response.dataBean.paymentTransactionReportDTOList,response.dataBean.reportName&&($scope.reportName=response.dataBean.reportName)):$scope.transactionReportList=[]):($scope.transactionReportList=[],$log.error("loadRefundEligibleReport: "+response.errorMessage))})}function loadRefundedReport(){APIS.RETRIEVE_REFUNDED_REPORT_DETAILS.data=makeDateFromSearchObject(),DataManager.sendRestRequest(null,APIS.RETRIEVE_REFUNDED_REPORT_DETAILS,function(response){response.success?($scope.loadreportsLength=response.dataBean.paymentTransactionReportDTOList.length,$scope.loadreportsLength>0?(angular.forEach(response.dataBean.paymentTransactionReportDTOList,function(member,index){member.index=index+1}),$scope.transactionReportList=response.dataBean.paymentTransactionReportDTOList,response.dataBean.reportName&&($scope.reportName=response.dataBean.reportName)):$scope.transactionReportList=[]):($scope.transactionReportList=[],$log.error("loadRefundedReport: "+response.errorMessage))})}function makeDateFromSearchObject(){if(""==$scope.modelObj.toDate)var toDt=$filter("date")(new Date,"dd-MMM-yyyy");else var toDt=$filter("date")($scope.modelObj.toDate,"dd-MMM-yyyy");if(""==$scope.modelObj.fromDate)var fromDt=$filter("date")(new Date,"dd-MMM-yyyy");else var fromDt=$filter("date")($scope.modelObj.fromDate,"dd-MMM-yyyy");return{fromDate:fromDt,toDate:toDt,fullName:$scope.modelObj.name,nric:$scope.modelObj.nric}}function exportToExcel(){if($scope.reportName){var ur="/caas-web/ReportServlet?reportName="+$scope.reportName+"&token="+$scope.uconfig.token;document.location.href=ur}else $scope.searchData(),$scope.modelObj.exportOption=""}return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.rm=rm,$scope.isFrmSubmitted=!1,$scope.popup1={opened:!1},$scope.popup2={opened:!1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.clear=function(){$scope.filterFrom=null,$scope.filterTo=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.futureDateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.setMinDate=function(){$scope.futureDateOptions.minDate=$scope.modelObj.fromDate?$scope.modelObj.fromDate:new Date},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.transactionReportList=[],$scope.modelObj={selectedReport:1,nric:"",name:"",fromDate:"",toDate:"","export":!1,exportOption:""},$scope.reportsCombo=[{id:1,label:"Payment Transaction Report"},{id:2,label:"Refund Eligible Report"},{id:3,label:"Refunded Report"}],$scope.searchData=function(){$scope.isFrmSubmitted=!0,$scope.reportForm.$invalid||loadReportData()},$scope.showAdvancedOptions=function(){var popupObj={modalTitle:$scope.rm.resources.REPORTS.ADVANCED_DATE_FILTERING,data:{parentScope:$scope},size:"md"};ModalService.openModal("app/master/partials/reports/advancedDateFilter.html","DateFilterCtrl",popupObj)},$scope["export"]=function(){switch($scope.modelObj.exportOption){case"1":exportToExcel()}},$scope.datesDisable=!1,$scope.NRFromDt=!0,void($scope.todayreports=function(){console.log($scope.today),1==$scope.today?($scope.datesDisable=!0,$scope.NRFromDt=!1,$scope.modelObj.fromDate=new Date,$scope.modelObj.toDate=new Date):($scope.datesDisable=!1,$scope.NRFromDt=!0)})):($state.go("login"),!1)}]),angular.module("app").controller("SAPExportCtrl",["$rootScope","$scope","$filter","ResourceManager","APIS","DataManager","$location","$window","$state",function($rootScope,$scope,$filter,rm,APIS,DataManager,$location,$window,$state){return $scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig?($scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.rm=rm,$scope.popup1={opened:!1},$scope.popup2={opened:!1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.clear=function(){$scope.filterFrom=null,$scope.filterTo=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.futureDateOptions={maxDate:$scope.futureDate,startingDay:1,showWeeks:!1},$scope.setMinDate=function(){$scope.futureDateOptions.minDate=$scope.modelObj.fromDate?$scope.modelObj.fromDate:new Date},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.modelObj={fromDate:null,toDate:null,mac:null,organization:null,"export":!1,exportOption:""},$scope.isFrmSubmitted=!1,$scope.centralReportList=[],$scope.searchData=function(){if($scope.isFrmSubmitted=!0,!$scope.reportForm.$invalid){var aa=$filter("date")($scope.modelObj.fromDate,"dd-MMM-yyyy"),token=JSON.parse(sessionStorage.getItem("config")).token;if(APIS.FETCH_SAP_DATA_DOWNLOAD.URL=String.prototype.format.apply(APIS.FETCH_SAP_DATA_DOWNLOAD.tempURL,[aa]),$scope.modelObj["export"]){var url=DataManager.url+APIS.FETCH_SAP_DATA_DOWNLOAD.URL+"&token="+token,anchor=angular.element("<a/>");anchor.css({display:"none"}),angular.element(document.body).append(anchor),anchor.attr({href:url,target:"_self",download:"filename.csv"})[0].click(),anchor.remove()}else APIS.FETCH_SAP_DATA.data={fromDate:$filter("date")($scope.modelObj.fromDate,"dd-MMM-yyyy"),type:"false"},DataManager.sendRestRequest(null,APIS.FETCH_SAP_DATA,function(response){response.data.length>0&&(angular.forEach(response.data,function(member,index){member.index=index+1}),$scope.centralReportList=response.data)},$scope.uconfig.token)}},void($scope.runScheduler=function(){if($scope.isFrmSubmitted=!0,!$scope.reportForm.$invalid){var fromDate=$filter("date")($scope.modelObj.fromDate,"dd-MMM-yyyy"),token=JSON.parse(sessionStorage.getItem("config")).token;APIS.RUN_SCHEDULER.URL=String.prototype.format.apply(APIS.RUN_SCHEDULER.tempURL,[token,fromDate]),DataManager.sendRestRequest(null,APIS.RUN_SCHEDULER,function(response){"success"==response.data[0]?alert("SAP Reports successfully transferred(SFTP)"):(alert("SAP Reports failed to transfer(SFTP)"),console.log("SAP Reports failed to transfer(SFTP)",response.errorMessage))},$scope.uconfig.token)}})):($state.go("login"),!1)}]),angular.module("app").controller("AddNewLicenseCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$timeout","$uibModalInstance","dropdownData",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$timeout,$uibModalInstance,dropdownData){$scope.init=function(){$scope.dropdownData=dropdownData,$scope.licenseInfo={licenceTypeId:null,licAircraft:[],licOperation:[],licRankRating:[]}},$scope.checkAirgraftType=function(params,ischecked,index){ischecked?$scope.licenseInfo.licAircraft.push(params):$scope.licenseInfo.licAircraft.splice(index,1)},$scope.checkOperationType=function(params,ischecked,index){ischecked?$scope.licenseInfo.licOperation.push(params):$scope.licenseInfo.licOperation.splice(index,1)},$scope.checkRank=function(params,ischecked,index){ischecked?$scope.licenseInfo.licRankRating[index]=params:$scope.licenseInfo.licRankRating.splice(index,1)},$scope.checkAllAircraft=function(ischecked){angular.forEach($scope.dropdownData.licAircraft,function(value,key){ischecked?value.checked=!0:value.checked=!1})},$scope.checkAllOperatioin=function(ischecked){angular.forEach($scope.dropdownData.licOperation,function(value,key){ischecked?value.checked=!0:value.checked=!1})},$scope.checkAllRank=function(ischecked){angular.forEach($scope.dropdownData.licRankRating,function(value,key){ischecked?value.checked=!0:value.checked=!1})},$scope.$watch("allAirChecked",function(newValue,oldValue){newValue?$scope.checkAllAircraft(newValue):$scope.checkAllAircraft(newValue)}),$scope.$watch("allOperChecked",function(newValue,oldValue){newValue?$scope.checkAllOperatioin(newValue):$scope.checkAllOperatioin(newValue)}),$scope.$watch("allRankChecked",function(newValue,oldValue){newValue?$scope.checkAllRank(newValue):$scope.checkAllRank(newValue)}),$scope.saveLicense=function(){console.log("save",$scope.licenseInfo)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.init()}]),angular.module("app").controller("BroadcastCtrl",["$scope","$state","APIS","DataManager","$log","$window",function($scope,$state,APIS,DataManager,$log,$window){$scope.init=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.savebroadcastInfo={userRole:[{lookUpItemId:null,lookUpItemValue:"All Usser"}],description:"",boradcastOn:null,boradcastExpiry:null,message:""},$scope.comboParams={selectUser:{lookUpItemId:null,lookUpItemValue:"license"}},$scope.dropdownData={selectUser:{}},$scope.tableData=[],$scope.loadBroadData(),$scope.dataBind()},$scope.dataBind=function(){},$scope.pagination=function(){$scope.start=1,$scope.end=5,$scope.currentPageData=$scope.tableData.slice($scope.start,$scope.end),$scope.totalItems=$scope.tableData.length,$scope.currentPage=1,$scope.numPerPage=5},$scope.pageChanged=function(page){var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.currentPageData=$scope.tableData.slice(start,end)},$scope.loadBroadData=function(){DataManager.sendRestRequest(null,APIS.GET_BROADCAST,function(response){response.success&&($scope.tableData=response.dataBean,$scope.pagination())},$scope.uconfig.token)},$scope.loadCombos=function(){$scope.callComboApi($scope.comboParams.selectUser,"selectUser")},$scope.init()}]),angular.module("app").controller("BroadcastTemplateCtrl",["$rootScope","$scope","$state","APIS","DataManager","$log","$window","ModalService","ResourceManager",function($rootScope,$scope,$state,APIS,DataManager,$log,$window,ModalService,bc){$scope.init=function(){$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.bc=bc,$scope.dt=new Date,$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.minDate=$scope.dt.setDate($scope.dt.getDate()),$scope.dateOptions={minDate:$scope.minDate,startingDay:1,showWeeks:!1},$scope.bonopen1=function(){$scope.bonpopup1.opened=!0},$scope.bexpopen1=function(){$scope.bexppopup1.opened=!0},$scope.bexppopup1={opened:!1},$scope.bonpopup1={opened:!1},$scope.formats=["dd/MM/yyyy","dd-MMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[1],$scope.popup1={opened:!1},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.userRegDetails=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.modifyBroadCastInfo={},$scope.modifyBroadCastInfo.broadcastId=0,$scope.date={dt:$scope.currentDt},$scope.tableData=[],$scope.callComboApi(),$scope.loadBroadData(),$scope.example={value:new Date(2013,9,22)},$(document).ready(function(){setTimeout(function(){CKEDITOR.replace("editor2"),CKEDITOR.instances.editor2.setData(modifyBroadCastInfo.body)},100)})},$scope.callComboApi=function(){APIS.GET_COMBO_USER_ROLES.data={},DataManager.sendRestRequest(null,APIS.GET_COMBO_USER_ROLES,function(response){response.success&&($scope.dropdownData=response.dataBean,angular.forEach($scope.dropdownData,function(value,key){value.roleName="All "+value.roleName+"s"}))},$scope.uconfig.token)},$scope.loadBroadData=function(){DataManager.sendRestRequest(null,APIS.GET_BROADCAST_MESSAGES,function(response){response.success?(console.log($scope.tableData),$scope.tableData=response.dataBean,$scope.BroadCastList=[],$scope.gridData=[],angular.forEach($scope.tableData,function(Ovalue,Okey){console.log($scope.gridData),$scope.BroadCastList.indexOf(Ovalue.broadcastId)==-1?($scope.BroadCastList.push(Ovalue.broadcastId),$scope.gridData.push(Ovalue)):angular.forEach($scope.gridData,function(Ivalue,Ikey){Ovalue.broadcastId==Ivalue.broadcastId&&(Ivalue.userName=Ivalue.userName+","+Ovalue.userName)})}),$scope.pagination()):console.log("GRID DATA:",response.errorMessage)},$scope.uconfig.token)},$scope.isModFrmSubmited=!1,$scope.mod_bodylen=!1,$scope.mod_bodyreq=!1,$scope.UpdateBroadCastData={},$scope.saveBroadcastTemplate=function(BroadCastData){$scope.modifyBroadCastInfo.broadcastMessage=CKEDITOR.instances.editor2.getData(),$scope.isFrmSubmited=!0,""==$scope.modifyBroadCastInfo.broadcastMessage||"undefined"==$scope.modifyBroadCastInfo.broadcastMessage||null==$scope.modifyBroadCastInfo.broadcastMessage?($scope.mod_bodyreq=!0,$scope.broadcastform.$invalid=!0):$scope.mod_bodyreq=!1;var editorcontent=CKEDITOR.instances.editor2.getData().replace(/<[^>]*>/gi,"");return console.log("len",editorcontent.length),editorcontent.length>1e4?($scope.mod_bodylen=!0,$scope.broadcastform.$invalid=!0):$scope.mod_bodylen=!1,$scope.isModFrmSubmited=!0,!$scope.broadcastform.$invalid&&(console.log(BroadCastData),$scope.UpdateBroadCastData={broadcastId:BroadCastData.broadcastId,broadcastdescription:BroadCastData.broadcastdescription,broadcastOn:BroadCastData.broadcastOn,broadcastExpiryDate:BroadCastData.broadcastExpiryDate,broadcastMessage:BroadCastData.broadcastMessage,receiverRoles:BroadCastData.userIds},APIS.SAVE_BROADCAST_MSSSAGES.data=$scope.UpdateBroadCastData,void DataManager.sendRestRequest(null,APIS.SAVE_BROADCAST_MSSSAGES,function(response){response.success&&ModalService.openAlert("alert","success",response.successMessage,$scope,"success",function(){window.location.reload()})},$scope.uconfig.token))},$scope.modifyRecord=function(selBroadCastData){console.log("mess",$scope.modifyBroadCastInfo.broadcastMessage),CKEDITOR.instances.editor2.setData(selBroadCastData.broadcastMessage),$scope.recordBroadCastData=selBroadCastData,$scope.recordBroadcastId=$scope.recordBroadCastData.broadcastId,$scope.selectedUserIds=[],angular.forEach($scope.tableData,function(Rvalue,Rkey){Rvalue.broadcastId==$scope.recordBroadcastId&&$scope.selectedUserIds.push(Rvalue.userId)}),$scope.modifyBroadCastInfo.broadcastId=$scope.recordBroadcastId,$scope.modifyBroadCastInfo.userIds=$scope.selectedUserIds,$scope.modifyBroadCastInfo.broadcastdescription=$scope.recordBroadCastData.broadcastdescription,$scope.modifyBroadCastInfo.broadcastOn=new Date($scope.recordBroadCastData.displayBroadcastOn),$scope.modifyBroadCastInfo.broadcastExpiryDate=new Date($scope.recordBroadCastData.displayExpiryDate),$scope.modifyBroadCastInfo.broadcastMessage=$scope.recordBroadCastData.broadcastMessage;
};var delRecordId=null;$scope.deleteBroadcastTemplate=function(recordId){delRecordId=recordId,ModalService.openAlert("confirm","warning",$scope.bc.resources.BROADCAST.DELETE_SELECTED_RECORD,$scope,"delete",function(){})},$scope.$on("deleteOk",function(){null!=delRecordId&&(APIS.DELETE_BROADCAST_MSSSAGES.data={broadcastId:delRecordId},DataManager.sendRestRequest(null,APIS.DELETE_BROADCAST_MSSSAGES,function(response){response.success?(ModalService.openAlert("alert","success",$scope.bc.resources.BROADCAST.DELETED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error",$scope.bc.resources.BROADCAST.ERROR,$scope)},$scope.uconfig.token))}),$scope.pagination=function(){$scope.start=1,$scope.end=5,$scope.currentPageData=$scope.tableData.slice($scope.start,$scope.end),$scope.totalItems=$scope.tableData.length,$scope.currentPage=1,$scope.numPerPage=5},$scope.pageChanged=function(page){var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.currentPageData=$scope.tableData.slice(start,end)},$scope.init()}]),angular.module("app").controller("DocumentLibraryCtrl",["$rootScope","$scope","$state","$filter","APIS","DataManager","ResourceManager","ModalService",function($rootScope,$scope,$state,$filter,APIS,DataManager,ResourceManager,ModalService){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.numPerPageOpt=$rootScope.itemsPerPage,console.log($scope.uconfig.userFacilities[0].roles[0].roleName),"Applicant"==$scope.uconfig.userFacilities[0].roles[0].roleName?$scope.userTypes="A":$scope.userTypes="B",console.log($scope.userTypes),$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.formats=["dd-MM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.documentsMasterList=[],$scope.rm=ResourceManager,$scope.uplodByOrder="",$scope.nameOrder="",$scope.typeOrder="",$scope.tagOrder="",$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.futureDateOptions={maxDate:new Date,startingDay:1,showWeeks:!1,minDate:new Date},$scope.changeFromDate=function(){$scope.futureDateOptions.minDate=$scope.searchData.fromDate?$scope.searchData.fromDate:new Date},$scope.nameSearch=function(){""==$scope.nameOrder||"DSC"==$scope.nameOrder?($scope.documentDetails=$filter("orderBy")($scope.documentDetails,"docTitle",!1),$scope.nameOrder="ASC"):($scope.documentDetails=$filter("orderBy")($scope.documentDetails,"docTitle",!0),$scope.nameOrder="DSC"),$scope.uplodByOrder="",$scope.typeOrder="",$scope.tagOrder=""},$scope.typeSearch=function(){""==$scope.typeOrder||"DSC"==$scope.typeOrder?($scope.documentDetails=$filter("orderBy")($scope.documentDetails,"docTypeDesc",!1),$scope.typeOrder="ASC"):($scope.documentDetails=$filter("orderBy")($scope.documentDetails,"docTypeDesc",!0),$scope.typeOrder="DSC"),$scope.uplodByOrder="",$scope.tagOrder="",$scope.nameOrder=""},$scope.tagSearch=function(){""==$scope.tagOrder||"DSC"==$scope.tagOrder?($scope.documentDetails=$filter("orderBy")($scope.documentDetails,"docTag",!1),$scope.tagOrder="ASC"):($scope.documentDetails=$filter("orderBy")($scope.documentDetails,"docTag",!0),$scope.tagOrder="DSC"),$scope.uplodByOrder="",$scope.typeOrder="",$scope.nameOrder=""},$scope.uploaBySearch=function(){""==$scope.uplodByOrder||"DSC"==$scope.uplodByOrder?($scope.documentDetails=$filter("orderBy")($scope.documentDetails,"createdBy",!1),$scope.uplodByOrder="ASC"):($scope.documentDetails=$filter("orderBy")($scope.documentDetails,"createdBy",!0),$scope.uplodByOrder="DSC"),$scope.tagOrder="",$scope.typeOrder="",$scope.nameOrder=""},$scope.popup1={opened:!1},$scope.popup2={opened:!1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.open2=function(){$scope.popup2.opened=!0},$scope.clear=function(){$scope.filterFrom=null,$scope.filterTo=null},$scope.init=function(){$scope.perPage=10,$scope.documentDetails=[],$scope.searchData={docTitle:"",docTag:"",fromDate:"",toDate:""},$scope.displayDocumentList()},$scope.displayDocumentList=function(){"Applicant"==$scope.uconfig.userFacilities[0].roles[0].roleName?$scope.userTypes="A":$scope.userTypes="B",APIS.ADMIN_GET_DOCUMENTS.data={pageNo:0,userType:$scope.userTypes},DataManager.sendRestRequest(null,APIS.ADMIN_GET_DOCUMENTS,function(response){response.success&&($scope.documentsMasterList=response.dataBean,$scope.documentDetails=response.dataBean,""!=$scope.nameOrder?($scope.nameOrder="ASC"==$scope.nameOrder?"DSC":"ASC",$scope.nameSearch()):""!=$scope.typeOrder?($scope.typeOrder="ASC"==$scope.typeOrder?"DSC":"ASC",$scope.typeSearch()):""!=$scope.tagOrder?($scope.tagOrder="ASC"==$scope.tagOrder?"DSC":"ASC",$scope.tagSearch()):""!=$scope.uplodByOrder&&($scope.uplodByOrder="ASC"==$scope.uplodByOrder?"DSC":"ASC",$scope.uploaBySearch()),""==$scope.nameOrder&&""==$scope.typeOrder&&""==$scope.tagOrder&&""==$scope.uplodByOrder&&$scope.nameSearch())},$scope.uconfig.token)},$scope.detailDocument=function(document_id){APIS.REFERENCE_DOCUMENT.data={docId:document_id,docType:""},DataManager.sendRestRequest(null,APIS.REFERENCE_DOCUMENT,function(response){if(response.success){var content=response.dataBean.document,base64regex=/^([0-9a-zA-Z+\/]{4})*(([0-9a-zA-Z+\/]{2}==)|([0-9a-zA-Z+\/]{3}=))?$/,valid=base64regex.test(content);console.log(valid),valid&&window.open("data:application/pdf;base64,"+response.dataBean.document,"_blank","location=0,enableviewportscale=yes")}else console.log(response.errorMessage)},$scope.uconfig.token)},$scope.addNewDocument=function(){var popupObj={modalTitle:"Add Document",data:{parentScope:$scope,mode:"add",docObject:{}},size:"md"};ModalService.openModal("app/master/partials/setting/documentryLib_Add_Modal.html","addDocumentModalInstanceCtrl",popupObj)},$scope.editDocument=function(document){var popupObj={modalTitle:"Modify Document",data:{parentScope:$scope,mode:"edit",docObject:document},size:"md"};ModalService.openModal("app/master/partials/setting/documentryLib_Add_Modal.html","addDocumentModalInstanceCtrl",popupObj)},$scope.deleteDocument=function(document_id){$scope.deletedDocId=document_id,ModalService.openAlert("confirm","Confirmation",$scope.rm.resources.DOCUMENT_LIBRARY.DELETE_SELECTED_DOCUMENT,$scope,"deleteDoc")},$scope.$on("deleteDocOk",function(){APIS.ADMIN_DELETE_DOCUMENT.data={docId:$scope.deletedDocId},DataManager.sendRestRequest(null,APIS.ADMIN_DELETE_DOCUMENT,function(response){response.success&&$scope.displayDocumentList()},$scope.uconfig.token)}),$scope.filterDocuments=function(searchData){var filteredList=angular.copy($scope.documentsMasterList);if(searchData.docTitle&&(filteredList=$filter("filter")(filteredList,{docTitle:searchData.docTitle})),searchData.docTag&&(filteredList=$filter("filter")(filteredList,{docTag:searchData.docTag})),searchData.fromDate&&searchData.toDate){var fromDate=$filter("date")(searchData.fromDate,"dd-MMM-yyyy"),toDate=$filter("date")(searchData.toDate,"dd-MMM-yyyy");filteredList=$filter("dateRangeFilter")(filteredList,"createdDate",fromDate,toDate)}$scope.documentDetails=filteredList},$scope.init()}]),angular.module("app").controller("addDocumentModalInstanceCtrl",["$scope","APIS","DataManager","ResourceManager","$uibModalInstance","data",function($scope,APIS,DataManager,ResourceManager,$uibModalInstance,formData){$scope.uploadFileName="",$scope.refDocumentsList=[],$scope.userTypesList=[],$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.mode=formData.mode,$scope.rm=ResourceManager,$scope.docObj={docTypeId:"",docTitle:"",docTag:"",publishId:"",document:"",publishType:1},"edit"==formData.mode&&($scope.docObj={docTypeId:formData.docObject.docTypeId,docTitle:formData.docObject.docTitle,docTag:formData.docObject.docTag,publishId:formData.docObject.publishId+"",document:formData.docObject.document,publishType:643==formData.docObject.publishId?1:2,docId:formData.docObject.docId},$scope.uploadFileName="some file");(function(){APIS.DOC_LIBRARY_GET_DOC_TYPES.data={},DataManager.sendRestRequest(null,APIS.DOC_LIBRARY_GET_DOC_TYPES,function(response){response.success&&($scope.refDocumentsList=response.dataBean)},$scope.uconfig.token)})();$scope.selectDocument=function(){angular.element("#docLibUpload").trigger("click")},$scope.onUploadFileChange=function(){var file=document.forms[0].docLibUpload.files[0];if(!file)return void clearUploadDetails();var fileExtTypeArray=file.name.split(".");$scope.uploadFileName=file.name;var fileExtType=fileExtTypeArray[fileExtTypeArray.length-1],r=null,docValidTypeArray=["pdf"];return docValidTypeArray.indexOf(fileExtType)>=0?(r=new window.FileReader,r.onloadend=function(f){return function(e){var contents=e.target.result;$scope.uploadObj=contents.split(",")[1],$scope.isUploadContentSet=!0,$scope.safeApply()}}(file),r.readAsDataURL(file),void 0):(file=null,clearUploadDetails(),void ModalService.openAlert("alert","error",$scope.rm.resources.DOCUMENT_LIBRARY.PDF_FILES_UPLOAD,$scope))};var clearUploadDetails=function(){angular.element("#bulkUpload").val(""),$scope.uploadObj=null,$scope.isUploadContentSet=!1,$scope.safeApply()};$scope.safeApply=function(fn){var phase=this.$root.$$phase;"$apply"==phase||"$digest"==phase?fn&&"function"==typeof fn&&fn():this.$apply(fn)},$scope.isFrmSubmited=!1,$scope.upload=function(documentLibAddForm){if($scope.isFrmSubmited=!0,documentLibAddForm.$invalid)return!1;var docObj={docTypeId:$scope.docObj.docTypeId,docTitle:$scope.docObj.docTitle,docTag:$scope.docObj.docTag,publishId:1==$scope.docObj.publishType?643:$scope.docObj.publishId};"add"==formData.mode?(docObj.document=$scope.uploadObj,APIS.ADMIN_ADD_NEW_DOCUMENT.data=docObj,DataManager.sendRestRequest(null,APIS.ADMIN_ADD_NEW_DOCUMENT,function(response){response.success&&formData.parentScope.displayDocumentList(!1)},$scope.uconfig.token)):(docObj.docId=$scope.docObj.docId,APIS.ADMIN_EDIT_DOCUMENT.data=docObj,DataManager.sendRestRequest(null,APIS.ADMIN_EDIT_DOCUMENT,function(response){response.success&&formData.parentScope.displayDocumentList(!1)},$scope.uconfig.token)),$scope.cancel()},$scope.cancel=function(){clearUploadDetails(),$uibModalInstance.dismiss("cancel")}}]),angular.module("app").filter("dateRangeFilter",function(){return function(list,filed,startDate,endDate){if(startDate||endDate){var filterList=[],stDate=Date.parse(startDate),enDate=Date.parse(endDate);return angular.forEach(list,function(item){var itemDate=Date.parse(item.createdDate);itemDate>=stDate&&itemDate<=enDate&&filterList.push(item)}),filterList}}}),angular.module("app").controller("HeadSetupAddSectionCtrl",["$scope","$state","APIS",function($scope,$state,APIS){}]),angular.module("app").controller("HeadSetupAddSectionCtrl2",["$scope","$state","APIS",function($scope,$state,APIS){}]),angular.module("app").controller("HeadSetupAddSectionCtrl2",["$scope","$state","APIS",function($scope,$state,APIS){}]),angular.module("app").controller("HedSetup2Ctrl",["$scope","$state","APIS","$rootScope","ModalService","DataManager","ResourceManager",function($scope,$state,APIS,$rootScope,ModalService,DataManager,ResourceManager){$scope.masterSetupRM=ResourceManager;var selectedTemplate=$rootScope.selectedTemplate,currentPage=null,currentSection=null;return $scope.templatePages=[],$scope.page="page",$scope.fd=!1,$scope.selectedPage=null,selectedTemplate?($scope.templateName=selectedTemplate.templateName,$scope.loadPages=function(){APIS.HED_SETUP_RETREIVE_PAGES.data={templateId:selectedTemplate.templateId},DataManager.sendRestRequest(null,APIS.HED_SETUP_RETREIVE_PAGES,function(response){$scope.templatePages=response.dataBean,$scope.templateSections=[],currentPage=null,currentSection=null})},$scope.loadPages(),$scope.pageSelected=function(selRecord){selRecord&&(currentPage=selRecord,$scope.selectedPage=currentPage.pageName),APIS.HED_SETUP_RETREIVE_SECTIONS.data={pageId:currentPage.pageId},DataManager.sendRestRequest(null,APIS.HED_SETUP_RETREIVE_SECTIONS,function(response){response.dataBean?$scope.templateSections=response.dataBean:$scope.templateSections=[],currentSection=null})},$scope.addNewPage=function(){return currentPage?(APIS.HED_SETUP_NEW_PAGE.data={pageName:currentPage.pageName,pageOrder:currentPage.pageOrder,templateId:selectedTemplate.templateId},void DataManager.sendRestRequest(null,APIS.HED_SETUP_NEW_PAGE,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage,$scope),$scope.loadPages()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})):void ModalService.openAlert("alert","warning","Please select a page record",$scope)},$scope.deletePage=function(){return currentPage?(APIS.HED_SETUP_DELETE_PAGE.data={pageId:currentPage.pageId,templateId:selectedTemplate.templateId},void DataManager.sendRestRequest(null,APIS.HED_SETUP_DELETE_PAGE,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage,$scope),$scope.loadPages()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})):void ModalService.openAlert("alert","warning","Please select a record",$scope)},$scope.sectionSelected=function(selSection){currentSection=selSection},$scope.getSectionDetails=function(){return currentSection?(APIS.HED_SETUP_VIEW_SECTION.data={sectionId:currentSection.sectionId},void DataManager.sendRestRequest(null,APIS.HED_SETUP_VIEW_SECTION,function(response){for(var i=0;i<response.dataBean.elements.length;i++)626==response.dataBean.elements[i].mandatory?response.dataBean.elements[i].mandatoryDesc="Required":response.dataBean.elements[i].mandatoryDesc="NA",response.dataBean.elements[i].control.controlDesc=response.dataBean.elements[i].control.controlTypeDescription;$scope.openNewHedSetup(response.dataBean)})):void ModalService.openAlert("alert","warning","Please select a section record",$scope)},$scope.openNewHedSetup=function(secData){if(!currentPage)return void ModalService.openAlert("alert","warning","Please select a page record",$scope);var popupObj={modalTitle:secData?"Modify Section":"Add Section",data:{pageId:currentPage.pageId,sectionData:secData,parentScope:$scope},size:"lg"};ModalService.openModal("app/master/partials/setting/hedSetupModal.html","HedSetupModalCtrl",popupObj)},$scope.updatePageOrder=function(selItem,itemDir){"up"==itemDir?selItem.pageOrder=Number(selItem.pageOrder)-1:selItem.pageOrder=Number(selItem.pageOrder)+1,APIS.HED_SETUP_UPDATE_PAGE_ORDER.data={pageId:selItem.pageId,pageOrder:selItem.pageOrder},DataManager.sendRestRequest(null,APIS.HED_SETUP_UPDATE_PAGE_ORDER,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage,$scope),$scope.loadPages()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})},$scope.updateSectionOrder=function(selItem,itemDir){"up"==itemDir?selItem.sectionOrder=Number(selItem.sectionOrder)-1:selItem.sectionOrder=Number(selItem.sectionOrder)+1,APIS.HED_SETUP_UPDATE_SECTION_ORDER.data={sectionId:selItem.sectionId,sectionOrder:selItem.sectionOrder},DataManager.sendRestRequest(null,APIS.HED_SETUP_UPDATE_SECTION_ORDER,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage,$scope),$scope.pageSelected()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})},void($scope.previewPage=function(){if(!currentPage)return void ModalService.openAlert("alert","warning","Please select a page record",$scope);var hedHtml=null,hedCtrl=null;switch($scope.selectedPage){case"Instructions":hedHtml="app/applicant/partials/hed/app_hed1.html",hedCtrl="AppMedAssess3Ctrl";break;case"Apply for Licences":hedHtml="app/applicant/partials/hed/app_hed2.html",hedCtrl="AppMedAssess3Ctrl";break;case"Illness Condition":hedHtml="app/applicant/partials/hed/app_hed3.html",hedCtrl="AppMedAssess3Ctrl";break;case"Since Last ME and LS Practices":hedHtml="app/applicant/partials/hed/app_hed4.html",hedCtrl="AppMedAssess3Ctrl";break;case"Eye and Sleepiness Survey":hedHtml="app/applicant/partials/hed/app_hed5.html",hedCtrl="AppMedAssess3Ctrl";break;case"Medical Records and Family Medical History":hedHtml="app/applicant/partials/hed/app_hed6.html",hedCtrl="AppMedAssess3Ctrl";break;case"Previous AMA and declaration":hedHtml="app/applicant/partials/hed/app_hed7.html",hedCtrl="AppMedAssess3Ctrl"}var popupObj={modalTitle:$scope.selectedPage,data:{},size:"lg"};ModalService.openModal(hedHtml,hedCtrl,popupObj)})):void $state.go("hedSetup")}]),angular.module("app").controller("HedSetupCtrl",["$scope","$state","$rootScope","APIS","ModalService","DataManager","ResourceManager",function($scope,$state,$rootScope,APIS,ModalService,DataManager,ResourceManager){$scope.masterSetupRM=ResourceManager,$scope.tempRows=[];var selectedTempRow=null;$scope.loadHedTemplates=function(){APIS.HED_SETUP_RETREIVE.data={},DataManager.sendRestRequest(null,APIS.HED_SETUP_RETREIVE,function(response){$scope.tempRows=response.dataBean.hedTemplateDTOsList,selectedTempRow=null})},$scope.loadHedTemplates(),$scope.rowChecked=function(e){selectedTempRow=e},$scope.createHedTemplate=function(){return selectedTempRow?"inactive"==selectedTempRow.lookUpDTOStatus.lookUpValue.toLowerCase()?void ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.HED_SETUP.ACTIVE_RECORD,$scope):(APIS.HED_SETUP_COPY_CREATE.data={hedTemplateDTOsList:[{templateId:selectedTempRow.templateId,templateName:selectedTempRow.templateName}]},void DataManager.sendRestRequest(null,APIS.HED_SETUP_COPY_CREATE,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage,$scope),$scope.loadHedTemplates()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})):void ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.HED_SETUP.SELECT_RECORD,$scope)},$scope.modifyTemplate=function(){return selectedTempRow?"inactive"==selectedTempRow.lookUpDTOStatus.lookUpValue.toLowerCase()?void ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.HED_SETUP.ACTIVE_RECORD,$scope):($rootScope.selectedTemplate=angular.copy(selectedTempRow),void $state.go("hedSetup2")):void ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.HED_SETUP.SELECT_RECORD,$scope)},$scope.activateHedTemplate=function(){return selectedTempRow?"active"==selectedTempRow.lookUpDTOStatus.lookUpValue.toLowerCase()?void ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.HED_SETUP.INACTIVE_RECORD,$scope):(APIS.HED_SETUP_ACTIVATE.data={hedTemplateDTOsList:[{templateId:selectedTempRow.templateId}]},void DataManager.sendRestRequest(null,APIS.HED_SETUP_ACTIVATE,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage,$scope),$scope.loadHedTemplates()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})):void ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.HED_SETUP.SELECT_RECORD,$scope)},$scope.deleteHedTemplate=function(){return selectedTempRow?"active"==selectedTempRow.lookUpDTOStatus.lookUpValue.toLowerCase()?void ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.HED_SETUP.INACTIVE_RECORD,$scope):(APIS.HED_SETUP_DELETE.data={templateId:selectedTempRow.templateId},void DataManager.sendRestRequest(null,APIS.HED_SETUP_DELETE,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage,$scope),$scope.loadHedTemplates()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})):void ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.HED_SETUP.SELECT_RECORD,$scope)}}]),angular.module("app").controller("HedSetupModalCtrl",["$scope","$state","APIS","ModalService","DataManager","data","$uibModalInstance",function($scope,$state,APIS,ModalService,DataManager,formData,uibModalInstance){var currentElement=null;$scope.opts=[{value:"Yes",remarks:!1},{value:"No",remarks:!1}],$scope.hedSetupModalObj={elementName:"",sectionHeader:"",sectionName:"",elementGender:"",elementType:"",opt1Val:"Yes",opt1Remarks:"",opt2Val:"No",opt2Remarks:"",remarks:"",minLength:"",maxLength:"",validationId:"",mandatory:"653",mandatory1:"653",healthEventCode:""},$scope.showTextBoxVal=!1,$scope.showOtherVal=!1,$scope.controlTypes=[],$scope.genders=[],$scope.isYesNo=!1,$scope.addButton="Add",$scope.isModify=!1,formData.sectionData?($scope.sectionElements=formData.sectionData.elements,$scope.hedSetupModalObj.sectionHeader=formData.sectionData.sectionHeader,$scope.hedSetupModalObj.sectionName=formData.sectionData.sectionName,$scope.sectionEdit=!1,$scope.isModify=!0):$scope.sectionElements=[];var loadCombos=function(){APIS.GET_CONTROL_TYPES.data={},DataManager.sendRestRequest(null,APIS.GET_CONTROL_TYPES,function(response){$scope.controlTypes=response.dataBean}),APIS.GET_GENDERS.data={},DataManager.sendRestRequest(null,APIS.GET_GENDERS,function(response){$scope.genders=response.dataBean})};loadCombos(),$scope.elementTypeChanged=function(ele){"4"==$scope.hedSetupModalObj.elementType?($scope.isYesNo=!0,$scope.showTextBoxVal=!1,$scope.showOtherVal=!0,$scope.hedSetupModalObj.opt1Val="Yes",$scope.hedSetupModalObj.opt2Val="No"):"1"==$scope.hedSetupModalObj.elementType?($scope.isYesNo=!1,$scope.showTextBoxVal=!0,$scope.showOtherVal=!1):$scope.hedSetupModalObj.elementType?($scope.isYesNo=!1,$scope.showTextBoxVal=!1,$scope.showOtherVal=!0):($scope.isYesNo=!1,$scope.showTextBoxVal=!1,$scope.showOtherVal=!1)},$scope.getSectionDetails=function(){APIS.HED_SETUP_VIEW_SECTION.data={sectionId:formData.sectionData.sectionId},DataManager.sendRestRequest(null,APIS.HED_SETUP_VIEW_SECTION,function(response){currentElement=null,626==response.dataBean.elements[i].mandatory?response.dataBean.elements[i].mandatoryDesc="Required":response.dataBean.elements[i].mandatoryDesc="NA",response.dataBean.elements[i].control.controlDesc=response.dataBean.elements[i].control.controlTypeDescription,$scope.sectionElements=response.dataBean.elements,clearDetails()})},$scope.editElementClicked=function(element){if($scope.isModify=!1,currentElement=element,$scope.addButton="Update",element.elementId&&($scope.sectionEdit=!0),$scope.hedSetupModalObj={elementName:element.elementName,healthEventCode:element.healthEventCode,sectionHeader:$scope.hedSetupModalObj.sectionHeader,sectionName:$scope.hedSetupModalObj.sectionName,elementGender:element.gender+"",elementType:element.control.controlType+"",opt1Val:4==element.control.controlType?element.control.options[0].optionsName.split(",")[0]:"Yes",opt1Remarks:4==element.control.controlType&&element.control.options[0].remarks?"Yes"==element.control.options[0].remarks.split(",")[0]:"",opt2Val:4==element.control.controlType?element.control.options[0].optionsName.split(",")[1]:"No",opt2Remarks:4==element.control.controlType&&element.control.options[0].remarks?"Yes"==element.control.options[0].remarks.split(",")[1]:"",remarks:1==element.control.controlType?"Yes"==element.control.validations.remarks:"",validationId:1==element.control.controlType?element.control.validations.validationId:"",minLength:1==element.control.controlType?element.control.validations.minLength:"",maxLength:1==element.control.controlType?element.control.validations.maxLength:"",mandatory:1==element.control.controlType?element.mandatory:"653",mandatory1:1!=element.control.controlType?element.mandatory:"653"},2==element.control.controlType||3==element.control.controlType){$scope.opts=[];var opts1=element.control.options[0].optionsName.split(","),opts1Rem=[];element.control.options[0].remarks&&(opts1Rem=element.control.options[0].remarks.split(","));for(var j in opts1)$scope.opts.push({value:opts1[j],remarks:!!opts1Rem&&"Yes"==opts1Rem[j]})}$scope.elementTypeChanged()},$scope.deleteElementClicked=function(element){for(var i in $scope.sectionElements)if($scope.sectionElements[i].$$hashKey==element.$$hashKey)return void $scope.sectionElements.splice(i,1);element.elementId&&(APIS.HED_SETUP_DELETE_ELEMENT.data={elementId:element.elementId},DataManager.sendRestRequest(null,APIS.HED_SETUP_DELETE_ELEMENT,function(response){}))};var getGenderDesc=function(data){for(var i in $scope.genders)if($scope.genders[i].lookUpItemId==data)return $scope.genders[i].lookUpItemValue},getControlType=function(data){for(var i in $scope.controlTypes)if($scope.controlTypes[i].controlId==data)return $scope.controlTypes[i].controlTypeDescription};$scope.addSection=function(){if(4==$scope.hedSetupModalObj.elementType)var obj={elementName:$scope.hedSetupModalObj.elementName,gender:$scope.hedSetupModalObj.elementGender,genderDesc:getGenderDesc($scope.hedSetupModalObj.elementGender),healthEventCode:$scope.hedSetupModalObj.healthEventCode,control:{controlType:$scope.hedSetupModalObj.elementType,controlDesc:getControlType($scope.hedSetupModalObj.elementType),options:[{optionsName:$scope.hedSetupModalObj.opt1Val+","+$scope.hedSetupModalObj.opt2Val,remarks:($scope.hedSetupModalObj.opt1Remarks?"Yes":"No")+","+($scope.hedSetupModalObj.opt2Remarks?"Yes":"No")}]},mandatory:$scope.hedSetupModalObj.mandatory1,mandatoryDesc:"626"==$scope.hedSetupModalObj.mandatory1?"Required":"NA"};else if(1==$scope.hedSetupModalObj.elementType)var obj={elementName:$scope.hedSetupModalObj.elementName,gender:$scope.hedSetupModalObj.elementGender,genderDesc:getGenderDesc($scope.hedSetupModalObj.elementGender),healthEventCode:$scope.hedSetupModalObj.healthEventCode,control:{controlType:$scope.hedSetupModalObj.elementType,controlDesc:getControlType($scope.hedSetupModalObj.elementType),validations:{minLength:$scope.hedSetupModalObj.minLength,maxLength:$scope.hedSetupModalObj.maxLength,validationId:$scope.hedSetupModalObj.validationId,remarks:$scope.hedSetupModalObj.remarks?"Yes":"No"}},mandatory:$scope.hedSetupModalObj.mandatory,mandatoryDesc:"626"==$scope.hedSetupModalObj.mandatory?"Required":"NA"};else{var obj={elementName:$scope.hedSetupModalObj.elementName,gender:$scope.hedSetupModalObj.elementGender,genderDesc:getGenderDesc($scope.hedSetupModalObj.elementGender),healthEventCode:$scope.hedSetupModalObj.healthEventCode,control:{controlType:$scope.hedSetupModalObj.elementType,controlDesc:getControlType($scope.hedSetupModalObj.elementType),options:[]},mandatory:$scope.hedSetupModalObj.mandatory1,mandatoryDesc:"626"==$scope.hedSetupModalObj.mandatory1?"Required":"NA"},optionsName="",remarks="";for(var i in $scope.opts)optionsName=optionsName?optionsName+","+$scope.opts[i].value:$scope.opts[i].value,remarks=remarks?remarks+","+($scope.opts[i].remarks?"Yes":"No"):$scope.opts[i].remarks?"Yes":"No";obj.control.options.push({optionsName:optionsName,remarks:remarks})}if(currentElement&&currentElement.elementId&&(obj.elementId=currentElement.elementId),"Update"==$scope.addButton){$scope.addButton="Add",$scope.sectionEdit=!1,$scope.isModify=!0;var i=0;for(i in $scope.sectionElements)if($scope.sectionElements[i].$$hashKey==currentElement.$$hashKey){$scope.sectionElements.splice(i,1,obj);break}$scope.modifySection(!1)}else $scope.sectionElements.push(obj);clearDetails()};var clearDetails=function(){$scope.hedSetupModalObj={elementName:"",sectionHeader:$scope.hedSetupModalObj.sectionHeader,sectionName:$scope.hedSetupModalObj.sectionName,elementGender:"",elementType:"",opt1Val:"Yes",opt1Remarks:"",opt2Val:"No",opt2Remarks:"",remarks:"",minLength:"",maxLength:"",validationId:"",mandatory:"653",mandatory1:"653"},$scope.elementTypeChanged(),currentElement=null};$scope.modifySection=function(showAlert){APIS.HED_SETUP_MODIFY_SECTION.data={sectionName:$scope.hedSetupModalObj.sectionName,sectionHeader:$scope.hedSetupModalObj.sectionHeader,sectionId:formData.sectionData.sectionId,pageId:formData.pageId,elements:[]};for(var i=0;i<$scope.sectionElements.length;i++){var obj={elementId:$scope.sectionElements[i].elementId,elementName:$scope.sectionElements[i].elementName,gender:$scope.sectionElements[i].gender,mandatory:$scope.sectionElements[i].mandatory,healthEventCode:$scope.sectionElements[i].healthEventCode,control:{controlType:$scope.sectionElements[i].control.controlType,options:[{optionsName:$scope.sectionElements[i].control.options?$scope.sectionElements[i].control.options[0].optionsName:null,remarks:$scope.sectionElements[i].control.options?$scope.sectionElements[i].control.options[0].remarks:null}],validations:{minLength:$scope.sectionElements[i].control.validations?$scope.sectionElements[i].control.validations.minLength:null,maxLength:$scope.sectionElements[i].control.validations?$scope.sectionElements[i].control.validations.maxLength:null,validationId:$scope.sectionElements[i].control.validations?$scope.sectionElements[i].control.validations.validationId:null,remarks:$scope.sectionElements[i].control.validations?$scope.sectionElements[i].control.validations.remarks:null}}};APIS.HED_SETUP_MODIFY_SECTION.data.elements.push(obj)}DataManager.sendRestRequest(null,APIS.HED_SETUP_MODIFY_SECTION,function(response){response.success?showAlert&&(ModalService.openAlert("alert","success",response.successMessage,$scope),uibModalInstance.dismiss("cancel"),formData.parentScope.pageSelected()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})},$scope.saveSection=function(){if(!$scope.hedSetupModalObj.sectionName)return void ModalService.openAlert("alert","warning","Section Name is Required",$scope);if(!$scope.hedSetupModalObj.sectionHeader)return void ModalService.openAlert("alert","warning","Section Header is Required",$scope);if(formData.sectionData&&formData.sectionData.sectionId)$scope.modifySection(!0);else{APIS.HED_SETUP_ADD_SECTION.data={sectionName:$scope.hedSetupModalObj.sectionName,sectionHeader:$scope.hedSetupModalObj.sectionHeader,pageId:formData.pageId,elements:[]};for(var i=0;i<$scope.sectionElements.length;i++){var obj={elementName:$scope.sectionElements[i].elementName,gender:$scope.sectionElements[i].gender,mandatory:$scope.sectionElements[i].mandatory,control:{controlType:$scope.sectionElements[i].control.controlType,options:[{optionsName:$scope.sectionElements[i].control.options?$scope.sectionElements[i].control.options[0].optionsName:null,remarks:$scope.sectionElements[i].control.options?$scope.sectionElements[i].control.options[0].remarks:null}],validations:{minLength:$scope.sectionElements[i].control.validations?$scope.sectionElements[i].control.validations.minLength:null,maxLength:$scope.sectionElements[i].control.validations?$scope.sectionElements[i].control.validations.maxLength:null,validationId:$scope.sectionElements[i].control.validations?$scope.sectionElements[i].control.validations.validationId:null,remarks:$scope.sectionElements[i].control.validations?$scope.sectionElements[i].control.validations.remarks:null}}};APIS.HED_SETUP_ADD_SECTION.data.elements.push(obj)}DataManager.sendRestRequest(null,APIS.HED_SETUP_ADD_SECTION,function(response){response.success?(ModalService.openAlert("alert","success",response.successMessage,$scope),uibModalInstance.dismiss("cancel"),formData.parentScope.pageSelected()):ModalService.openAlert("alert","error",response.errorMessage,$scope)})}},$scope.cancel=function(){uibModalInstance.dismiss("cancel")},$scope.addOpt=function(option){$scope.opts.splice(0,0,{value:""})},$scope.deleteOpt=function(option,index){$scope.opts.splice(index,1)}}]),angular.module("app").controller("LicensesetupCtrl",["$scope","$state","APIS","DataManager","$log","$window","utilityService","$filter","$timeout","ModalService","$rootScope","ResourceManager",function($scope,$state,APIS,DataManager,$log,$window,utilityService,$filter,$timeout,ModalService,$rootScope,licencerm){$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.init=function(){$scope.licencerm=licencerm,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.deleteLicense=[],$scope.statusDesc=[],$scope.itemList=[],$scope.comboParams={licenseList:{lookUpItemId:null,lookUpItemValue:"license",lookUpItemCode:null},aircraft:{
lookUpItemId:null,lookUpItemValue:"aircraft",lookUpItemCode:null},operationList:{lookUpItemId:null,lookUpItemValue:"operation",lookUpItemCode:null},rankList:{lookUpItemId:null,lookUpItemValue:"rank/rating",lookUpItemCode:null},itemSearch:{lookUpItemId:null,lookUpItemValue:"statusList",lookUpItemCode:null}},$scope.searchKeys={licenseList:{lookUpItemId:null,lookUpItemValue:"license",lookUpItemCode:null},aircraft:{lookUpItemId:null,lookUpItemValue:"aircraft",lookUpItemCode:null},operationList:{lookUpItemId:null,lookUpItemValue:"operation",lookUpItemCode:null},rankList:{lookUpItemId:null,lookUpItemValue:"ranklist",lookUpItemCode:null},itemSearch:{lookUpItemId:null,lookUpItemValue:"itemSearch",lookUpItemCode:null},macId:null},$scope.licenseInfo={macIds:[],licenceTypeId:null,licAircraft:[],licOperation:[],licRankRating:[]},$scope.dropdownDatadup={},$scope.dropdownData={licenseList:{},licAircraft:{},licOperation:{},licRankRating:{},statusList:{}},$scope.tableData={},$scope.selectedLicenseType={},$scope.selectedAircraftType={},$scope.selectedOperationType={},$scope.selectedRanke={},$scope.showDelButton=!1,$scope.showSaveBtn=!1,$scope.removeLicType=$scope.tableData,$scope.selectedRow={},$scope.allAirChecked=null,$scope.allOperChecked=null,$scope.allRankChecked=null,$scope.loadCombos(),$scope.loadStatusCombo(),$scope.loadLicenseData(),$scope.sty="z-index:30;display:block;position:absolute;margin-top:95px",$scope.LoadMACs()},$scope.LoadMACs=function(){APIS.ADMIN_GET_MRSEARCH_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_GET_MRSEARCH_COMBO,function(response){response.success&&($scope.loadMacList=response.dataBean)},$scope.uconfig.token)},$scope.onChangeStatusCombo=function(){$scope.searchStatusName="Active",angular.forEach($scope.statusDesc,function(value,key){value.lookUpItemId==$scope.searchStatusId&&($scope.searchStatusName=value.lookUpItemValue)},$scope.uconfig.token)},$scope.loadStatusCombo=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.tempURL+"stat",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.dropdownData.statusList=response.dataBean.stat},$scope.uconfig.token)},$scope.loadCombos=function(){$scope.callComboApi($scope.comboParams.licenseList,"licenseList"),$scope.callComboApi($scope.comboParams.aircraft,"licAircraft"),$scope.callComboApi($scope.comboParams.operationList,"licOperation"),$scope.callComboApi($scope.comboParams.rankList,"licRankRating")},$scope.callComboApi=function(data,comboName){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){response.success&&($scope.dropdownData[comboName]=response.dataBean)},$scope.uconfig.token)},$scope.searchDataObj={},$scope.loadLicenseData=function(){$scope.searchDataObj={licenceTypeID:$scope.searchKeys.licenseList.lookUpItemId,aircraftTypeID:$scope.searchKeys.aircraft.lookUpItemId,operationTypeID:$scope.searchKeys.operationList.lookUpItemId,status:$scope.searchKeys.itemSearch.lookUpItemId,macID:$scope.searchKeys.macId},console.log("searchobj",$scope.searchDataObj),APIS.GET_LICENSE_MASTER.data=$scope.searchDataObj,DataManager.sendRestRequest(null,APIS.GET_LICENSE_MASTER,function(response){response.success?(console.log("Searchdata->",response.dataBean),$scope.tableData=response.dataBean,$scope.pagination()):console.log(response.errorMessage)},$scope.uconfig.token)},$scope.onchangeMAC=function(itemVals){$scope.macIds=itemVals},$scope.add=function(){return licDuplicateFlag?(alert($scope.licencerm.resources.LICENSE_SETUP.SELECTED_LICENCE_TYPE),!1):($scope.licenseInfo.macIds=$scope.macIds,$scope.licenseInfo.licenceTypeId=$scope.selectedLicenseType,$scope.licenseInfo.licAircraft=$filter("filter")($scope.dropdownData.licAircraft,{checked:!0}),$scope.licenseInfo.licOperation=$filter("filter")($scope.dropdownData.licOperation,{checked:!0}),$scope.licenseInfo.licRankRating=$filter("filter")($scope.dropdownData.licRankRating,{checked:!0}),console.log("addSave",$scope.licenseInfo),APIS.ADD_LICENSE_MASTER.data=$scope.licenseInfo,void DataManager.sendRestRequest(null,APIS.ADD_LICENSE_MASTER,function(response){response.success?($scope.addStatus=response,ModalService.openAlert("alert","success",$scope.licencerm.resources.LICENSE_SETUP.ADDED_SUCCESSFULLY,$scope,"success",function(){$scope.init()}),$timeout(function(){$scope.addStatus=""},5e3)):ModalService.openAlert("alert","success",response.errorMessage,$scope)},$scope.uconfig.token))},$scope.pushToDelete=function(params,ischecked,index,lictype,liccode){console.log("tabledata",$scope.tableData),console.log("params-",params),ischecked?($scope.selectedRow=params,$scope.showDelButton=!0,$scope.removeLicType[index]=params,$scope.selectedLicenseType=liccode,$scope.deleteLicense.push({licenceTypeId:params.licenceTypeId})):$scope.removeLicType.splice(index,1)};var licDuplicateFlag=!1;$scope.onChangeLicenseMaster=function(lookUpItemId){licDuplicateFlag=!1,null!=prevSelectedLicTypeId&&prevSelectedLicTypeId==lookUpItemId.selectedLicenseType||($scope.tempID=lookUpItemId.selectedLicenseType,APIS.CHECK_LICENCE_MASTER.URL="adminSettings/checkLicenseMaster/"+$scope.tempID,DataManager.sendRestRequest(null,APIS.CHECK_LICENCE_MASTER,function(response){response.success?(licDuplicateFlag=!0,response.successMessage&&alert($scope.licencerm.resources.LICENSE_SETUP.SELECTED_LICENCE_TYPE)):licDuplicateFlag=!1},$scope.uconfig.token))},$scope.remove=function(){console.log("after",0===Object.keys($scope.selectedRow).length),0!==Object.keys($scope.selectedRow).length?ModalService.openAlert("confirm","warning",$scope.licencerm.resources.LICENSE_SETUP.DELETE_SELECTED_RECORD,$scope,"delete",function(){}):ModalService.openAlert("alert","info",$scope.licencerm.resources.LICENSE_SETUP.SELECT_DELETE_ROW,$scope),$scope.$on("deleteOk",function(){APIS.DELETE_LICENSE_MASTER.data=$scope.deleteLicense,DataManager.sendRestRequest(null,APIS.DELETE_LICENSE_MASTER,function(response){$scope.remStatus=response,response.success?($scope.loadLicenseData,$timeout(function(){$scope.remStatus=""},5e3),ModalService.openAlert("alert","success",$scope.licencerm.resources.LICENSE_SETUP.DELETED_SUCCESSFULLY,$scope,"success",function(){window.location.reload()})):ModalService.openAlert("alert","error",$scope.licencerm.resources.LICENSE_SETUP.ERROR,"Error",$scope)},$scope.uconfig.token)})},$scope.modifyData=function(){$scope.licenseInfo.macIds=$scope.macIds,$scope.licenseInfo.licenceTypeId=$scope.selectedLicenseType,$scope.licenseInfo.licAircraft=$filter("filter")($scope.dropdownData.licAircraft,{checked:!0}),$scope.licenseInfo.licOperation=$filter("filter")($scope.dropdownData.licOperation,{checked:!0}),$scope.licenseInfo.licRankRating=$filter("filter")($scope.dropdownData.licRankRating,{checked:!0}),$scope.licenseInfo.oldLicenceTypeId=prevSelectedLicTypeId,null!=$scope.dropdownData.status&&($scope.licenseInfo.status=parseInt($scope.dropdownData.status)),console.log("modifyData",$scope.licenseInfo),APIS.EDIT_LICENSE_MASTER.data=$scope.licenseInfo,DataManager.sendRestRequest(null,APIS.EDIT_LICENSE_MASTER,function(response){response.success?($scope.addStatus=response,$timeout(function(){$scope.addStatus="",ModalService.openAlert("alert","success",$scope.licencerm.resources.LICENSE_SETUP.MODIFIED_SUCCESSFULLY,$scope,"success",function(){$scope.init()})},10)):ModalService.openAlert("alert","success",response.errorMessage,$scope)},$scope.uconfig.token),$scope.selectedRow={},$scope.showSaveBtn=!0,$scope.checkAllRank(!1),$scope.checkAllAircraft(!1),$scope.checkAllOperatioin(!1),$scope.selectedLicenseType="",$scope.loadLicenseData(),$ModalInstance.showSaveBtn($scope.selected.item)},$scope.pagination=function(){$scope.start=0,$scope.end=$scope.tableData.length,$scope.currentPageData=$scope.tableData.slice($scope.start,$scope.end),$scope.totalItems=$scope.tableData.length,$scope.currentPage=1,$scope.numPerPage=10},$scope.pageChanged=function(page){var end,start;return start=(page-1)*$scope.numPerPage,end=start+$scope.numPerPage,$scope.currentPageData=$scope.tableData.slice(start,end)},$scope.checkAirgraftType=function(params,ischecked,index){ischecked?$scope.licenseInfo.licAircraft.push(params):$scope.licenseInfo.licAircraft.splice(index,1)},$scope.checkOperationType=function(params,ischecked,index){ischecked?$scope.licenseInfo.licOperation.push(params):$scope.licenseInfo.licOperation.splice(index,1)},$scope.checkRank=function(params,ischecked,index){ischecked?$scope.licenseInfo.licRankRating[index]=params:$scope.licenseInfo.licRankRating.splice(index,1)},$scope.checkAllAircraft=function(ischecked){angular.forEach($scope.dropdownData.licAircraft,function(value,key){ischecked?value.checked=!0:value.checked=!1},$scope.uconfig.token)},$scope.checkAllOperatioin=function(ischecked){angular.forEach($scope.dropdownData.licOperation,function(value,key){ischecked?value.checked=!0:value.checked=!1},$scope.uconfig.token)},$scope.checkAllRank=function(ischecked){angular.forEach($scope.dropdownData.licRankRating,function(value,key){ischecked?value.checked=!0:value.checked=!1},$scope.uconfig.token)},$scope.$watch("allAirChecked",function(newValue,oldValue){newValue?$scope.checkAllAircraft(newValue):$scope.checkAllAircraft(newValue)}),$scope.$watch("allOperChecked",function(newValue,oldValue){newValue?$scope.checkAllOperatioin(newValue):$scope.checkAllOperatioin(newValue)}),$scope.$watch("allRankChecked",function(newValue,oldValue){newValue?$scope.checkAllRank(newValue):$scope.checkAllRank(newValue)});var prevSelectedLicTypeId=null;$scope.macId=[],$scope.clickModify=function(){console.log("after",0===Object.keys($scope.selectedRow).length),prevSelectedLicTypeId=null,0!==Object.keys($scope.selectedRow).length?($("#modifyLtype").modal(),prevSelectedLicTypeId=$scope.selectedRow.licenceTypeId,$scope.dropdownData.licAircraft=$scope.selectedRow.licAircraft,$scope.dropdownData.licOperation=$scope.selectedRow.licOperation,$scope.dropdownData.licRankRating=$scope.selectedRow.licRankRating,$scope.dropdownData.stat=$scope.selectedRow.licRankRating,$scope.dropdownData.status=$scope.selectedRow.status,$scope.dropdownData.statusDescription=$scope.selectedRow.statusDescription,angular.forEach($scope.loadMacList,function(mval,mkey){angular.forEach($scope.selectedRow.macIds,function(modval,modkey){mval.lookUpItemId==modval&&$scope.macId.push(modval)})}),$scope.macIds=$scope.macId):ModalService.openAlert("alert","info",$scope.licencerm.resources.LICENSE_SETUP.SELECT_MODIFY_ROW,$scope)},$scope.clickAdd=function(){$scope.selectedLicenseType=""},$scope.clickClose=function(){$scope.selectedRow={},$scope.showSaveBtn=!1,$scope.checkAllRank(!1),$scope.checkAllAircraft(!1),$scope.checkAllOperatioin(!1),$scope.selectedLicenseType="",$scope.loadLicenseData()};var checkFlag=!1,unCheckFlag=!1;$scope.onCheckBoxClick=function(data,check){checkFlag=!1,unCheckFlag=!1,angular.forEach(data,function(val,key){val.checked?checkFlag=!0:unCheckFlag=!0}),check=!(!checkFlag||unCheckFlag)},$scope.init()}]),angular.module("app").controller("MastersetupCtrl",["$rootScope","$scope","$state","APIS","DataManager","ResourceManager","$uibModal","$filter","ModalService",function($rootScope,$scope,$state,APIS,DataManager,masterSetupRM,$uibModal,$filter,ModalService){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$rootScope.masterSetUpList=[],$scope.mastersSearchList=[],$rootScope.seachKeys={masterSearch:null,code:null,desc:null,status:{lookUpItemId:null,lookUpItemValue:"All"}},$scope.statusObj=[{lookUpItemId:1,lookUpItemValue:"Active"},{lookUpItemId:2,lookUpItemValue:"InActive"},{lookUpItemId:null,lookUpItemValue:"All"}],$scope.cde="",$scope.desc="",$scope.init=function(){$scope.isFrmSubmited=!1,$scope.masterSetupRM=masterSetupRM,$scope.mastersList=[],$scope.selectedObj={rowObj:null},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},APIS.ADMIN_MASTER_SETUP_ALLMASTERS.data={masterType:662},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_ALLMASTERS,function(response){response.success&&($scope.mastersSearchList=response.dataBean,console.log("master search list ",$scope.mastersSearchList))},$scope.uconfig.token)},$scope.isFrmSubmited=!1,$scope.searchMasters=function(){return $rootScope.masterSetUpList=[],$scope.isFrmSubmited=!0,!$scope.masterFilterForm.$invalid&&void(null!=$rootScope.seachKeys.masterSearch?(console.log("search criteria ",$rootScope.seachKeys.masterSearch.originalObject.masterTableCode),APIS.ADMIN_MASTER_SETUP_LIST.data={code:""!==$rootScope.seachKeys.code?$rootScope.seachKeys.code:null,description:""!==$rootScope.seachKeys.desc?$rootScope.seachKeys.desc:null,status:$rootScope.seachKeys.status.lookUpItemId,masterTableCode:$rootScope.seachKeys.masterSearch.originalObject.masterTableCode},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success&&($rootScope.masterSetUpList=response.dataBean,""==$scope.desc?($scope.cde="DSC"==$scope.cde?"ASC":"DSC",$scope.codeSearch()):($scope.desc="DSC"==$scope.desc?"ASC":"DSC",$scope.nameSearch()),""==$scope.desc&&""==$scope.cde&&$scope.codeSearch())},$scope.uconfig.token)):ModalService.openAlert("alert","info",$scope.masterSetupRM.resources.MEDICAL_SETUP.SELECT_MASTER,$scope))},$scope.codeSearch=function(){""==$scope.cde||"DSC"==$scope.cde?($rootScope.masterSetUpList=$filter("orderBy")($rootScope.masterSetUpList,"code",!1),$scope.cde="ASC"):($rootScope.masterSetUpList=$filter("orderBy")($rootScope.masterSetUpList,"code",!0),$scope.cde="DSC"),$scope.desc=""},$scope.decSearch=function(){""==$scope.desc||"DSC"==$scope.desc?($rootScope.masterSetUpList=$filter("orderBy")($rootScope.masterSetUpList,"description",!1),$scope.desc="ASC"):($rootScope.masterSetUpList=$filter("orderBy")($rootScope.masterSetUpList,"description",!0),$scope.desc="DSC"),$scope.cde=""},$scope.onSelectMaster=function(selected){console.log("onSelectMaster",selected),$scope.seachKeys.masterSearch=selected},$scope.addSetUp=function(){if(null!=$rootScope.seachKeys.masterSearch){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/setting/mastersetupadd.html",controller:"MasterSetupAddModalCtrl",size:"md",resolve:{selectedObj:function(){return null}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.searchMasters()},function(){console.log("Modal dismissed at: "+new Date)})}else ModalService.openAlert("alert","info",$scope.masterSetupRM.resources.MEDICAL_SETUP.SELECT_MASTER,$scope)},$scope.editSetUp=function(){if(null!=$rootScope.seachKeys.masterSearch)if(null!=$scope.selectedObj.rowObj){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/setting/mastersetupmodify.html",controller:"MasterSetupModifyModalCtrl",size:"lg",resolve:{selectedObj:function(){return $scope.selectedObj.rowObj}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.searchMasters()},function(){console.log("Modal dismissed at: "+new Date),$scope.selectedObj={rowObj:null}})}else ModalService.openAlert("alert","info",$scope.masterSetupRM.resources.MEDICAL_SETUP.SELECT_RECORD,$scope);else ModalService.openAlert("alert","info",$scope.masterSetupRM.resources.MEDICAL_SETUP.SELECT_MASTER,$scope)},$scope.deleteSetUp=function(){console.log("selected obj : "+$scope.selectedObj.rowObj),null!=$rootScope.seachKeys.masterSearch?null!=$scope.selectedObj.rowObj?ModalService.openAlert("confirm","warning",$scope.masterSetupRM.resources.MEDICAL_SETUP.DELETE_SELECTED_RECORD,$scope,"delete",function(){}):ModalService.openAlert("alert","info",$scope.masterSetupRM.resources.MEDICAL_SETUP.SELECT_RECORD,$scope):ModalService.openAlert("alert","info",$scope.masterSetupRM.resources.MEDICAL_SETUP.SELECT_MASTER,$scope)},$scope.$on("deleteOk",function(){$scope.deleteMaster={code:$scope.selectedObj.rowObj.code,description:$scope.selectedObj.rowObj.description,comments:$scope.selectedObj.rowObj.comments,status:648,masterId:$scope.selectedObj.rowObj.masterId,masterTableCode:$rootScope.seachKeys.masterSearch.originalObject.masterTableCode},APIS.ADMIN_MASTER_SETUP_UPDATE.data=$scope.deleteMaster,DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_UPDATE,function(response){response.success?(ModalService.openAlert("alert","success",$scope.masterSetupRM.resources.MEDICAL_SETUP.DELETED_SUCCESSFULLY,$scope),$scope.init(),$scope.searchMasters()):ModalService.openAlert("alert","error",$scope.masterSetupRM.resources.MEDICAL_SETUP.ERROR,$scope)},$scope.uconfig.token)}),$scope.init()}]),angular.module("app").controller("MasterSetupAddModalCtrl",["$rootScope","$scope","$filter","APIS","DataManager","ResourceManager","$uibModalInstance","ModalService",function($rootScope,$scope,$filter,APIS,DataManager,masterSetupRM,$uibModalInstance,ModalService){console.log("selected master ",$rootScope.seachKeys.masterSearch),$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.masterSetupRM=masterSetupRM,$scope.addMasterDataObj={code:null,description:null,comments:null,status:1,masterId:$rootScope.seachKeys.masterSearch.originalObject.masterId,masterTableCode:$rootScope.seachKeys.masterSearch.originalObject.masterTableCode}},$scope.saveMasterDetails=function(){if($scope.isFrmSubmited=!0,$scope.masterAddForm.$invalid)return!1;var duplicateFlag=!1;return angular.forEach($rootScope.masterSetUpList,function(value,key){value.code===$scope.addMasterDataObj.code&&(duplicateFlag=!0)}),duplicateFlag?(ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.MEDICAL_SETUP.EXISTS,"Configuration is already exists",$scope),!1):(console.log("add master setup ",$scope.addMasterDataObj),null!=$scope.addMasterDataObj.comments&&void 0!=$scope.addMasterDataObj.comments||($scope.addMasterDataObj.comments=""),APIS.ADMIN_MASTER_SETUP_SAVE.data=$scope.addMasterDataObj,void DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_SAVE,function(response){response.success?(ModalService.openAlert("alert","success",$scope.masterSetupRM.resources.MEDICAL_SETUP.SAVED_SUCCESSFULLY,$scope),$scope.init()):response.errorMessage?ModalService.openAlert("alert","error",response.errorMessage,$scope):ModalService.openAlert("alert","warning",$scope.masterSetupRM.resources.MEDICAL_SETUP.EXISTS,$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token))},$scope.cancel=function(){ModalService.openAlert("confirm","warning",$scope.masterSetupRM.resources.MEDICAL_SETUP.WANT_CANCEL,$scope,"cancelModel",function(){$scope.$on("cancelModelOk",function(){$uibModalInstance.dismiss("cancel")})})},$scope.init()}]),angular.module("app").controller("MasterSetupModifyModalCtrl",["$rootScope","$scope","$filter","APIS","DataManager","ResourceManager","$uibModalInstance","selectedObj","ModalService",function($rootScope,$scope,$filter,APIS,DataManager,masterSetupRM,$uibModalInstance,selectedObj,ModalService){$scope.selObj=selectedObj,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.masterSetupRM=masterSetupRM,$scope.modifyMasterDataObj={code:$scope.selObj.code,description:$scope.selObj.description,comments:$scope.selObj.comments,status:$scope.selObj.status,masterId:$scope.selObj.masterId,masterTableCode:$rootScope.seachKeys.masterSearch.originalObject.masterTableCode}},$scope.updateMasterDetails=function(){return $scope.isFrmSubmited=!0,!$scope.masterAddForm.$invalid&&(null!=$scope.modifyMasterDataObj.comments&&void 0!=$scope.modifyMasterDataObj.comments||($scope.modifyMasterDataObj.comments=""),console.log("modify master setup ",$scope.modifyMasterDataObj),console.log("masterId",$rootScope.seachKeys.masterSearch.originalObject.masterId),APIS.ADMIN_MASTER_SETUP_UPDATE.data=$scope.modifyMasterDataObj,void DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_UPDATE,function(response){response.success?(ModalService.openAlert("alert","success",$scope.masterSetupRM.resources.MEDICAL_SETUP.SAVED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error",$scope.masterSetupRM.resources.MEDICAL_SETUP.ERROR_SAVE,$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token))},$scope.cancel=function(){ModalService.openAlert("confirm","warning",$scope.masterSetupRM.resources.MEDICAL_SETUP.WANT_CANCEL,$scope,"cancelModel",function(){$scope.$on("cancelModelOk",function(){$uibModalInstance.dismiss("cancel")})})},$scope.init()}]),angular.module("app").controller("MedicalMasterCtrl",["$rootScope","$scope","$state","APIS","DataManager","ResourceManager","$uibModal","$filter","ModalService",function($rootScope,$scope,$state,APIS,DataManager,medicalMasterRM,$uibModal,$filter,ModalService){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login"),$scope.cde="",$scope.desc="",$rootScope.masterSetUpList=[],$scope.mastersSearchList=[],$rootScope.seachKeys={masterSearch:null,code:null,desc:null,status:{lookUpItemId:null,lookUpItemValue:"All"}},$scope.statusObj=[{lookUpItemId:1,lookUpItemValue:"Active"},{lookUpItemId:2,lookUpItemValue:"InActive"},{lookUpItemId:null,lookUpItemValue:"All"}],$scope.init=function(){$scope.isFrmSubmited=!1,$scope.medicalMasterRM=medicalMasterRM,$scope.mastersList=[],$scope.selectedObj={rowObj:null},$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},APIS.ADMIN_MASTER_SETUP_ALLMASTERS.data={masterType:661},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_ALLMASTERS,function(response){response.success&&($scope.mastersSearchList=response.dataBean,console.log("master search list ",$scope.mastersSearchList))},$scope.uconfig.token)},$scope.searchMasters=function(){return $scope.isFrmSubmited=!0,!$scope.masterFilterForm.$invalid&&void(null!=$rootScope.seachKeys.masterSearch?(console.log("search criteria ",$rootScope.seachKeys.masterSearch.originalObject.masterTableCode),APIS.ADMIN_MASTER_SETUP_LIST.data={code:""!==$rootScope.seachKeys.code?$rootScope.seachKeys.code:null,description:""!==$rootScope.seachKeys.desc?$rootScope.seachKeys.desc:null,status:$rootScope.seachKeys.status.lookUpItemId,masterTableCode:$rootScope.seachKeys.masterSearch.originalObject.masterTableCode},DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_LIST,function(response){response.success&&($rootScope.masterSetUpList=response.dataBean,""==$scope.desc?($scope.cde="DSC"==$scope.cde?"ASC":"DSC",$scope.codeSearch()):($scope.desc="DSC"==$scope.desc?"ASC":"DSC",$scope.nameSearch()),""==$scope.desc&&""==$scope.cde&&$scope.codeSearch())},$scope.uconfig.token)):ModalService.openAlert("alert","info",medicalMasterRM.resources.MEDICAL_MASTERS.SELECT_MASTER,$scope))},$scope.codeSearch=function(){""==$scope.cde||"DSC"==$scope.cde?($rootScope.masterSetUpList=$filter("orderBy")($rootScope.masterSetUpList,"code",!1),$scope.cde="ASC"):($rootScope.masterSetUpList=$filter("orderBy")($rootScope.masterSetUpList,"code",!0),$scope.cde="DSC"),$scope.desc=""},$scope.decSearch=function(){""==$scope.desc||"DSC"==$scope.desc?($rootScope.masterSetUpList=$filter("orderBy")($rootScope.masterSetUpList,"description",!1),$scope.desc="ASC"):($rootScope.masterSetUpList=$filter("orderBy")($rootScope.masterSetUpList,"description",!0),$scope.desc="DSC"),$scope.cde=""},$scope.onSelectMaster=function(selected){console.log("onSelectMaster",selected),$scope.seachKeys.masterSearch=selected},$scope.addSetUp=function(){if(null!=$rootScope.seachKeys.masterSearch){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/setting/medicalmastersadd.html",controller:"MedicalMasterAddModalCtrl",size:"md",resolve:{selectedObj:function(){return null}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.searchMasters()},function(){console.log("Modal dismissed at: "+new Date)})}else ModalService.openAlert("alert","info",medicalMasterRM.resources.MEDICAL_MASTERS.SELECT_MASTER,$scope)},$scope.editSetUp=function(){if(null!=$rootScope.seachKeys.masterSearch)if(null!=$scope.selectedObj.rowObj){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/setting/medicalmastersmodify.html",controller:"MedicalMasterModifyModalCtrl",size:"md",resolve:{selectedObj:function(){return $scope.selectedObj.rowObj}}});modalInstance.result.then(function(selectedItem){console.log("selectedItem",selectedItem),$scope.searchMasters()},function(){console.log("Modal dismissed at: "+new Date),$scope.selectedObj={rowObj:null}})}else ModalService.openAlert("alert","info",medicalMasterRM.resources.MEDICAL_MASTERS.SELECT_RECORD,$scope);else ModalService.openAlert("alert","info",medicalMasterRM.resources.MEDICAL_MASTERS.SELECT_MASTER,$scope)},$scope.deleteSetUp=function(){console.log("selected obj : "+$scope.selectedObj.rowObj),null!=$rootScope.seachKeys.masterSearch?null!=$scope.selectedObj.rowObj?ModalService.openAlert("confirm","warning",medicalMasterRM.resources.MEDICAL_MASTERS.DELETE_SELECTED_RECORD,$scope,"delete",function(){}):ModalService.openAlert("alert","info",medicalMasterRM.resources.MEDICAL_MASTERS.SELECT_RECORD,$scope):ModalService.openAlert("alert","info",medicalMasterRM.resources.MEDICAL_MASTERS.SELECT_MASTER,$scope)},$scope.$on("deleteOk",function(){$scope.deleteMaster={code:$scope.selectedObj.rowObj.code,description:$scope.selectedObj.rowObj.description,comments:$scope.selectedObj.rowObj.comments,status:648,masterId:$scope.selectedObj.rowObj.masterId,masterTableCode:$rootScope.seachKeys.masterSearch.originalObject.masterTableCode},APIS.ADMIN_MASTER_SETUP_UPDATE.data=$scope.deleteMaster,DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_UPDATE,function(response){response.success?(ModalService.openAlert("alert","success",medicalMasterRM.resources.MEDICAL_MASTERS.DELETED_SUCCESSFULLY,$scope),$scope.init(),$scope.searchMasters()):ModalService.openAlert("alert","error",medicalMasterRM.resources.MEDICAL_MASTERS.ERROR,$scope)},$scope.uconfig.token)}),$scope.init()}]),angular.module("app").controller("MedicalMasterAddModalCtrl",["$rootScope","$scope","$filter","APIS","DataManager","ResourceManager","$uibModalInstance","ModalService",function($rootScope,$scope,$filter,APIS,DataManager,medicalMasterRM,$uibModalInstance,ModalService){console.log("selected master ",$rootScope.seachKeys.masterSearch),$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.medicalMasterRM=medicalMasterRM,$scope.addMasterDataObj={code:null,description:null,comments:null,status:1,masterId:$rootScope.seachKeys.masterSearch.originalObject.masterId,masterTableCode:$rootScope.seachKeys.masterSearch.originalObject.masterTableCode}},$scope.saveMasterDetails=function(){if($scope.isFrmSubmited=!0,$scope.masterAddForm.$invalid)return!1;var duplicateFlag=!1;return angular.forEach($rootScope.masterSetUpList,function(value,key){value.code===$scope.addMasterDataObj.code&&(duplicateFlag=!0)}),duplicateFlag?(ModalService.openAlert("alert","warning",medicalMasterRM.resources.MEDICAL_MASTERS.EXISTS,$scope),!1):(null!=$scope.addMasterDataObj.comments&&void 0!=$scope.addMasterDataObj.comments||($scope.addMasterDataObj.comments=""),console.log("add master setup ",$scope.addMasterDataObj),APIS.ADMIN_MASTER_SETUP_SAVE.data=$scope.addMasterDataObj,void DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_SAVE,function(response){response.success?(ModalService.openAlert("alert","success",medicalMasterRM.resources.MEDICAL_MASTERS.SAVED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error",medicalMasterRM.resources.MEDICAL_MASTERS.ERROR_SAVE,$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token))},$scope.cancel=function(){ModalService.openAlert("confirm","warning",medicalMasterRM.resources.MEDICAL_MASTERS.WANT_TO_CANCEL,$scope,"cancelModel",function(){$scope.$on("cancelModelOk",function(){$uibModalInstance.dismiss("cancel")})})},$scope.init()}]),angular.module("app").controller("MedicalMasterModifyModalCtrl",["$rootScope","$scope","$filter","APIS","DataManager","ResourceManager","$uibModalInstance","selectedObj","ModalService",function($rootScope,$scope,$filter,APIS,DataManager,medicalMasterRM,$uibModalInstance,selectedObj,ModalService){$scope.selObj=selectedObj,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.isFrmSubmited=!1,$scope.medicalMasterRM=medicalMasterRM,$scope.modifyMasterDataObj={code:$scope.selObj.code,description:$scope.selObj.description,comments:$scope.selObj.comments,status:$scope.selObj.status,masterId:$scope.selObj.masterId,masterTableCode:$rootScope.seachKeys.masterSearch.originalObject.masterTableCode}},$scope.updateMasterDetails=function(){return $scope.isFrmSubmited=!0,!$scope.masterAddForm.$invalid&&(null!=$scope.modifyMasterDataObj.comments&&void 0!=$scope.modifyMasterDataObj.comments||($scope.modifyMasterDataObj.comments=""),console.log("modify master setup ",$scope.modifyMasterDataObj),APIS.ADMIN_MASTER_SETUP_UPDATE.data=$scope.modifyMasterDataObj,void DataManager.sendRestRequest(null,APIS.ADMIN_MASTER_SETUP_UPDATE,function(response){response.success?(ModalService.openAlert("alert","success",medicalMasterRM.resources.MEDICAL_MASTERS.SAVED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error",medicalMasterRM.resources.MEDICAL_MASTERS.ERROR_SAVE,$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token))},$scope.cancel=function(){ModalService.openAlert("confirm","warning",medicalMasterRM.resources.MEDICAL_MASTERS.WANT_TO_CANCEL,$scope,"cancelModel",function(){$scope.$on("cancelModelOk",function(){$uibModalInstance.dismiss("cancel")})})},$scope.init()}]),angular.module("app").controller("MedicaltemplateCtrl",["$rootScope","$scope","$state","APIS","DataManager","ResourceManager","$uibModal","ModalService",function($rootScope,$scope,$state,APIS,DataManager,medTempRM,$uibModal,ModalService){function getRowDataObject(){return Object.create($scope.baseRowObject)}if($rootScope.viewMedTempList=[],$scope.numPerPageOpt=$rootScope.itemsPerPage,$scope.perPage=$scope.numPerPageOpt[1],$scope.onNumPerPageChange=function(){$scope.perPage=$scope.perPage},$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),!$scope.uconfig)return $state.go("login"),!1;$scope.init=function(){$scope.medTempRM=medTempRM,$scope.addedRowMedTempList=[],$scope.editedRowMedTempList=[],$scope.isFrmSubmited=!1,APIS.ADMIN_VIEW_MED_TEMPLATE.data={},DataManager.sendRestRequest(null,APIS.ADMIN_VIEW_MED_TEMPLATE,function(response){response.success&&($rootScope.viewMedTempList=response.dataBean)},$scope.uconfig.token)},$scope.baseRowObject={templateID:1,pageNameList:$scope.pageNameList,fieldNameList:$scope.fieldNameList,minValue:null,maxValue:null,highCondList:$scope.highCondList,normalCondList:$scope.normalCondList,valueSetYN:"Y",pageNameId:null,pageName:null,fieldNameId:null,fieldName:null,fieldNameObj:null,highCondId:null,highCondValue:null,normalCondId:null,normalCondValue:null,highValue:null,normalValue:null},$scope.loadLookUPCombos=function(rowObj){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.tempURL+"AGE_CONDITION",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){response.success&&null!=response.dataBean&&(rowObj.highCondList=response.dataBean.AGE_CONDITION,rowObj.normalCondList=response.dataBean.AGE_CONDITION)})},$scope.loadPageNameCombo=function(rowObj){$scope.pageCombo=[],APIS.ADMIN_PAGE_COMBO_MED_TEMPLATE.data={},DataManager.sendRestRequest(null,APIS.ADMIN_PAGE_COMBO_MED_TEMPLATE,function(response){response.success&&null!=response.dataBean&&(angular.forEach(response.dataBean.pageNameList,function(value,key){$scope.pageCombo.push({lookUpItemId:key,lookUpItemValue:value})}),rowObj.pageNameList=$scope.pageCombo)},$scope.uconfig.token)},$scope.loadFieldNameCombo=function(rowObj){
$scope.fieldCombo=[],APIS.ADMIN_FIELD_COMBO_MED_TEMPLATE.data={pageName:rowObj.pageName},DataManager.sendRestRequest(null,APIS.ADMIN_FIELD_COMBO_MED_TEMPLATE,function(response){response.success&&null!=response.dataBean?(angular.forEach(response.dataBean.fieldNamesList,function(value,key){$scope.fieldCombo.push({lookUpItemId:key,lookUpItemValue:value})}),rowObj.fieldNameList=$scope.fieldCombo):rowObj.fieldNameList=$scope.fieldCombo},$scope.uconfig.token)},$scope.loadPageNameCombo($scope.baseRowObject),$scope.loadLookUPCombos($scope.baseRowObject),$scope.addNewRow=function(){$scope.addedRowMedTempList.push(getRowDataObject())},$scope.onChangePageName=function(cmb){cmb.row.pageName=null,angular.forEach(cmb.row.pageNameList,function(value,key){key==cmb.row.pageNameId&&(cmb.row.pageName=value.lookUpItemValue)}),$scope.loadFieldNameCombo(cmb.row)},$scope.onChangeHighCond=function(cmb){$scope.addHighCondToRowObj(cmb.row)},$scope.addHighCondToRowObj=function(rowObj){rowObj.highCondValue=null,angular.forEach(rowObj.highCondList,function(pvalue,pkey){pvalue.lookUpItemId==rowObj.highCondId&&(rowObj.highCondValue=pvalue.lookUpItemValue)})},$scope.onChangeNormalCond=function(cmb){$scope.addNormalCondToRowObj(cmb.row)},$scope.addNormalCondToRowObj=function(rowObj){rowObj.normalCondValue=null,angular.forEach(rowObj.normalCondList,function(pvalue,pkey){pvalue.lookUpItemId==rowObj.normalCondId&&(rowObj.normalCondValue=pvalue.lookUpItemValue)})};var templateIDVal=null;$scope.deleteMedTemplate=function(templateID){templateIDVal=templateID,ModalService.openAlert("confirm","warning",$scope.medTempRM.resources.MEDICAL_TEMPLATE.DELETE_RECORD,$scope,"delete",function(){})},$scope.$on("deleteOk",function(){$scope.deleteMedTempData={templateID:null},$scope.deleteMedTempData.templateID=templateIDVal,APIS.ADMIN_DELETE_MED_TEMPLATE.data=$scope.deleteMedTempData,DataManager.sendRestRequest(null,APIS.ADMIN_DELETE_MED_TEMPLATE,function(response){response.success?(ModalService.openAlert("alert","success",$scope.medTempRM.resources.MEDICAL_TEMPLATE.DELETED_SUCCESSFULLY,$scope),$scope.init()):ModalService.openAlert("alert","error",$scope.medTempRM.resources.MEDICAL_TEMPLATE.ERROR,$scope)},$scope.uconfig.token)});var indexVal=null;$scope.deleteRow=function(index){indexVal=index,ModalService.openAlert("confirm","warning",$scope.medTempRM.resources.MEDICAL_TEMPLATE.DELETE_RECORD,$scope,"deleteNew",function(){})},$scope.$on("deleteNewOk",function(){$scope.addedRowMedTempList.splice(indexVal,1)}),$scope.saveMedTemplate=function(){if($scope.isFrmSubmited=!0,$scope.medTempForm.$invalid)return!1;if($scope.addedRowMedTempList.length<=0)return ModalService.openAlert("alert","error",$scope.medTempRM.resources.MEDICAL_TEMPLATE.RECORDS_SAVE,$scope),!1;$scope.saveMedTempData=[];var fieldNameFlag=!1,minMaxFlag=!1,duplicateConfig=!1,mandatoryFlag=!1;return angular.forEach($scope.addedRowMedTempList,function(newValue,key){null!=newValue.fieldNameObj&&void 0!=newValue.fieldNameObj&&(newValue.fieldName=newValue.fieldNameObj.originalObject.lookUpItemValue),null==newValue.fieldName&&(fieldNameFlag=!0),angular.forEach($rootScope.viewMedTempList,function(viewValue,key){viewValue.pageName==newValue.pageName&&viewValue.fieldName==newValue.fieldName&&("Y"==viewValue.valueSetYN?duplicateConfig=!0:newValue.templateID=viewValue.templateID)}),(newValue.minValue||newValue.maxValue||newValue.highCondId||newValue.highValue||newValue.normalCondId||newValue.normalValue)&&(mandatoryFlag=!0),null!=newValue.minValue&&null!=newValue.maxValue&&parseInt(newValue.minValue)>parseInt(newValue.maxValue)&&(minMaxFlag=!0),$scope.saveMedTempData.push({templateID:newValue.templateID,pageName:newValue.pageName,fieldName:newValue.fieldName,minValue:newValue.minValue,maxValue:newValue.maxValue,highValue:(null!=newValue.highCondValue?newValue.highCondValue:"")+" "+(null!=newValue.highValue?newValue.highValue:""),normalValue:(null!=newValue.normalCondValue?newValue.normalCondValue:"")+" "+(null!=newValue.normalValue?newValue.normalValue:""),valueSetYN:newValue.valueSetYN,status:1})}),fieldNameFlag?(ModalService.openAlert("alert","error",$scope.medTempRM.resources.MEDICAL_TEMPLATE.FIELD_NAME_ERR_REQUIRED,$scope),!1):mandatoryFlag?duplicateConfig?(ModalService.openAlert("alert","error",$scope.medTempRM.resources.MEDICAL_TEMPLATE.SELECTED_RECORD,$scope),!1):minMaxFlag?(ModalService.openAlert("alert","error",$scope.medTempRM.resources.MEDICAL_TEMPLATE.MAX_MIN_VALUE,"Max Value Should be greaterthan Min Value",$scope),!1):(APIS.ADMIN_UPDATE_MED_TEMPLATE.data={medicaltemplateDTOs:$scope.saveMedTempData},void DataManager.sendRestRequest(null,APIS.ADMIN_UPDATE_MED_TEMPLATE,function(response){response.success&&(ModalService.openAlert("alert","success",$scope.medTempRM.resources.MEDICAL_TEMPLATE.ADDED_SUCCESSFULLY,"Added Successfully",$scope),$scope.init())},$scope.uconfig.token)):(ModalService.openAlert("alert","error",$scope.medTempRM.resources.MEDICAL_TEMPLATE.ENTER_THE_FIELDS,$scope,function(){}),!1)},$scope.mapViewTemplateDataOnModify=function(templateObj,rowObj){if(rowObj.templateID=templateObj.templateID,rowObj.minValue=templateObj.minValue,rowObj.maxValue=templateObj.maxValue,rowObj.pageName=templateObj.pageName,rowObj.fieldName=templateObj.fieldName,rowObj.fieldNameObj=null,null!=rowObj.minValue&&(rowObj.minValue=parseFloat(rowObj.minValue),rowObj.maxValue=parseFloat(rowObj.maxValue)),null!=templateObj.highValue){var highArr=templateObj.highValue.split(" ");2==highArr.length&&(rowObj.highCondValue=highArr[0],rowObj.highValue=parseFloat(highArr[1]))}if(null!=templateObj.normalValue){var normArr=templateObj.normalValue.split(" ");2==normArr.length&&(rowObj.normalCondValue=normArr[0],rowObj.normalValue=parseFloat(normArr[1]))}angular.forEach(rowObj.pageNameList,function(value,key){value.lookUpItemValue==rowObj.pageName&&(rowObj.pageNameId=value.lookUpItemId)}),angular.forEach(rowObj.highCondList,function(value,key){value.lookUpItemValue==rowObj.highCondValue&&(rowObj.highCondId=value.lookUpItemId)}),angular.forEach(rowObj.normalCondList,function(value,key){value.lookUpItemValue==rowObj.normalCondValue&&(rowObj.normalCondId=value.lookUpItemId)})},$scope.editMedTemplate=function(templateObj){$scope.editedRowMedTempList=[],$scope.editedRowMedTempList.push(getRowDataObject()),$scope.mapViewTemplateDataOnModify(templateObj,$scope.editedRowMedTempList[0]);var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"app/master/partials/setting/medtemp_edit_form.html",controller:"MedTempModalCtrl",size:"lg",resolve:{selectedObj:function(){return $scope.editedRowMedTempList[0]}}});modalInstance.result.then(function(selectedItem){$scope.init()},function(){console.log("Modal dismissed at: "+new Date)})},$scope.init()}]),angular.module("app").controller("MedTempModalCtrl",["$rootScope","$scope","APIS","DataManager","ResourceManager","$uibModalInstance","selectedObj","ModalService",function($rootScope,$scope,APIS,DataManager,medTempRM,$uibModalInstance,selectedObj,ModalService){$scope.selObj=selectedObj,$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.init=function(){$scope.medTempRM=medTempRM},$scope.init(),$scope.onChangeHighCond=function(cmb){$scope.addHighCondToRowObj(cmb.selObj)},$scope.addHighCondToRowObj=function(rowObj){rowObj.highCondValue=null,angular.forEach(rowObj.highCondList,function(pvalue,pkey){pvalue.lookUpItemId==rowObj.highCondId&&(rowObj.highCondValue=pvalue.lookUpItemValue)})},$scope.onChangeNormalCond=function(cmb){$scope.addNormalCondToRowObj(cmb.selObj)},$scope.addNormalCondToRowObj=function(rowObj){rowObj.normalCondValue=null,angular.forEach(rowObj.normalCondList,function(pvalue,pkey){pvalue.lookUpItemId==rowObj.normalCondId&&(rowObj.normalCondValue=pvalue.lookUpItemValue)})},$scope.saveEditedMedTemplate=function(){if($scope.isFrmSubmited=!0,$scope.medTempForm.$invalid)return!1;$scope.saveMedTempData=[];var mandatoryFlag=!1;return($scope.selObj.minValue||$scope.selObj.maxValue||$scope.selObj.highCondId||$scope.selObj.highValue||$scope.selObj.normalCondId||$scope.selObj.normalValue)&&(mandatoryFlag=!0),mandatoryFlag?null!=$scope.selObj.minValue&&null!=$scope.selObj.maxValue&&parseInt($scope.selObj.minValue)>parseInt($scope.selObj.maxValue)?(ModalService.openAlert("alert","error",$scope.medTempRM.resources.MEDICAL_TEMPLATE.MAX_MIN_VALUE,$scope),!1):($scope.saveMedTempData.push({templateID:$scope.selObj.templateID,pageName:$scope.selObj.pageName,fieldName:$scope.selObj.fieldName,minValue:$scope.selObj.minValue,maxValue:$scope.selObj.maxValue,highValue:(null!=$scope.selObj.highCondValue?$scope.selObj.highCondValue:"")+" "+(null!=$scope.selObj.highValue?$scope.selObj.highValue:""),normalValue:(null!=$scope.selObj.normalCondValue?$scope.selObj.normalCondValue:"")+" "+(null!=$scope.selObj.normalValue?$scope.selObj.normalValue:""),valueSetYN:$scope.selObj.valueSetYN,status:1}),APIS.ADMIN_UPDATE_MED_TEMPLATE.data={medicaltemplateDTOs:$scope.saveMedTempData},void DataManager.sendRestRequest(null,APIS.ADMIN_UPDATE_MED_TEMPLATE,function(response){response.success&&ModalService.openAlert("alert","success",$scope.medTempRM.resources.MEDICAL_TEMPLATE.UPDATED_SUCCESSFULLY,$scope),$uibModalInstance.close("Reject")},$scope.uconfig.token)):(ModalService.openAlert("alert","error",$scope.medTempRM.resources.MEDICAL_TEMPLATE.ENTER_THE_FIELDS,$scope,function(){}),!1)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("app.filters").filter("unique",function(){return function(items,filterOn){if(filterOn===!1)return items;if((filterOn||angular.isUndefined(filterOn))&&angular.isArray(items)){var newItems=[],extractValueToCompare=function(item){return angular.isObject(item)&&angular.isString(filterOn)?item[filterOn]:item};angular.forEach(items,function(item){for(var isDuplicate=!1,i=0;i<newItems.length;i++)if(angular.equals(extractValueToCompare(newItems[i]),extractValueToCompare(item))){isDuplicate=!0;break}isDuplicate||newItems.push(item)}),items=newItems}return items}}),angular.module("app.master").config(function($stateProvider){$stateProvider.state("master",{url:"/master",controller:"MasterCtrl",templateUrl:"app/master/partials/role.html"}).state("master-home",{url:"/master-home",controller:"AdminHomeCtrl",templateUrl:"app/master/partials/home.html"}).state("view-profile",{url:"/view-profile",controller:"ViewProfileModelCtrl",templateUrl:"app/master/partials/view_Profile_Model_Form.html"}).state("mastersetup",{url:"/master_setup",controller:"MastersetupCtrl",templateUrl:"app/master/partials/setting/mastersetup.html"}).state("medicalmasters",{url:"/medicalmasters",controller:"MedicalMasterCtrl",templateUrl:"app/master/partials/setting/medicalmasters.html"}).state("mastersetupadd",{url:"/mastersetupadd",controller:"MastersetupCtrl",templateUrl:"app/master/partials/setting/mastersetupadd.html"}).state("mastersetupmodify",{url:"/mastersetupmodify",controller:"MastersetupCtrl",templateUrl:"app/master/partials/setting/mastersetupmodify.html"}).state("mastersetupdelete",{url:"/mastersetupdelete",controller:"MastersetupCtrl",templateUrl:"app/master/partials/setting/mastersetupdelete.html"}).state("licensesetup",{url:"/licensesetup",controller:"LicensesetupCtrl",templateUrl:"app/master/partials/setting/licensesetup.html"}).state("licensesetupadd",{url:"/licensesetupadd",controller:"LicensesetupCtrl",templateUrl:"app/master/partials/setting/licensesetupadd.html"}).state("licensesetupmodify",{url:"/licensesetupmodify",controller:"LicensesetupCtrl",templateUrl:"app/master/partials/setting/licensesetupmodify.html"}).state("medicaltemplate",{url:"/medicaltemplate",controller:"MedicaltemplateCtrl",templateUrl:"app/master/partials/setting/medicaltemplate.html"}).state("config",{url:"/config",templateUrl:"app/master/partials/config/emailconfig.html"}).state("emailconfig",{url:"/email_config",controller:"EmailConfigCtrl",templateUrl:"app/master/partials/config/emailconfig.html"}).state("emailview",{url:"/email_view",controller:"EmailViewCtrl",templateUrl:"app/master/partials/config/emailview.html"}).state("systemconfig",{url:"/system_config",controller:"SystemConfigCtrl",templateUrl:"app/master/partials/config/systemconfig.html"}).state("emailgroups",{url:"/email_groups",controller:"EmailConfigGroupsCtrl",templateUrl:"app/master/partials/config/emailconfiggroups.html"}).state("hedSetup",{url:"/hedSetup",controller:"HedSetupCtrl",templateUrl:"app/master/partials/setting/hedSetup.html"}).state("hedSetup2",{url:"/hedSetup2",controller:"HedSetup2Ctrl",templateUrl:"app/master/partials/setting/hedSetup2.html"}).state("headSetupAddSection",{url:"/headSetupAddSection",controller:"HeadSetupAddSectionCtrl",templateUrl:"app/master/partials/setting/headSetupAddSection.html"}).state("headSetupAddSection2",{url:"/headSetupAddSection2",controller:"HeadSetupAddSectionCtrl2",templateUrl:"app/master/partials/setting/headSetupAddSection2.html"}).state("headSetupViewSection",{url:"/headSetupViewSection",controller:"HeadSetupViewSectionCtrl",templateUrl:"app/master/partials/setting/headSetupViewSection.html"}).state("configmodifymodal1",{url:"/configmodifymodal1",controller:"configmodifymodal1",templateUrl:"app/master/partials/config/configmodifymodal1.html"}).state("broadcast",{url:"/broadcast",controller:"BroadcastTemplateCtrl",templateUrl:"app/master/partials/setting/broadcast.html"}).state("documentlib",{url:"/documentlib",controller:"DocumentLibraryCtrl",templateUrl:"app/master/partials/setting/documentryLibrary.html"}).state("configmodifymodal2",{url:"/configmodifymodal2",controller:"configmodifymodal2",templateUrl:"app/master/partials/config/configmodifymodal2.html"}).state("configmodifymodal3",{url:"/configmodifymodal3",controller:"configmodifymodal3",templateUrl:"app/master/partials/config/configmodifymodal3.html"}).state("followuproviso",{url:"/followuproviso",controller:"FollowuprovisoCtrl",templateUrl:"app/master/partials/config/Followuproviso.html"}).state("instructionsconfig",{url:"/instructionsconfig",controller:"Instructionsconfig",templateUrl:"app/master/partials/config/Instructionsconfig.html"}).state("instructionsconfigmodal",{url:"/instructionsconfigmodal",controller:"InstructionsConfigModalCtrl",templateUrl:"app/master/partials/config/Instructionsconfigmodal.html"}).state("macconfig",{url:"/macconfig",controller:"MacConfigCtrl",templateUrl:"app/master/partials/config/MACconfig.html"}).state("operationalprovinso",{url:"/operationalprovinso",controller:"Operationalprovinso",templateUrl:"app/master/partials/config/Operationalprovinso.html"}).state("publishconfig",{url:"/publishconfig",controller:"PublishconfigCtrl",templateUrl:"app/master/partials/config/Publishconfig.html"}).state("restrictionconfig",{url:"/restrictionconfig",controller:"Restrictionconfig",templateUrl:"app/master/partials/config/Restrictionconfig.html"}).state("scheduletests",{url:"/scheduletests",controller:"Scheduletests",templateUrl:"app/master/partials/config/Scheduletests.html"}).state("targetconfig",{url:"/targetconfig",controller:"TargetConfigCtrl",templateUrl:"app/master/partials/config/Targetconfig.html"}).state("validityconfig",{url:"/validityconfig",controller:"ValidityConfig",templateUrl:"app/master/partials/config/Validityconfig.html"}).state("searchuser",{url:"/search_user",controller:"SearchUserCtrl",templateUrl:"app/master/partials/maintenance/searchuser.html"}).state("accountunlock",{url:"/account_unlock",controller:"AccountUnlockCtrl",templateUrl:"app/master/partials/maintenance/accountunlock.html"}).state("lettertemplates",{url:"/lettertemplates",controller:"LetterTemplatesCtrl",templateUrl:"app/master/partials/maintenance/lettertemplates.html"}).state("clinicsetup",{url:"/clinicsetup",controller:"ClinicSetupCtrl",templateUrl:"app/master/partials/maintenance/clinicsetup.html"}).state("profileupdate",{url:"/profileupdate",controller:"ProfileUpdateCtrl",templateUrl:"app/master/partials/maintenance/profileupdate.html"}).state("rolesetup",{url:"/rolesetup",controller:"RoleSetupCtrl",templateUrl:"app/master/partials/maintenance/rolesetup.html"}).state("mergerecords",{url:"/mergerecords",controller:"MergeRecordsCtrl",templateUrl:"app/master/partials/maintenance/mergerecords.html"}).state("adminmrsearch",{url:"/adminmrsearch",controller:"AdminmrsearchCtrl",templateUrl:"app/master/partials/mrsearch/adminmrsearch.html"}).state("financereports",{url:"/financereports",controller:"FinanceCtrl",templateUrl:"app/master/partials/reports/finance.html"}).state("centralbillingreport",{url:"/centralbillingreport",controller:"CentralBillingCtrl",templateUrl:"app/master/partials/reports/centralBilling.html"}).state("sapexportreport",{url:"/sapexportreport",controller:"SAPExportCtrl",templateUrl:"app/master/partials/reports/sapExport.html"}).state("batchreport",{url:"/batchreport",controller:"BatchCtrl",templateUrl:"app/master/partials/reports/batch.html"}).state("feewaiverconfig",{url:"/feewaiverconfig",controller:"FeewaiverconfigCtrl",templateUrl:"app/master/partials/maintenance/Feewaiverconfig.html"}).state("diagnosispreset",{url:"/diagnosispreset",controller:"MasterDiagnosisPresetCtrl",templateUrl:"app/master/partials/maintenance/diagnosisPreset.html"}).state("paymentdetails",{url:"/paymentdetails",controller:"PaymentDetailsCtrl",templateUrl:"app/master/partials/maintenance/paymentdetails.html"})}).run(function($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.itemsPerPage=[5,10,20,50,"All"]}),angular.module("app").controller("MiniProfileCtrl",["$scope","$state","APIS","DataManager","$window","$filter","ModalService","$rootScope","$log",function($scope,$state,APIS,DataManager,$window,$filter,ModalService,$rootScope,$log){$scope.uconfig=JSON.parse($window.sessionStorage.getItem("config")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),$scope.visitDetails=JSON.parse($window.sessionStorage.getItem("visitDetails")),$scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.dmename=sessionStorage.getItem("dmeName"),$scope.dateofExamination=sessionStorage.getItem("dateofExamination"),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,$scope.page=sessionStorage.getItem("page"),$scope.uconfig||$state.go("login"),$scope.init=function(){$scope.visitDetails.applicantuserId?$scope.applicantuserId=$scope.visitDetails.applicantuserId:$scope.applicantuserId=$scope.visitDetails.applicantDetails.userId,$scope.applicantid=$scope.visitDetails.applicantId,console.log($scope.visitDetails.applicantId),$scope.appliDetails(),$scope.applicantmac(),$scope.applicanttype()},$scope.appliDetails=function(){console.log("inside");var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+$scope.applicantuserId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){console.log("response"+response),response.success&&($scope.getprofdet=response.dataBean,console.log($scope.getprofdet),$scope.getprofdet.photo&&angular.element(".profilePic").attr("src","data:image/jpeg;base64,"+$scope.getprofdet.photo),sessionStorage.setItem("applicantProfile",JSON.stringify($scope.getprofdet)),$scope.applicantProfile=JSON.parse($window.sessionStorage.getItem("applicantProfile")))},$scope.uconfig.token),APIS.GET_PROFILE.URL=tempUrl},$scope.applicantmac=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_APPLICANTMACS.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_APPLICANTMACS.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_APPLICANTMACS,function(response){response.success&&($scope.appliminimac=response.dataBean,$scope.appliminimac[0].lmeSubmitDate&&($scope.appliminimac[0].lmeSubmitDate=$filter("date")($scope.appliminimac[0].lmeSubmitDate,"dd-MMM-yyyy")),sessionStorage.setItem("applicantMac",JSON.stringify($scope.appliminimac)),$scope.applicantMac=JSON.parse($window.sessionStorage.getItem("applicantMac")))},$scope.uconfig.token),APIS.LME_GET_APPLICANTMACS.URL=tempUrl},$scope.applicanttype=function(){var url=null,tempUrl=null;tempUrl=APIS.LME_GET_APPLICANTTYPE.URL,url=tempUrl+"/"+$scope.applicantid,APIS.LME_GET_APPLICANTTYPE.URL=url,DataManager.sendRestRequest(null,APIS.LME_GET_APPLICANTTYPE,function(response){response.success&&($scope.appliminitype=response.dataBean,sessionStorage.setItem("applicantType",JSON.stringify($scope.appliminitype)),$scope.appliminitype=JSON.parse($window.sessionStorage.getItem("applicantType")))},$scope.uconfig.token),APIS.LME_GET_APPLICANTTYPE.URL=tempUrl},$scope.opennew=function(){$window.open("#/profile")},$scope.init()}]),angular.module("app.registration").controller("RegistrationCtrl",["$scope","$state","APIS","DataManager","$timeout","$rootScope","ValidationManager","CAASConfig","ResourceManager","ModalService","$http","$filter",function($scope,$state,APIS,DataManager,$timeout,$rootScope,ValidationManager,CAASConfig,regRM,ModalService,$http,$filter){function getRowDataObject(){return Object.create($scope.baseRowObject)}$scope.dt=null,$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.minhgt="min-height:0px",$scope.open1=function(){$scope.minhgt="min-height:350px",$scope.popup1.opened=!0},$scope.formats=["dd-MMM-yyyy","dd/MM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup1={opened:!1},$scope.tab=1,$scope.showTab="home",$scope.showPassportReq=!1,$scope.isNAChecked=!1,$scope.nricReq=!0,$scope.isResAddChanged=!1,$scope.isMailingAddChanged=!1,$scope.isSameAddChecked=!1,$scope.invalidResPC=!1,$scope.invalidMailingPC=!1,$scope.isValidNRIC=!0,$scope.isEmailMatched=!0,$scope.userDataObj={},$scope.isFrmSubmited=!1,$scope.duplicateUser={},$scope.duplicatePassport={},$scope.licenseList=[],$scope.aircraftList=[],$scope.operationList=[],$scope.rankRatingList=[],$scope.license=1,$scope.aircraft=1,$scope.operation=1,$scope.rankRating=1,$scope.confirmEmail="",$scope.duplicateLicense=!1,$scope.regRM=regRM;var sporeKey=1,sporeTxt="Singapore",nationalityKey="1";$scope.open=function($event){$scope.opened=!0},$(".nav-tabs a").click(function(e){e.preventDefault(),$(this).tab("show")}),$scope.salList=[],$scope.nationsList=[],$scope.ectyList=[],$scope.genList=[],$scope.countryList=[],$scope.userRegDetails={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,personId:null,firstName:null,middleName:null,lastName:null,dob:null,gender:{lookUpId:null,lookUpValue:null},personIdentificationNum:null,salutation:{lookUpId:null,lookUpValue:null},ethnicity:{lookUpId:null,lookUpValue:null},religion:null,maritalStatus:null,nationality:{lookUpId:null,lookUpValue:null},education:null,occupation:null,citizenship:null,age:null,race:null,otherRace:null,nric:null,customerId:null,othercitizenship:null,otherReligion:null,otherOccupation:null,otherEducation:null,otherNationality:null,referralAddress:null,dateofIssue:null,passportNo:null,passportCountry:{countryId:null,countryName:null},phoneNo:null,homePhoneNo:null,professionalDetailsList:[],address:[{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,addressId:null,addressType:1,transactionId:null,transactionType:null,country:{countryId:null,countryName:null},postalCode:null,street:null,block:null,unit:null,floor:null,building:null,email:null,workPhoneNo:null,city:null,state:null,fax:"",phoneExt:null,line1:null,line2:null},{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,addressId:null,addressType:2,transactionId:null,transactionType:null,country:{countryId:null,countryName:null},postalCode:null,street:null,block:null,unit:null,floor:null,building:null,email:null,workPhoneNo:null,city:null,state:null,fax:null,phoneExt:null,line1:null,line2:null}],email:null,primaryIdentificationNUmber:null,prospective:null,organization:{lookUpId:null,lookUpValue:null},otherOrgDesc:null,photo:null,e1PersonId:null},$scope.loadCombos=function(){var url=null,tempUrl1=null;tempUrl1=APIS.GET_LOOKUPS.URL,url=tempUrl1+"SAL, NATIONS, ECTY, GEN, country,ORGANIZATION",APIS.GET_LOOKUPS.URL=url,DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.nationsList=response.dataBean.NATIONS,angular.forEach($scope.nationsList,function(value,key){"A"==value.lookUpItemCode&&(nationalityKey=key)}),$scope.nationsList&&($scope.userRegDetails.nationality.lookUpId=$scope.nationsList[nationalityKey].lookUpItemId),$scope.ectyList=response.dataBean.ECTY,$scope.genList=$.grep(response.dataBean.GEN,function(e){return"640"!=e.lookUpItemId}),$scope.countryList=response.dataBean.country,angular.forEach($scope.countryList,function(value,key){value.lookUpItemValue==sporeTxt&&(sporeKey=key)}),$scope.countryList&&($scope.userRegDetails.address[0].country.countryId=$scope.countryList[sporeKey].lookUpItemId,$scope.userRegDetails.address[1].country.countryId=$scope.countryList[sporeKey].lookUpItemId),configurePostalValLen(0),configurePostalValLen(1)}),APIS.GET_LOOKUPS.URL=tempUrl1,APIS.ADMIN_FEEWAIVER_ORG_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_ORG_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.orgList=response.dataBean.organizationList,$scope.orgList.push({code:null,description:"OTHER",organizationId:999}))})}(),$scope.c1c2LicNumLen=6,$scope.c3LicNumLen=3,$scope.getlicNoValidationNms=function(){DataManager.sendRestRequest(null,APIS.C1C2_LIC_NUMBER,function(response){response.success&&null!=response.dataBean&&($scope.c1c2LicNumLen=parseInt(response.dataBean))}),DataManager.sendRestRequest(null,APIS.C3_LIC_NUMBER,function(response){response.success&&null!=response.dataBean&&($scope.c3LicNumLen=parseInt(response.dataBean))})}(),$scope.baseRowObject={aircraftList:$scope.aircraftList,operationList:$scope.operationList,rankRatingList:$scope.rankRatingList,licenseType:null,aircraftType:null,operationType:null,licenseNo:null,rankOrRating:null,licNoMinLength:6,licNoMaxLength:6},$scope.loadProfessionalCombos=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){void 0!=rowObj?rowObj[comboName]=response.dataBean:($scope[comboName]=response.dataBean,$scope.baseRowObject[comboName]=response.dataBean)})},$scope.loadOtherCombos=function(argId,rowObj){$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"aircraftList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"rank/rating",lookUpItemCode:null},"rankRatingList",rowObj)},$scope.loadOtherCombos(1),$scope.loadProfessionalCombos({lookUpItemId:1,lookUpItemValue:"",lookUpItemCode:null},"licenseList"),$scope.focusElement=null,$scope.professionalRowList=[getRowDataObject()],$scope.addNewRow=function(){if(0==$scope.professionalRowList.length)$scope.professionalRowList.push(getRowDataObject());else{for(var i=0;i<$scope.professionalRowList.length;i++)if(null==$scope.professionalRowList[i].licenseType)return void ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.REQUIRED_LICENSE_DTLS_ERR,$scope);$scope.professionalRowList.push(getRowDataObject())}},$scope.licenseDtlsRequired=!1,$scope.checkPrevLincenseDtlsFilled=function(profRowList){for(var i=0;i<profRowList.length;i++)null==profRowList[i].licenseType?$scope.licenseDtlsRequired=!0:$scope.licenseDtlsRequired=!1};var indexVal=null;$scope.deleteRow=function(index){indexVal=index,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"deleteNew",function(){})},$scope.$on("deleteNewOk",function(){$scope.professionalRowList.splice(indexVal,1)}),$scope.otherOrg=!1,$scope.organizationChangeFn=function(cmb){$scope.userRegDetails.otherOrgDesc=null,999==$scope.userRegDetails.organization.lookUpId?$scope.otherOrg=!0:$scope.otherOrg=!1},$scope.professionalRowList=[],$scope.licenseChangeFn=function(cmb){$scope.loadOtherCombos(cmb.row.licenseType,cmb.row),$scope.checkDuplicateLicence($scope.professionalRowList),$scope.duplicateLicense&&ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.UNIQUE_LICENSE_ERR,$scope,"duplicateLic",function(){cmb.row.licenseType=null});var atcocheck="ATCO";console.log("licenseList",$scope.licenseList),angular.forEach($scope.licenseList,function(licVal,licKey){cmb.row.licenseType==licVal.lookUpItemId&&(licVal.lookUpItemValue==atcocheck&&(cmb.row.licNoMinLength=$scope.c3LicNumLen,cmb.row.licNoMaxLength=$scope.c3LicNumLen),licVal.lookUpItemValue!==atcocheck&&(cmb.row.licNoMinLength=$scope.c1c2LicNumLen,cmb.row.licNoMaxLength=$scope.c1c2LicNumLen))})},$scope.checkDuplicateLicence=function(profRowList){$scope.dupLicenseCheckList=[];for(var i=0;i<profRowList.length;i++)$scope.dupLicenseCheckList.push(profRowList[i].licenseType);$scope.duplicateArray($scope.dupLicenseCheckList).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1},$scope.copyAdd=!1,$scope.copyAddress=function($event){if($event.currentTarget.checked)$scope.userRegDetails.address[1]=$scope.userRegDetails.address[0],$scope.userRegDetails.address[1].addressType=2,$scope.isSameAddChecked=!0,configurePostalValLen(1);else{var newObj={};angular.copy($scope.userRegDetails.address[1],newObj),$scope.userRegDetails.address[1]=newObj,$scope.isSameAddChecked=!1}};var upperCaseFirstLetter=function(input){return input.charAt(0).toUpperCase()+input.slice(1)};$scope.register=function(){var nationalityKeyCode,passportCountryKeyCode,isNationalityKeyCode=!1,isPassportCountryKeyCode=!1;if(angular.forEach($scope.nationsList,function(value,key){isNationalityKeyCode||value.lookUpItemId==$scope.userRegDetails.nationality.lookUpId&&(nationalityKeyCode=value.lookUpItemCode,isNationalityKeyCode=!0)}),angular.forEach($scope.countryList,function(value,key){isPassportCountryKeyCode||value.lookUpItemId==$scope.userRegDetails.passportCountry.countryId&&(passportCountryKeyCode=value.lookUpItemCode,isPassportCountryKeyCode=!0)}),1==$scope.isSingPassReg&&1==$scope.isSingPassReg);else if("A"==nationalityKeyCode&&"A"==passportCountryKeyCode)return void ModalService.openAlert("alert","warning","Please login through Singpass. You will now be redirected to login page.",$scope,"nricExists",function(){$state.go("login")});if($scope.isFrmSubmited=!0,$scope.userRegDetails.nric&&!$scope.isValidNRIC)return $scope.showTab="home",!1;if($scope.userRegDetails.nric&&!$scope.isSingPassReg)return ModalService.openAlert("alert","warning","System has detected valid NRIC/FIN. Please login through Singpass.",$scope,"nricExists",function(){$state.go("login")}),!1;for(var listItemsArr=[],duplicateLicense=[],i=0;i<$scope.professionalRowList.length;i++)duplicateLicense.push($scope.professionalRowList[i].licenseType),listItemsArr.push({licenseType:$scope.professionalRowList[i].licenseType,aircraftType:$scope.professionalRowList[i].aircraftType,operationType:$scope.professionalRowList[i].operationType,licenseNo:$scope.professionalRowList[i].licenseNo,rankOrRating:$scope.professionalRowList[i].rankOrRating});$scope.userRegDetails.professionalDetailsList=listItemsArr,$scope.duplicateArray(duplicateLicense).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1,$scope.isMoreLicensesFlag=!1,$scope.flags=[],$scope.output=[];for(var i=0;i<$scope.professionalRowList.length;i++)$scope.flags[$scope.professionalRowList[i].licenseNo]||($scope.flags[$scope.professionalRowList[i].licenseNo]=!0,$scope.output.push($scope.professionalRowList[i].licenseNo));return console.log("output",$scope.output),$scope.output.length>2&&($scope.isMoreLicensesFlag=!0),$scope.frmPersonalProfile.$invalid||$scope.duplicateUser.errorMessage||$scope.duplicatePassport.errorMessage||!$scope.isEmailMatched?($scope.showTab="home",
!1):$scope.frmProfessionalDetails.$invalid||$scope.duplicateLicense?($scope.showTab="profile",!1):$scope.isMoreLicensesFlag?($scope.showTab="profile",ModalService.openAlert("alert","error",regRM.resources.VALIDATION.LICENSE_MAX_2_ERR,$scope,"only2Lic",function(){}),!1):$scope.frmContactDetails.$invalid?($scope.showTab="messages",!1):($("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.userRegDetails.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),$scope.userRegDetails.photo?(APIS.CHECK_DUPLICATE_REG.data={firstName:$scope.userRegDetails.firstName,lastName:$scope.userRegDetails.lastName,gender:$scope.userRegDetails.gender.lookUpId,ethnicity:$scope.userRegDetails.ethnicity.lookUpId},void DataManager.sendRestRequest(null,APIS.CHECK_DUPLICATE_REG,function(response){response.success?registerUser():ModalService.openAlert("confirm","warning",response.errorMessage,$scope,"duplicateReg",function(){$scope.$on("duplicateRegOk",function(){registerUser()}),$scope.$on("duplicateRegCancel",function(){$state.go("login")})})})):($scope.showTab="home",ModalService.openAlert("alert","error","Please upload profile picture",$scope,"only2Lic",function(){}),!1))};var registerUser=function(){null!=$scope.userRegDetails.otherOrgDesc&&($scope.userRegDetails.organization.lookUpId=null),$scope.dt&&($scope.userRegDetails.dob=$filter("date")($scope.dt,"yyyy-MM-dd")),$scope.userRegDetails.firstName&&($scope.userRegDetails.firstName=upperCaseFirstLetter($scope.userRegDetails.firstName)),$scope.userRegDetails.lastName&&($scope.userRegDetails.lastName=upperCaseFirstLetter($scope.userRegDetails.lastName)),$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.userRegDetails.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),angular.copy($scope.userRegDetails,$scope.userDataObj),null!=$scope.userDataObj.e1PersonId?registerProfileExists($scope.userDataObj):(APIS.REGISTER.data=$scope.userDataObj,DataManager.sendRestRequest(null,APIS.REGISTER,function(response){return response.success?void(response.dataBean.e1PersonId?ModalService.openAlert("confirm","warning","E1 profile is already exists.",$scope,"profileExists",function(){$scope.$on("profileExistsOk",function(){$scope.userDataObj.e1PersonId=response.dataBean.e1PersonId,registerProfileExists($scope.userDataObj)})}):ModalService.openAlert("alert","success","Registration has been succeed, Please Login",$scope,"regSuccess",function(){$state.go("login")})):(alert("Registration has been failed,"+response.errorMessage),!1)}))},registerProfileExists=function(userDataObj){APIS.REGISTER.data=userDataObj,DataManager.sendRestRequest(null,APIS.REGISTER,function(response){return response.success?void ModalService.openAlert("alert","success","Registration has been succeed, Please Login",$scope,"regSuccess",function(){$state.go("login")}):(alert("Registration has been failed,"+response.errorMessage),!1)})};$(".registerValidationModalBut").click(function(){$("."+$scope.focusElement).focus()}),$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurAltMobNum=!1,$scope.onBlurAltMobNumFn=function(){$scope.onBlurAltMobNum=!0},$scope.onBlurPhoneNo=!1,$scope.onBlurPhoneNoFn=function(){$scope.onBlurPhoneNo=!0},$scope.onBlurFaxNo=!1,$scope.onBlurFaxNoFn=function(){$scope.onBlurFaxNo=!0},$scope.onBlurPhoneNo2=!1,$scope.onBlurPhoneNo2Fn=function(){$scope.onBlurPhoneNo2=!0},$scope.onBlurFaxNo2=!1,$scope.onBlurFaxNo2Fn=function(){$scope.onBlurFaxNo2=!0},$scope.onblurPas=!1,$scope.onblurPasFn=function(){$scope.onblurPas=!0},$scope.onBlurLicNo=!1,$scope.onBlurLicNoFn=function(sel){$scope.onBlurLicNo=!0},$scope.onBlurNIRCFn=function(){return!($scope.userRegDetails.nric&&($scope.isValidNRIC=CAASConfig.isValidateNRIC($scope.userRegDetails.nric),!$scope.isValidNRIC))&&void($scope.userRegDetails.nric&&!$scope.isSingPassReg&&ModalService.openAlert("alert","warning","System has detected valid NRIC/FIN. Please login through Singpass.",$scope,"nricExists",function(){$state.go("login")}))};var getPostalAddress=function(postalCode,index){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean?($scope.userRegDetails.address[index].line1=response.dataBean.building,$scope.userRegDetails.address[index].line2=response.dataBean.unit):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)},$scope.preloadMailingAddress=function(postalCode){var index=1;!$scope.isMailingAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)},$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.invalidResPC=!1,$scope.userRegDetails.address[0].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isResAddChanged=!0),$scope.userRegDetails.address[0].line1=null,$scope.userRegDetails.address[0].line2=null,configurePostalValLen(0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.userRegDetails.address[1].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),$scope.userRegDetails.address[1].line1=null,$scope.userRegDetails.address[1].line2=null,configurePostalValLen(1))};var configurePostalValLen=function(index){$scope.userRegDetails.address[index].country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope["postalMinLen"+index]=3,$scope["postalMaxLen"+index]=15):($scope["postalMinLen"+index]=6,$scope["postalMaxLen"+index]=6)};$scope.onBlurmail=!1,$scope.matchEmail=function(fieldname){return $scope.onBlurmail=!0,"email"==fieldname&&$scope.confirmEmail?($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0,!1):void($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0)},$scope.clearPassportDetails=function(param){param||($scope.userRegDetails.passportNo=null,$scope.userRegDetails.passportCountry.lookUpItemId=null)},$scope.isEmailExsist=function(){APIS.USER_EXSIST.data={email:$scope.userRegDetails.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response})},$scope.isDuplicatePassport=function(){APIS.PASSPORT_EXSIST.data={passportNo:$scope.userRegDetails.passportNo},DataManager.sendRestRequest(null,APIS.PASSPORT_EXSIST,function(response){$scope.duplicatePassport=response})},$scope.duplicateArray=function(arr){for(var sorted_arr=arr.sort(),results=[],i=0;i<arr.length-1;i++)sorted_arr[i+1]==sorted_arr[i]&&results.push(sorted_arr[i]);return results},$scope.closeModal=function(){$state.go("login")},$scope.cancelReg=function(){ModalService.openAlert("confirm","warning","Do you want to cancel registration process.",$scope,"cancelReg",function(){$scope.$on("cancelRegOk",function(){$state.go("login")}),$scope.$on("cancelRegCancel",function(){})})},$scope.isSingPassReg=!1,$scope.isSingpassUser=function(){sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),void 0!=$scope.uconfig.dataBean&&($scope.userRegDetails.nric=$scope.uconfig.dataBean.nric,$scope.isNAChecked=!0,$scope.isSingPassReg=!0))},$scope.isSingpassUser()}]),angular.module("app.registration").controller("RegistrationCtrl",["$scope","$state","APIS","DataManager","$timeout","$rootScope","ValidationManager","CAASConfig","ResourceManager","ModalService","$http","$filter",function($scope,$state,APIS,DataManager,$timeout,$rootScope,ValidationManager,CAASConfig,regRM,ModalService,$http,$filter){function getRowDataObject(){return Object.create($scope.baseRowObject)}function validatePhoto(){var photoType=$("#docBinaryStorageDiv").attr("src").split("base64,")[0].split(":")[1];if("image/jpg;"==photoType||"image/png;"==photoType||"image/jpeg;"==photoType){var errormsg="";return!0}$scope.showTab="home";var errormsg="Application accepts only JPG or PNG file formats to upload";return document.getElementById("profile").innerHTML=errormsg,!1}$scope.dt=null,$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.minhgt="min-height:0px",$scope.open1=function(){$scope.minhgt="min-height:350px",$scope.popup1.opened=!0},$scope.formats=["dd-MMM-yyyy","dd/MM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup1={opened:!1},$scope.tab=1,$scope.showTab="home",$scope.showPassportReq=!1,$scope.isNAChecked=!1,$scope.nricReq=!0,$scope.isResAddChanged=!1,$scope.isMailingAddChanged=!1,$scope.isSameAddChecked=!1,$scope.invalidResPC=!1,$scope.invalidMailingPC=!1,$scope.isValidNRIC=!0,$scope.isEmailMatched=!0,$scope.userDataObj={},$scope.isFrmSubmited=!1,$scope.duplicateUser={},$scope.duplicatePassport={},$scope.licenseList=[],$scope.aircraftList=[],$scope.operationList=[],$scope.rankRatingList=[],$scope.license=1,$scope.aircraft=1,$scope.operation=1,$scope.rankRating=1,$scope.confirmEmail="",$scope.duplicateLicense=!1,$scope.regRM=regRM;var sporeKey=1,sporeTxt="Singapore",nationalityKey="1";$scope.open=function($event){$scope.opened=!0},$(".nav-tabs a").click(function(e){e.preventDefault(),$(this).tab("show")}),$scope.salList=[],$scope.nationsList=[],$scope.ectyList=[],$scope.genList=[],$scope.countryList=[],$scope.userRegDetails={status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,personId:null,firstName:null,middleName:null,lastName:null,dob:null,gender:{lookUpId:null,lookUpValue:null},personIdentificationNum:null,salutation:{lookUpId:null,lookUpValue:null},ethnicity:{lookUpId:null,lookUpValue:null},religion:null,maritalStatus:null,nationality:{lookUpId:null,lookUpValue:null},education:null,occupation:null,citizenship:null,age:null,race:null,otherRace:null,nric:null,customerId:null,othercitizenship:null,otherReligion:null,otherOccupation:null,otherEducation:null,otherNationality:null,referralAddress:null,dateofIssue:null,passportNo:null,passportCountry:{countryId:null,countryName:null},phoneNo:null,homePhoneNo:null,professionalDetailsList:[],address:[{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,addressId:null,addressType:1,transactionId:null,transactionType:null,country:{countryId:null,countryName:null},postalCode:null,street:null,block:null,unit:null,floor:null,building:null,email:null,workPhoneNo:null,city:null,state:null,fax:"",phoneExt:null,line1:null,line2:null},{status:null,editedBy:null,createdBy:null,createdDate:null,editedDate:null,machineIp:null,practiceId:null,facilityId:null,addressId:null,addressType:2,transactionId:null,transactionType:null,country:{countryId:null,countryName:null},postalCode:null,street:null,block:null,unit:null,floor:null,building:null,email:null,workPhoneNo:null,city:null,state:null,fax:null,phoneExt:null,line1:null,line2:null}],email:null,primaryIdentificationNUmber:null,prospective:null,organization:{lookUpId:null,lookUpValue:null},otherOrgDesc:null,photo:null,e1PersonId:null},$scope.loadCombos=function(){var url=null,tempUrl1=null;tempUrl1=APIS.GET_LOOKUPS.URL,url=tempUrl1+"SAL, NATIONS, ECTY, GEN, country,ORGANIZATION",APIS.GET_LOOKUPS.URL=url,DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.nationsList=response.dataBean.NATIONS,angular.forEach($scope.nationsList,function(value,key){"A"==value.lookUpItemCode&&(nationalityKey=key)}),$scope.userRegDetails.nric&&$scope.nationsList&&($scope.userRegDetails.nationality.lookUpId=$scope.nationsList[nationalityKey].lookUpItemId),$scope.ectyList=response.dataBean.ECTY,$scope.genList=$.grep(response.dataBean.GEN,function(e){return"640"!=e.lookUpItemId}),$scope.countryList=response.dataBean.country,angular.forEach($scope.countryList,function(value,key){value.lookUpItemValue==sporeTxt&&(sporeKey=key)}),$scope.countryList&&($scope.userRegDetails.address[0].country.countryId=$scope.countryList[sporeKey].lookUpItemId,$scope.userRegDetails.address[1].country.countryId=$scope.countryList[sporeKey].lookUpItemId),configurePostalValLen(0),configurePostalValLen(1)}),APIS.GET_LOOKUPS.URL=tempUrl1,APIS.ADMIN_FEEWAIVER_ORG_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_ORG_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.orgList=response.dataBean.organizationList,$scope.orgList.push({code:null,description:"OTHERS",organizationId:999}))})}(),$scope.c1c2LicNumLen=6,$scope.c3LicNumLen=3,$scope.getlicNoValidationNms=function(){DataManager.sendRestRequest(null,APIS.C1C2_LIC_NUMBER,function(response){response.success&&null!=response.dataBean&&($scope.c1c2LicNumLen=parseInt(response.dataBean))}),DataManager.sendRestRequest(null,APIS.C3_LIC_NUMBER,function(response){response.success&&null!=response.dataBean&&($scope.c3LicNumLen=parseInt(response.dataBean))})}(),$scope.baseRowObject={aircraftList:$scope.aircraftList,operationList:$scope.operationList,rankRatingList:$scope.rankRatingList,licenseType:null,aircraftType:null,operationType:null,licenseNo:null,rankOrRating:null,licNoMinLength:6,licNoMaxLength:6},$scope.loadProfessionalCombos=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){void 0!=rowObj?rowObj[comboName]=response.dataBean:($scope[comboName]=response.dataBean,$scope.baseRowObject[comboName]=response.dataBean)})},$scope.loadOtherCombos=function(argId,rowObj){$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"aircraftList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"rank/rating",lookUpItemCode:null},"rankRatingList",rowObj)},$scope.loadOtherCombos(1),$scope.loadProfessionalCombos({lookUpItemId:1,lookUpItemValue:"",lookUpItemCode:null},"licenseList"),$scope.focusElement=null,$scope.professionalRowList=[getRowDataObject()],$scope.addNewRow=function(){if(0==$scope.professionalRowList.length)$scope.professionalRowList.push(getRowDataObject());else{for(var i=0;i<$scope.professionalRowList.length;i++)if(null==$scope.professionalRowList[i].licenseType)return void ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.REQUIRED_LICENSE_DTLS_ERR,$scope);$scope.professionalRowList.push(getRowDataObject())}},$scope.licenseDtlsRequired=!1,$scope.checkPrevLincenseDtlsFilled=function(profRowList){for(var i=0;i<profRowList.length;i++)null==profRowList[i].licenseType?$scope.licenseDtlsRequired=!0:$scope.licenseDtlsRequired=!1};var indexVal=null;$scope.deleteRow=function(index){indexVal=index,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"deleteNew",function(){})},$scope.$on("deleteNewOk",function(){$scope.professionalRowList.splice(indexVal,1)}),$scope.otherOrg=!1,$scope.organizationChangeFn=function(cmb){$scope.userRegDetails.otherOrgDesc=null,999==$scope.userRegDetails.organization.lookUpId?$scope.otherOrg=!0:$scope.otherOrg=!1},$scope.professionalRowList=[],$scope.licenseChangeFn=function(cmb){$scope.loadOtherCombos(cmb.row.licenseType,cmb.row),$scope.checkDuplicateLicence($scope.professionalRowList),$scope.duplicateLicense&&ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.UNIQUE_LICENSE_ERR,$scope,"duplicateLic",function(){cmb.row.licenseType=null});var atcocheck="ATCO";console.log("licenseList",$scope.licenseList),angular.forEach($scope.licenseList,function(licVal,licKey){cmb.row.licenseType==licVal.lookUpItemId&&(licVal.lookUpItemValue==atcocheck&&(cmb.row.licNoMinLength=$scope.c3LicNumLen,cmb.row.licNoMaxLength=$scope.c3LicNumLen),licVal.lookUpItemValue!==atcocheck&&(cmb.row.licNoMinLength=$scope.c1c2LicNumLen,cmb.row.licNoMaxLength=$scope.c1c2LicNumLen))})},$scope.checkDuplicateLicence=function(profRowList){$scope.dupLicenseCheckList=[];for(var i=0;i<profRowList.length;i++)$scope.dupLicenseCheckList.push(profRowList[i].licenseType);$scope.duplicateArray($scope.dupLicenseCheckList).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1},$scope.copyAdd=!1,$scope.copyAddress=function($event){if($event.currentTarget.checked)$scope.userRegDetails.address[1]=$scope.userRegDetails.address[0],$scope.userRegDetails.address[1].addressType=2,$scope.isSameAddChecked=!0,configurePostalValLen(1);else{var newObj={};angular.copy($scope.userRegDetails.address[1],newObj),$scope.userRegDetails.address[1]=newObj,$scope.isSameAddChecked=!1}};var upperCaseFirstLetter=function(input){return input.charAt(0).toUpperCase()+input.slice(1)};$scope.register=function(){var nationalityKeyCode,passportCountryKeyCode,isNationalityKeyCode=!1,isPassportCountryKeyCode=!1;if(angular.forEach($scope.nationsList,function(value,key){isNationalityKeyCode||value.lookUpItemId==$scope.userRegDetails.nationality.lookUpId&&(nationalityKeyCode=value.lookUpItemCode,isNationalityKeyCode=!0)}),angular.forEach($scope.countryList,function(value,key){isPassportCountryKeyCode||value.lookUpItemId==$scope.userRegDetails.passportCountry.countryId&&(passportCountryKeyCode=value.lookUpItemCode,isPassportCountryKeyCode=!0)}),0==$scope.isSingPassReg&&"A"==nationalityKeyCode&&"A"==passportCountryKeyCode)return void ModalService.openAlert("alert","warning","Please login through Singpass. You will now be redirected to login page.",$scope,"nricExists",function(){$state.go("login")});if($scope.isFrmSubmited=!0,$scope.userRegDetails.nric&&!$scope.isValidNRIC)return $scope.showTab="home",!1;if($scope.userRegDetails.nric&&!$scope.isSingPassReg)return ModalService.openAlert("alert","warning","System has detected valid NRIC/FIN. Please login through Singpass.",$scope,"nricExists",function(){$state.go("login")}),!1;for(var listItemsArr=[],duplicateLicense=[],i=0;i<$scope.professionalRowList.length;i++)duplicateLicense.push($scope.professionalRowList[i].licenseType),listItemsArr.push({licenseType:$scope.professionalRowList[i].licenseType,aircraftType:$scope.professionalRowList[i].aircraftType,operationType:$scope.professionalRowList[i].operationType,licenseNo:$scope.professionalRowList[i].licenseNo,rankOrRating:$scope.professionalRowList[i].rankOrRating});$scope.userRegDetails.professionalDetailsList=listItemsArr,$scope.duplicateArray(duplicateLicense).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1,$scope.isMoreLicensesFlag=!1,$scope.flags=[],$scope.output=[];for(var i=0;i<$scope.professionalRowList.length;i++)$scope.flags[$scope.professionalRowList[i].licenseNo]||($scope.flags[$scope.professionalRowList[i].licenseNo]=!0,$scope.output.push($scope.professionalRowList[i].licenseNo));if(console.log("output",$scope.output),$scope.output.length>2&&($scope.isMoreLicensesFlag=!0),$scope.frmPersonalProfile.$invalid||$scope.duplicateUser.errorMessage||$scope.duplicatePassport.errorMessage||!$scope.isEmailMatched)return $scope.showTab="home",!1;if($scope.frmProfessionalDetails.$invalid||$scope.duplicateLicense)return $scope.showTab="profile",!1;if($scope.isMoreLicensesFlag)return $scope.showTab="profile",ModalService.openAlert("alert","error",regRM.resources.VALIDATION.LICENSE_MAX_2_ERR,$scope,"only2Lic",function(){}),!1;if($scope.frmContactDetails.$invalid)return $scope.showTab="messages",!1;if(validatePhoto(),$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")){var isPhotoValid=validatePhoto();if(!isPhotoValid)return;$scope.userRegDetails.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]}return $scope.userRegDetails.photo?(APIS.CHECK_DUPLICATE_REG.data={firstName:$scope.userRegDetails.firstName,lastName:$scope.userRegDetails.lastName,gender:$scope.userRegDetails.gender.lookUpId,ethnicity:$scope.userRegDetails.ethnicity.lookUpId},void DataManager.sendRestRequest(null,APIS.CHECK_DUPLICATE_REG,function(response){response.success?registerUser():ModalService.openAlert("confirm","warning",response.errorMessage,$scope,"duplicateReg",function(){$scope.$on("duplicateRegOk",function(){registerUser()}),$scope.$on("duplicateRegCancel",function(){$state.go("login")})})})):($scope.showTab="home",ModalService.openAlert("alert","error","Please upload profile picture",$scope,"only2Lic",function(){}),!1)};var registerUser=function(){null!=$scope.userRegDetails.otherOrgDesc&&($scope.userRegDetails.organization.lookUpId=null),$scope.dt&&($scope.userRegDetails.dob=$filter("date")($scope.dt,"yyyy-MM-dd")),$scope.userRegDetails.firstName&&($scope.userRegDetails.firstName=upperCaseFirstLetter($scope.userRegDetails.firstName)),$scope.userRegDetails.lastName&&($scope.userRegDetails.lastName=upperCaseFirstLetter($scope.userRegDetails.lastName)),$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.userRegDetails.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),angular.copy($scope.userRegDetails,$scope.userDataObj),null!=$scope.userDataObj.e1PersonId?registerProfileExists($scope.userDataObj):(APIS.REGISTER.data=$scope.userDataObj,DataManager.sendRestRequest(null,APIS.REGISTER,function(response){return response.success?void(response.dataBean.e1PersonId?ModalService.openAlert("confirm","warning","E1 profile is already exists.",$scope,"profileExists",function(){$scope.$on("profileExistsOk",function(){$scope.userDataObj.e1PersonId=response.dataBean.e1PersonId,registerProfileExists($scope.userDataObj)})}):(0==$scope.isSingPassReg&&ModalService.openAlert("alert","success","Registration successful. Please login with the new credentials sent to your registered email address.",$scope,"regSuccess",function(){$state.go("login")}),1==$scope.isSingPassReg&&ModalService.openAlert("alert","success","Registration successful.",$scope,"regSuccess",function(){$state.go("login")}))):(alert("Registration has been failed,"+response.errorMessage),!1)}))},registerProfileExists=function(userDataObj){APIS.REGISTER.data=userDataObj,DataManager.sendRestRequest(null,APIS.REGISTER,function(response){return response.success?void ModalService.openAlert("alert","success","Registration successful. Please login with the new credentials sent to your registered email address.",$scope,"regSuccess",function(){$state.go("login")}):(alert("Registration has been failed,"+response.errorMessage),!1)})};$(".registerValidationModalBut").click(function(){$("."+$scope.focusElement).focus()}),$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurAltMobNum=!1,$scope.onBlurAltMobNumFn=function(){$scope.onBlurAltMobNum=!0},$scope.onBlurPhoneNo=!1,$scope.onBlurPhoneNoFn=function(){$scope.onBlurPhoneNo=!0},$scope.onBlurFaxNo=!1,$scope.onBlurFaxNoFn=function(){$scope.onBlurFaxNo=!0},$scope.onBlurPhoneNo2=!1,$scope.onBlurPhoneNo2Fn=function(){$scope.onBlurPhoneNo2=!0},$scope.onBlurFaxNo2=!1,$scope.onBlurFaxNo2Fn=function(){$scope.onBlurFaxNo2=!0},$scope.onblurPas=!1,$scope.onblurPasFn=function(){$scope.onblurPas=!0},$scope.onBlurLicNo=!1,$scope.onBlurLicNoFn=function(sel){$scope.onBlurLicNo=!0},$scope.onBlurNIRCFn=function(){return!($scope.userRegDetails.nric&&($scope.isValidNRIC=CAASConfig.isValidateNRIC($scope.userRegDetails.nric),!$scope.isValidNRIC))&&void($scope.userRegDetails.nric&&!$scope.isSingPassReg&&ModalService.openAlert("alert","warning","System has detected valid NRIC/FIN. Please login through Singpass.",$scope,"nricExists",function(){$state.go("login")}))};var getPostalAddress=function(postalCode,index){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean?($scope.userRegDetails.address[index].line1=response.dataBean.building,$scope.userRegDetails.address[index].line2=response.dataBean.unit):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)},$scope.preloadMailingAddress=function(postalCode){var index=1;!$scope.isMailingAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)},$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.invalidResPC=!1,$scope.userRegDetails.address[0].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isResAddChanged=!0),$scope.userRegDetails.address[0].line1=null,$scope.userRegDetails.address[0].line2=null,configurePostalValLen(0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.userRegDetails.address[1].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),$scope.userRegDetails.address[1].line1=null,$scope.userRegDetails.address[1].line2=null,configurePostalValLen(1))};var configurePostalValLen=function(index){$scope.userRegDetails.address[index].country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope["postalMinLen"+index]=3,$scope["postalMaxLen"+index]=15):($scope["postalMinLen"+index]=6,$scope["postalMaxLen"+index]=6)};$scope.onBlurmail=!1,$scope.matchEmail=function(fieldname){return $scope.onBlurmail=!0,"email"==fieldname&&$scope.confirmEmail?($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0,!1):void($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0)},$scope.clearPassportDetails=function(param){param||($scope.userRegDetails.passportNo=null,$scope.userRegDetails.passportCountry.lookUpItemId=null)},$scope.isEmailExsist=function(){APIS.USER_EXSIST.data={email:$scope.userRegDetails.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response})},$scope.isDuplicatePassport=function(){APIS.PASSPORT_EXSIST.data={passportNo:$scope.userRegDetails.passportNo},DataManager.sendRestRequest(null,APIS.PASSPORT_EXSIST,function(response){$scope.duplicatePassport=response})},$scope.duplicateArray=function(arr){for(var sorted_arr=arr.sort(),results=[],i=0;i<arr.length-1;i++)sorted_arr[i+1]==sorted_arr[i]&&results.push(sorted_arr[i]);return results},$scope.closeModal=function(){$state.go("login")},$scope.cancelReg=function(){ModalService.openAlert("confirm","warning","Do you want to cancel registration process.",$scope,"cancelReg",function(){$scope.$on("cancelRegOk",function(){$state.go("login")}),$scope.$on("cancelRegCancel",function(){})})},$scope.isSingPassReg=!1,$scope.isSingpassUser=function(){sessionStorage.getItem("config")&&($scope.uconfig=JSON.parse(sessionStorage.getItem("config")),void 0!=$scope.uconfig.dataBean&&($scope.userRegDetails.nric=$scope.uconfig.dataBean.nric,$scope.isNAChecked=!0,$scope.isSingPassReg=!0))},$scope.isSingpassUser()}]),angular.module("app.registration").config(function($stateProvider){$stateProvider.state("register",{url:"/register",controller:"RegistrationCtrl",templateUrl:"app/registration/partials/register.html"})}),angular.module("app").controller("SingDashboardCtrl",["$scope","$state","APIS","$location","$window","DataManager",function($scope,$state,APIS,$location,$window,DataManager){$scope.init=function(){$scope.isLoggedin(),$scope.dataBind()},$scope.dataBind=function(){},$scope.logout=function(){APIS.LOGOUT.data=$scope.uconfig,DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.errorMessage&&alert(response.errorMessage)},$scope.uconfig.token),$window.sessionStorage.clear(),$state.go("login")},$scope.isLoggedin=function(){$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.uconfig||$state.go("login")},$scope.init()}]),angular.module("app.login").controller("IntranetLoginCtrl",["$http","$scope","$state","$stateParams","APIS","DataManager","$window","$timeout","$sce",function($http,$scope,$state,$stateParams,APIS,DataManager,$window,$timeout,$sce){$window.sessionStorage.setItem("singLoginType","BussinessUser"),$scope.singPassErrorMessage=$window.sessionStorage.getItem("singPassErrorMessage"),$timeout(function(){$window.sessionStorage.setItem("singPassErrorMessage","")},1e4),APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I003",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){var Bussinessins=response.dataBean.instruction;$scope.BussInstruction=$sce.trustAsHtml(Bussinessins)}})}]),angular.module("app").controller("MultiRoleCtrl",function($scope,PermissionManager){$scope.roles=PermissionManager.getMultiRoleResponse().dataBean.userFacilities[0].roles,$scope.selectedRole="",$scope.roleChanged=function(){var selectedRoleName="";for(var i in $scope.roles)if($scope.roles[i].roleId==$scope.selectedRole){selectedRoleName=$scope.roles[i].roleDisplayName,sessionStorage.setItem("currentRole",JSON.stringify($scope.roles[i]));break}PermissionManager.roleChanged($scope.selectedRole,selectedRoleName)}}),angular.module("app").controller("SingApplicantProfileCtrl",["$scope","$state","APIS","DataManager","$timeout","$rootScope","ValidationManager","CAASConfig","ResourceManager","ModalService","$http","$filter","$location","$window",function($scope,$state,APIS,DataManager,$timeout,$rootScope,ValidationManager,CAASConfig,regRM,ModalService,$http,$filter,$location,$window){function getRowDataObject(){return Object.create($scope.baseRowObject)}if($scope.dt=null,$scope.today=function(){$scope.dt=new Date},$scope.clear=function(){$scope.dt=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.formats=["yyyy-MM-dd","dd-MMM-yyyy","dd/MM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[1],$scope.popup1={opened:!1},$scope.tab=1,$scope.showTab="home",$scope.showPassportReq=!1,$scope.isNAChecked=!1,$scope.nricReq=!0,$scope.isResAddChanged=!1,$scope.isMailingAddChanged=!1,$scope.isSameAddChecked=!1,$scope.invalidResPC=!1,$scope.invalidMailingPC=!1,$scope.isEmailMatched=!0,$scope.userDataObj={},$scope.isFrmSubmited=!1,$scope.duplicateUser={success:!0},$scope.duplicatePassport={success:!0},$scope.licenseList=[],$scope.aircraftList=[],$scope.operationList=[],$scope.rankRatingList=[],$scope.license=1,$scope.aircraft=1,$scope.operation=1,$scope.rankRating=1,$scope.confirmEmail="",$scope.duplicateLicense=!1,$scope.regRM=regRM,$scope.open=function($event){$scope.opened=!0},$(".nav-tabs a").click(function(e){e.preventDefault(),$(this).tab("show")}),$scope.salList=[{lookUpItemId:1,lookUpItemValue:"Mr"}],$scope.nationsList=[{lookUpItemId:1,lookUpItemValue:"Singapore"}],$scope.ectyList=[{lookUpItemId:1,lookUpItemValue:"Ecty"}],$scope.genList=[{lookUpItemId:1,lookUpItemValue:"Male"}],$scope.countryList=[{lookUpItemId:1,lookUpItemValue:"Singapore"}],$scope.baseRowObject={aircraftList:$scope.aircraftList,operationList:$scope.operationList,rankRatingList:$scope.rankRatingList,licenseType:null,aircraftType:null,operationType:null,licenseNo:null,rankOrRating:null,licNoMinLength:null,licNoMaxLength:null},$scope.professionalRowList=[],$scope.uconfig=JSON.parse(sessionStorage.getItem("config")),$scope.userRegDetails=JSON.parse(sessionStorage.getItem("userconfig")),!$scope.userRegDetails||!$scope.uconfig)return $state.go("login"),!1;$scope.init=function(){$scope.otherOrg=!1,$scope.prevEmail=$scope.userRegDetails.email,
$scope.prevPassport=$scope.userRegDetails.passportNo,$scope.professionalRowList.push(getRowDataObject()),$scope.professionalRowList=$scope.userRegDetails.professionalDetailsList,angular.forEach($scope.userRegDetails.professionalDetailsList,function(value,key){$scope.licenseChangeFn(value)}),null!=$scope.userRegDetails.photo&&$("#docBinaryStorageDiv").attr("src","data:image/jpeg;base64,"+$scope.userRegDetails.photo),null!=$scope.userRegDetails.otherOrgDesc&&($scope.otherOrg=!0,$scope.userRegDetails.organization.lookUpId=999),$scope.confirmEmail=$scope.userRegDetails.email,$scope.userRegDetails.dob=$scope.userRegDetails.dob.replace(/-/g," "),$scope.dt=new Date($scope.userRegDetails.dob),angular.forEach($scope.userRegDetails.address,function(value,key){$scope.userRegDetails.address[key].postalCode&&(5==$scope.userRegDetails.address[key].postalCode.toString().length?$scope.userRegDetails.address[key].postalCode="0"+$scope.userRegDetails.address[key].postalCode:$scope.userRegDetails.address[key].postalCode=$scope.userRegDetails.address[key].postalCode)})},$scope.loadCombos=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.URL+"SAL, NATIONS, ECTY, GEN, country,ORGANIZATION",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.nationsList=response.dataBean.NATIONS,$scope.ectyList=response.dataBean.ECTY,$scope.genList=$.grep(response.dataBean.GEN,function(e){return"640"!=e.lookUpItemId}),$scope.countryList=response.dataBean.country,$scope.orgList&&!$scope.userRegDetails.organization.lookUpId&&($scope.userRegDetails.organization.lookUpId=$scope.orgList[0].lookUpItemId),$scope.countryList&&!$scope.userRegDetails.address[0].country.countryId&&($scope.userRegDetails.address[0].country.countryId=$scope.countryList[6].lookUpItemId),$scope.countryList&&!$scope.userRegDetails.address[1].country.countryId&&($scope.userRegDetails.address[1].country.countryId=$scope.countryList[6].lookUpItemId)}),APIS.ADMIN_FEEWAIVER_ORG_COMBO.data={},DataManager.sendRestRequest(null,APIS.ADMIN_FEEWAIVER_ORG_COMBO,function(response){response.success&&null!=response.dataBean&&($scope.orgList=response.dataBean.organizationList,$scope.orgList.push({code:null,description:"OTHER",organizationId:999}))})}(),$scope.c1c2LicNumLen=6,$scope.c3LicNumLen=3,$scope.getlicNoValidationNms=function(){DataManager.sendRestRequest(null,APIS.C1C2_LIC_NUMBER,function(response){response.success&&null!=response.dataBean&&($scope.c1c2LicNumLen=parseInt(response.dataBean))}),DataManager.sendRestRequest(null,APIS.C3_LIC_NUMBER,function(response){response.success&&null!=response.dataBean&&($scope.c3LicNumLen=parseInt(response.dataBean))})}(),$scope.loadProfessionalCombos=function(data,comboName,rowObj){APIS.NATIVE_LOOKUP.data=data,DataManager.sendRestRequest(null,APIS.NATIVE_LOOKUP,function(response){void 0!=rowObj?rowObj[comboName]=response.dataBean:($scope[comboName]=response.dataBean,$scope.baseRowObject[comboName]=response.dataBean)})},$scope.loadOtherCombos=function(argId,rowObj){$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"aircraft",lookUpItemCode:null},"aircraftList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"operation",lookUpItemCode:null},"operationList",rowObj),$scope.loadProfessionalCombos({lookUpItemId:argId,lookUpItemValue:"rank/rating",lookUpItemCode:null},"rankRatingList",rowObj)},$scope.loadOtherCombos(1),$scope.loadProfessionalCombos({lookUpItemId:1,lookUpItemValue:"",lookUpItemCode:null},"licenseList"),$scope.focusElement=null,$scope.addNewRow=function(){if(0==$scope.professionalRowList.length)$scope.professionalRowList.push(getRowDataObject());else{for(var i=0;i<$scope.professionalRowList.length;i++)if(null==$scope.professionalRowList[i].licenseType)return void ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.REQUIRED_LICENSE_DTLS_ERR,$scope);$scope.professionalRowList.push(getRowDataObject())}},$scope.licenseDtlsRequired=!1,$scope.checkPrevLincenseDtlsFilled=function(profRowList){for(var i=0;i<profRowList.length;i++)null==profRowList[i].licenseType?$scope.licenseDtlsRequired=!0:$scope.licenseDtlsRequired=!1};var indexVal=null;$scope.deleteRow=function(index){indexVal=index,ModalService.openAlert("confirm","warning","Are you sure you want to delete the selected record?",$scope,"deleteNew",function(){})},$scope.$on("deleteNewOk",function(){$scope.professionalRowList.splice(indexVal,1),$scope.licNoList.splice(indexVal,1)}),$scope.otherOrg=!1,$scope.organizationChangeFn=function(cmb){$scope.userRegDetails.otherOrgDesc=null,999==$scope.userRegDetails.organization.lookUpId?$scope.otherOrg=!0:$scope.otherOrg=!1},$scope.licenseChangeFn=function(cmb){$scope.loadOtherCombos(cmb.licenseType,cmb),$scope.checkDuplicateLicence($scope.professionalRowList),$scope.duplicateLicense&&ModalService.openAlert("alert","warning",regRM.resources.VALIDATION.UNIQUE_LICENSE_ERR,$scope,"duplicateLic",function(){cmb.licenseType=null});var atcocheck="ATCO";angular.forEach($scope.licenseList,function(licVal,licKey){cmb.licenseType==licVal.lookUpItemId&&(licVal.lookUpItemValue==atcocheck&&(cmb.licNoMinLength=$scope.c3LicNumLen,cmb.licNoMaxLength=$scope.c3LicNumLen),licVal.lookUpItemValue!==atcocheck&&(cmb.licNoMinLength=$scope.c1c2LicNumLen,cmb.licNoMaxLength=$scope.c1c2LicNumLen))})},$scope.checkDuplicateLicence=function(profRowList){$scope.dupLicenseCheckList=[];for(var i=0;i<profRowList.length;i++)$scope.dupLicenseCheckList.push(profRowList[i].licenseType);$scope.duplicateArray($scope.dupLicenseCheckList).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1},$scope.copyAdd=!1,$scope.copyAddress=function($event){$event.currentTarget.checked?(angular.copy($scope.userRegDetails.address[0],$scope.userRegDetails.address[1]),$scope.userRegDetails.address[1].addressType=2,$scope.isSameAddChecked=!0):$scope.isSameAddChecked=!1},$scope.updateProfile=function(){$scope.isFrmSubmited=!0;for(var listItemsArr=[],duplicateLicense=[],i=0;i<$scope.professionalRowList.length;i++)duplicateLicense.push($scope.professionalRowList[i].licenseType),listItemsArr.push({licenseType:$scope.professionalRowList[i].licenseType,aircraftType:$scope.professionalRowList[i].aircraftType,operationType:$scope.professionalRowList[i].operationType,licenseNo:$scope.professionalRowList[i].licenseNo,rankOrRating:$scope.professionalRowList[i].rankOrRating});$scope.duplicateArray(duplicateLicense).length?$scope.duplicateLicense=!0:$scope.duplicateLicense=!1,$scope.isMoreLicensesFlag=!1,$scope.flags=[],$scope.output=[];for(var i=0;i<$scope.professionalRowList.length;i++)$scope.flags[$scope.professionalRowList[i].licenseNo]||($scope.flags[$scope.professionalRowList[i].licenseNo]=!0,$scope.output.push($scope.professionalRowList[i].licenseNo));return console.log("output",$scope.output),$scope.output.length>2&&($scope.isMoreLicensesFlag=!0),!$scope.frmPersonalProfile.$invalid&&$scope.duplicateUser.success&&$scope.duplicatePassport.success&&$scope.isEmailMatched?$scope.frmProfessionalDetails.$invalid||$scope.duplicateLicense?($scope.showTab="profile",!1):$scope.frmContactDetails.$invalid?($scope.showTab="messages",!1):$scope.userRegDetails.nric&&!$scope.isValidNRIC?($scope.showTab="home",!1):($scope.userRegDetails.dob=$filter("date")(new Date($scope.dt),$scope.formats[0]),$scope.userRegDetails.professionalDetailsList=listItemsArr,$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")&&($scope.userRegDetails.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]),angular.copy($scope.userRegDetails,$scope.userDataObj),APIS.UPDATE_PROFILE.data=$scope.userDataObj,void DataManager.sendRestRequest(null,APIS.UPDATE_PROFILE,function(response){return $scope.regStatus=response,$scope.regStatus.success?(APIS.LOGOUT.data=$scope.uconfig,void DataManager.sendRestRequest(null,APIS.LOGOUT,function(response){response.success?$location.url("/singpass?SAMLart&RelayState"):console.log(response.errorMessage)},$scope.uconfig.token)):(ModalService.openAlert("alert","info","Profile has not been updated successfully",$scope),!1)},$scope.uconfig.token)):($scope.showTab="home",!1)},$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurAltMobNum=!1,$scope.onBlurAltMobNumFn=function(){$scope.onBlurAltMobNum=!0},$scope.onBlurPhoneNo=!1,$scope.onBlurPhoneNoFn=function(){$scope.onBlurPhoneNo=!0},$scope.onBlurFaxNo=!1,$scope.onBlurFaxNoFn=function(){$scope.onBlurFaxNo=!0},$scope.onBlurPhoneNo2=!1,$scope.onBlurPhoneNo2Fn=function(){$scope.onBlurPhoneNo2=!0},$scope.onBlurFaxNo2=!1,$scope.onBlurFaxNo2Fn=function(){$scope.onBlurFaxNo2=!0},$scope.onblurPas=!1,$scope.onblurPasFn=function(){$scope.onblurPas=!0},$scope.isValidNRIC=!0,$scope.onBlurNIRC=!1,$scope.onBlurNIRCFn=function(){$scope.onBlurNIRC=!0,$scope.userRegDetails.nric&&($scope.isValidNRIC=CAASConfig.isValidateNRIC($scope.userRegDetails.nric))},$scope.onBlurLicNo=!1,$scope.onBlurLicNoFn=function(sel){$scope.onBlurLicNo=!0},$scope.onBlurPostal=!1,$rootScope.newToken=null,$scope.preloadResAddress=function(postalCode){$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode&&($scope.copyAdd=!1,DataManager.sendRestRequest(null,APIS.GET_ADDRESS,function(response){response.SearchResults[0].ErrorMessage?($scope.userRegDetails.address[0].building=null,$scope.userRegDetails.address[0].street=null,$scope.invalidMailingPC=!0):($scope.userRegDetails.address[0].line1=response.SearchResults[1].BLDG_NAME,$scope.userRegDetails.address[0].line2=response.SearchResults[1].HBRN,$scope.invalidMailingPC=!1)},null,postalCode))};var getPostalAddress=function(postalCode,index){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean?($scope.userRegDetails.address[index].line1=response.dataBean.building,$scope.userRegDetails.address[index].line2=response.dataBean.unit):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.userRegDetails.address[index].line1=null,$scope.userRegDetails.address[index].line2=null)},$scope.preloadMailingAddress=function(postalCode){return!$scope.isSameAddChecked&&void(!$scope.isMailingAddChanged&&postalCode&&DataManager.sendRestRequest(null,APIS.GET_ADDRESS,function(response){console.log(response.SearchResults.ErrorMessage),response.SearchResults[0].ErrorMessage?($scope.userRegDetails.address[1].building=null,$scope.userRegDetails.address[1].street=null,$scope.invalidMailingPC=!0):($scope.userRegDetails.address[1].line1=response.SearchResults[1].BLDG_NAME,$scope.userRegDetails.address[1].line2=response.SearchResults[1].HBRN,$scope.invalidMailingPC=!1)},null,postalCode))},$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.invalidResPC=!1,$scope.userRegDetails.address[0].country.lookUpItemId!=$scope.countryList[6].lookUpItemId&&($scope.isResAddChanged=!0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.userRegDetails.address[1].country.lookUpItemId!=$scope.countryList[6].lookUpItemId&&($scope.isMailingAddChanged=!0))},$scope.onBlurmail=!1,$scope.matchEmail=function(fieldname){return $scope.onBlurmail=!0,"email"==fieldname&&$scope.confirmEmail?($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0,!1):void($scope.userRegDetails.email!=$scope.confirmEmail?$scope.isEmailMatched=!1:$scope.isEmailMatched=!0)},$scope.clearPassportDetails=function(param){param||($scope.userRegDetails.passportNo=null,$scope.userRegDetails.passportCountry.lookUpItemId=null)},$scope.isEmailExsist=function(){$scope.prevEmail!=$scope.userRegDetails.email&&(APIS.USER_EXSIST.data={email:$scope.userRegDetails.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response}))},$scope.isDuplicatePassport=function(){$scope.prevPassport!=$scope.usdserRegDetails.passportNo&&(APIS.PASSPORT_EXSIST.data={passportNo:$scope.userRegDetails.passportNo,personId:$scope.userRegDetails.personId},DataManager.sendRestRequest(null,APIS.PASSPORT_EXSIST,function(response){$scope.duplicatePassport=response}))},$scope.duplicateArray=function(arr){for(var sorted_arr=arr.sort(),results=[],i=0;i<arr.length-1;i++)sorted_arr[i+1]==sorted_arr[i]&&results.push(sorted_arr[i]);return results},$scope.closeModal=function(){$state.go("login")},$scope.init()}]),angular.module("app.login").controller("SingPassLoginCtrl",["$http","$scope","$state","$stateParams","APIS","DataManager","$window","$timeout","$sce",function($http,$scope,$state,$stateParams,APIS,DataManager,$window,$timeout,$sce){$window.sessionStorage.setItem("singLoginType","BussinessUser"),$scope.singPassErrorMessage=$window.sessionStorage.getItem("singPassErrorMessage"),$timeout(function(){$window.sessionStorage.setItem("singPassErrorMessage","")},1e4),APIS.GET_INSTRUCTION.URL="instruction/getOneInstruction/I003",DataManager.sendRestRequest(null,APIS.GET_INSTRUCTION,function(response){if(response.success){var Bussinessins=response.dataBean.instruction;$scope.BussInstruction=$sce.trustAsHtml(Bussinessins)}})}]),angular.module("app").controller("SingProfileCtrl",["$http","$scope","$state","$stateParams","APIS","DataManager","$window","switchRoles",function($http,$scope,$state,$stateParams,APIS,DataManager,$window,switchRoles){function validatePhoto(){var photoType=$("#docBinaryStorageDiv").attr("src").split("base64,")[0].split(":")[1];if("image/jpg;"==photoType||"image/png;"==photoType||"image/jpeg;"==photoType){var errormsg="";return!0}var errormsg="Application accepts only JPG or PNG file formats to upload";return document.getElementById("profile").innerHTML=errormsg,!1}var dataBean=JSON.parse(sessionStorage.getItem("config"));if($scope.currentRole=JSON.parse(sessionStorage.getItem("currentRole")),$scope.roleid=$scope.currentRole.roleId,$scope.rolename=$scope.currentRole.roleName,!dataBean)return $state.go("login"),!1;$scope.confirmProfileDtls={},$scope.userinfo={},$scope.init=function(){$scope.isFrmSubmited=!1,$scope.confirmProfileDtls=JSON.parse($window.sessionStorage.getItem("userprofileconfig")),1==$scope.confirmProfileDtls.person.address[0].addressType?($scope.i=0,$scope.j=1):($scope.i=1,$scope.j=0),5==$scope.confirmProfileDtls.person.address[$scope.i].postalCode.toString().length?$scope.postI="0"+$scope.confirmProfileDtls.person.address[$scope.i].postalCode.toString():$scope.postI=$scope.confirmProfileDtls.person.address[$scope.i].postalCode,5==$scope.confirmProfileDtls.person.address[$scope.j].postalCode.toString().length?$scope.postJ="0"+$scope.confirmProfileDtls.person.address[$scope.j].postalCode.toString():$scope.postJ=$scope.confirmProfileDtls.person.address[$scope.j].postalCode,"N"==$scope.confirmProfileDtls.isSingpassFirstLogin&&(6==$scope.roleid?$state.go("dashboard"):7==$scope.roleid?$state.go("master-home"):8==$scope.roleid?$state.go("master-home"):9==$scope.roleid?$state.go("camb-home"):10==$scope.roleid?$state.go("lme"):11==$scope.roleid?$state.go("lme"):12==$scope.roleid?$state.go("lmfhome"):13==$scope.roleid?$state.go("camb-home"):14==$scope.roleid?$state.go("mahome"):15==$scope.roleid&&$state.go("camb-home")),$scope.userInfo=JSON.parse($window.sessionStorage.getItem("userconfig")),null!=$scope.confirmProfileDtls.person.dob&&($scope.confirmProfileDtls.person.dob=new Date($scope.confirmProfileDtls.person.dob)),null!=$scope.confirmProfileDtls.person.photo&&$("#docBinaryStorageDiv").attr("src","data:image/jpeg;base64,"+$scope.confirmProfileDtls.person.photo),$scope.confirmProfileDtls.userSpecialitiesSet.length>0&&($scope.confirmProfileDtls.userSpecialitiesSet[0].speciality.specialityId=$scope.confirmProfileDtls.userSpecialitiesSet[$scope.confirmProfileDtls.userSpecialitiesSet.length-1].speciality.specialityId,$scope.getSpecialityComboData())},$scope.salList=[{lookUpItemId:1,lookUpItemValue:"Mr"}],$scope.nationsList=[{lookUpItemId:1,lookUpItemValue:"Singapore"}],$scope.ectyList=[{lookUpItemId:1,lookUpItemValue:"Ecty"}],$scope.genList=[{lookUpItemId:1,lookUpItemValue:"Male"}],$scope.countryList=[{lookUpItemId:1,lookUpItemValue:"Singapore"}],$scope.designList=[],$scope.qualList=[],$scope.dt=new Date,$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.dateOptions={maxDate:new Date,startingDay:1,showWeeks:!1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.formats=["dd/MM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.popup1={opened:!1},$scope.invalidResPC=!1;var sporeKey=1,sporeTxt="Singapore";$scope.onBlurMobNum=!1,$scope.onBlurMobNumFn=function(){$scope.onBlurMobNum=!0},$scope.onBlurOfficeNum=!1,$scope.onBlurOfficeNumFn=function(){$scope.onBlurOfficeNum=!0},$scope.onBlurPhoneNo=!1,$scope.onBlurPhoneNoFn=function(){$scope.onBlurPhoneNo=!0},$scope.onBlurFaxNo=!1,$scope.onBlurFaxNoFn=function(){$scope.onBlurFaxNo=!0},$scope.onBlurPhoneNo2=!1,$scope.onBlurPhoneNo2Fn=function(){$scope.onBlurPhoneNo2=!0},$scope.onBlurFaxNo2=!1,$scope.onBlurFaxNo2Fn=function(){$scope.onBlurFaxNo2=!0},$scope.onblurPas=!1,$scope.onblurPasFn=function(){$scope.onblurPas=!0},$scope.onBlurNIRC=!1,$scope.onBlurNIRCFn=function(){$scope.onBlurNIRC=!0},$scope.onBlurmail=!1,$scope.matchEmail=function(){$scope.onBlurmail=!0};var getPostalAddress=function(postalCode,index){APIS.ONEMAP_GET_ADDRESS.data={postalCode:postalCode},DataManager.sendRestRequest(null,APIS.ONEMAP_GET_ADDRESS,function(response){response.success&&null!=response.dataBean?($scope.confirmProfileDtls.person.address[index].line1=response.dataBean.building,$scope.confirmProfileDtls.person.address[index].line2=response.dataBean.unit):($scope.confirmProfileDtls.person.address[index].line1=null,$scope.confirmProfileDtls.person.address[index].line2=null)})};$scope.onBlurPostal=!1,$scope.preloadResAddress=function(postalCode){var index=0;$scope.onBlurPostal=!0,!$scope.isResAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.confirmProfileDtls.person.address[index].line1=null,$scope.confirmProfileDtls.person.address[index].line2=null)},$scope.preloadMailingAddress=function(postalCode){var index=1;!$scope.isMailingAddChanged&&postalCode?getPostalAddress(postalCode,index):($scope.confirmProfileDtls.person.address[index].line1=null,$scope.confirmProfileDtls.person.address[index].line2=null)},$scope.isAddressChanged=function(type){"Residential"==type?($scope.isResAddChanged=!1,$scope.invalidResPC=!1,$scope.confirmProfileDtls.person.address[0].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isResAddChanged=!0),$scope.confirmProfileDtls.person.address[0].line1=null,$scope.confirmProfileDtls.person.address[0].line2=null,configurePostalValLen(0)):($scope.isMailingAddChanged=!1,$scope.invalidMailingPC=!1,$scope.confirmProfileDtls.person.address[1].country.countryId!=$scope.countryList[sporeKey].lookUpItemId&&($scope.isMailingAddChanged=!0),$scope.confirmProfileDtls.person.address[1].line1=null,$scope.confirmProfileDtls.person.address[1].line2=null,configurePostalValLen(1))};var configurePostalValLen=function(index){$scope.confirmProfileDtls.person.address[index]&&($scope.confirmProfileDtls.person.address[index].country.countryId!=$scope.countryList[sporeKey].lookUpItemId?($scope["postalMinLen"+index]=3,$scope["postalMaxLen"+index]=15):($scope["postalMinLen"+index]=6,$scope["postalMaxLen"+index]=6))};$scope.isEmailExsist=function(){APIS.USER_EXSIST.data={email:$scope.confirmProfileDtls.email},DataManager.sendRestRequest(null,APIS.USER_EXSIST,function(response){$scope.duplicateUser=response})},$scope.loadCombos=function(){APIS.GET_LOOKUPS.URL=APIS.GET_LOOKUPS.URL+"SAL, DESIGNATION,QUALIFICATION, NATIONS, ECTY, GEN, country,ORGANIZATION",DataManager.sendRestRequest(null,APIS.GET_LOOKUPS,function(response){$scope.salList=response.dataBean.SAL,$scope.designList=response.dataBean.DESIGNATION,$scope.qualList=response.dataBean.QUALIFICATION,$scope.nationsList=response.dataBean.NATIONS,$scope.ectyList=response.dataBean.ECTY,$scope.genList=response.dataBean.GEN,$scope.countryList=response.dataBean.country,$scope.orgList=response.dataBean.ORGANIZATION,angular.forEach($scope.countryList,function(value,key){value.lookUpItemValue==sporeTxt&&(sporeKey=key)}),configurePostalValLen(0),configurePostalValLen(1)})}(),$scope.getSpecialityComboData=function(){DataManager.sendRestRequest(null,APIS.GET_CAMB_SPECIALITY_COMBO,function(response){response.success?$scope.specialityCombo=response.dataBean:$log.error("GET_CAMB_SPECIALITY_COMBO:"+response)})},$scope.postConfirmProfileDtls=function(){if($scope.isFrmSubmited=!0,console.log("postConfirmProfileDtls"),$scope.frmConfirmProfile.$invalid)return!1;if(APIS.UPDATE_PROFILE.data={},$("input[type=file]")[0].files[0]&&$("#docBinaryStorageDiv").attr("src")){var isPhotoValid=validatePhoto();if(!isPhotoValid)return;$scope.confirmProfileDtls.person.photo=$("#docBinaryStorageDiv").attr("src").split("base64,")[1]}APIS.SINGPASS_CONFIRM_PROFILE.data=$scope.confirmProfileDtls,DataManager.sendRestRequest(null,APIS.SINGPASS_CONFIRM_PROFILE,function(response){response.success?6==$scope.roleid?$state.go("dashboard"):7==$scope.roleid?$state.go("master-home"):8==$scope.roleid?$state.go("master-home"):9==$scope.roleid?$state.go("camb-home"):10==$scope.roleid?$state.go("lme"):11==$scope.roleid?$state.go("lme"):12==$scope.roleid?$state.go("lmfhome"):13==$scope.roleid?$state.go("camb-home"):14==$scope.roleid?$state.go("mahome"):15==$scope.roleid&&$state.go("camb-home"):$state.go("register")},dataBean.token)},$scope.init()}]),angular.module("app").controller("SingpassCtrl",["$http","$scope","$state","$stateParams","APIS","DataManager","$window","PermissionManager","ModalService","switchRoles","SessionManager",function($http,$scope,$state,$stateParams,APIS,DataManager,$window,PermissionManager,ModalService,switchRoles,SessionManager){function loadSessionTimeOut(){DataManager.sendRestRequest(null,APIS.GET_SESSION_TIMEOUT,function(response){response.success&&SessionManager.startTimer(Number(response.dataBean))},$scope.uconfig.token)}$scope.singPass={samlart:$stateParams.SAMLart,relayState:$stateParams.RelayState,userId:"",authenStatus:0},$scope.loginType=$window.sessionStorage.getItem("singLoginType"),$scope.uconfig="",$scope.isFrmSubmited=!1,$scope.init=function(){APIS.SINGPASS.data=$scope.singPass,console.log("singPassAPI:"+APIS.SINGPASS),DataManager.sendRestRequest(null,APIS.SINGPASS,function(response){response.success?$scope.loginSuccessResponse(response):$scope.loginFailureResponse(response)})},$scope.sessExistsResponse=null,$scope.loginSuccessResponse=function(response){sessionStorage.setItem("config",JSON.stringify(response.dataBean)),$scope.uconfig=response.dataBean,loadSessionTimeOut(),2==response.dataBean.status&&(ModalService.openAlert("warning","warning","Your account is Inactive. Please contact Administrator.",$scope,"inactive",function(){"BussinessUser"==$scope.loginType?$state.go("singpasslogin"):"Applicant"==$scope.loginType?$state.go("login"):$state.go("login")}),die()),response.dataBean.requestForUnLock&&3==response.dataBean.lockedReasonId?$scope.inActivity90days(response):$scope.getStateOnRole(response)},$scope.loginFailureResponse=function(response){switch(response.errorCode){case"3":$scope.inActivity90days(response);break;case"5":ModalService.openAlert("warning","warning",response.errorMessage,$scope,"locked",function(){$state.go("login_unlock")});break;case"2":$scope.redirectToSessExists(response);break;default:$scope.uconfig=sessionStorage.setItem("config",JSON.stringify(response)),"BussinessUser"==$scope.loginType?($window.sessionStorage.setItem("singPassErrorMessage",response.errorMessage),$state.go("singpasslogin")):"Applicant"==$scope.loginType?$state.go("register"):$state.go("register")}};var inActivity90daysRes=null;$scope.inActivity90days=function(response){inActivity90daysRes=response;var msg="Your ELMeRS account has been locked due to 90 days inactivity. Do you want to Submit the request to unlock?";ModalService.openAlert("confirm","warning",msg,$scope,"inActive90days",function(){$scope.$on("inActive90daysOk",function(){null!=inActivity90daysRes&&(APIS.SINGPASS_UNLOCK_ACC.data=inActivity90daysRes.dataBean.userSeqId,DataManager.sendRestRequest(null,APIS.SINGPASS_UNLOCK_ACC,function(unLockResponse){unLockResponse.success?ModalService.openAlert("alert","success",unLockResponse.successMessage,$scope,"success",function(){"BussinessUser"==$scope.loginType?$state.go("singpasslogin"):"Applicant"==$scope.loginType?$state.go("login"):$state.go("login")}):ModalService.openAlert("alert","warning",unLockResponse.errorMessage,$scope,"warning",function(){"BussinessUser"==$scope.loginType?$state.go("singpasslogin"):"Applicant"==$scope.loginType?$state.go("login"):$state.go("login")})}))})})},$scope.$on("inActive90daysCancel",function(){"BussinessUser"==$scope.loginType?$state.go("singpasslogin"):"Applicant"==$scope.loginType?$state.go("login"):$state.go("login")}),$scope.redirectToSessExists=function(response){$scope.sessExistsResponse=response,ModalService.openAlert("confirm","warning",response.errorMessage,$scope,"usrCurrentSess",function(){$scope.$on("usrCurrentSessOk",function(){$scope.usrSessionData={username:$scope.sessExistsResponse.userName,password:$scope.sessExistsResponse.tempToken,nric:"NRIC",overrideSession:"true"},APIS.DISCARD_SESSION.data=$scope.usrSessionData,DataManager.sendRestRequest(null,APIS.DISCARD_SESSION,function(sessResponse){sessResponse.success?$scope.loginSuccessResponse(sessResponse):"BussinessUser"==$scope.loginType?($window.sessionStorage.setItem("singPassErrorMessage",sessResponse.errorMessage),$state.go("singpasslogin")):"Applicant"==$scope.loginType?($window.sessionStorage.setItem("singPassErrorMessage",sessResponse.errorMessage),$state.go("login")):$state.go("login")})})})},$scope.$on("usrCurrentSessCancel",function(){"BussinessUser"==$scope.loginType?$state.go("singpasslogin"):"Applicant"==$scope.loginType?$state.go("login"):$state.go("login")}),$scope.getStateOnRole=function(response){if(response.dataBean.userSeqId){if(response.dataBean.userFacilities[0].roles.length>1)return PermissionManager.setMultiRoleResponse(response),void $state.go("multiRoles");PermissionManager.setMultiRoleResponse(response),PermissionManager.setPermissionsBasedOnRole(response.dataBean.userFacilities[0].roles[0].roleId),$window.sessionStorage.setItem("currentRole",JSON.stringify(response.dataBean.userFacilities[0].roles[0])),response.dataBean.singpassFirstLogin?("6"==response.dataBean.userFacilities[0].roles[0].roleId?(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheApplicantUserInfo(response,"singApplicantProfile")):"7"==response.dataBean.userFacilities[0].roles[0].roleId&&(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheUserInfo(response,"adminProfile")),"8"==response.dataBean.userFacilities[0].roles[0].roleId?(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheUserInfo(response,"auditorProfile")):"10"==response.dataBean.userFacilities[0].roles[0].roleId?(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheUserInfo(response,"caProfile")):"12"==response.dataBean.userFacilities[0].roles[0].roleId?(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheUserInfo(response,"lmfProfile")):"13"==response.dataBean.userFacilities[0].roles[0].roleId?(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheUserInfo(response,"lmfProfile")):"11"==response.dataBean.userFacilities[0].roles[0].roleId?(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheUserInfo(response,"dmeProfile")):"9"==response.dataBean.userFacilities[0].roles[0].roleId?(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheUserInfo(response,"cpProfile")):"14"==response.dataBean.userFacilities[0].roles[0].roleId&&(console.log("Loged in User Role is "+response.dataBean.userFacilities[0].roles[0].roleDisplayName),$scope.cacheUserInfo(response,"maProfile"))):7==response.dataBean.userFacilities[0].roles[0].roleId?$scope.cacheUserInfo(response,"master-home"):6==response.dataBean.userFacilities[0].roles[0].roleId?$scope.cacheApplicantUserInfo(response,"dashboard"):10==response.dataBean.userFacilities[0].roles[0].roleId?$scope.cacheuserDetails(response):11==response.dataBean.userFacilities[0].roles[0].roleId?$scope.cacheuserDetails(response):12==response.dataBean.userFacilities[0].roles[0].roleId?$state.go("lmfhome"):13==response.dataBean.userFacilities[0].roles[0].roleId?$state.go("lmfhome"):14==response.dataBean.userFacilities[0].roles[0].roleId?$scope.cacheuserDetails(response):$state.go("singdashboard")}},$scope.cacheUserInfo=function(data,state){$scope.userinfo="",APIS.SINGPASS_GET_PROFILE.data={},APIS.SINGPASS_GET_PROFILE.URL=String.prototype.format.apply(APIS.SINGPASS_GET_PROFILE.tempURL,[data.dataBean.userSeqId]),DataManager.sendRestRequest(null,APIS.SINGPASS_GET_PROFILE,function(response){response.success&&(sessionStorage.removeItem("userconfig"),sessionStorage.removeItem("userprofileconfig"),$scope.userinfo=$window.sessionStorage.setItem("userconfig",JSON.stringify(response.dataBean.person)),$window.sessionStorage.setItem("userprofileconfig",JSON.stringify(response.dataBean)),$state.go(state))},data.dataBean.token)},$scope.cacheuserDetails=function(data){$scope.userinfo="";var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+data.dataBean.userSeqId,APIS.GET_PROFILE.URL=url,APIS.GET_PROFILE.data={},DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&(sessionStorage.removeItem("userconfig"),$scope.userinfo=$window.sessionStorage.setItem("userconfig",JSON.stringify(response.dataBean)),switchRoles.go(data.dataBean.userFacilities[0].roles[0].roleName))},data.dataBean.token),APIS.GET_PROFILE.URL=tempUrl},$scope.cacheApplicantUserInfo=function(data,state){APIS.GET_PROFILE.data={};var url=null,tempUrl=null;tempUrl=APIS.GET_PROFILE.URL,url=tempUrl+"/"+data.dataBean.userSeqId,APIS.GET_PROFILE.URL=url,DataManager.sendRestRequest(null,APIS.GET_PROFILE,function(response){response.success&&(sessionStorage.removeItem("userconfig"),$window.sessionStorage.setItem("userconfig",JSON.stringify(response.dataBean)),$state.go(state))},data.dataBean.token),APIS.GET_PROFILE.URL=tempUrl},$scope.init()}]),angular.module("app").controller("TargetSingpassCtrl",["$http","$scope","$stateParams","APIS","DataManager","$rootScope","$state",function($http,$scope,$stateParams,APIS,DataManager,$rootScope,$state){$scope.init=function(){APIS.TARGET_SINGPASS.data=$stateParams,DataManager.sendRestRequest(null,APIS.TARGET_SINGPASS,function(response){if(response.success){if($stateParams.authToken)return $rootScope.singpassError=" Singpass Login Failed",$state.go("login"),!1;$scope.checkNric(response.dataBean.UserId)}else console.log(response.errorMessage)})},$scope.checkNric=function(nric){APIS.GET_NRIC_USER.data=nric,DataManager.sendRestRequest(null,APIS.GET_NRIC_USER,function(response){console.log(response),response.success?response.dataBean.userinfo?$scope.cacheuserInfo(response):($rootScope.nric=nric,$state.go("register")):console.log(response.errorMessage)})},$scope.cacheuserInfo=function(data){$scope.userinfo="",$scope.uconfig="",$scope.uconfig=sessionStorage.setItem("config",JSON.stringify(data.dataBean)),$state.go("profile")},$scope.init()}]),angular.module("app").directive("fileModel",["$parse",function($parse){
return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]),angular.module("app").directive("profilePicSize",function(){return{restrict:"A",scope:{},link:function(scope,elem,attrs){elem.css("height","100px"),elem.css("height","100px")}}}),angular.module("app.singpass").config(function($stateProvider){$stateProvider.state("singpass",{url:"/singpass?SAMLart&RelayState",controller:"SingpassCtrl",templateUrl:"app/singpass/partials/singpass.html"}).state("targetsing",{url:"/target-singpass",controller:"SingpassCtrl",templateUrl:"app/singpass/partials/singpass.html"}).state("singApplicantProfile",{url:"/singApplicantProfile",controller:"SingApplicantProfileCtrl",templateUrl:"app/singpass/partials/singApplicantProfile.html"}).state("adminProfile",{url:"/adminProfile",controller:"SingProfileCtrl",templateUrl:"app/singpass/partials/admin_profile.html"}).state("auditorProfile",{url:"/auditorProfile",controller:"SingProfileCtrl",templateUrl:"app/singpass/partials/admin_profile.html"}).state("cpProfile",{url:"/cpProfile",controller:"SingProfileCtrl",templateUrl:"app/singpass/partials/cp_profile.html"}).state("caProfile",{url:"/caProfile",controller:"SingProfileCtrl",templateUrl:"app/singpass/partials/ca_profile.html"}).state("dmeProfile",{url:"/dmeProfile",controller:"SingProfileCtrl",templateUrl:"app/singpass/partials/dme_profile.html"}).state("lmfManagerProfile",{url:"/lmfManagerProfile",controller:"SingProfileCtrl",templateUrl:"app/singpass/partials/admin_profile.html"}).state("lmfProfile",{url:"/lmfProfile",controller:"SingProfileCtrl",templateUrl:"app/singpass/partials/lmf_profile.html"}).state("maProfile",{url:"/maProfile",controller:"SingProfileCtrl",templateUrl:"app/singpass/partials/ma_profile.html"}).state("singdashboard",{url:"/singdashboard",controller:"SingDashboardCtrl",templateUrl:"app/singpass/partials/singdashboard.html"}).state("singpasslogin",{url:"/singpasslogin",controller:"SingPassLoginCtrl",templateUrl:"app/singpass/partials/singpass_login.html"}).state("intranetlogin",{url:"/intranetlogin",controller:"LoginCtrl",templateUrl:"app/singpass/partials/intranet_login.html"}).state("multiRoles",{url:"/multiRoles",controller:"MultiRoleCtrl",templateUrl:"app/singpass/partials/MultiRole.html"})}).run(function($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams}),angular.module("app").service("Utils",function(){this.isBoolean=function(value){return"boolean"==typeof value}}).factory("UtilFactory",function($filter){return{getinDateFormat:function(convertDate,type){return void 0!==type&&null!==type||(type="dd/MM/yyyy"),convertDate=$filter("date")(convertDate,type)}}}).factory("utilityService",["$window",function($window){var utility=$window._,dateUtility=(utility.string,utility.string,$window.moment),numberFormatter=$window.numeral;return{cloneDeep:function(object){return utility.cloneDeep(object)},find:utility.find,groupBy:utility.groupBy,filter:utility.filter,forEach:utility.forEach,merge:utility.merge,startsWith:function(stringToSearchIn,searchString){return!(!utility.isString(stringToSearchIn)||!utility.isString(searchString))&&stringToSearchIn.slice(0,searchString.length)===searchString},isNumber:function(value){var val=Number(value);return null!==value&&utility.isNumber(val)&&!utility.isNaN(val)},numberFormatter:numberFormatter,pluck:utility.pluck,sortBy:utility.sortBy,map:utility.map,values:utility.values,removeFromArray:utility.remove,isArray:utility.isArray,flatten:utility.flatten,every:utility.every,date:{add:function(date,num,datepart){return date=dateUtility(date),date.isValid()?(utility.isNumber(num)||(num=0),date.add(num,datepart).toDate()):null},subtract:function(date,num,datepart){return date=dateUtility(date),date.isValid()?(utility.isNumber(num)||(num=0),date.subtract(num,datepart).toDate()):null},resetDatePart:function(date,datepart,resetToEnd){return date=dateUtility(date),date.isValid()?resetToEnd?date.endOf(datepart).toDate():date.startOf(datepart).toDate():null},format:function(date,format,isUTC){return date=isUTC?dateUtility.utc(date):dateUtility(date),date.isValid()?format?date.format(format):date:null},difference:function(date1,date2,datepart){return date1=dateUtility(date1),date2=dateUtility(date2),date1.isValid()&&date2.isValid()?date1.diff(date2,datepart):null},isValid:function(date){return dateUtility(date).isValid()},fromNow:function(date,removeSuffix){return dateUtility(date).fromNow(removeSuffix)}},stripHtml:function(str,replaceStr){return str?str.replace(/(<([^>]+)>)/gi,replaceStr?replaceStr:""):str},setSessionStoreage:function(key,Value){$window.sessionStorage.setItem(key,Value)},getSessionStoreage:function(key){return $window.sessionStorage.getItem(key)},removeSessionStoreage:function(key){key?$window.sessionStorage.removeItem(key):$window.sessionStorage.clear()},loadLabel:function(){}}}]),angular.module("app").constant("APIS",{LOGIN:{URL:"security/authentication/login",METHOD:"POST"},AUTHENTICATION:{URL:"security/authentication",METHOD:"POST"},LOGOUT:{URL:"security/authentication/logout",METHOD:"GET"},REGISTER:{URL:"registration/createRegistration",METHOD:"POST"},C1C2_LIC_NUMBER:{URL:"adminSettings/getConfigValue/C1C2_LICENCE_NUMBER",METHOD:"GET"},CAMB_FEEDBACK_MAIL:{URL:"adminSettings/getConfigValue/CAASEMAIL",METHOD:"GET"},CAMB_COMMENT:{URL:"adminSettings/getConfigValue/CAMBADDRESS",METHOD:"GET"},C3_LIC_NUMBER:{URL:"adminSettings/getConfigValue/C3_LICENCE_NUMBER",METHOD:"GET"},GET_DATE_FORMAT:{URL:"adminSettings/getConfigValue/DATE_FORMAT",METHOD:"GET"},GET_DUE_LIST_LME:{URL:"registration/getNextLmeType",METHOD:"POST"},GET_DUE_LIST_LME_ROUTINES:{URL:"registration/getRoutinesNextLme",METHOD:"POST"},GET_APPLICANT_DUES:{URL:"registration/getApplicantDues",METHOD:"POST"},GET_LOOKUPS:{URL:"common/lookups?lookupCodes=",tempURL:"common/lookups?lookupCodes=",METHOD:"GET"},GET_OUTCOME_COMBO:{URL:"common/getOutcomes",METHOD:"GET"},GET_AMA_OUTCOME_COMBO:{URL:"common/getAMAOutcomes",METHOD:"GET"},NATIVE_LOOKUP:{URL:"common/nativeLookup",METHOD:"POST"},CHANGE_PWD:{URL:"security/users/common/changePassword/{0}/{1}/{2}",METHOD:"POST"},REESTPASSWORD:{URL:"security/forgotPassword",METHOD:"PUT"},UNLOCK_ACC:{URL:"security/requestforunlock",METHOD:"POST"},SINGPASS_UNLOCK_ACC:{URL:"security/unlockRequestForSingPass",METHOD:"POST"},GET_ADDRESS:{URL:"common/getAddressByPostalCode",METHOD:"GET"},USER_EXSIST:{URL:"registration/checkDuplicateUser",METHOD:"POST"},PASSPORT_EXSIST:{URL:"registration/checkDuplicatePassport",METHOD:"POST"},NRIC_EXSIST:{URL:"security/checkDuplicateNricFin",METHOD:"POST"},CHECK_DUPLICATE_REG:{URL:"registration/checkDuplicateRegistration",METHOD:"POST"},DISCARD_SESSION:{URL:"security/authentication/login",METHOD:"POST"},GET_INACTIVITY_USER:{URL:"security/users/getUserByName",METHOD:"POST"},GET_NOTIFICATION:{URL:"security/getUserNotifications",METHOD:"POST"},DELETE_NOTIFICATION:{URL:"security/deleteNotifications",METHOD:"POST"},GET_ACTIVITY_PROGRESS:{URL:"registration/getActivityProgressList",METHOD:"POST"},CONFIRM_ABORT_ACTIVITY:{URL:"hed/updateApplicationStatus",METHOD:"POST"},GET_PAGE_ORDER:{URL:"hed/getPageOrder",METHOD:"GET"},UPDATE_PROFILE:{URL:"registration/updateProfile",METHOD:"POST"},GET_UPDATE_PROFILE_MAC_DTLS:{URL:"common/getApplicantLatestFitness/{0}",tempURL:"common/getApplicantLatestFitness/{0}",METHOD:"GET"},CHECK_DMF_ISEXIST:{URL:"hed/checkDMFExist",METHOD:"POST"},GET_PROFILE:{URL:"registration/viewProfile",METHOD:"POST"},GET_ROLE:{URL:"common/getUserRoles",METHOD:"POST"},TOTP_LOGIN:{URL:"security/authentication/totpAuthentication",METHOD:"POST"},SUBMIT_PROFILE_FOR_APPROVAL:{URL:"adminSettings/submitProfileForApproval",METHOD:"POST"},INACTIVE_PROFILE_FOR_APPROVAL:{URL:"adminSettings/submitInActiveProfileForApproval",METHOD:"POST"},GET_LICENSE_MASTER:{URL:"/adminSettings/getLicenseMaster",METHOD:"POST"},ADD_LICENSE_MASTER:{URL:"/adminSettings/addLicenseMaster",METHOD:"POST"},EDIT_LICENSE_MASTER:{URL:"/adminSettings/updateLicenseMaster",METHOD:"POST"},DELETE_LICENSE_MASTER:{URL:"/adminSettings/deleteLicenseMaster",METHOD:"POST"},GET_SYSTEM_CONFIG:{URL:"adminSettings/getSystemConfig",METHOD:"GET"},GET_SYSTEM_CONFIG_SPECIALITIES:{URL:"common/getSpecialities",METHOD:"GET"},GET_SYSTEM_CONFIG_SELECTED_SPECIALITY:{URL:"adminSettings/getSpeciality/{0}",tempURL:"adminSettings/getSpeciality/{0}",METHOD:"GET"},UPDATE_SYSTEM_CONFIG:{URL:"adminSettings/updateSystemConfig",METHOD:"POST"},SAVE_MA_SYSTEM_CONFIG:{URL:"adminSettings/saveMASpeciality",METHOD:"POST"},GET_BROADCAST:{URL:"/security/selectBroadcast",METHOD:"GET"},ADD_BROADCAST:{URL:"/security/saveBroadcast",METHOD:"POST"},UPDATE_BROADCAST:{URL:"/security/updateBroadcast",METHOD:"POST"},GET_MACCONFIG:{URL:"/adminSettings/getAppMacConfig",METHOD:"GET"},ADD_MACCONFIG:{URL:"/adminSettings/updateMacConfig",METHOD:"POST"},ADMIN_HOME_WORKLIST_SELECT:{URL:"/worklist/getworklists",METHOD:"GET"},ADMIN_HOME_WORKLIST_UPDATE:{URL:"worklist/lookup/unlockuser",METHOD:"POST"},ADMIN_HOME_WORKLIST_NOTIFICATIONS:{URL:"/admin1/getNotifications",METHOD:"GET"},ADMIN_PROFILE_UPDATE:{URL:"adminSettings/selectprofileupdate",METHOD:"POST"},ADMIN_SELECTED_GET_PROFILE:{URL:"adminSettings/viewprofileupdatebyid/{0}",tempURL:"adminSettings/viewprofileupdatebyid/{0}",METHOD:"GET"},ADMIN_GET_VAL_CONFIG:{URL:"security/selectvalidatyconfig",METHOD:"GET"},ADMIN_GET_VAL_CONFIG_COMBOS:{URL:"security/macsvalidityconfig",METHOD:"POST"},ADMIN_SAVE_VAL_CONFIG:{URL:"security/savevalidityconfig",METHOD:"POST"},ADMIN_DELETE_VAL_CONFIG:{URL:"security/deletevalidityconfig",METHOD:"POST"},ADMIN_VIEW_MED_TEMPLATE:{URL:"caasMedicalTemplate/getTemplate",METHOD:"POST"},ADMIN_DELETE_MED_TEMPLATE:{URL:"caasMedicalTemplate/deleteTemplate",METHOD:"POST"},ADMIN_ADD_MED_TEMPLATE:{URL:"caasMedicalTemplate/addTemplate",METHOD:"POST"},ADMIN_UPDATE_MED_TEMPLATE:{URL:"caasMedicalTemplate/updateTemplate",METHOD:"POST"},ADMIN_PAGE_COMBO_MED_TEMPLATE:{URL:"caasMedicalTemplate/pageNameCombo",METHOD:"POST"},ADMIN_FIELD_COMBO_MED_TEMPLATE:{URL:"caasMedicalTemplate/fieldNameCombo",METHOD:"POST"},ADMIN_PROFILE_UPDATE_APPROVAL:{URL:"adminSettings/profileUpdateApproval",METHOD:"POST"},ADMIN_GET_DOCUMENTS:{URL:"Doclibrary/fetchDocs",METHOD:"POST"},ADMIN_VIEW_DOCUMENT:{URL:"Doclibrary/viewDoc",METHOD:"POST"},ADMIN_DELETE_DOCUMENT:{URL:"Doclibrary/delDoc",METHOD:"POST"},ADMIN_ADD_NEW_DOCUMENT:{URL:"Doclibrary/uploadDoc",METHOD:"POST"},ADMIN_FILTER_DOCUMENT_LIBRARY:{URL:"Doclibrary/filterDocs",METHOD:"POST"},ADMIN_EDIT_DOCUMENT:{URL:"Doclibrary/editDoc",METHOD:"POST"},ADMIN_ACCOUNT_UNLOCK_LIST:{URL:"adminSettings/getUnlockRequestRecords",METHOD:"POST"},ADMIN_ACCOUNT_UNLOCK_REQUEST:{URL:"adminSettings/unlockRequestRecords",METHOD:"POST"},ADD_VETTPUBLISH_CONFIG:{URL:"/adminSettings/updateVettPublishConfig",METHOD:"POST"},GET_VETTPUBLISH_CONFIG:{URL:"/adminSettings/getVettPublishConfig",METHOD:"GET"},GET_TARGET_CONFIG:{URL:"security/selecttargetedconfig",METHOD:"GET"},SINGPASS:{URL:"singpassIntegration/partnerId",METHOD:"POST"},TARGET_SINGPASS:{URL:"registration/getNRICLookup",METHOD:"POST"},SINGPASS_CONFIRM_PROFILE:{URL:"security/updateProfile",METHOD:"POST"},SINGPASS_GET_PROFILE:{URL:"security/viewProfile/{0}",tempURL:"security/viewProfile/{0}",METHOD:"POST"},GET_HED:{URL:"registration/viewProfile/{0}",METHOD:"POST"},OTPSECQUES:{URL:"security/getSecurityQuestion",METHOD:"GET"},SAVEOTPQUES:{URL:"security/saveUserQuestionMapping",METHOD:"POST"},GETOTPQUESTIONS:{URL:"security/getUserSecurityQuestions/{0}",METHOD:"POST"},VALIDATEOTPQUES:{URL:"security/validateUserAnswers",METHOD:"POST"},GET_LME_WORKLIST:{URL:"LME/getlmehomedetails",METHOD:"POST"},GETPROVISOTYPE:{URL:"adminSettings/retriveProvisoType",METHOD:"POST"},GETSUBTYPE:{URL:"adminSettings/retriveSubType",METHOD:"POST"},INVPROTOCAL:{URL:"adminSettings/retriveInvestigationProtocol",METHOD:"POST"},FOLLOWUPPROTOCOL:{URL:"adminSettings/retriveFollowUP",METHOD:"POST"},FOLLOW_CREATE_PROVISO:{URL:"adminSettings/createFollowUP",METHOD:"POST"},FOLLOW_DELETE_PROVISO:{URL:"adminSettings/deleteFollowUpProviso",METHOD:"POST"},MR_SEARCH:{URL:"LME/mrsearch",METHOD:"POST"},MR_SEARCH_TABLE:{URL:"LME/mrsearch",METHOD:"POST"},QUEUED_TAB:{URL:"LME/getqueueddetails/",METHOD:"POST"},LME_INPROGRESS:{URL:"LME/getlmeinprogressdetails/",METHOD:"POST"},LME_ARINPROGRESS:{URL:"LME/getlmeardetails/",METHOD:"POST"},LME_PENDINGFOLLOWUP:{URL:"LME/getlmependingdetails/",METHOD:"POST"},LME_DEFFERED:{URL:"LME/getlmedeffereddetails/",METHOD:"POST"},LME_SUBMITTED:{URL:"LME/getlmesubmitteddetails/",METHOD:"POST"},LME_COMPLETED:{URL:"LME/getlmecompleteddetails",METHOD:"POST"},LME_ABORTED:{URL:"LME/getlmeaborteddetails",METHOD:"POST"},LME_EXPIRED:{URL:"LME/getlmeexpireddetails",METHOD:"POST"},LMAB_GET_MASTERQ:{URL:"lmab/getMasterQ",METHOD:"POST"},LMAB_GET_MASTERQ_SLOTDATE:{URL:"lmab/getlmabdates",METHOD:"GET"},LMAB_ADD_BOARDQ_SLOTDATE:{URL:"lmab/toBoardQ",METHOD:"POST"},LMAB_BOARDQ_REMOVE:{URL:"lmab/toMasterQ",METHOD:"POST"},LMAB_BOARDQ_NOTES_ADD:{URL:"lmab/addNotesInBoardQ",METHOD:"POST"},LETTERTEMPLATESETUP:{URL:"adminSettings/getAllLetterTemplates",METHOD:"POST"},VIEWLETTERTEMPLATES:{URL:"adminSettings/viewLetterTemplates",METHOD:"POST"},LETTERTEMPLATESHORTCUTS:{URL:"adminSettings/getLetterTemplateShortcuts",METHOD:"GET"},ADDLETTERTEMPLATES:{URL:"adminSettings/createLetterTemplate",METHOD:"POST"},MODIFY_LETTER_TEMPLATES:{URL:"adminSettings/updateLetterTemmplate",METHOD:"POST"},DELETE_LETTER_TEMPLATES:{URL:"adminSettings/deleteLetterTemmplate",METHOD:"POST"},GETPROVISOTYPE:{URL:"adminSettings/retriveProvisoType",METHOD:"POST"},GETSUBTYPE:{URL:"adminSettings/retriveSubType",METHOD:"POST"},INVPROTOCAL:{URL:"adminSettings/retriveInvestigationProtocol",METHOD:"POST"},FOLLOWUPPROTOCOL:{URL:"adminSettings/retriveFollowUP",METHOD:"POST"},CONFIG_GET_ALL_EMAIL_TEMPLATES:{URL:"adminSettings/getEmailTemplates",METHOD:"POST"},CONFIG_GET_RECEIPIENT_TYPES:{URL:"adminSettings/getReceipientTypes",METHOD:"POST"},CONFIG_GET_EMAIL_RECEIPIENTS:{URL:"adminSettings/getEmailReceipients",METHOD:"POST"},CONFIG_SAVE_EMAIL_TEMPLATE:{URL:"adminSettings/saveEmailTemplate",METHOD:"POST"},CONFIG_VIEW_EMAIL_TEMPLATE:{URL:"adminSettings/viewEmailTemplate",METHOD:"POST"},CONFIG_MODIFY_EMAIL_TEMPLATE:{URL:"adminSettings/modifyEmailTemplate",METHOD:"POST"},CONFIG_GET_EMAIL_GROUPS:{URL:"adminSettings/getEmailGroups",METHOD:"POST"},CONFIG_GET_EMAIL_GROUPS_DETAILS:{URL:"adminSettings/getEmailGroupDetails",METHOD:"POST"},CONFIG_SAVE_EMAIL_GROUPS_DETAILS:{URL:"adminSettings/saveEmailGroup",METHOD:"POST"},CONFIG_DELETE_EMAIL_GROUP:{URL:"adminSettings/removeEmailGroup",METHOD:"POST"},UPLOADFILE:{URL:"fileUploadResource/uploadFile",METHOD:"POST"},RETRIEVEFILE:{URL:"fileUploadResource/retriveFile",METHOD:"POST"},GET_CAMBMRDATA:{URL:"worklist/getcambdetails",METHOD:"POST"},MR_CAMBMRSEARCH:{URL:"worklist/getcambdetails",METHOD:"POST"},CAMB_GET_E1PROFILE:{URL:"registration/getE1Profile",METHOD:"POST"},MR_CAMBMRCONSULT:{URL:"worklist/getcambdetails",METHOD:"POST"},GET_CAMBWORKLIST:{URL:"worklist/getcambdetails",METHOD:"POST"},GET_WORKLISTSEARCH:{URL:"worklist/getcambdetails",METHOD:"POST"},GET_WORKLISTACTIVITY:{URL:"worklist/getcambdetails",METHOD:"POST"},GET_WORKLISTNOTIFICATION:{URL:"security/getcambnotification",METHOD:"GET"},GET_WORKLISTINPROGRESS:{URL:"worklist/getcambdetails",METHOD:"POST"},GET_LMABWORKLIST:{URL:"lmab/getmaworklists",METHOD:"GET"},GET_LMABNOTIFICATION:{URL:"lmab/getmanotifications",METHOD:"POST"},GET_LMABBOARDSESSIONS:{URL:"lmab/getlmabsessions",METHOD:"GET"},INSTRUCTIONCONFIGDATA:{URL:"instruction/getInstruction",tempURL:"instruction/getInstruction",METHOD:"GET"},UPDATE_INSTRUCTIONCONFIGDATA:{URL:"instruction/updateInstruction",METHOD:"PUT"},GET_TARGET_CONFIG:{URL:"security/selecttargetedconfig",METHOD:"GET"},ADD_TARGET_CONFIG:{URL:"security/savetargetedconfig",METHOD:"POST"},GET_VETTPUBLISH_CONFIG:{URL:"adminSettings/getVettPublishConfig",METHOD:"GET"},ADD_VETTPUBLISH_CONFIG:{URL:"adminSettings/updateVettPublishConfig",METHOD:"POST"},ADD_LICENSE_MASTER:{URL:"adminSettings/addLicenseMaster",METHOD:"POST"},DELETE_LICENSE_MASTER:{URL:"adminSettings/deleteLicenseMaster",METHOD:"POST"},EDIT_LICENSE_MASTER:{URL:"adminSettings/updateLicenseMaster",METHOD:"POST"},GET_CLASSESMACCONFIG:{URL:"/adminSettings/getClasses",METHOD:"GET"},GET_RESTRICTIONCONFIGLIST:{URL:"restrict/lookup/getrestrictions",METHOD:"GET"},SAVE_RESTRICTDATA:{URL:"restrict/lookup/saverestrictions",METHOD:"POST"},DEL_RESTRICTDATA:{URL:"restrict/lookup/deleterestrictions",METHOD:"POST"},GET_OPERATIONALPROVISO:{URL:"operproviso/operationalProviso/getop",METHOD:"GET"},FOLLOW_DELETE_OPERATIONALPRO:{URL:"operproviso/operationalProviso/deleteop",METHOD:"POST"},SAVE_OPERATIONALPRO:{URL:"operproviso/operationalProviso/saveop",METHOD:"POST"},FOLLOW_UPDATE_PROVISO:{URL:"adminSettings/updateFollowUpProviso",METHOD:"POST"},SUBMIT_NOTIFICATION_DMF:{URL:"registration/submitNotificationDMF",METHOD:"POST"},GET_APPLICANT_DOCUMENTS:{URL:"registration/getApplicantDocuments",METHOD:"POST"},GET_ASSESSMENT_HISTORY:{URL:"registration/getLastAssessmentSummary",METHOD:"POST"},LMAB_VIEWSCHEDULE:{URL:"lmab/getScheduledSlots",METHOD:"POST"},LMAB_VIEWSCHEDULE_MA:{URL:"lmab/getlmfmas/{0}",METHOD:"GET"},LMAB_VIEWSCHEDULE_ASSIGNMA:{URL:"lmab/saveAssignedSlots",METHOD:"POST"},LMAP_GET_SLOT:{URL:"lmab/getlmabs",METHOD:"POST"},DOCUMENTTAB_POST:{URL:"worklist/documenttab",METHOD:"GET"},LMAP_POST_SLOT:{URL:"lmab/saveSlots",METHOD:"POST"},LAMP_GET_LMAP_MA:{URL:"/lmab/getlmfs",METHOD:"GET"},LAMP_DELETE_SLOT:{URL:"lmab/deleteSlots/{0}",METHOD:"GET"},LAMP_PUBLISH_SLOT:{URL:"lmab/sendNotification/{0}",METHOD:"GET"},LAMP_MAACCEPT:{URL:"lmab/saveMAAcceptence",METHOD:"PUT"},LAMP_MACANCEL:{URL:"lmab/cancelMAAcceptence",METHOD:"PUT"},SAVE_AMA_DECLERATION:{URL:"hed/amaHedSave",METHOD:"POST"},CHECKPASSWORD:{URL:"security/checkPassword",METHOD:"POST"},GET_MEASUREMENT:{URL:"LME/measurements",METHOD:"GET"},SAVE_MEASUREMENT:{URL:"LME/savemeasurements",METHOD:"POST"},PRELOAD_MEASUREMENT:{URL:"LME/preloadmeasurement",METHOD:"POST"},AR_GET_MEASUREMENT:{URL:"AR/armeasurement",METHOD:"GET"},AR_SAVE_MEASUREMENT:{URL:"AR/arsavemeasurement",METHOD:"POST"},AR_PRELOAD_MEASUREMENT:{URL:"AR/arpreloadmeasurement",METHOD:"POST"},LME_VISIT:{URL:"LME/createlmevisit",METHOD:"POST"},DOCTOR_LIST:{URL:"LME/getlmeDoctorsList",METHOD:"POST"},NEWDOCTOR_LIST:{URL:"LME/getDoctorsDropDown",METHOD:"GET"},NEWCLINIC_LOCATION:{URL:"LME/getClinicsDropDown",METHOD:"GET"},AR_DOCTOR_LIST:{URL:"LME/getlmeDoctorsList",METHOD:"POST"},CLINIC_LOCATION:{URL:"LME/getlmecliniclocation",METHOD:"POST"},AR_CLINIC_LOCATION:{URL:"LME/getlmecliniclocation",METHOD:"GET"},GET_LME_COMBO:{URL:"LME/selectlmeinvgeneral",METHOD:"GET"},GET_LME_INVESTIGATION_DATA:{URL:"LME/preloadlmeinvgeneral",METHOD:"POST"},LME_INVESTIGATION_SAVE:{URL:"LME/addlmeinvgeneral",METHOD:"POST"},GET_AMA_PAGES:{URL:"hed/getPages",METHOD:"GET"},SAVE_AMA:{URL:"hed/saveApplicantMedicalAssessment",METHOD:"POST"},GET_AMA_UPDATE:{URL:"hed/getApplicantMedicalAssessment",METHOD:"POST"},GET_UPDATE_HED_CLASSES:{URL:"hed/updateHEDClasses/{0}",tempURL:"hed/updateHEDClasses/{0}",METHOD:"GET"},GET_UPDATE_HED_RECORDS:{URL:"hed/updateHED/{0}",tempURL:"hed/updateHED/{0}",METHOD:"GET"},GET_APP_TYPE_COMBO:{URL:"hed/classApplicationtype",METHOD:"GET"},GET_CLASS_APPLICATION_TYPE:{URL:"hed/getClassApplicationtypeForApplicant",METHOD:"POST"},GET_CLASS_INPROGRESS:{URL:"hed/getInProgressClassesForApplicant/{0}",tempURL:"hed/getInProgressClassesForApplicant/{0}",METHOD:"GET"},GET_HEDDATA_FORAPPLICANT:{URL:"hed/getHEDDataForApplicant/{0}",tempURL:"hed/getHEDDataForApplicant/{0}",METHOD:"GET"},GET_VISSION_COMBO:{URL:"hed/visionCorrectionLookup",METHOD:"GET"},GET_DAILIY_ACTIVITY_COMBO:{URL:"hed/dailyActivityLookup",METHOD:"GET"},GET_DRUGS_COMBO:{URL:"hed/drugSearch",METHOD:"GET"},GET_PROBLEM_COMBO:{URL:"hed/problemLookup",METHOD:"GET"},GET_RELATION_COMBO:{URL:"hed/relationLookup",METHOD:"GET"},ADMIN_GET_USER_SPECIALITIES:{URL:"security/users/specialities",METHOD:"GET"},ADMIN_GET_SEARCH_USER:{URL:"security/users/getAll",METHOD:"GET"},ADMIN_ADD_SEARCH_USER:{URL:"security/users/save",METHOD:"POST"},ADMIN_MODIFY_SEARCH_USER:{URL:"security/users/updateUser",METHOD:"POST"},ADMIN_VIEW_SEARCH_USER:{URL:"security/view/{0}",tempURL:"security/view/{0}",METHOD:"POST"},ADMIN_DELETE_SEARCH_USER:{URL:"security/users/delete",METHOD:"POST"},ADMIN_UNLOCK_SEARCH_USER:{URL:"security/users/unlock",METHOD:"POST"},ADMIN_GET_USER_DATA:{URL:"security/users/view",METHOD:"POST"},ADMIN_MAC_COMBO:{URL:"adminSettings/getMACsForCombo",METHOD:"GET"},ADMIN_SCHED_TEST_FIELD_COMBO:{URL:"adminSettings/getFieldNamesByPageName/{0}",tempURL:"adminSettings/getFieldNamesByPageName/{0}",METHOD:"GET"},ADMIN_SCHED_TEST_GET_FREQUENCY:{URL:"adminSettings/getFrequency",METHOD:"GET"},ADMIN_SCHED_TEST_GET_LMETYPES:{URL:"adminSettings/getLMETypes",METHOD:"GET"},ADMIN_SAVE_SCHED_TEST:{URL:"adminSettings/saveScheduleTests",METHOD:"POST"},ADMIN_GET_SCHED_TEST:{URL:"adminSettings/getScheduleTests",METHOD:"GET"},ADMIN_DELETE_SCHED_TEST:{URL:"adminSettings/deleteScheduleTests",METHOD:"POST"},ADMIN_SCHED_TEST_INV_PROTOCOL_COMBO:{URL:"adminSettings/retriveInvestigationProtocol ",METHOD:"POST"},ADMIN_FEEWAIVER_ORG_COMBO:{URL:"adminSettings/getOrganization",METHOD:"POST"},REMOVE_FEEWAIVER_ORG:{URL:"adminSettings/removeOrganisationForFeeWaiver",METHOD:"POST"},ADMIN_FEEWAIVER_EXPIRY_COMBO:{URL:"adminSettings/getExpiry",METHOD:"GET"},ADMIN_FEEWAIVER_GET_MACEXPIRY:{URL:"adminSettings/getMacExpiry/{0}",tempURL:"adminSettings/getMacExpiry/{0}",METHOD:"GET"},ADMIN_FEEWAIVER_SAVE:{URL:"adminSettings/saveFeeWaiver",METHOD:"POST"},ADMIN_FEEWAIVER_LIST:{URL:"adminSettings/getFeewaiverConfigs",METHOD:"POST"},GET_FEE_REFUND_APPLICATION_DETAILS:{URL:"adminSettings/getFeeRefundApplicationDetails",METHOD:"POST"},GET_FEE_REFUND_ORGANIZATIONS_DETAILS:{URL:"adminSettings/getEligibleApplicationIds/",tempURL:"adminSettings/getEligibleApplicationIds/",METHOD:"GET"},SAVE_FEE_REFUND:{URL:"adminSettings/feeRefund",METHOD:"POST"},APPROVE_OR_REMOVE_FEE_WAIVER:{URL:"adminSettings/approveOrRemoveFeewaiver",METHOD:"POST"},ADMIN_MASTER_SETUP_ALLMASTERS:{URL:"security/getallmastersetup",METHOD:"POST"},ADMIN_MASTER_SETUP_LIST:{URL:"security/retrieveGenericMaster",METHOD:"POST"},ADMIN_MASTER_SETUP_SAVE:{URL:"security/saveGenericMaster",METHOD:"POST"},ADMIN_MASTER_SETUP_UPDATE:{URL:"security/updateGenericMaster",METHOD:"POST"},GET_AMA_INSTRUCTION:{URL:"hed/getInstructionDetails",METHOD:"GET"},ADMIN_GET_USER_DATA:{URL:"security/users/view",METHOD:"POST"},ADMIN_SCHED_TEST_FIELD_COMBO:{URL:"adminSettings/getFieldNamesByPageName/{0}",tempURL:"adminSettings/getFieldNamesByPageName/{0}",METHOD:"GET"},ADMIN_SCHED_TEST_GET_FREQUENCY:{URL:"adminSettings/getFrequency",METHOD:"GET"},ADMIN_SCHED_TEST_GET_LMETYPES:{URL:"adminSettings/getLMETypes",METHOD:"GET"},ADMIN_SAVE_SCHED_TEST:{URL:"adminSettings/saveScheduleTests",METHOD:"POST"},ADMIN_GET_SCHED_TEST:{URL:"adminSettings/getScheduleTests",METHOD:"GET"},ADMIN_DELETE_SCHED_TEST:{URL:"adminSettings/deleteScheduleTests",METHOD:"POST"},ADMIN_SCHED_TEST_INV_PROTOCOL_COMBO:{URL:"adminSettings/retriveInvestigationProtocol ",METHOD:"POST"},GET_PREVIOUS_AMA:{URL:"hed/getPreviousAMA",METHOD:"GET"},GET_AMA_INSTRUCTION:{URL:"hed/getInstructionDetails",METHOD:"GET"},GET_LME_FOLLOWUP_COMBO:{URL:"LME/followupSp",METHOD:"GET"},GET_LME_FOLLOWUP_SAVE:{URL:"LME/followup",METHOD:"POST"},GET_LME_ABORT:{URL:"LME/lmeabort",METHOD:"POST"},DMF_POPUP:{URL:"LME/dmfpopup",METHOD:"POST"},DMF_POPUPINITIATEDBY:{URL:"LME/getpersons",METHOD:"POST"},AR_VISIT:{URL:"LME/createarvisit",METHOD:"POST"},AR_DMFNOTIFICATION:{URL:"LME/getdmfnotifinumber",METHOD:"POST"},DMF_INTIMATED:{URL:"LME/getpersons/visitId",METHOD:"POST"},LME_DME_RECALL:{URL:"LME/applicantrecall",METHOD:"POST"},LME_DME_REQUEST_FOR_UNLOCK:{URL:"LME/dmerequestforunlok",METHOD:"POST"},LME_DME_RESUME:{URL:"LME/updateworklistlmeresume",METHOD:"POST"},LME_REQUEST_FOR_RECALL:{URL:"LME/requestforrecall",METHOD:"POST"},LME_UNLOCK:{URL:"LME/unlock",METHOD:"POST"},LME_CALLAPPLICANT:{URL:"LME/callApplicant",METHOD:"POST"},LME_TRANSFER:{URL:"LME/sendTransferRequest",METHOD:"POST"},LME_DMF_PR_TRANSFER:{URL:"LME/transferVisits",METHOD:"POST"},LME_ATTACHMENT_DOC_TYPE:{URL:"LME/getdocumenttypes",METHOD:"GET"},LME_ATTACHMENT_DOC_SUBTYPE:{URL:"LME/getdocumentsubtypes",METHOD:"POST"},LME_SAVE_ATTACHMENT_DETAILS:{URL:"LME/lmeuploadfile",METHOD:"POST"},LME_GET_CODES:{URL:"LME/getcodes/{0}",METHOD:"POST"},POST_LME_STRESSORS:{URL:"LME/getStressors",METHOD:"POST"},GET_LME_OUTCOMES:{URL:"LME/getOutComes",METHOD:"GET"},GET_LME_MENTALSTATE:{URL:"LME/getMentalState",METHOD:"GET"},GET_LME_DIAGNOSIS:{URL:"LME/getDiagnosis",METHOD:"POST"},LME_SAVE_RECOMMENDATION:{URL:"LME/saveRecommendation",METHOD:"POST"},LME_GET_RECOMMENDATION:{URL:"LME/getRecommendation",METHOD:"GET"},LMAB_HISTORY_SEARCH:{URL:"lmab/getlmfsdates",METHOD:"POST"},LMAB_HISTORY_SEARCH_VIEW:{URL:"lmab/getviewlambhistory",METHOD:"POST"},GETREFERENCEDOCUMENTS:{URL:"Doclibrary/getReferenceDocuments",METHOD:"POST"},GETVIEWDOCUMENT:{URL:"Doclibrary/viewDoc",METHOD:"POST"},GETCLINICFACILITY:{URL:"admin/clinics/getFacility",METHOD:"GET"},GETCLINICFUNCTIONS:{URL:"admin/clinics/getFunction",METHOD:"GET"},GETCLINICARFUNCTIONS:{URL:"admin/clinics/getAR",METHOD:"GET"},GETCLINICSETUPLIST:{URL:"admin/clinics/getAllClinics",METHOD:"GET"},ADDCLINICSETUPDATA:{URL:"admin/clinics/save",METHOD:"POST"},DELETECLINICSETUPDATA:{URL:"admin/clinics/deleteClinic/{0}",METHOD:"GET"},GETCLINICSETUPDATA:{URL:"admin/clinics/{0}",tempURL:"admin/clinics/{0}",METHOD:"GET"},MODIFYCLINICSETUPDATA:{URL:"admin/clinics/updateClinic",METHOD:"POST"},ROLESETUP_UPDATE:{URL:"security/updateRoles",METHOD:"POST"},GET_BROADCAST_MESSAGES:{URL:"adminSettings/getBroadcastMessages",METHOD:"GET"},GET_BUSSINESS_USER_ROLES:{URL:"security/users/getBusinessUserRoles",METHOD:"GET"},DELETE_BROADCAST_MSSSAGES:{URL:"adminSettings/deleteBroadcastMessages",METHOD:"POST"},SAVE_BROADCAST_MSSSAGES:{URL:"adminSettings/saveBroadcastMessages",METHOD:"POST"},GET_ROLESETUP_MASTER:{URL:"security/getAllRoles",METHOD:"GET"},CHECK_LICENCE_MASTER:{URL:"adminSettings/checkLicenseMaster/{0}",METHOD:"GET"},LME_GET_USERID:{URL:"LME/getuserId",METHOD:"GET"},HED_SETUP_RETREIVE:{URL:"hed/retrieveHEDTemplate",METHOD:"POST"},HED_SETUP_COPY_CREATE:{URL:"hed/copyAndCreateNewHEDTemplate",METHOD:"POST"},HED_SETUP_ACTIVATE:{URL:"hed/activateHEDTemplate",METHOD:"POST"},HED_SETUP_DELETE:{URL:"hed/deleteHEDTemplate",METHOD:"POST"},HED_SETUP_RETREIVE_PAGES:{URL:"hed/getPagesForHEDTemplate",METHOD:"POST"},HED_SETUP_RETREIVE_SECTIONS:{URL:"hed/getSections",METHOD:"POST"},HED_SETUP_NEW_PAGE:{URL:"hed/addPage",METHOD:"POST"},HED_SETUP_DELETE_PAGE:{URL:"hed/deletePage",METHOD:"POST"},GET_CONTROL_TYPES:{URL:"hed/getControlTypes",METHOD:"POST"},GET_GENDERS:{URL:"hed/getGenders",METHOD:"POST"},HED_SETUP_VIEW_SECTION:{URL:"hed/getSectionElements",METHOD:"POST"},HED_SETUP_ADD_SECTION:{URL:"hed/addSection",METHOD:"POST"},HED_SETUP_MODIFY_SECTION:{URL:"hed/modifySection",METHOD:"POST"},HED_SETUP_VIEW_ELEMENT:{URL:"hed/viewElement",METHOD:"POST"},HED_SETUP_DELETE_ELEMENT:{URL:"hed/deleteElement",METHOD:"POST"},HED_SETUP_UPDATE_PAGE_ORDER:{URL:"hed/updatePageOrder",METHOD:"POST"},HED_SETUP_UPDATE_SECTION_ORDER:{URL:"hed/updateSectionOrder",METHOD:"POST"},GET_ROLES_FACILITIES:{URL:"security/authentication/userFacilityRoleSelection/1/{0}",tempURL:"security/authentication/userFacilityRoleSelection/1/{0}",METHOD:"POST"},GET_PERMISSIONS:{URL:"security/createRoles/roleTaskAction/",tempURL:"security/createRoles/roleTaskAction/",METHOD:"GET"},LMAB_LOAD_ALL_INPROGESS:{URL:"lmab/inprogress",METHOD:"POST"},LMAB_LOAD_QUEUE_INPROGESS:{URL:"lmab/inprogress",METHOD:"POST"},LMAB_PASS_SEQ_ID_FOR_HOME:{URL:"lmab/getlmehomedetails",METHOD:"GET"},APPLICANT_PROFILE_DETAILS:{URL:"LME/applicantdetails",METHOD:"POST"},LME_PHYSICALEXAMINATION_ONLOAD:{URL:"lmeExam/getbodypartsinfo",METHOD:"POST"},LME_PHYSICALEXAMINATION_SAVE:{URL:"lmeExam/lme_examination",METHOD:"POST"},LME_PHYSICALEXAMINATION_EXAMINATION:{URL:"lmeExam/getprepopulation",METHOD:"POST"},LME_PHYSICALEXAMINATION_DELETE:{URL:"lmeExam/deletelmeexam",METHOD:"POST"},LME_PHYSICALEXAMINATION_UPDATE:{URL:"lmeExam/updatelmeexamination",METHOD:"POST"},PHYSICALEXAMINATION_CHECKLIST:{URL:"common/getLibraryDocuments",METHOD:"GET"},AR_PHYSICALEXAMINATION_DELETE:{URL:"/arExam/deletearxamprepopulation",METHOD:"POST"},AR_PHYSICALEXAMINATION_UPDATE:{URL:"arExam/updatearxamprepopulation",METHOD:"POST"},AR_PHYSICALEXAMINATION_SAVE:{URL:"arExam/ar_examination",METHOD:"POST"},AR_PHYSICALEXAMINATION_EXAMINATION:{URL:"arExam/getARExamprepopulation",METHOD:"POST"},LME_PHYSICALEXAMINATION_TARGETED:{URL:"lmeExam/lme_targetted_test",METHOD:"POST"},LME_PHYSICALEXAMINATION_CHECKBOXSAVE:{URL:"lmeExam/lme_examination_finding_yorn/{0}",METHOD:"POST"},CR_PHYSICALEXAMINATION_EXAMINATION:{URL:"crExam/getCRprepopulation",METHOD:"POST"},CR_PHYSICALEXAMINATION_SAVE:{URL:"crExam/cr_examination",METHOD:"POST"},CR_PHYSICALEXAMINATION_UPDATE:{URL:"crExam/updatecrexamination",METHOD:"POST"},CR_PHYSICALEXAMINATION_DELETE:{URL:"/crExam/deletecrexam",METHOD:"POST"},GETMERGERECORDSLIST:{URL:"adminSettings/getMergeRecords",METHOD:"POST"},OTPRESETPASSWORD:{URL:"User/OTPPasswordReset/{0}",METHOD:"POST"},GET_HOME_WORKLISTS:{URL:"adminSettings/getworklists",METHOD:"POST"},ADMIN_GET_MRSEARCH:{URL:"adminSettings/getMRSearchRecords",METHOD:"POST"},ADMIN_GET_MRSEARCH_COMBO:{URL:"adminSettings/getMACsForCombo",METHOD:"GET"},MERGERECORDS:{URL:"adminSettings/mergeRecords",METHOD:"POST"},GETUNMERGERECORDSLIST:{URL:"adminSettings/getMergedRecords/{0}",METHOD:"GET"},LME_APPLICANTMINI_HISTORY:{URL:"LME/getminiprofile",METHOD:"POST"},LME_GET_APPLICANTMACS:{URL:"LME/getApplicantMacs",METHOD:"GET"},LME_GET_APPLICANTTYPE:{URL:"LME/getApplicantTypes",METHOD:"GET"},LME_APPLICANT_MSIT:{URL:"LME/applicantMsit",METHOD:"POST"},LME_APPLICANT_MSITSAVE:{URL:"common/addupdatemsit",METHOD:"POST"},LME_APPLICANT_MEDREC_DD:{URL:"LME/RecordsType",METHOD:"GET"},LME_APPLICANT_MEDREC_TABLE:{URL:"LME/medicalRecords",METHOD:"POST"},LMAB_ALERT:{URL:"lmab/reviewalerts",METHOD:"POST"},LMAB_LMF_COMMENTS:{URL:"lmab/getlmfcomments",METHOD:"POST"},LMAB_SIGN_SUBMIT:{URL:"lmab/signinsubmit",METHOD:"POST"},LME_VISITLIST:{URL:"LME/getqueuedvisitlist",METHOD:"POST"},GET_AR_COMBO:{URL:"AR/selectarinvgeneral",METHOD:"GET"},GET_AR_INVESTIGATION_DATA:{URL:"AR/preloadarinvgeneral",METHOD:"POST"},AR_INVESTIGATION_SAVE:{URL:"AR/addarinvgeneral",METHOD:"POST"},GET_AR_FOLLOWUP_COMBO:{URL:"AR/followupSp",METHOD:"GET"},GET_AR_FOLLOWUP_SAVE:{URL:"AR/followup",METHOD:"POST"},AR_DMF_POPUP:{URL:"AR/dmfpopup",METHOD:"POST"},AR_GET_CODES:{URL:"AR/getcodes/{0}",METHOD:"POST"},GET_AR_ABORT:{URL:"AR/arabort",METHOD:"POST"},GET_CR_COMBO:{URL:"CAMB/selectcambinvgeneral",METHOD:"GET"},GET_CR_INVESTIGATION_DATA:{URL:"CAMB/preloadcambinvgeneral",METHOD:"POST"},CR_INVESTIGATION_SAVE:{URL:"CAMB/addcambinvgeneral",METHOD:"POST"},SAVE_AUDIOMETROY:{URL:"LME/savemeasurementaudiometry",METHOD:"POST"},GET_AUDIOMETROY:{URL:"LME/preloadmeasurementaudiometry",METHOD:"POST"},MR_UPDATE_EXPIRY:{URL:"adminSettings/updateExpiryDate",METHOD:"POST"},LMAB_MA_QUEUE_DETAILSPASS:{URL:"lmab/updatelmbdecision",METHOD:"POST"},SUBMIT_LME:{URL:"LME/submitLme",METHOD:"GET"},LMAB_LMF_COMMENTS:{URL:"lmab/getlmfcomments",METHOD:"POST"},LMAB_OPERATIONAL_PROVISOSCOPY:{URL:"lmab/getoperationalprovisoscopy",METHOD:"POST"},LMAB_REVIEW_PRELOAD:{URL:"lmab/getonloadreviewdetails",METHOD:"POST"},LMAB_MA_REVIEW_SAVE:{URL:"lmab/savemaassessment",METHOD:"POST"},GET_LMAB_OUTCOMES:{URL:"lmab/getOutComes",METHOD:"GET"},GET_RESTRICTIONS:{URL:"lmab/getRestrictions",METHOD:"GET"},GET_FOLLOWUP_PROVISO_MEDICAL_TYPE:{URL:"lmab/getProvisoType",METHOD:"GET"},GET_LMAB_FOLLOWUP_PROVISO_DONE_BY:{URL:"lmab/getProvisoDoneBy",
METHOD:"GET"},GET_LAMB_FOLLOWUP_PROVISO_SUBTYPE:{URL:"lmab/getSpecialityOrInv",METHOD:"POST"},GET_FOLLOWUP_PROVISO_FREQUENCY:{URL:"lmab/getProvisoFrequency",METHOD:"GET"},GET_AUDIT_DME:{URL:"lmab/getAuditOfDme",METHOD:"GET"},GET_LMAB_REVIEW_ALERT:{URL:"lmab/reviewalerts",METHOD:"POST"},GET_OPERATIONAL_PROVISO:{URL:"AR/loadOpertionalproviso",METHOD:"POST"},GET_FOLLOWUP_PROVISO_MEDICAL_SPECIALITY_INVESTIGATION:{URL:"AR/loadMedicalTypeDetails",METHOD:"POST"},LME_DMF_CLEARANCE_FETCH:{URL:"AR/getDmfClearance",METHOD:"POST"},LME_DMF_CLEARANCE_SAVE:{URL:"AR/saveDmfClearance",METHOD:"POST"},GET_DRUGS:{URL:"lmab/getdrugs",METHOD:"POST"},SUBMIT_AR:{URL:"AR/updateDmfClearancestatus",METHOD:"POST"},GET_POST_BOARD_SLOTS:{URL:"lmab/getLmabPBSlots",METHOD:"GET"},GET_POST_BOARD_FITNESS:{URL:"lmab/getLmabPBFitness",METHOD:"GET"},GET_POST_BOARD_MAC:{URL:"lmab/getLmabMacs",METHOD:"GET"},LMAB_LMF_POST_BOARD_FETCH:{URL:"lmab/toBoardPB",METHOD:"POST"},LAMB_POST_BOARD_REVIEW_CAMB:{URL:"lmab/reviewCAMB",METHOD:"POST"},LAMB_POST_BOARD_PUBLISH:{URL:"lmab/publishLAMB",METHOD:"POST"},LAMB_POST_BOARD_PUBLISH_LETTERS:{URL:"lmab/publishLetters",METHOD:"POST"},GET_LMAB_VIEW_ATTACHMENTS:{URL:"lmab/getAttachmentDocContent",METHOD:"GET"},GET_FOLLOWUP_PROVISO_DESCRIPTION_TYPE:{URL:"lmab/getFollowupProvisoTypeOptions",METHOD:"GET"},GET_FOLLOWUP_PROVISO_DESCRIPTION_SUBTYPE:{URL:"lmab/getFollowupProvisoSubtypes",METHOD:"GET"},GET_LMAB_POSTBOARD_VETTING_FOLLOWUP_PROVISO_DONEBY:{URL:"lmab/getFollowupProvisoDonebyOptions",METHOD:"GET"},LMAB_LMF_POSTBOARD_VETTING_PRELOAD:{URL:"lmab/getVettingInfoExisting",METHOD:"GET"},LMAB_LMF_POSTBOARD_VETTING_SAVE:{URL:"lmab/storeVettingInfo",METHOD:"POST"},GET_LMAB_POSTBOARD_LETTER_TEMPLATES:{URL:"lmab/getLetterTemplates",METHOD:"GET"},GET_LMAB_POSTBOARD_LETTER_TEMPLATES_CONTENT:{URL:"lmab/getTemplateLetterContent",METHOD:"GET"},LMAB_POSTBOARD_LETTER_TEMPLATES_PRELOAD:{URL:"lmab/getVettingLetterContent",METHOD:"GET"},LMAB_POSTBOARD_LETTER_TEMPLATES_SAVE:{URL:"lmab/storeVettingLetterContent",METHOD:"POST"},GET_LMAB_POSTBOARD_EMAIL_TEMPLATES:{URL:"lmab/getEmailTemplates",METHOD:"GET"},GET_LMAB_POSTBOARD_EMAIL_TEMPLATES_CONTENT:{URL:"lmab/getTemplateEmailInfo",METHOD:"GET"},GET_LMAB_POSTBOARD_EMAIL_SHORTCUT:{URL:"/lmab/getShortcutDescription/{0}",METHOD:"GET"},GET_LMAB_POSTBOARD_EMAIL_TEMPLATES_SHORTCUT:{URL:"lmab/getEmailShortcutCodes",METHOD:"GET"},LMAB_POSTBOARD_EMAIL_TEMPLATES_PRELOAD:{URL:"lmab/getVettingEmailInfo",METHOD:"GET"},LMAB_POSTBOARD_EMAIL_TEMPLATES_SAVE:{URL:"lmab/storeVettingEmailInfo",METHOD:"POST"},ADMIN_FEEWAIVER_BULK_UPLOAD:{URL:"adminSettings/updateFeeWaiverApproveOrRemove",METHOD:"POST"},GET_LME_TRANSFER_VIEW:{URL:"LME/gettransfercase",METHOD:"POST"},LME_TRANSFER_ACCEPT_REJECT:{URL:"LME/savetransfercase",METHOD:"POST"},LME_NOTIFICATION_DELETE:{URL:"LME/deleteNotification",METHOD:"GET"},DOC_LIBRARY_GET_DOC_TYPES:{URL:"Doclibrary/getDocTypes",METHOD:"POST"},GET_EMAIL_TEMPLATE_SHORTCUTS:{URL:"adminSettings/getEmailTemplateShortCuts",METHOD:"POST"},LME_ATTACHMENT_UPLOAD:{URL:"LME/lmeuploadfile",METHOD:"POST"},LME_ATTACH_DOC_GRID:{URL:"LME/getdocvalues",METHOD:"POST"},LME_REMOVE_ATTACH_GRID:{URL:"LME/deletedoc",METHOD:"POST"},LME_ATTACH_VIEW_DOC:{URL:"LME/getfiledata",METHOD:"POST"},LMAB_VIEWSCHEDULE_PRINT:{URL:"lmab/getPrintDetails",METHOD:"POST"},LMAB_ATTACHMENT_APPROVE:{URL:"LME/updateapprove",METHOD:"POST"},CAMB_GET_DIAGNOSIS_GRID_DATA:{URL:"camb/getdiagnosis/{0}",tempURL:"camb/getdiagnosis/{0}",METHOD:"POST"},CAMB_GET_DIAGNOSIS_DROPDOWN:{URL:"camb/getdrpdwndiagnosislist",METHOD:"POST"},CAMB_GET_PRE_DATA:{URL:"camb/getcambconsult",METHOD:"POST"},GET_MEDICAL_TEMP_RULES:{URL:"LME/getFieldsValidations",METHOD:"POST"},GET_MANDATORY_FIELDS:{URL:"LME/getMandatoryFields",METHOD:"POST"},GET_FIELDS_VALIDATION:{URL:"LME/getFieldConditions",METHOD:"POST"},GET_CAMB_SPECIALITY_COMBO:{URL:"LME/followupSp",METHOD:"GET"},POST_CAMB_SAVE_REFERRAL:{URL:"CAMB/sendreferral",METHOD:"POST"},POST_CAMB_DELETE_REFERRAL:{URL:"CAMB/deletereferral",METHOD:"POST"},GET_CAMB_PRE_REFERRAL_LIST:{URL:"CAMB/preloadreferral/{0}",tempURL:"CAMB/preloadreferral/{0}",METHOD:"POST"},GET_CAMB_RECORD_TYPE_COMBO:{URL:"camb/getrecordtypes",METHOD:"GET"},GET_CAMB_DOCUMENT_TYPE_COMBO:{URL:"camb/getdocumenttypes",METHOD:"GET"},GET_CAMB_SUBTYPE_COMBO:{URL:"camb/getdocumentsubtypes",METHOD:"GET"},GET_CAMB_FILTER_SEARCH:{URL:"camb/getfiltersearch",METHOD:"POST"},GET_CAMB_FILE_UPLOAD_GRID:{URL:"camb/getuploadeddocsgrid",METHOD:"POST"},GET_CAMB_UPLOAD_FILE:{URL:"camb/cambuploadfile",METHOD:"POST"},SAVE_TAG_BUTTON:{URL:"camb/savetab",METHOD:"POST"},GET_CAMB_FOLLOWUP_SUBTYPE:{URL:"camb/followupspcltyinvstgtn/",tempURL:"camb/followupspcltyinvstgtn/",METHOD:"POST"},GET_CAMB_LMAB_FOLLOWUP_SUBTYPE:{URL:"CAMB/followupspcltyinvstgtn/",tempURL:"CAMB/followupspcltyinvstgtn/",METHOD:"POST"},GET_CAMB_SAVE:{URL:"camb/savecambconsult",METHOD:"POST"},CAMB_DMF_POPUP:{URL:"CAMB/cambdmfpopup",METHOD:"POST"},CAMB_APPROVE_FILE:{URL:"camb/updateaprrove",METHOD:"POST"},DELETE_CAMB_UPLOAD_FILE:{URL:"camb/deletedocumetn/{0}",tempURL:"camb/deletedocumetn/{0}",METHOD:"POST"},CAMB_SEARCH_DIAGNOSIS:{URL:"camb/getdrpdwndiagnosislist ",METHOD:"POST"},CAMB_SAVE_MEASUREMENT:{URL:"CAMB/cambsavemeasurement",METHOD:"POST"},CAMB_PRELOAD_MEASUREMENT:{URL:"CAMB/cambpreloadmeasurement",METHOD:"POST"},GET_CAMB_COMMENCE:{URL:"worklist/getcambcommance",METHOD:"POST"},CAMB_ABORT:{URL:"camb/abortApplicant ",METHOD:"POST"},CAMB_ABORT_GETVISITDETAILS:{URL:"camb/getVisitDetailsCamb",METHOD:"GET"},CAMB_CAMBDMFPOPUP:{URL:"CAMB/cambdmfpopup ",METHOD:"POST"},CAMB_WORKLIST_ALLTABS:{URL:"worklist/getcambdetails",METHOD:"POST"},CAMB_HOME_NOTIFI:{URL:"CAMB/cambnotifications",METHOD:"GET"},CAMB_HOME_NOTIFI_DELETE:{URL:"CAMB/deletenotification",METHOD:"POST"},CAMB_SEARCHCONSULT_DOCTOR:{URL:"CAMB/createconsult",METHOD:"GET"},CAMB_SEARCH_CREATECR:{URL:"worklist/fileupload",METHOD:"POST"},GET_FEE_DETAILS:{URL:"adminSettings/getConfigValue/APPLICATION_FEE",METHOD:"GET"},GET_SESSION_TIMEOUT:{URL:"adminSettings/getConfigValue/SESSION_TIMEOUT",METHOD:"GET"},CAMB_VIEW_DOCUMENT:{URL:"camb/viewdocument/{0}",tempURL:"camb/viewdocument/{0}",METHOD:"POST"},CAMB_WORKLIST_TRANSFER:{URL:"worklist/getCPslist",METHOD:"GET"},CAMB_WORKLIST_TRANSFERSAVE:{URL:"worklist/savetransfer",METHOD:"POST"},CAMB_WORKLISTCR_ASSIGN:{URL:"worklist/assigncp",METHOD:"POST"},CAMB_WORKLIST_ATTACHMENT:{URL:"worklist/fileupload",METHOD:"POST"},CAMB_WORKLIST_ATTACHMENT_VIEW:{URL:"worklist/cambfiledata",METHOD:"POST"},CAMB_WORKLIST_ATTACHMENT_DELETE:{URL:"worklist/cambdeletedoc",METHOD:"POST"},CAMB_WORKLIST_ATTACHMENT_LOAD_GRID:{URL:"worklist/getdocvalues",METHOD:"POST"},APPLICANT_FEE_REFUND_CHECK:{URL:"hed/checkApplicantForFeeRefund",METHOD:"POST"},CAMB_SEARCH_CREATECONSULT_ASSIGN:{URL:"CAMB/cambupdateconsult",METHOD:"POST"},CAMB_WORKLIST_RESUME:{URL:"camb/resumeApplicant",METHOD:"POST"},AR_GET_CODE:{URL:"AR/getcodes",METHOD:"POST"},LME_GET_CODE:{URL:"LME/getcodes",METHOD:"POST"},CAMB_SEARCH_CREATECONSULT_ASSIGN:{URL:"CAMB/cambupdateconsult",METHOD:"POST"},CAMB_WORKLIST_RESUME:{URL:"camb/resumeApplicant",METHOD:"POST"},CAMB_CR_MAC_DD:{URL:"worklist/cambmac",METHOD:"POST"},GET_CAMB_CRAR:{URL:"CAMB/crar",METHOD:"GET"},CRAR_SAVEDATA:{URL:"CAMB/savecrar",METHOD:"POST"},GETPRELOADCRAR:{URL:"CAMB/preloadcrar",METHOD:"POST"},CRAR_SUBMIT:{URL:"CAMB/crarsubmitaction",METHOD:"POST"},GET_COMBO_USER_ROLES:{URL:"common/getUserRoles",METHOD:"POST"},SAVE_AR_AUDIOMETROY:{URL:"AR/arsavemeasurementaudiometry",METHOD:"POST"},GET_AR_AUDIOMETROY:{URL:"AR/arpreloadmeasurementaudiometry",METHOD:"POST"},GET_CAMB_CRLAMB_PRELOAD:{URL:"CAMB/getonloaddetails",METHOD:"POST"},CAMB_WORKLIST_LISTS:{URL:"worklist/getcamblistofactions",METHOD:"POST"},CAMB_CREATECONSULT_SAVE:{URL:"CAMB/cambsaveadhoc",METHOD:"POST"},CAMB_MRSEARCH_LOAD_GRID:{URL:"camb/cambmrsearch",METHOD:"POST"},CAMB_SEARCH_CREATECONSULT_ASSIGN:{URL:"CAMB/saveconsult",METHOD:"POST"},RETRIEVE_DIAGNOSIS_PRESET:{URL:"adminSettings/retrieveDiagnosisPreset",METHOD:"GET"},ADD_DIAGNOSIS_PRESET:{URL:"adminSettings/addDiagnosisPreset",METHOD:"POST"},MODIFY_DIAGNOSIS_PRESET:{URL:"adminSettings/modifyyDiagnosisPreset",METHOD:"POST"},GET_NODES_FOR_EDIT:{URL:"adminSettings/getNodesForEdit",METHOD:"POST"},DELETE_DIAGNOSIS_PRESET:{URL:"adminSettings/deleteDiagnosisPreset",METHOD:"POST"},GET_PARENT_NODES:{URL:"adminSettings/getParentNodes",METHOD:"POST"},GET_CHILD_NODES:{URL:"adminSettings/getChildNodes",METHOD:"POST"},GET_CAMB_LAMB_SAVE:{URL:"CAMB/savecrlmabpost",METHOD:"POST"},GET_CAMB_LAMB_PRELOAD:{URL:"CAMB/crlmabonload",METHOD:"POST"},CAMB_CR_LAMB_SAVE:{URL:"CAMB/savecrlmab",METHOD:"POST"},CAMB_CR_LAMB_DEFFERDME:{URL:"CAMB/crlmabdefferDME",METHOD:"POST"},CAMB_CR_LAMB_RETURNLMAB:{URL:"CAMB/crlmabreturnlmab",METHOD:"POST"},CAMB_GET_VIEW_PROCESS_SUMMARY:{URL:"common/getCRSummaryNotesViewPDF",METHOD:"GET"},CAMB_GET_REFERRAL_LTINFO:{URL:"camb/getReferralLetterInfo/",METHOD:"GET"},CAMB_REFERRAL_LT_SAVE:{URL:"camb/storeReferralLetterInfo",METHOD:"POST"},CAMB_REFERRAL_LT_SEND:{URL:"camb/publishReferralLetter",METHOD:"POST"},CAMB_CP_POSTBOARD_VETTING_PRELOAD:{URL:"camb/getVettingInfoExisting",METHOD:"POST"},GET_CAMB_VIEW_ATTACHMENTS:{URL:"camb/getAttachmentDocContent",METHOD:"GET"},GET_CAMB_FOLLOWUP_PROVISO_TYPE:{URL:"camb/getFollowupProvisoTypeOptions",METHOD:"GET"},GET_CAMB_FOLLOWUP_PROVISO_FREQUENCY:{URL:"camb/getFollowupProvisoFrequencyOptions",METHOD:"GET"},CAMB_CP_VETTING_SAVE:{URL:"camb/storeVettingInfo",METHOD:"POST"},CAMB_VETTING_LETTER_TEMPLATES_PRELOAD:{URL:"camb/getReferralLetterInfo",METHOD:"GET"},GET_CAMB_POSTBOARD_LETTER_TEMPLATES:{URL:"camb/getLetterTemplates",METHOD:"GET"},GET_CAMB_VETTING_LETTER_TEMPLATES_CONTENT:{URL:"camb/getTemplateLetterContent",METHOD:"GET"},CAMB_VETTING_LETTER_TEMPLATES_SAVE:{URL:"camb/storeVettingLetterContent",METHOD:"POST"},CAMB_VETTING_EMAIL_TEMPLATES_PRELOAD:{URL:"camb/getVettingEmailInfo",METHOD:"GET"},GET_CAMB_VETTING_EMAIL_TEMPLATES:{URL:"camb/getEmailTemplates",METHOD:"GET"},GET_CAMB_VETTING_EMAIL_TEMPLATES_CONTENT:{URL:"camb/getTemplateEmailInfo",METHOD:"GET"},GET_CAMB_VETTING_EMAIL_TEMPLATES_SHORTCUT:{URL:"camb/getEmailShortcutCodes",METHOD:"GET"},CAMB_VETTING_EMAIL_TEMPLATES_SAVE:{URL:"camb/storeVettingEmailInfo",METHOD:"POST"},GET_DMF_DATE:{URL:"LME/maxdmfdates",METHOD:"POST"},GET_CAMB_CR_ADHOC_PRELOAD:{URL:"CAMB/cambadhoconloadvalues",METHOD:"POST"},GET_CAMB_CR_ADHOC_SAVE:{URL:"CAMB/saveadhoc",METHOD:"POST"},GET_ATTACHMENTS:{URL:"common/getAttachmentsList",METHOD:"GET"},CAMB_CR_ADHOC_GET_ATTACHMENTS:{URL:"CAMB/getAttachmentsList",METHOD:"GET"},VIEW_ATTACHMENTS_DOCUMENT:{URL:"common/getAttachmentContent",METHOD:"GET"},CAMB_CR_ADHOC_VIEW_ATTACHMENTS_DOCUMENT:{URL:"CAMB/getAttachmentContent",METHOD:"GET"},LME_VIEW_DMF:{URL:"AR/viewdmf",METHOD:"POST"},LME_NOTIFICATION:{URL:"LME/getMessageCount",METHOD:"GET"},LME_UPDATENOTIFICATIONS:{URL:"LME/updateNotification",METHOD:"GET"},GET_APPPROCESSSUMMARY:{URL:"camb/getAppProcessSummary",METHOD:"GET"},SAVE_AUTO_SAVE_TRANSACTION:{URL:"common/transactionAutoSave",METHOD:"POST"},RETRIEVE_AUTO_SAVE_TRANSACTION:{URL:"common/retriveTransactionAutoSave",METHOD:"POST"},CAMB_PROVISIOVIEW:{URL:"camb/provisoview",METHOD:"POST"},GET_DMEUSERS:{URL:"common/getDmeUsers",METHOD:"GET"},GET_ALLCLINICS:{URL:"admin/clinics/getAllClinics",METHOD:"GET"},SAVE_FEEDBACK:{URL:"common/saveFeedBack",METHOD:"POST"},LMAB_HISTORY_PDF_GENERATE:{URL:"lmab/getLetter",METHOD:"POST"},LMAB_VETTING_FULL_REPORT:{URL:"lmab/getFullReport",METHOD:"GET"},GET_INSTRUCTIONS:{URL:"instruction/getOneInstruction/I008",METHOD:"GET"},GET_ARIS_EXCEL_REPORT:{URL:"lmab/getArisReportDatas",METHOD:"GET"},GET_CAPEL_EXCEL_REPORT:{URL:"lmab/getCapelReportDatas",METHOD:"GET"},GET_INSTRUCTION:{URL:"instruction/getOneInstruction/{0}",METHOD:"GET"},CAMB_POSTBOARD_VETTING_PRELOAD:{URL:"camb/getVettingInfoExisting",METHOD:"POST"},CAMB_GET_FOLLOWUP_PROVISO_DESCRIPTION_TYPE:{URL:"camb/getFollowupProvisoTypeOptions",METHOD:"GET"},CAMB_GET_FOLLOWUP_PROVISO_FREQUENCY:{URL:"camb/getFollowupProvisoFrequencyOptions",METHOD:"GET"},CAMB_GET_LMAB_POSTBOARD_VETTING_FOLLOWUP_PROVISO_DONEBY:{URL:"camb/getFollowupProvisoDonebyOptions",METHOD:"GET"},SAVE_CAMB_AUDIOMETROY:{URL:"CAMB/cambsavemeasurementaudiometry",METHOD:"POST"},GET_CAMB_AUDIOMETROY:{URL:"CAMB/cambpreloadmeasurementaudiometry",METHOD:"POST"},ONEMAP_GET_ADDRESS:{URL:"common/getAddressByPostalCode",METHOD:"POST"},CAMB_SEARCH_TRACK_DUES:{URL:"camb/getapplicanttrckdues",METHOD:"POST"},CAMB_TRANSFERCASE_HOME:{URL:"CAMB/acceptNotification",METHOD:"POST"},ADHOC_CLOSE:{URL:"CAMB/cradhoccloseaction",METHOD:"POST"},CAMB_PUBLISH_VETTING:{URL:"camb/publishVettingInfo",METHOD:"POST"},CAMB_TRACKDUE_COMPLETE:{URL:"camb/compapplicanttrckdues",METHOD:"POST"},CONFIG_MODIFY_STATUS_EMAIL_TEMPLATE:{URL:"adminSettings/updateEmailStatus",METHOD:"POST"},CAMB_MRSEARCH_ADD_DIAGNOSIS_CURRENT_DIAGNOSIS:{URL:"camb/getdiagnosis",METHOD:"POST"},CAMB_MRSEARCH_ADD_DIAGNOSIS_SEARCH_SERVICE:{URL:"camb/getdrpdwndiagnosislist",METHOD:"POST"},CAMB_MRSEARCH_ADD_DIAGNOSIS_SAVE:{URL:"camb/adddiagnosismrsearch",METHOD:"POST"},LMAB_HISTORY_BATCH_LETTER:{URL:"lmab/getbatchletters",METHOD:"POST"},DELETE_CAMB_UPLOAD_DOC:{URL:"camb/deletecambdocument/{0}",tempURL:"camb/deletecambdocument/{0}",METHOD:"POST"},RETRIEVE_PAYMENT_TRANSACTION_REPORT_DETAILS:{URL:"adminSettings/retrivePaymentTransactionRecord",METHOD:"POST"},RETRIEVE_REFUNDED_REPORT_DETAILS:{URL:"adminSettings/retriveRefundedRecords",METHOD:"POST"},RETRIEVE_REFUND_ELIGIBLE_REPORT_DETAILS:{URL:"adminSettings/retriveRefundEligibleRecords",METHOD:"POST"},RETRIEVE_CENTRAL_BILLING_REPORT_DETAILS:{URL:"adminSettings/centralBillingRecords",METHOD:"POST"},FETCH_SAP_DATA:{URL:"api/fetchSAPData",METHOD:"POST"},FETCH_SAP_DATA_DOWNLOAD:{URL:"api/exportSAPData?fromDate={0}",tempURL:"api/exportSAPData?fromDate={0}",METHOD:"GET"},CAMB_APPROVE_DOC:{URL:"camb/approvedocument",METHOD:"POST"},GET_CAMB_CAPEL_EXCEL_REPORT:{URL:"camb/getCapelReportDatas",METHOD:"GET"},GET_CAMB_ARIS_EXCEL_REPORT:{URL:"camb/getArisReportDatas",METHOD:"GET"},CAMB_GETREFERRALATTACHMENTCONTENT:{URL:"camb/getReferralAttachmentContent",METHOD:"GET"},CAMB_VETTING_ACKNOWLEDGE:{URL:"camb/acknowledgeApplicant",METHOD:"GET"},CAMB_SENDREF_UPLOAD:{URL:"camb/uploadReferralAttachment",METHOD:"POST"},CAMB_DR_GETSEARCH:{URL:"DR/drsearch",METHOD:"POST"},CAMB_DR_GETEXCEL:{URL:"DR/applicantdetailsExcel",METHOD:"POST"},LME_CAMBINSTRUCTIONS:{URL:"LME/getInstructions",METHOD:"POST"},CAMB_GETGRIDATTACHMENT:{URL:"camb/getAttachmentGrid",METHOD:"GET"},CAMB_REMOVEREFATTACHMENT:{URL:"camb/removeReferralAttachment",METHOD:"DELETE"},CAMB_DR_DIAGNOSISTREE:{URL:"DR/getpresetdiagnosis",METHOD:"GET"},CAMB_NOTI_ALERT:{URL:"worklist/getNotiAndBrodCount",METHOD:"POST"},LMAB_REVIEW_FULL_REPORT:{URL:"lmab/getdataforfullreport",METHOD:"POST"},CAMB_SUBTYPES_SEARCH:{URL:"LME/getdocumentsubtypes",METHOD:"POST"},LME_NOTIFI_UNLOCK:{URL:"LME/unlockAction",METHOD:"POST"},CAMB_CLOSE_CRLMABPOST:{URL:"CAMB/closecrlmabpost",METHOD:"POST"},CAMB_CAPELANDARISDISPLAY:{URL:"/worklist/capel",METHOD:"GET"},LME_SUBMIT_VALIDATION:{URL:"LME/previewLme",METHOD:"GET"},CAMB_WORKLIST_ASSIGN:{URL:"CAMB/updateassign",METHOD:"POST"},LAMB_POST_BOARD_PUBLISH_LETTERS_SUCCESS:{URL:"lmab/changeVisitStatusAfterPublish",METHOD:"GET"},COMMON_SUBMISSION_UPLOAD_FILE:{URL:"common/uploadpdffile",METHOD:"POST"},GET_MEDICAL_RECORDS_VIEW:{URL:"common/getmedicalrecordspdffile",METHOD:"GET"},GENERATE_INVOICE_PDF:{URL:"hed/generateInvoicePdf",METHOD:"POST"},APPVERSION_TIME:{URL:"security/getlatestreleasetime",METHOD:"GET"},INVOICE_PDF_NEW:{URL:"hed/getPaymentDetailsForPdf",METHOD:"POST"},REFERENCE_DOCUMENT:{URL:"document/getDocumentreport",METHOD:"POST"},GETINVOICE_REPOT:{URL:"document/getInvoicereport",METHOD:"POST"},LMABA_MAVIEWSLOTS:{URL:"lmab/getMAScheduledSlots",METHOD:"POST"},CAMB_COMMON_FULLREPORT:{URL:"common/fullreport",METHOD:"POST"},LMAB_NOTIFICATIONSCOUNT:{URL:"lmab/updateRemovedNotfi/{0}",METHOD:"GET"},GET_PAYMENT_LIST:{URL:"api/fetchPendingPayments?nric={0}&refNo={1}&patName={2}&pstatus={3}&currDate={4}",tempURL:"api/fetchPendingPayments?nric={0}&refNo={1}&patName={2}&pstatus={3}&currDate={4}",METHOD:"GET"},GET_PAYMENT_DETAILS:{URL:"api/fetchPendingPaymentDetails?refNo={0}",tempURL:"api/fetchPendingPaymentDetails?refNo={0}",METHOD:"GET"},UPDATE_PAYMENT_DETAILS:{URL:"api/updatePendingPayments",METHOD:"POST"},REMOVE_ATTACHMENT:{URL:"common/removeAttachment",METHOD:"DELETE"},SEND_REFFERAL_SHORTCUT_DESCRIPTION:{URL:"camb/getShortcutDescription",METHOD:"GET"},GET_CAMB_VETTING_EMAIL_SHORTCUT:{URL:"/lmab/getShortcutDescription",METHOD:"GET"},POST_DMF_NOTI:{URL:"registration/checkNotificationDMFExists",METHOD:"POST"},POST_STORE_PDF:{URL:"/hed/storeInvoicePdfDocument",METHOD:"POST"},GET_MEDICAL_RECORD_DONEBY_COMBO:{URL:"worklist/recordtabdonbydropdowen",METHOD:"GET"},POST_DMF_NOTI:{URL:"registration/checkNotificationDMFExists",METHOD:"POST"},CAMB_TYEP_FILTER:{URL:"camb/loadcrtypes",METHOD:"POST"},GENERATE_PDF_PAYMENTGATEWAY:{URL:"api/generateInvoicePDF?applicationId={0}",tempURL:"api/generateInvoicePDF?applicationId={0}",METHOD:"GET"},RUN_SCHEDULER:{URL:"api/exportSAPDataToSFTP?token={0}&fromDate={1}",tempURL:"api/exportSAPDataToSFTP?token={0}&fromDate={1}",METHOD:"GET"}}),String.prototype.format||(String.prototype.format=function(){var args=arguments;return this.replace(/{(\d+)}/g,function(findMatch,count){return"undefined"!=typeof args[count]?args[count]:findMatch})});